Search.setIndex({"docnames": ["analytical_engine/builtin_algorithms", "analytical_engine/customized_algorithms", "analytical_engine/deployment", "analytical_engine/design_of_gae", "analytical_engine/dev_and_test", "analytical_engine/faqs", "analytical_engine/flash", "analytical_engine/getting_started", "analytical_engine/guide_and_examples", "analytical_engine/ingress", "analytical_engine/key_concepts", "analytical_engine/networkx_compatibility", "analytical_engine/overview_and_architecture", "analytical_engine/performance_tuning", "analytical_engine/programming_model_pie", "analytical_engine/tutorial_dev_algo_cpp_flash", "analytical_engine/tutorial_dev_algo_cpp_pie", "analytical_engine/tutorial_dev_algo_java", "analytical_engine/tutorial_dev_algo_python", "analytical_engine/tutorial_networkx_algorithms", "analytical_engine/tutorial_networkx_operations", "analytical_engine/tutorial_run_builtin_algo", "analytical_engine/tutorial_run_giraph_apps", "analytical_engine/tutorial_run_graphx_apps", "analytical_engine/vertex_centric_models", "contact_us", "deployment/deploy_graphscope_on_clouds", "deployment/deploy_graphscope_on_self_managed_k8s", "deployment/deploy_graphscope_operator", "deployment/deploy_graphscope_with_helm", "deployment/deploy_with_existing_vineyard_cluster", "deployment/install_in_offline_env", "deployment/install_on_local", "deployment/persistent_storage_of_graphs_on_k8s", "design_of_gae", "development/code_style_guide", "development/dev_guide", "development/how_to_contribute", "development/how_to_debug", "development/how_to_instrument", "development/how_to_submit_pr", "development/how_to_test", "flex/coordinator", "flex/coordinator/restful_api", "flex/interactive/configuration", "flex/interactive/custom_graph_data", "flex/interactive/data_import", "flex/interactive/data_model", "flex/interactive/deployment", "flex/interactive/dev_guide", "flex/interactive/development/cpp_procedure", "flex/interactive/development/cypher_procedure", "flex/interactive/development/java/AdminServiceGraphManagementApi", "flex/interactive/development/java/AdminServiceJobManagementApi", "flex/interactive/development/java/AdminServiceProcedureManagementApi", "flex/interactive/development/java/AdminServiceServiceManagementApi", "flex/interactive/development/java/BaseEdgeType", "flex/interactive/development/java/BaseEdgeTypeVertexTypePairRelationsInner", "flex/interactive/development/java/BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams", "flex/interactive/development/java/BasePropertyMeta", "flex/interactive/development/java/BaseVertexType", "flex/interactive/development/java/BaseVertexTypeXCsrParams", "flex/interactive/development/java/ColumnMapping", "flex/interactive/development/java/CreateEdgeType", "flex/interactive/development/java/CreateGraphRequest", "flex/interactive/development/java/CreateGraphResponse", "flex/interactive/development/java/CreateGraphSchemaRequest", "flex/interactive/development/java/CreateProcedureRequest", "flex/interactive/development/java/CreateProcedureResponse", "flex/interactive/development/java/CreatePropertyMeta", "flex/interactive/development/java/CreateVertexType", "flex/interactive/development/java/DateType", "flex/interactive/development/java/EdgeData", "flex/interactive/development/java/EdgeMapping", "flex/interactive/development/java/EdgeMappingDestinationVertexMappingsInner", "flex/interactive/development/java/EdgeMappingSourceVertexMappingsInner", "flex/interactive/development/java/EdgeMappingSourceVertexMappingsInnerColumn", "flex/interactive/development/java/EdgeMappingTypeTriplet", "flex/interactive/development/java/EdgeRequest", "flex/interactive/development/java/EdgeStatistics", "flex/interactive/development/java/FixedChar", "flex/interactive/development/java/FixedCharChar", "flex/interactive/development/java/GSDataType", "flex/interactive/development/java/GetEdgeType", "flex/interactive/development/java/GetGraphResponse", "flex/interactive/development/java/GetGraphSchemaResponse", "flex/interactive/development/java/GetGraphStatisticsResponse", "flex/interactive/development/java/GetProcedureResponse", "flex/interactive/development/java/GetPropertyMeta", "flex/interactive/development/java/GetVertexType", "flex/interactive/development/java/GraphServiceEdgeManagementApi", "flex/interactive/development/java/GraphServiceVertexManagementApi", "flex/interactive/development/java/JobResponse", "flex/interactive/development/java/JobStatus", "flex/interactive/development/java/LongText", "flex/interactive/development/java/Parameter", "flex/interactive/development/java/PrimitiveType", "flex/interactive/development/java/Property", "flex/interactive/development/java/PropertyArray", "flex/interactive/development/java/QueryRequest", "flex/interactive/development/java/QueryServiceApi", "flex/interactive/development/java/SchemaMapping", "flex/interactive/development/java/SchemaMappingLoadingConfig", "flex/interactive/development/java/SchemaMappingLoadingConfigDataSource", "flex/interactive/development/java/SchemaMappingLoadingConfigFormat", "flex/interactive/development/java/ServiceStatus", "flex/interactive/development/java/StartServiceRequest", "flex/interactive/development/java/StoredProcedureMeta", "flex/interactive/development/java/StringType", "flex/interactive/development/java/StringTypeString", "flex/interactive/development/java/TemporalType", "flex/interactive/development/java/TemporalTypeTemporal", "flex/interactive/development/java/TimeStampType", "flex/interactive/development/java/TypedValue", "flex/interactive/development/java/UpdateProcedureRequest", "flex/interactive/development/java/UploadFileResponse", "flex/interactive/development/java/UtilsApi", "flex/interactive/development/java/VarChar", "flex/interactive/development/java/VarCharVarChar", "flex/interactive/development/java/VertexData", "flex/interactive/development/java/VertexMapping", "flex/interactive/development/java/VertexRequest", "flex/interactive/development/java/VertexStatistics", "flex/interactive/development/java/VertexTypePairStatistics", "flex/interactive/development/java/java_sdk", "flex/interactive/development/python/AdminServiceGraphManagementApi", "flex/interactive/development/python/AdminServiceJobManagementApi", "flex/interactive/development/python/AdminServiceProcedureManagementApi", "flex/interactive/development/python/AdminServiceServiceManagementApi", "flex/interactive/development/python/BaseEdgeType", "flex/interactive/development/python/BaseEdgeTypeVertexTypePairRelationsInner", "flex/interactive/development/python/BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams", "flex/interactive/development/python/BasePropertyMeta", "flex/interactive/development/python/BaseVertexType", "flex/interactive/development/python/BaseVertexTypeXCsrParams", "flex/interactive/development/python/ColumnMapping", "flex/interactive/development/python/CreateEdgeType", "flex/interactive/development/python/CreateGraphRequest", "flex/interactive/development/python/CreateGraphResponse", "flex/interactive/development/python/CreateGraphSchemaRequest", "flex/interactive/development/python/CreateProcedureRequest", "flex/interactive/development/python/CreateProcedureResponse", "flex/interactive/development/python/CreatePropertyMeta", "flex/interactive/development/python/CreateVertexType", "flex/interactive/development/python/DateType", "flex/interactive/development/python/EdgeData", "flex/interactive/development/python/EdgeMapping", "flex/interactive/development/python/EdgeMappingDestinationVertexMappingsInner", "flex/interactive/development/python/EdgeMappingSourceVertexMappingsInner", "flex/interactive/development/python/EdgeMappingSourceVertexMappingsInnerColumn", "flex/interactive/development/python/EdgeMappingTypeTriplet", "flex/interactive/development/python/EdgeRequest", "flex/interactive/development/python/EdgeStatistics", "flex/interactive/development/python/FixedChar", "flex/interactive/development/python/FixedCharChar", "flex/interactive/development/python/GSDataType", "flex/interactive/development/python/GetEdgeType", "flex/interactive/development/python/GetGraphResponse", "flex/interactive/development/python/GetGraphSchemaResponse", "flex/interactive/development/python/GetGraphStatisticsResponse", "flex/interactive/development/python/GetProcedureResponse", "flex/interactive/development/python/GetPropertyMeta", "flex/interactive/development/python/GetVertexType", "flex/interactive/development/python/GraphServiceEdgeManagementApi", "flex/interactive/development/python/GraphServiceVertexManagementApi", "flex/interactive/development/python/JobResponse", "flex/interactive/development/python/JobStatus", "flex/interactive/development/python/LongText", "flex/interactive/development/python/ModelProperty", "flex/interactive/development/python/Parameter", "flex/interactive/development/python/PrimitiveType", "flex/interactive/development/python/PropertyArray", "flex/interactive/development/python/QueryRequest", "flex/interactive/development/python/QueryServiceApi", "flex/interactive/development/python/SchemaMapping", "flex/interactive/development/python/SchemaMappingLoadingConfig", "flex/interactive/development/python/SchemaMappingLoadingConfigDataSource", "flex/interactive/development/python/SchemaMappingLoadingConfigFormat", "flex/interactive/development/python/ServiceStatus", "flex/interactive/development/python/StartServiceRequest", "flex/interactive/development/python/StoredProcedureMeta", "flex/interactive/development/python/StringType", "flex/interactive/development/python/StringTypeString", "flex/interactive/development/python/TemporalType", "flex/interactive/development/python/TemporalTypeTemporal", "flex/interactive/development/python/TimeStampType", "flex/interactive/development/python/TypedValue", "flex/interactive/development/python/UpdateProcedureRequest", "flex/interactive/development/python/UploadFileResponse", "flex/interactive/development/python/UtilsApi", "flex/interactive/development/python/VarChar", "flex/interactive/development/python/VarCharVarChar", "flex/interactive/development/python/VertexData", "flex/interactive/development/python/VertexMapping", "flex/interactive/development/python/VertexRequest", "flex/interactive/development/python/VertexStatistics", "flex/interactive/development/python/VertexTypePairStatistics", "flex/interactive/development/python/python_sdk", "flex/interactive/development/restful_api", "flex/interactive/getting_started", "flex/interactive/glossary", "flex/interactive/installation", "flex/interactive/overview", "flex/interactive/sdk", "flex/interactive/stored_procedures", "flex/interactive/tools", "flex/interactive/tools/admin_tool", "flex/interactive_intro", "frag_intro", "frequently_asked_questions", "getting_started_gle", "graph_workloads", "graphscope_for_data_scientists", "how_to_report_bugs", "index", "interactive_engine/deployment", "interactive_engine/design_of_gie", "interactive_engine/dev_and_test", "interactive_engine/getting_started", "interactive_engine/neo4j/cypher_sdk", "interactive_engine/neo4j/llm_assistant", "interactive_engine/neo4j/supported_cypher", "interactive_engine/neo4j_eco", "interactive_engine/optimizer", "interactive_engine/tinkerpop/faq", "interactive_engine/tinkerpop/guide_and_examples", "interactive_engine/tinkerpop/supported_gremlin_steps", "interactive_engine/tinkerpop/tinkerpop_gremlin", "interactive_engine/tinkerpop/tutorial_ldbc_gremlin", "interactive_engine/tinkerpop_eco", "java_tutorials", "key_features", "learning_engine/design_of_gle", "learning_engine/dev_and_test", "learning_engine/getting_started", "learning_engine/graph_sampling", "learning_engine/guide_and_examples", "learning_engine/tutorial_node_classification_k8s", "learning_engine/tutorial_node_classification_local", "learning_engine/tutorial_node_classification_pyg_k8s", "learning_engine/tutorial_node_classification_pyg_local", "loading_graphs", "overview/design_of_graphscope", "overview/getting_started", "overview/glossary", "overview/graph_analytics_workloads", "overview/graph_interactive_workloads", "overview/graph_learning_workloads", "overview/intro", "overview/positioning", "performance_and_benchmark", "python_tutorials", "reference/analytical_engine_index", "reference/app", "reference/context", "reference/cython_sdk", "reference/flex/index", "reference/gae_java/about", "reference/gae_java/index", "reference/generated/graphscope.Vertex", "reference/generated/graphscope.declare", "reference/generated/graphscope.framework.app.load_app", "reference/generated/graphscope.framework.dag_utils.add_column", "reference/generated/graphscope.framework.dag_utils.add_labels_to_graph", "reference/generated/graphscope.framework.dag_utils.arrow_to_dynamic", "reference/generated/graphscope.framework.dag_utils.bind_app", "reference/generated/graphscope.framework.dag_utils.clear_edges", "reference/generated/graphscope.framework.dag_utils.clear_graph", "reference/generated/graphscope.framework.dag_utils.context_to_dataframe", "reference/generated/graphscope.framework.dag_utils.context_to_numpy", "reference/generated/graphscope.framework.dag_utils.copy_graph", "reference/generated/graphscope.framework.dag_utils.create_app", "reference/generated/graphscope.framework.dag_utils.create_graph", "reference/generated/graphscope.framework.dag_utils.create_graph_view", "reference/generated/graphscope.framework.dag_utils.create_loader", "reference/generated/graphscope.framework.dag_utils.create_subgraph", "reference/generated/graphscope.framework.dag_utils.create_unload_op", "reference/generated/graphscope.framework.dag_utils.dynamic_to_arrow", "reference/generated/graphscope.framework.dag_utils.get_context_data", "reference/generated/graphscope.framework.dag_utils.graph_to_dataframe", "reference/generated/graphscope.framework.dag_utils.graph_to_numpy", "reference/generated/graphscope.framework.dag_utils.gremlin_to_subgraph", "reference/generated/graphscope.framework.dag_utils.modify_edges", "reference/generated/graphscope.framework.dag_utils.modify_vertices", "reference/generated/graphscope.framework.dag_utils.output", "reference/generated/graphscope.framework.dag_utils.project_arrow_property_graph", "reference/generated/graphscope.framework.dag_utils.project_to_simple", "reference/generated/graphscope.framework.dag_utils.report_graph", "reference/generated/graphscope.framework.dag_utils.run_app", "reference/generated/graphscope.framework.dag_utils.to_data_sink", "reference/generated/graphscope.framework.dag_utils.to_directed", "reference/generated/graphscope.framework.dag_utils.to_undirected", "reference/generated/graphscope.framework.dag_utils.to_vineyard_dataframe", "reference/generated/graphscope.framework.dag_utils.to_vineyard_tensor", "reference/generated/graphscope.framework.dag_utils.unload_app", "reference/generated/graphscope.framework.dag_utils.unload_context", "reference/generated/graphscope.framework.dag_utils.unload_graph", "reference/generated/graphscope.framework.operation.Operation.__init__", "reference/generated/graphscope.framework.operation.Operation.as_op_def", "reference/generated/graphscope.framework.operation.Operation.eval", "reference/generated/graphscope.framework.operation.Operation.evaluated", "reference/generated/graphscope.framework.operation.Operation.key", "reference/generated/graphscope.framework.operation.Operation.signature", "reference/generated/graphscope.g", "reference/generated/graphscope.get_default_session", "reference/generated/graphscope.graphlearn", "reference/generated/graphscope.gremlin", "reference/generated/graphscope.has_default_session", "reference/generated/graphscope.session", "reference/generated/graphscope.set_option", "reference/gnn_engine/algo_en", "reference/gnn_engine/data_loader_en", "reference/gnn_engine/graph_object_en", "reference/gnn_engine/graph_query_en", "reference/gnn_engine/graph_sampling_en", "reference/gnn_engine/graph_traverse_en", "reference/gnn_engine/gsl_en", "reference/gnn_engine/install_en", "reference/gnn_engine/model_programming_en", "reference/gnn_engine/negative_sampling_en", "reference/gnn_engine/operator", "reference/gnn_engine/other_source", "reference/gnn_engine/quick_start_en", "reference/gnn_engine/system_config", "reference/graph", "reference/interactive", "reference/learning", "reference/networkx/builtin", "reference/networkx/functions", "reference/networkx/generated/graphscope.nx.classes.function.add_cycle", "reference/networkx/generated/graphscope.nx.classes.function.add_path", "reference/networkx/generated/graphscope.nx.classes.function.add_star", "reference/networkx/generated/graphscope.nx.classes.function.all_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.common_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.create_empty_copy", "reference/networkx/generated/graphscope.nx.classes.function.degree", "reference/networkx/generated/graphscope.nx.classes.function.degree_histogram", "reference/networkx/generated/graphscope.nx.classes.function.density", "reference/networkx/generated/graphscope.nx.classes.function.edge_subgraph", "reference/networkx/generated/graphscope.nx.classes.function.edges", "reference/networkx/generated/graphscope.nx.classes.function.freeze", "reference/networkx/generated/graphscope.nx.classes.function.induced_subgraph", "reference/networkx/generated/graphscope.nx.classes.function.info", "reference/networkx/generated/graphscope.nx.classes.function.is_directed", "reference/networkx/generated/graphscope.nx.classes.function.is_empty", "reference/networkx/generated/graphscope.nx.classes.function.is_frozen", "reference/networkx/generated/graphscope.nx.classes.function.is_negatively_weighted", "reference/networkx/generated/graphscope.nx.classes.function.is_weighted", "reference/networkx/generated/graphscope.nx.classes.function.neighbors", "reference/networkx/generated/graphscope.nx.classes.function.nodes", "reference/networkx/generated/graphscope.nx.classes.function.nodes_with_selfloops", "reference/networkx/generated/graphscope.nx.classes.function.non_edges", "reference/networkx/generated/graphscope.nx.classes.function.non_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.number_of_edges", "reference/networkx/generated/graphscope.nx.classes.function.number_of_nodes", "reference/networkx/generated/graphscope.nx.classes.function.number_of_selfloops", "reference/networkx/generated/graphscope.nx.classes.function.selfloop_edges", "reference/networkx/generated/graphscope.nx.classes.function.subgraph", "reference/networkx/generated/graphscope.nx.classes.function.to_directed", "reference/networkx/generated/graphscope.nx.classes.function.to_undirected", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas_g", "reference/networkx/generated/graphscope.nx.generators.classic.balanced_tree", "reference/networkx/generated/graphscope.nx.generators.classic.barbell_graph", "reference/networkx/generated/graphscope.nx.generators.classic.binomial_tree", "reference/networkx/generated/graphscope.nx.generators.classic.circulant_graph", "reference/networkx/generated/graphscope.nx.generators.classic.circular_ladder_graph", "reference/networkx/generated/graphscope.nx.generators.classic.complete_graph", "reference/networkx/generated/graphscope.nx.generators.classic.complete_multipartite_graph", "reference/networkx/generated/graphscope.nx.generators.classic.cycle_graph", "reference/networkx/generated/graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph", "reference/networkx/generated/graphscope.nx.generators.classic.empty_graph", "reference/networkx/generated/graphscope.nx.generators.classic.full_rary_tree", "reference/networkx/generated/graphscope.nx.generators.classic.ladder_graph", "reference/networkx/generated/graphscope.nx.generators.classic.lollipop_graph", "reference/networkx/generated/graphscope.nx.generators.classic.null_graph", "reference/networkx/generated/graphscope.nx.generators.classic.path_graph", "reference/networkx/generated/graphscope.nx.generators.classic.star_graph", "reference/networkx/generated/graphscope.nx.generators.classic.trivial_graph", "reference/networkx/generated/graphscope.nx.generators.classic.turan_graph", "reference/networkx/generated/graphscope.nx.generators.classic.wheel_graph", "reference/networkx/generated/graphscope.nx.generators.community.LFR_benchmark_graph", "reference/networkx/generated/graphscope.nx.generators.community.caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.connected_caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.gaussian_random_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.planted_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.random_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.relaxed_caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.ring_of_cliques", "reference/networkx/generated/graphscope.nx.generators.community.stochastic_block_model", "reference/networkx/generated/graphscope.nx.generators.community.windmill_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.configuration_model", "reference/networkx/generated/graphscope.nx.generators.degree_seq.degree_sequence_tree", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_configuration_model", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.expected_degree_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.havel_hakimi_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.random_degree_sequence_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gn_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gnc_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gnr_graph", "reference/networkx/generated/graphscope.nx.generators.directed.random_k_out_graph", "reference/networkx/generated/graphscope.nx.generators.directed.scale_free_graph", "reference/networkx/generated/graphscope.nx.generators.duplication.duplication_divergence_graph", "reference/networkx/generated/graphscope.nx.generators.duplication.partial_duplication_graph", "reference/networkx/generated/graphscope.nx.generators.ego.ego_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.chordal_cycle_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.margulis_gabber_galil_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.paley_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.geographical_threshold_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.soft_random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.thresholded_random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.waxman_graph", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hkn_harary_graph", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hnm_harary_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.general_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.k_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.uniform_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.joint_degree_graph", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielski_graph", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielskian", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees", "reference/networkx/generated/graphscope.nx.generators.small.LCF_graph", "reference/networkx/generated/graphscope.nx.generators.small.bull_graph", "reference/networkx/generated/graphscope.nx.generators.small.chvatal_graph", "reference/networkx/generated/graphscope.nx.generators.small.cubical_graph", "reference/networkx/generated/graphscope.nx.generators.small.desargues_graph", "reference/networkx/generated/graphscope.nx.generators.small.diamond_graph", "reference/networkx/generated/graphscope.nx.generators.small.dodecahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.frucht_graph", "reference/networkx/generated/graphscope.nx.generators.small.heawood_graph", "reference/networkx/generated/graphscope.nx.generators.small.house_graph", "reference/networkx/generated/graphscope.nx.generators.small.house_x_graph", "reference/networkx/generated/graphscope.nx.generators.small.icosahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.krackhardt_kite_graph", "reference/networkx/generated/graphscope.nx.generators.small.make_small_graph", "reference/networkx/generated/graphscope.nx.generators.small.moebius_kantor_graph", "reference/networkx/generated/graphscope.nx.generators.small.octahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.pappus_graph", "reference/networkx/generated/graphscope.nx.generators.small.petersen_graph", "reference/networkx/generated/graphscope.nx.generators.small.sedgewick_maze_graph", "reference/networkx/generated/graphscope.nx.generators.small.tetrahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.truncated_cube_graph", "reference/networkx/generated/graphscope.nx.generators.small.truncated_tetrahedron_graph", "reference/networkx/generated/graphscope.nx.generators.small.tutte_graph", "reference/networkx/generated/graphscope.nx.generators.social.davis_southern_women_graph", "reference/networkx/generated/graphscope.nx.generators.social.florentine_families_graph", "reference/networkx/generated/graphscope.nx.generators.social.karate_club_graph", "reference/networkx/generated/graphscope.nx.generators.social.les_miserables_graph", "reference/networkx/generated/graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge", "reference/networkx/generated/graphscope.nx.generators.sudoku.sudoku_graph", "reference/networkx/generated/graphscope.nx.generators.trees.prefix_tree", "reference/networkx/generated/graphscope.nx.generators.trees.random_tree", "reference/networkx/generated/graphscope.nx.generators.triads.triad_graph", "reference/networkx/generated/networkx.generators.internet_as_graphs.random_internet_as_graph", "reference/networkx/generated/networkx.generators.stochastic.stochastic_graph", "reference/networkx/generators", "reference/networkx/graphs", "reference/networkx/index", "reference/networkx/io", "reference/networkx/transformation", "reference/operation", "reference/python_index", "reference/selector", "reference/session", "resources_estimator", "storage_engine/gart", "storage_engine/getting_started", "storage_engine/graphar", "storage_engine/grin", "storage_engine/groot", "storage_engine/vineyard", "tutorial/builtin", "tutorial/scaling", "user_guide_and_examples_of_gae", "user_guide_and_examples_of_gle", "utilities/error_codes", "utilities/gs", "utilities/how_to_find_logs", "utilities/monitoring", "zh/analytics_engine", "zh/deployment", "zh/developer_guide", "zh/frequently_asked_questions", "zh/getting_started", "zh/graph_transformation", "zh/index", "zh/installation", "zh/interactive_engine", "zh/learning_engine", "zh/loading_graph", "zh/tutorials"], "filenames": ["analytical_engine/builtin_algorithms.md", "analytical_engine/customized_algorithms.md", "analytical_engine/deployment.md", "analytical_engine/design_of_gae.md", "analytical_engine/dev_and_test.md", "analytical_engine/faqs.md", "analytical_engine/flash.md", "analytical_engine/getting_started.md", "analytical_engine/guide_and_examples.md", "analytical_engine/ingress.md", "analytical_engine/key_concepts.rst", "analytical_engine/networkx_compatibility.md", "analytical_engine/overview_and_architecture.md", "analytical_engine/performance_tuning.md", "analytical_engine/programming_model_pie.md", "analytical_engine/tutorial_dev_algo_cpp_flash.md", "analytical_engine/tutorial_dev_algo_cpp_pie.md", "analytical_engine/tutorial_dev_algo_java.md", "analytical_engine/tutorial_dev_algo_python.rst", "analytical_engine/tutorial_networkx_algorithms.md", "analytical_engine/tutorial_networkx_operations.md", "analytical_engine/tutorial_run_builtin_algo.md", "analytical_engine/tutorial_run_giraph_apps.md", "analytical_engine/tutorial_run_graphx_apps.md", "analytical_engine/vertex_centric_models.md", "contact_us.md", "deployment/deploy_graphscope_on_clouds.md", "deployment/deploy_graphscope_on_self_managed_k8s.md", "deployment/deploy_graphscope_operator.md", "deployment/deploy_graphscope_with_helm.md", "deployment/deploy_with_existing_vineyard_cluster.md", "deployment/install_in_offline_env.md", "deployment/install_on_local.md", "deployment/persistent_storage_of_graphs_on_k8s.md", "design_of_gae.md", "development/code_style_guide.md", "development/dev_guide.md", "development/how_to_contribute.md", "development/how_to_debug.md", "development/how_to_instrument.md", "development/how_to_submit_pr.md", "development/how_to_test.md", "flex/coordinator.md", "flex/coordinator/restful_api.rst", "flex/interactive/configuration.md", "flex/interactive/custom_graph_data.md", "flex/interactive/data_import.md", "flex/interactive/data_model.md", "flex/interactive/deployment.md", "flex/interactive/dev_guide.md", "flex/interactive/development/cpp_procedure.md", "flex/interactive/development/cypher_procedure.md", "flex/interactive/development/java/AdminServiceGraphManagementApi.md", "flex/interactive/development/java/AdminServiceJobManagementApi.md", "flex/interactive/development/java/AdminServiceProcedureManagementApi.md", "flex/interactive/development/java/AdminServiceServiceManagementApi.md", "flex/interactive/development/java/BaseEdgeType.md", "flex/interactive/development/java/BaseEdgeTypeVertexTypePairRelationsInner.md", "flex/interactive/development/java/BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams.md", "flex/interactive/development/java/BasePropertyMeta.md", "flex/interactive/development/java/BaseVertexType.md", "flex/interactive/development/java/BaseVertexTypeXCsrParams.md", "flex/interactive/development/java/ColumnMapping.md", "flex/interactive/development/java/CreateEdgeType.md", "flex/interactive/development/java/CreateGraphRequest.md", "flex/interactive/development/java/CreateGraphResponse.md", "flex/interactive/development/java/CreateGraphSchemaRequest.md", "flex/interactive/development/java/CreateProcedureRequest.md", "flex/interactive/development/java/CreateProcedureResponse.md", "flex/interactive/development/java/CreatePropertyMeta.md", "flex/interactive/development/java/CreateVertexType.md", "flex/interactive/development/java/DateType.md", "flex/interactive/development/java/EdgeData.md", "flex/interactive/development/java/EdgeMapping.md", "flex/interactive/development/java/EdgeMappingDestinationVertexMappingsInner.md", "flex/interactive/development/java/EdgeMappingSourceVertexMappingsInner.md", "flex/interactive/development/java/EdgeMappingSourceVertexMappingsInnerColumn.md", "flex/interactive/development/java/EdgeMappingTypeTriplet.md", "flex/interactive/development/java/EdgeRequest.md", "flex/interactive/development/java/EdgeStatistics.md", "flex/interactive/development/java/FixedChar.md", "flex/interactive/development/java/FixedCharChar.md", "flex/interactive/development/java/GSDataType.md", "flex/interactive/development/java/GetEdgeType.md", "flex/interactive/development/java/GetGraphResponse.md", "flex/interactive/development/java/GetGraphSchemaResponse.md", "flex/interactive/development/java/GetGraphStatisticsResponse.md", "flex/interactive/development/java/GetProcedureResponse.md", "flex/interactive/development/java/GetPropertyMeta.md", "flex/interactive/development/java/GetVertexType.md", "flex/interactive/development/java/GraphServiceEdgeManagementApi.md", "flex/interactive/development/java/GraphServiceVertexManagementApi.md", "flex/interactive/development/java/JobResponse.md", "flex/interactive/development/java/JobStatus.md", "flex/interactive/development/java/LongText.md", "flex/interactive/development/java/Parameter.md", "flex/interactive/development/java/PrimitiveType.md", "flex/interactive/development/java/Property.md", "flex/interactive/development/java/PropertyArray.md", "flex/interactive/development/java/QueryRequest.md", "flex/interactive/development/java/QueryServiceApi.md", "flex/interactive/development/java/SchemaMapping.md", "flex/interactive/development/java/SchemaMappingLoadingConfig.md", "flex/interactive/development/java/SchemaMappingLoadingConfigDataSource.md", "flex/interactive/development/java/SchemaMappingLoadingConfigFormat.md", "flex/interactive/development/java/ServiceStatus.md", "flex/interactive/development/java/StartServiceRequest.md", "flex/interactive/development/java/StoredProcedureMeta.md", "flex/interactive/development/java/StringType.md", "flex/interactive/development/java/StringTypeString.md", "flex/interactive/development/java/TemporalType.md", "flex/interactive/development/java/TemporalTypeTemporal.md", "flex/interactive/development/java/TimeStampType.md", "flex/interactive/development/java/TypedValue.md", "flex/interactive/development/java/UpdateProcedureRequest.md", "flex/interactive/development/java/UploadFileResponse.md", "flex/interactive/development/java/UtilsApi.md", "flex/interactive/development/java/VarChar.md", "flex/interactive/development/java/VarCharVarChar.md", "flex/interactive/development/java/VertexData.md", "flex/interactive/development/java/VertexMapping.md", "flex/interactive/development/java/VertexRequest.md", "flex/interactive/development/java/VertexStatistics.md", "flex/interactive/development/java/VertexTypePairStatistics.md", "flex/interactive/development/java/java_sdk.md", "flex/interactive/development/python/AdminServiceGraphManagementApi.md", "flex/interactive/development/python/AdminServiceJobManagementApi.md", "flex/interactive/development/python/AdminServiceProcedureManagementApi.md", "flex/interactive/development/python/AdminServiceServiceManagementApi.md", "flex/interactive/development/python/BaseEdgeType.md", "flex/interactive/development/python/BaseEdgeTypeVertexTypePairRelationsInner.md", "flex/interactive/development/python/BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams.md", "flex/interactive/development/python/BasePropertyMeta.md", "flex/interactive/development/python/BaseVertexType.md", "flex/interactive/development/python/BaseVertexTypeXCsrParams.md", "flex/interactive/development/python/ColumnMapping.md", "flex/interactive/development/python/CreateEdgeType.md", "flex/interactive/development/python/CreateGraphRequest.md", "flex/interactive/development/python/CreateGraphResponse.md", "flex/interactive/development/python/CreateGraphSchemaRequest.md", "flex/interactive/development/python/CreateProcedureRequest.md", "flex/interactive/development/python/CreateProcedureResponse.md", "flex/interactive/development/python/CreatePropertyMeta.md", "flex/interactive/development/python/CreateVertexType.md", "flex/interactive/development/python/DateType.md", "flex/interactive/development/python/EdgeData.md", "flex/interactive/development/python/EdgeMapping.md", "flex/interactive/development/python/EdgeMappingDestinationVertexMappingsInner.md", "flex/interactive/development/python/EdgeMappingSourceVertexMappingsInner.md", "flex/interactive/development/python/EdgeMappingSourceVertexMappingsInnerColumn.md", "flex/interactive/development/python/EdgeMappingTypeTriplet.md", "flex/interactive/development/python/EdgeRequest.md", "flex/interactive/development/python/EdgeStatistics.md", "flex/interactive/development/python/FixedChar.md", "flex/interactive/development/python/FixedCharChar.md", "flex/interactive/development/python/GSDataType.md", "flex/interactive/development/python/GetEdgeType.md", "flex/interactive/development/python/GetGraphResponse.md", "flex/interactive/development/python/GetGraphSchemaResponse.md", "flex/interactive/development/python/GetGraphStatisticsResponse.md", "flex/interactive/development/python/GetProcedureResponse.md", "flex/interactive/development/python/GetPropertyMeta.md", "flex/interactive/development/python/GetVertexType.md", "flex/interactive/development/python/GraphServiceEdgeManagementApi.md", "flex/interactive/development/python/GraphServiceVertexManagementApi.md", "flex/interactive/development/python/JobResponse.md", "flex/interactive/development/python/JobStatus.md", "flex/interactive/development/python/LongText.md", "flex/interactive/development/python/ModelProperty.md", "flex/interactive/development/python/Parameter.md", "flex/interactive/development/python/PrimitiveType.md", "flex/interactive/development/python/PropertyArray.md", "flex/interactive/development/python/QueryRequest.md", "flex/interactive/development/python/QueryServiceApi.md", "flex/interactive/development/python/SchemaMapping.md", "flex/interactive/development/python/SchemaMappingLoadingConfig.md", "flex/interactive/development/python/SchemaMappingLoadingConfigDataSource.md", "flex/interactive/development/python/SchemaMappingLoadingConfigFormat.md", "flex/interactive/development/python/ServiceStatus.md", "flex/interactive/development/python/StartServiceRequest.md", "flex/interactive/development/python/StoredProcedureMeta.md", "flex/interactive/development/python/StringType.md", "flex/interactive/development/python/StringTypeString.md", "flex/interactive/development/python/TemporalType.md", "flex/interactive/development/python/TemporalTypeTemporal.md", "flex/interactive/development/python/TimeStampType.md", "flex/interactive/development/python/TypedValue.md", "flex/interactive/development/python/UpdateProcedureRequest.md", "flex/interactive/development/python/UploadFileResponse.md", "flex/interactive/development/python/UtilsApi.md", "flex/interactive/development/python/VarChar.md", "flex/interactive/development/python/VarCharVarChar.md", "flex/interactive/development/python/VertexData.md", "flex/interactive/development/python/VertexMapping.md", "flex/interactive/development/python/VertexRequest.md", "flex/interactive/development/python/VertexStatistics.md", "flex/interactive/development/python/VertexTypePairStatistics.md", "flex/interactive/development/python/python_sdk.md", "flex/interactive/development/restful_api.md", "flex/interactive/getting_started.md", "flex/interactive/glossary.md", "flex/interactive/installation.md", "flex/interactive/overview.md", "flex/interactive/sdk.md", "flex/interactive/stored_procedures.md", "flex/interactive/tools.md", "flex/interactive/tools/admin_tool.md", "flex/interactive_intro.md", "frag_intro.md", "frequently_asked_questions.rst", "getting_started_gle.md", "graph_workloads.md", "graphscope_for_data_scientists.md", "how_to_report_bugs.md", "index.rst", "interactive_engine/deployment.md", "interactive_engine/design_of_gie.md", "interactive_engine/dev_and_test.md", "interactive_engine/getting_started.md", "interactive_engine/neo4j/cypher_sdk.md", "interactive_engine/neo4j/llm_assistant.md", "interactive_engine/neo4j/supported_cypher.md", "interactive_engine/neo4j_eco.md", "interactive_engine/optimizer.md", "interactive_engine/tinkerpop/faq.md", "interactive_engine/tinkerpop/guide_and_examples.md", "interactive_engine/tinkerpop/supported_gremlin_steps.md", "interactive_engine/tinkerpop/tinkerpop_gremlin.md", "interactive_engine/tinkerpop/tutorial_ldbc_gremlin.md", "interactive_engine/tinkerpop_eco.md", "java_tutorials.md", "key_features.md", "learning_engine/design_of_gle.md", "learning_engine/dev_and_test.md", "learning_engine/getting_started.md", "learning_engine/graph_sampling.md", "learning_engine/guide_and_examples.md", "learning_engine/tutorial_node_classification_k8s.md", "learning_engine/tutorial_node_classification_local.md", "learning_engine/tutorial_node_classification_pyg_k8s.md", "learning_engine/tutorial_node_classification_pyg_local.md", "loading_graphs.rst", "overview/design_of_graphscope.md", "overview/getting_started.md", "overview/glossary.md", "overview/graph_analytics_workloads.md", "overview/graph_interactive_workloads.md", "overview/graph_learning_workloads.md", "overview/intro.md", "overview/positioning.md", "performance_and_benchmark.md", "python_tutorials.md", "reference/analytical_engine_index.rst", "reference/app.rst", "reference/context.rst", "reference/cython_sdk.rst", "reference/flex/index.rst", "reference/gae_java/about.rst", "reference/gae_java/index.rst", "reference/generated/graphscope.Vertex.rst", "reference/generated/graphscope.declare.rst", "reference/generated/graphscope.framework.app.load_app.rst", "reference/generated/graphscope.framework.dag_utils.add_column.rst", "reference/generated/graphscope.framework.dag_utils.add_labels_to_graph.rst", "reference/generated/graphscope.framework.dag_utils.arrow_to_dynamic.rst", "reference/generated/graphscope.framework.dag_utils.bind_app.rst", "reference/generated/graphscope.framework.dag_utils.clear_edges.rst", "reference/generated/graphscope.framework.dag_utils.clear_graph.rst", "reference/generated/graphscope.framework.dag_utils.context_to_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.context_to_numpy.rst", "reference/generated/graphscope.framework.dag_utils.copy_graph.rst", "reference/generated/graphscope.framework.dag_utils.create_app.rst", "reference/generated/graphscope.framework.dag_utils.create_graph.rst", "reference/generated/graphscope.framework.dag_utils.create_graph_view.rst", "reference/generated/graphscope.framework.dag_utils.create_loader.rst", "reference/generated/graphscope.framework.dag_utils.create_subgraph.rst", "reference/generated/graphscope.framework.dag_utils.create_unload_op.rst", "reference/generated/graphscope.framework.dag_utils.dynamic_to_arrow.rst", "reference/generated/graphscope.framework.dag_utils.get_context_data.rst", "reference/generated/graphscope.framework.dag_utils.graph_to_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.graph_to_numpy.rst", "reference/generated/graphscope.framework.dag_utils.gremlin_to_subgraph.rst", "reference/generated/graphscope.framework.dag_utils.modify_edges.rst", "reference/generated/graphscope.framework.dag_utils.modify_vertices.rst", "reference/generated/graphscope.framework.dag_utils.output.rst", "reference/generated/graphscope.framework.dag_utils.project_arrow_property_graph.rst", "reference/generated/graphscope.framework.dag_utils.project_to_simple.rst", "reference/generated/graphscope.framework.dag_utils.report_graph.rst", "reference/generated/graphscope.framework.dag_utils.run_app.rst", "reference/generated/graphscope.framework.dag_utils.to_data_sink.rst", "reference/generated/graphscope.framework.dag_utils.to_directed.rst", "reference/generated/graphscope.framework.dag_utils.to_undirected.rst", "reference/generated/graphscope.framework.dag_utils.to_vineyard_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.to_vineyard_tensor.rst", "reference/generated/graphscope.framework.dag_utils.unload_app.rst", "reference/generated/graphscope.framework.dag_utils.unload_context.rst", "reference/generated/graphscope.framework.dag_utils.unload_graph.rst", "reference/generated/graphscope.framework.operation.Operation.__init__.rst", "reference/generated/graphscope.framework.operation.Operation.as_op_def.rst", "reference/generated/graphscope.framework.operation.Operation.eval.rst", "reference/generated/graphscope.framework.operation.Operation.evaluated.rst", "reference/generated/graphscope.framework.operation.Operation.key.rst", "reference/generated/graphscope.framework.operation.Operation.signature.rst", "reference/generated/graphscope.g.rst", "reference/generated/graphscope.get_default_session.rst", "reference/generated/graphscope.graphlearn.rst", "reference/generated/graphscope.gremlin.rst", "reference/generated/graphscope.has_default_session.rst", "reference/generated/graphscope.session.rst", "reference/generated/graphscope.set_option.rst", "reference/gnn_engine/algo_en.rst", "reference/gnn_engine/data_loader_en.rst", "reference/gnn_engine/graph_object_en.rst", "reference/gnn_engine/graph_query_en.rst", "reference/gnn_engine/graph_sampling_en.rst", "reference/gnn_engine/graph_traverse_en.rst", "reference/gnn_engine/gsl_en.rst", "reference/gnn_engine/install_en.rst", "reference/gnn_engine/model_programming_en.rst", "reference/gnn_engine/negative_sampling_en.rst", "reference/gnn_engine/operator.rst", "reference/gnn_engine/other_source.rst", "reference/gnn_engine/quick_start_en.rst", "reference/gnn_engine/system_config.rst", "reference/graph.rst", "reference/interactive.rst", "reference/learning.rst", "reference/networkx/builtin.rst", "reference/networkx/functions.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_cycle.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_path.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_star.rst", "reference/networkx/generated/graphscope.nx.classes.function.all_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.common_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.create_empty_copy.rst", "reference/networkx/generated/graphscope.nx.classes.function.degree.rst", "reference/networkx/generated/graphscope.nx.classes.function.degree_histogram.rst", "reference/networkx/generated/graphscope.nx.classes.function.density.rst", "reference/networkx/generated/graphscope.nx.classes.function.edge_subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.freeze.rst", "reference/networkx/generated/graphscope.nx.classes.function.induced_subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.info.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_directed.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_empty.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_frozen.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_negatively_weighted.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_weighted.rst", "reference/networkx/generated/graphscope.nx.classes.function.neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.nodes.rst", "reference/networkx/generated/graphscope.nx.classes.function.nodes_with_selfloops.rst", "reference/networkx/generated/graphscope.nx.classes.function.non_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.non_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_nodes.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_selfloops.rst", "reference/networkx/generated/graphscope.nx.classes.function.selfloop_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.to_directed.rst", "reference/networkx/generated/graphscope.nx.classes.function.to_undirected.rst", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas.rst", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas_g.rst", "reference/networkx/generated/graphscope.nx.generators.classic.balanced_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.barbell_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.binomial_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.circulant_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.circular_ladder_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.complete_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.complete_multipartite_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.cycle_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.empty_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.full_rary_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.ladder_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.lollipop_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.null_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.path_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.star_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.trivial_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.turan_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.wheel_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.LFR_benchmark_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.connected_caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.gaussian_random_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.planted_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.random_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.relaxed_caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.ring_of_cliques.rst", "reference/networkx/generated/graphscope.nx.generators.community.stochastic_block_model.rst", "reference/networkx/generated/graphscope.nx.generators.community.windmill_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.configuration_model.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.degree_sequence_tree.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_configuration_model.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.expected_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.havel_hakimi_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.random_degree_sequence_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gn_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gnc_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gnr_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.random_k_out_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.scale_free_graph.rst", "reference/networkx/generated/graphscope.nx.generators.duplication.duplication_divergence_graph.rst", "reference/networkx/generated/graphscope.nx.generators.duplication.partial_duplication_graph.rst", "reference/networkx/generated/graphscope.nx.generators.ego.ego_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.chordal_cycle_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.margulis_gabber_galil_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.paley_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.geographical_threshold_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.soft_random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.thresholded_random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.waxman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hkn_harary_graph.rst", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hnm_harary_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.general_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.k_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.uniform_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.joint_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielski_graph.rst", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielskian.rst", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees.rst", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees.rst", "reference/networkx/generated/graphscope.nx.generators.small.LCF_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.bull_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.chvatal_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.cubical_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.desargues_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.diamond_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.dodecahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.frucht_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.heawood_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.house_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.house_x_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.icosahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.krackhardt_kite_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.make_small_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.moebius_kantor_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.octahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.pappus_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.petersen_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.sedgewick_maze_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.tetrahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.truncated_cube_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.truncated_tetrahedron_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.tutte_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.davis_southern_women_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.florentine_families_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.karate_club_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.les_miserables_graph.rst", "reference/networkx/generated/graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge.rst", "reference/networkx/generated/graphscope.nx.generators.sudoku.sudoku_graph.rst", "reference/networkx/generated/graphscope.nx.generators.trees.prefix_tree.rst", "reference/networkx/generated/graphscope.nx.generators.trees.random_tree.rst", "reference/networkx/generated/graphscope.nx.generators.triads.triad_graph.rst", "reference/networkx/generated/networkx.generators.internet_as_graphs.random_internet_as_graph.rst", "reference/networkx/generated/networkx.generators.stochastic.stochastic_graph.rst", "reference/networkx/generators.rst", "reference/networkx/graphs.rst", "reference/networkx/index.rst", "reference/networkx/io.rst", "reference/networkx/transformation.rst", "reference/operation.rst", "reference/python_index.rst", "reference/selector.rst", "reference/session.rst", "resources_estimator.md", "storage_engine/gart.md", "storage_engine/getting_started.md", "storage_engine/graphar.md", "storage_engine/grin.md", "storage_engine/groot.md", "storage_engine/vineyard.md", "tutorial/builtin.rst", "tutorial/scaling.rst", "user_guide_and_examples_of_gae.md", "user_guide_and_examples_of_gle.md", "utilities/error_codes.md", "utilities/gs.md", "utilities/how_to_find_logs.md", "utilities/monitoring.md", "zh/analytics_engine.rst", "zh/deployment.rst", "zh/developer_guide.rst", "zh/frequently_asked_questions.rst", "zh/getting_started.rst", "zh/graph_transformation.rst", "zh/index.rst", "zh/installation.rst", "zh/interactive_engine.rst", "zh/learning_engine.rst", "zh/loading_graph.rst", "zh/tutorials.rst"], "titles": ["Built-in Algorithms", "Customized Algorithms", "Deployment for GAE", "Design of Analytical Engine", "Dev and Test", "FAQs", "Programming Model: FLASH", "Getting Started", "Guide and Examples", "Ingress: Incrementalize Graph Algorithms", "Key Concepts", "NetworkX Compatibility", "Overview and Architecture", "Performance Tuning", "Programming Model: PIE", "Tutorial: Develop Your Algorithms in C++ with FLASH Model", "Tutorial: Develop your Algorithm in C++ with PIE Model", "Tutorial: Develop your Algorithm in Java with PIE Model", "Tutorial: Develop algorithms in Python", "Tutorial: Graph Algorithms with NetworkX APIs", "Tutorial: Graph Operations with NetworkX APIs", "Tutorial: Running Builtin Algorithms", "Tutorial: Run Giraph Applications on GraphScope", "Tutorial: Run GraphX Applications on GraphScope", "Vertex-Centric Model", "Contact Us", "Deploy GraphScope on Clouds", "Deploy on K8s Cluster", "Deploy GraphScope Operator", "Deploy GraphScope with <code class=\"docutils literal notranslate\"><span class=\"pre\">helm</span></code>", "Deploy with Existing Vineyard Cluster", "Install GraphScope in offline environment", "Install GraphScope on Local", "Persistent storage of graphs on the Kubernetes cluster", "Design of GAE", "Code Style Guide", "Development Guide", "How to Contribute", "Debugging on local deployment", "How to instrument", "How to Submit Pull-requests", "How to Test", "Coordinator", "Coordinator RESTFul API", "Engine Configuration", "Using Custom Graph", "Data Import Configuration", "Data Model", "Deployment", "GraphScope Interactive Development guide", "Create c++ Stored Procedures on GraphScope Interactive", "Turning Cypher Queries into Stored Procedures with GraphScope Interactive", "AdminServiceGraphManagementApi", "AdminServiceJobManagementApi", "AdminServiceProcedureManagementApi", "AdminServiceServiceManagementApi", "BaseEdgeType", "BaseEdgeTypeVertexTypePairRelationsInner", "BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams", "BasePropertyMeta", "BaseVertexType", "BaseVertexTypeXCsrParams", "ColumnMapping", "CreateEdgeType", "CreateGraphRequest", "CreateGraphResponse", "CreateGraphSchemaRequest", "CreateProcedureRequest", "CreateProcedureResponse", "CreatePropertyMeta", "CreateVertexType", "DateType", "EdgeData", "EdgeMapping", "EdgeMappingDestinationVertexMappingsInner", "EdgeMappingSourceVertexMappingsInner", "EdgeMappingSourceVertexMappingsInnerColumn", "EdgeMappingTypeTriplet", "EdgeRequest", "EdgeStatistics", "FixedChar", "FixedCharChar", "GSDataType", "GetEdgeType", "GetGraphResponse", "GetGraphSchemaResponse", "GetGraphStatisticsResponse", "GetProcedureResponse", "GetPropertyMeta", "GetVertexType", "GraphServiceEdgeManagementApi", "GraphServiceVertexManagementApi", "JobResponse", "JobStatus", "LongText", "Parameter", "PrimitiveType", "Property", "PropertyArray", "QueryRequest", "QueryServiceApi", "SchemaMapping", "SchemaMappingLoadingConfig", "SchemaMappingLoadingConfigDataSource", "SchemaMappingLoadingConfigFormat", "ServiceStatus", "StartServiceRequest", "StoredProcedureMeta", "StringType", "StringTypeString", "TemporalType", "TemporalTypeTemporal", "TimeStampType", "TypedValue", "UpdateProcedureRequest", "UploadFileResponse", "UtilsApi", "VarChar", "VarCharVarChar", "VertexData", "VertexMapping", "VertexRequest", "VertexStatistics", "VertexTypePairStatistics", "Java SDK Reference", "gs_interactive.AdminServiceGraphManagementApi", "gs_interactive.AdminServiceJobManagementApi", "gs_interactive.AdminServiceProcedureManagementApi", "gs_interactive.AdminServiceServiceManagementApi", "BaseEdgeType", "BaseEdgeTypeVertexTypePairRelationsInner", "BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams", "BasePropertyMeta", "BaseVertexType", "BaseVertexTypeXCsrParams", "ColumnMapping", "CreateEdgeType", "CreateGraphRequest", "CreateGraphResponse", "CreateGraphSchemaRequest", "CreateProcedureRequest", "CreateProcedureResponse", "CreatePropertyMeta", "CreateVertexType", "DateType", "EdgeData", "EdgeMapping", "EdgeMappingDestinationVertexMappingsInner", "EdgeMappingSourceVertexMappingsInner", "EdgeMappingSourceVertexMappingsInnerColumn", "EdgeMappingTypeTriplet", "EdgeRequest", "EdgeStatistics", "FixedChar", "FixedCharChar", "GSDataType", "GetEdgeType", "GetGraphResponse", "GetGraphSchemaResponse", "GetGraphStatisticsResponse", "GetProcedureResponse", "GetPropertyMeta", "GetVertexType", "gs_interactive.GraphServiceEdgeManagementApi", "gs_interactive.GraphServiceVertexManagementApi", "JobResponse", "JobStatus", "LongText", "ModelProperty", "Parameter", "PrimitiveType", "PropertyArray", "QueryRequest", "gs_interactive.QueryServiceApi", "SchemaMapping", "SchemaMappingLoadingConfig", "SchemaMappingLoadingConfigDataSource", "SchemaMappingLoadingConfigFormat", "ServiceStatus", "StartServiceRequest", "StoredProcedureMeta", "StringType", "StringTypeString", "TemporalType", "TemporalTypeTemporal", "TimeStampType", "TypedValue", "UpdateProcedureRequest", "UploadFileResponse", "gs_interactive.UtilsApi", "VarChar", "VarCharVarChar", "VertexData", "VertexMapping", "VertexRequest", "VertexStatistics", "VertexTypePairStatistics", "Python SDK Reference", "RESTful API Documentation", "Getting Started", "Glossary", "Installation", "Overview", "GraphScope Interactive SDK", "Stored Procedures", "Tools", "The Administrative tool", "GraphScope Interactive", "Introduction to ArrowFragment", "Frequently Asked Questions", "Getting Started for GLE", "Graph Workloads", "GraphScope for Data Scientists", "How to Report Bugs", "GraphScope: A One-Stop Large-Scale Graph Computing System from Alibaba", "Standalone Deployment for GIE", "Design of GIE", "Dev and Test", "Getting Started", "GIE for Cypher", "Using LLM as an Assistant in GIE", "Cypher Support", "Neo4j Ecosystem", "A Generic Graph Optimizer for GIE", "FAQs for GIE Gremlin Usage", "Guide and Examples", "Supported Gremlin Steps", "GIE for Gremlin", "Tutorial: LDBC Gremlin", "Apache TinkerPop Ecosystem", "Tutorials for Java Users", "Key Features", "Design of GLE", "Dev and Test", "Getting Started", "Graph Sampling", "Guide and Examples", "Tutorial: Training a Node Classification Model on K8s Cluster", "Tutorial: Training a Node Classification Model on Your Local Machine", "Tutorial: Training a Node Classification Model (PyG) on a K8S Cluster", "Tutorial: Training a Node Classification Model (PyG) on Your Local Machine", "Loading Graphs", "Design of GraphScope", "Getting Started", "Glossary", "Graph Analytics Workloads", "Graph Interactive Workloads", "Graph Learning Workloads", "Introducing GraphScope", "Positioning of GraphScope", "Performance and Benchmark", "Tutorials for Python Users", "Analytical Engine API Reference", "Analytical App", "Context", "Cython SDK API", "Flex API Reference", "About Grape JDK", "Java Reference (javadoc)", "graphscope.Vertex", "graphscope.declare", "graphscope.framework.app.load_app", "graphscope.framework.dag_utils.add_column", "graphscope.framework.dag_utils.add_labels_to_graph", "graphscope.framework.dag_utils.arrow_to_dynamic", "graphscope.framework.dag_utils.bind_app", "graphscope.framework.dag_utils.clear_edges", "graphscope.framework.dag_utils.clear_graph", "graphscope.framework.dag_utils.context_to_dataframe", "graphscope.framework.dag_utils.context_to_numpy", "graphscope.framework.dag_utils.copy_graph", "graphscope.framework.dag_utils.create_app", "graphscope.framework.dag_utils.create_graph", "graphscope.framework.dag_utils.create_graph_view", "graphscope.framework.dag_utils.create_loader", "graphscope.framework.dag_utils.create_subgraph", "graphscope.framework.dag_utils.create_unload_op", "graphscope.framework.dag_utils.dynamic_to_arrow", "graphscope.framework.dag_utils.get_context_data", "graphscope.framework.dag_utils.graph_to_dataframe", "graphscope.framework.dag_utils.graph_to_numpy", "graphscope.framework.dag_utils.gremlin_to_subgraph", "graphscope.framework.dag_utils.modify_edges", "graphscope.framework.dag_utils.modify_vertices", "graphscope.framework.dag_utils.output", "graphscope.framework.dag_utils.project_arrow_property_graph", "graphscope.framework.dag_utils.project_to_simple", "graphscope.framework.dag_utils.report_graph", "graphscope.framework.dag_utils.run_app", "graphscope.framework.dag_utils.to_data_sink", "graphscope.framework.dag_utils.to_directed", "graphscope.framework.dag_utils.to_undirected", "graphscope.framework.dag_utils.to_vineyard_dataframe", "graphscope.framework.dag_utils.to_vineyard_tensor", "graphscope.framework.dag_utils.unload_app", "graphscope.framework.dag_utils.unload_context", "graphscope.framework.dag_utils.unload_graph", "graphscope.framework.operation.Operation.__init__", "graphscope.framework.operation.Operation.as_op_def", "graphscope.framework.operation.Operation.eval", "graphscope.framework.operation.Operation.evaluated", "graphscope.framework.operation.Operation.key", "graphscope.framework.operation.Operation.signature", "graphscope.g", "graphscope.get_default_session", "graphscope.graphlearn", "graphscope.gremlin", "graphscope.has_default_session", "graphscope.session", "graphscope.set_option", "Developing Your Own Model", "Data Source", "Graph Object", "Graph Query", "Graph Sampling", "Graph Traversal", "Graph Sampling Language\uff08GSL)", "Install from pip", "Graph Learning Model", "Negative Sampling", "Defining Your Own Operator", "Integrating Other Data Sources", "Quick Start", "System configuration", "Graph", "Interactive Query", "Graph Learning", "Builtin algorithms", "Functions", "graphscope.nx.classes.function.add_cycle", "graphscope.nx.classes.function.add_path", "graphscope.nx.classes.function.add_star", "graphscope.nx.classes.function.all_neighbors", "graphscope.nx.classes.function.common_neighbors", "graphscope.nx.classes.function.create_empty_copy", "graphscope.nx.classes.function.degree", "graphscope.nx.classes.function.degree_histogram", "graphscope.nx.classes.function.density", "graphscope.nx.classes.function.edge_subgraph", "graphscope.nx.classes.function.edges", "graphscope.nx.classes.function.freeze", "graphscope.nx.classes.function.induced_subgraph", "graphscope.nx.classes.function.info", "graphscope.nx.classes.function.is_directed", "graphscope.nx.classes.function.is_empty", "graphscope.nx.classes.function.is_frozen", "graphscope.nx.classes.function.is_negatively_weighted", "graphscope.nx.classes.function.is_weighted", "graphscope.nx.classes.function.neighbors", "graphscope.nx.classes.function.nodes", "graphscope.nx.classes.function.nodes_with_selfloops", "graphscope.nx.classes.function.non_edges", "graphscope.nx.classes.function.non_neighbors", "graphscope.nx.classes.function.number_of_edges", "graphscope.nx.classes.function.number_of_nodes", "graphscope.nx.classes.function.number_of_selfloops", "graphscope.nx.classes.function.selfloop_edges", "graphscope.nx.classes.function.subgraph", "graphscope.nx.classes.function.to_directed", "graphscope.nx.classes.function.to_undirected", "graphscope.nx.generators.atlas.graph_atlas", "graphscope.nx.generators.atlas.graph_atlas_g", "graphscope.nx.generators.classic.balanced_tree", "graphscope.nx.generators.classic.barbell_graph", "graphscope.nx.generators.classic.binomial_tree", "graphscope.nx.generators.classic.circulant_graph", "graphscope.nx.generators.classic.circular_ladder_graph", "graphscope.nx.generators.classic.complete_graph", "graphscope.nx.generators.classic.complete_multipartite_graph", "graphscope.nx.generators.classic.cycle_graph", "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph", "graphscope.nx.generators.classic.empty_graph", "graphscope.nx.generators.classic.full_rary_tree", "graphscope.nx.generators.classic.ladder_graph", "graphscope.nx.generators.classic.lollipop_graph", "graphscope.nx.generators.classic.null_graph", "graphscope.nx.generators.classic.path_graph", "graphscope.nx.generators.classic.star_graph", "graphscope.nx.generators.classic.trivial_graph", "graphscope.nx.generators.classic.turan_graph", "graphscope.nx.generators.classic.wheel_graph", "graphscope.nx.generators.community.LFR_benchmark_graph", "graphscope.nx.generators.community.caveman_graph", "graphscope.nx.generators.community.connected_caveman_graph", "graphscope.nx.generators.community.gaussian_random_partition_graph", "graphscope.nx.generators.community.planted_partition_graph", "graphscope.nx.generators.community.random_partition_graph", "graphscope.nx.generators.community.relaxed_caveman_graph", "graphscope.nx.generators.community.ring_of_cliques", "graphscope.nx.generators.community.stochastic_block_model", "graphscope.nx.generators.community.windmill_graph", "graphscope.nx.generators.degree_seq.configuration_model", "graphscope.nx.generators.degree_seq.degree_sequence_tree", "graphscope.nx.generators.degree_seq.directed_configuration_model", "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph", "graphscope.nx.generators.degree_seq.expected_degree_graph", "graphscope.nx.generators.degree_seq.havel_hakimi_graph", "graphscope.nx.generators.degree_seq.random_degree_sequence_graph", "graphscope.nx.generators.directed.gn_graph", "graphscope.nx.generators.directed.gnc_graph", "graphscope.nx.generators.directed.gnr_graph", "graphscope.nx.generators.directed.random_k_out_graph", "graphscope.nx.generators.directed.scale_free_graph", "graphscope.nx.generators.duplication.duplication_divergence_graph", "graphscope.nx.generators.duplication.partial_duplication_graph", "graphscope.nx.generators.ego.ego_graph", "graphscope.nx.generators.expanders.chordal_cycle_graph", "graphscope.nx.generators.expanders.margulis_gabber_galil_graph", "graphscope.nx.generators.expanders.paley_graph", "graphscope.nx.generators.geometric.geographical_threshold_graph", "graphscope.nx.generators.geometric.random_geometric_graph", "graphscope.nx.generators.geometric.soft_random_geometric_graph", "graphscope.nx.generators.geometric.thresholded_random_geometric_graph", "graphscope.nx.generators.geometric.waxman_graph", "graphscope.nx.generators.harary_graph.hkn_harary_graph", "graphscope.nx.generators.harary_graph.hnm_harary_graph", "graphscope.nx.generators.intersection.general_random_intersection_graph", "graphscope.nx.generators.intersection.k_random_intersection_graph", "graphscope.nx.generators.intersection.uniform_random_intersection_graph", "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph", "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree", "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree", "graphscope.nx.generators.joint_degree_seq.joint_degree_graph", "graphscope.nx.generators.mycielski.mycielski_graph", "graphscope.nx.generators.mycielski.mycielskian", "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees", "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees", "graphscope.nx.generators.small.LCF_graph", "graphscope.nx.generators.small.bull_graph", "graphscope.nx.generators.small.chvatal_graph", "graphscope.nx.generators.small.cubical_graph", "graphscope.nx.generators.small.desargues_graph", "graphscope.nx.generators.small.diamond_graph", "graphscope.nx.generators.small.dodecahedral_graph", "graphscope.nx.generators.small.frucht_graph", "graphscope.nx.generators.small.heawood_graph", "graphscope.nx.generators.small.house_graph", "graphscope.nx.generators.small.house_x_graph", "graphscope.nx.generators.small.icosahedral_graph", "graphscope.nx.generators.small.krackhardt_kite_graph", "graphscope.nx.generators.small.make_small_graph", "graphscope.nx.generators.small.moebius_kantor_graph", "graphscope.nx.generators.small.octahedral_graph", "graphscope.nx.generators.small.pappus_graph", "graphscope.nx.generators.small.petersen_graph", "graphscope.nx.generators.small.sedgewick_maze_graph", "graphscope.nx.generators.small.tetrahedral_graph", "graphscope.nx.generators.small.truncated_cube_graph", "graphscope.nx.generators.small.truncated_tetrahedron_graph", "graphscope.nx.generators.small.tutte_graph", "graphscope.nx.generators.social.davis_southern_women_graph", "graphscope.nx.generators.social.florentine_families_graph", "graphscope.nx.generators.social.karate_club_graph", "graphscope.nx.generators.social.les_miserables_graph", "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge", "graphscope.nx.generators.sudoku.sudoku_graph", "graphscope.nx.generators.trees.prefix_tree", "graphscope.nx.generators.trees.random_tree", "graphscope.nx.generators.triads.triad_graph", "networkx.generators.internet_as_graphs.random_internet_as_graph", "networkx.generators.stochastic.stochastic_graph", "Graph generators", "Graph types", "NetworkX-style API", "Reading graphs", "Graph Transformation", "Operation", "Python API Reference", "Selector", "Session", "Resources Estimator", "GART: Bridging the Gap between Relational OLTP and Graph Workloads", "Getting Started", "GraphAr: Standard Graph Data File Format", "GRIN: Graph Retrieval INterface", "Groot: Persistent Graph Store", "In-memory immutable graphs on Vineyard", "Applications and algorithms", "Scaling and repartitioning", "User Guide and Examples of GAE", "User Guide and Examples of GLE", "Error Codes", "Command-line Utility <code class=\"docutils literal notranslate\"><span class=\"pre\">gsctl</span></code>", "How to Find logs", "Monitoring", "\u56fe\u5206\u6790\u5f15\u64ce", "\u90e8\u7f72", "\u5f00\u53d1\u8005\u6307\u5357", "\u5e38\u89c1\u95ee\u9898", "\u5feb\u901f\u4e0a\u624b", "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c", "GraphScope: \u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf", "\u5b89\u88c5", "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce", "\u56fe\u5b66\u4e60\u5f15\u64ce", "\u8f7d\u56fe", "\u5165\u95e8\u6559\u7a0b"], "terms": {"The": [0, 1, 2, 4, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 27, 29, 31, 32, 34, 36, 37, 38, 41, 42, 44, 45, 46, 47, 52, 53, 90, 91, 124, 125, 126, 127, 128, 163, 164, 173, 189, 197, 198, 199, 204, 205, 207, 209, 215, 217, 218, 220, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 234, 235, 237, 239, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 263, 281, 282, 283, 286, 294, 296, 297, 304, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325, 326, 327, 331, 332, 336, 337, 338, 341, 342, 344, 346, 347, 352, 355, 360, 361, 362, 363, 364, 365, 368, 371, 374, 377, 379, 380, 381, 383, 384, 386, 388, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 447, 448, 449, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 464, 465, 468, 469, 471, 474, 475, 476, 477, 478, 479, 482, 483, 485], "graph": [0, 1, 3, 4, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 22, 23, 24, 27, 29, 36, 37, 38, 44, 49, 51, 52, 53, 54, 55, 90, 91, 100, 105, 124, 125, 126, 127, 128, 163, 164, 173, 178, 197, 198, 199, 200, 203, 204, 206, 207, 209, 215, 216, 217, 218, 219, 221, 222, 226, 227, 229, 230, 234, 236, 244, 248, 251, 252, 253, 254, 255, 262, 263, 264, 265, 266, 267, 270, 272, 273, 275, 277, 279, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 296, 303, 305, 311, 317, 320, 321, 325, 327, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 463, 466, 467, 468, 469, 478, 479, 482, 485, 489, 490, 491, 493, 494, 495], "analyt": [0, 1, 5, 8, 12, 14, 15, 16, 17, 18, 23, 27, 32, 34, 36, 37, 38, 41, 51, 209, 228, 230, 244, 246, 248, 249, 251, 255, 257, 260, 265, 324, 462, 467, 475, 478, 479, 485], "engin": [0, 1, 2, 5, 8, 16, 17, 23, 27, 28, 30, 32, 34, 38, 41, 42, 48, 198, 200, 202, 204, 207, 209, 212, 215, 216, 217, 220, 223, 224, 225, 228, 232, 236, 237, 241, 243, 244, 245, 246, 247, 249, 253, 257, 265, 281, 305, 310, 318, 324, 325, 326, 462, 468, 469, 471, 475, 476, 477, 478, 488, 489], "gae": [0, 3, 10, 12, 14, 15, 28, 32, 209, 214, 230, 231, 242, 245, 249, 250, 251, 257, 281, 325, 486, 487], "graphscop": [0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 18, 24, 33, 34, 35, 37, 38, 39, 42, 44, 45, 46, 47, 48, 52, 53, 54, 55, 90, 91, 100, 116, 124, 197, 198, 199, 200, 201, 202, 204, 206, 208, 209, 211, 215, 217, 219, 220, 223, 225, 226, 227, 228, 230, 231, 233, 236, 237, 238, 239, 240, 241, 243, 244, 246, 250, 251, 253, 254, 257, 324, 325, 326, 327, 462, 464, 465, 466, 467, 468, 469, 470, 474, 475, 476, 477, 478, 479, 482, 485, 486, 488, 489, 490, 493, 495, 496], "offer": [0, 2, 9, 12, 20, 34, 42, 45, 46, 47, 48, 51, 198, 199, 202, 204, 214, 217, 221, 223, 227, 231, 232, 242, 244, 248, 249, 474], "mani": [0, 4, 6, 10, 12, 13, 14, 24, 32, 34, 36, 37, 47, 202, 207, 209, 212, 216, 233, 241, 243, 244, 245, 247, 311, 318, 365, 409, 411, 462, 474, 479], "which": [0, 2, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 34, 35, 36, 38, 41, 44, 46, 47, 202, 204, 209, 212, 215, 216, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 255, 257, 261, 264, 277, 286, 288, 310, 311, 312, 313, 314, 315, 316, 318, 320, 321, 322, 324, 325, 326, 327, 341, 366, 368, 381, 382, 383, 391, 393, 410, 411, 412, 419, 421, 422, 440, 452, 454, 456, 460, 461, 462, 464, 465, 466, 468, 469, 471, 473, 474, 475, 476, 477, 479, 482], "enabl": [0, 1, 4, 6, 13, 15, 17, 18, 23, 31, 44, 48, 49, 87, 107, 160, 180, 199, 200, 202, 206, 207, 209, 227, 228, 232, 237, 238, 242, 243, 244, 246, 247, 248, 249, 250, 252, 321, 327, 462, 469, 474, 475, 478, 479, 483], "user": [0, 2, 4, 6, 9, 11, 12, 13, 14, 15, 17, 18, 22, 23, 24, 27, 29, 31, 34, 37, 41, 42, 44, 46, 47, 49, 51, 100, 173, 197, 199, 200, 202, 203, 205, 209, 214, 216, 220, 223, 224, 226, 228, 231, 235, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 310, 312, 313, 314, 315, 316, 317, 319, 322, 325, 462, 468, 469, 471, 474, 475, 478, 489, 492, 493], "analyz": [0, 7, 13, 19, 27, 227, 242, 243, 245, 246, 248, 316, 474], "data": [0, 2, 3, 4, 6, 9, 11, 12, 16, 17, 18, 19, 20, 22, 23, 24, 27, 30, 31, 33, 34, 49, 116, 189, 198, 199, 200, 201, 202, 204, 206, 207, 209, 214, 216, 217, 220, 222, 223, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 260, 262, 268, 269, 274, 279, 280, 284, 292, 293, 310, 312, 313, 314, 315, 316, 320, 324, 334, 340, 356, 357, 372, 389, 405, 424, 454, 462, 464, 465, 468, 469, 471, 474, 476, 477, 479, 485, 486, 488, 489, 494], "least": [0, 6, 37, 228, 327, 361, 383], "effort": [0, 34, 202, 226, 250, 474], "cover": [0, 6, 15, 41, 235], "wide": [0, 11, 12, 24, 202, 218, 230, 231, 235, 242, 243, 245, 246, 247, 249, 314, 473, 479], "rang": [0, 13, 18, 46, 47, 223, 224, 226, 228, 231, 234, 235, 237, 238, 239, 240, 242, 243, 246, 249, 252, 254, 255, 268, 269, 279, 280, 284, 292, 293, 310, 315, 319, 367, 369, 371, 374, 377, 389, 395, 409, 410, 411, 412, 440, 462, 467, 474, 485, 488, 489, 493, 494], "applic": [0, 1, 4, 6, 8, 10, 11, 13, 14, 24, 34, 39, 52, 53, 54, 55, 90, 91, 116, 124, 125, 126, 127, 128, 163, 164, 189, 197, 198, 200, 201, 202, 209, 215, 216, 219, 227, 229, 231, 232, 244, 245, 246, 247, 250, 252, 253, 255, 265, 314, 393, 417, 473, 483], "commun": [0, 4, 6, 8, 9, 12, 15, 16, 18, 24, 27, 231, 242, 243, 244, 245, 248, 252, 253, 257, 312, 320, 413, 454, 459, 463, 473, 482], "detect": [0, 6, 8, 9, 231, 242, 243, 245, 246, 248, 249, 253, 381, 385, 386, 387], "etc": [0, 6, 7, 15, 29, 212, 216, 223, 224, 232, 235, 241, 243, 244, 247, 250, 254, 310, 313, 314, 315, 318, 329, 341, 350, 355, 356, 462, 464, 475], "ar": [0, 1, 2, 4, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 27, 29, 30, 32, 33, 34, 35, 37, 38, 44, 45, 46, 47, 48, 52, 53, 54, 55, 90, 91, 100, 116, 124, 125, 126, 127, 128, 163, 164, 173, 189, 197, 199, 200, 201, 202, 204, 209, 212, 215, 216, 217, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 257, 260, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 327, 336, 337, 338, 351, 352, 357, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 376, 377, 380, 381, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 401, 405, 407, 408, 409, 410, 411, 412, 413, 417, 419, 421, 423, 424, 427, 445, 454, 455, 456, 457, 458, 462, 465, 468, 469, 471, 473, 474, 475, 476, 478, 482, 483, 495], "implement": [0, 1, 4, 8, 9, 12, 13, 16, 18, 22, 24, 34, 47, 124, 197, 199, 212, 216, 219, 221, 222, 224, 226, 229, 231, 232, 235, 239, 240, 241, 242, 246, 249, 252, 253, 257, 310, 312, 314, 315, 316, 318, 321, 322, 324, 325, 327, 403, 404, 408, 409, 411, 413, 414, 415, 456, 457, 465, 485], "pie": [0, 1, 3, 8, 12, 34, 228, 230, 231, 245, 257, 260, 467, 479, 489, 491], "program": [0, 3, 9, 15, 16, 17, 18, 20, 23, 24, 51, 202, 204, 230, 231, 235, 242, 244, 245, 247, 249, 250, 257, 310, 315, 316, 474, 475, 479], "model": [0, 1, 3, 8, 9, 18, 45, 48, 52, 53, 54, 55, 90, 91, 100, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 207, 212, 216, 222, 223, 224, 228, 230, 231, 234, 235, 236, 241, 242, 243, 245, 246, 249, 257, 312, 314, 316, 317, 381, 385, 389, 391, 393, 395, 401, 403, 404, 409, 410, 411, 412, 413, 417, 418, 452, 459, 469, 473, 479, 489], "highli": [0, 4, 12, 34, 222, 228, 231, 244, 245, 473], "optim": [0, 9, 12, 14, 34, 44, 46, 47, 51, 58, 61, 131, 134, 202, 204, 214, 216, 227, 228, 229, 231, 232, 234, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 250, 253, 310, 322, 324, 474, 476, 489], "best": [0, 16, 242, 244, 246, 249, 250, 253, 462, 485], "perform": [0, 3, 4, 6, 9, 12, 14, 17, 22, 23, 24, 37, 41, 44, 46, 48, 202, 214, 216, 221, 223, 226, 228, 229, 230, 232, 242, 244, 245, 247, 248, 249, 254, 312, 316, 318, 324, 419, 424, 454, 466, 468, 471, 475, 477, 479], "can": [0, 1, 2, 4, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 44, 45, 46, 47, 48, 49, 51, 100, 173, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 212, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 237, 241, 242, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 257, 261, 263, 287, 288, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 327, 336, 337, 340, 344, 365, 368, 381, 382, 383, 390, 391, 393, 409, 410, 411, 412, 419, 423, 424, 431, 433, 435, 440, 443, 448, 449, 454, 456, 462, 465, 466, 468, 469, 471, 473, 474, 475, 476, 477, 479, 482, 483, 485], "us": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 24, 28, 29, 30, 31, 33, 35, 36, 37, 38, 41, 44, 46, 47, 48, 58, 61, 100, 131, 134, 173, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 212, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 262, 263, 287, 288, 297, 302, 310, 311, 312, 313, 314, 316, 318, 321, 323, 324, 325, 326, 327, 346, 347, 356, 368, 371, 375, 381, 382, 383, 389, 391, 395, 396, 398, 400, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 419, 423, 427, 440, 445, 454, 456, 459, 460, 462, 464, 465, 467, 469, 473, 474, 477, 478, 479, 482, 483, 485, 489, 495], "them": [0, 1, 2, 6, 8, 12, 14, 15, 17, 24, 27, 30, 33, 34, 36, 41, 45, 204, 209, 212, 216, 221, 226, 228, 237, 242, 243, 245, 247, 249, 250, 251, 262, 310, 313, 322, 367, 454, 468, 474, 475, 485], "out": [0, 6, 9, 12, 27, 29, 33, 34, 37, 52, 53, 54, 55, 90, 91, 100, 116, 124, 224, 227, 232, 239, 240, 241, 243, 244, 245, 246, 249, 253, 255, 310, 313, 314, 316, 327, 384, 393, 394, 401, 402, 405, 419, 420, 456, 460, 462, 474, 475, 476, 478, 489, 493], "box": [0, 244, 455], "manner": [0, 2, 17, 18, 32, 36, 202, 243, 245, 246], "here": [0, 4, 10, 14, 16, 17, 18, 20, 23, 27, 33, 36, 37, 38, 41, 44, 45, 47, 198, 201, 204, 209, 215, 216, 217, 220, 221, 223, 224, 226, 227, 228, 231, 233, 234, 237, 238, 241, 247, 250, 253, 311, 312, 316, 319, 321, 322, 324, 327, 381, 393, 408, 409, 411, 420, 440, 462, 465, 473, 474, 475, 489], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 51, 100, 124, 125, 126, 127, 128, 163, 164, 173, 189, 197, 198, 199, 200, 202, 204, 206, 207, 208, 209, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 249, 250, 252, 253, 254, 255, 256, 257, 258, 261, 263, 287, 297, 299, 303, 304, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 332, 333, 335, 337, 339, 341, 342, 343, 344, 345, 346, 347, 356, 357, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 377, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 468, 469, 471, 473, 474, 475, 476, 477, 478, 479, 482, 483, 485, 488, 489, 493, 494, 495], "full": [0, 4, 12, 16, 17, 18, 22, 34, 46, 100, 173, 224, 231, 232, 235, 242, 247, 249, 253, 310, 313, 314, 316, 372, 475, 479, 485, 494], "list": [0, 1, 16, 19, 20, 28, 31, 34, 37, 38, 45, 46, 47, 52, 53, 54, 56, 60, 63, 64, 66, 70, 72, 73, 78, 79, 83, 84, 85, 86, 87, 89, 98, 99, 101, 107, 119, 120, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 204, 215, 221, 224, 226, 228, 231, 237, 239, 241, 244, 247, 251, 253, 255, 274, 275, 282, 283, 297, 311, 314, 316, 324, 327, 336, 338, 341, 348, 350, 356, 357, 360, 361, 365, 367, 368, 386, 389, 391, 393, 394, 395, 396, 397, 409, 413, 416, 419, 420, 425, 427, 440, 456, 462, 463, 465, 469, 473, 475, 478, 483, 490, 493], "support": [0, 3, 4, 6, 9, 10, 12, 13, 17, 18, 20, 22, 24, 29, 32, 34, 37, 42, 44, 45, 47, 48, 124, 125, 126, 127, 128, 163, 164, 173, 189, 197, 199, 202, 207, 209, 212, 215, 216, 218, 222, 224, 228, 229, 230, 234, 235, 236, 237, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 257, 263, 310, 311, 312, 314, 315, 316, 318, 319, 321, 324, 325, 327, 462, 465, 468, 469, 471, 473, 475, 476, 478, 479, 482, 488], "bf": [0, 15, 17, 34, 250, 253, 485], "df": [0, 34, 473], "hit": [0, 34, 36, 253, 254, 327, 463, 468, 485], "lpa": [0, 7, 34, 243, 253, 485], "sssp": [0, 7, 8, 9, 13, 14, 17, 18, 22, 24, 34, 208, 243, 250, 253, 254, 261, 468, 469, 477, 478, 485], "thi": [0, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 51, 52, 53, 55, 100, 124, 125, 126, 128, 173, 197, 198, 199, 202, 204, 206, 209, 212, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 253, 254, 255, 271, 284, 287, 302, 310, 311, 312, 314, 315, 316, 317, 318, 320, 322, 324, 327, 344, 358, 359, 360, 361, 362, 363, 368, 371, 373, 374, 381, 382, 383, 385, 386, 389, 390, 391, 393, 395, 401, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 421, 423, 440, 442, 445, 450, 454, 456, 457, 459, 460, 461, 462, 464, 466, 468, 469, 470, 471, 473, 474, 475, 479, 482, 483, 485], "find": [0, 4, 8, 9, 17, 22, 31, 32, 36, 37, 41, 45, 201, 209, 212, 214, 217, 224, 226, 228, 237, 241, 243, 245, 246, 250, 252, 261, 309, 327, 332, 351, 352, 381, 469, 474, 475, 482], "problem": [0, 2, 6, 9, 11, 14, 15, 24, 31, 37, 38, 209, 211, 212, 216, 228, 245, 247], "from": [0, 2, 3, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 18, 22, 23, 24, 27, 29, 30, 34, 36, 37, 38, 42, 44, 51, 53, 90, 91, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 207, 209, 212, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 261, 281, 282, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325, 326, 327, 329, 330, 341, 360, 362, 367, 369, 371, 374, 381, 384, 388, 389, 390, 391, 393, 396, 401, 402, 404, 405, 409, 410, 411, 412, 413, 414, 421, 428, 437, 449, 454, 456, 457, 461, 462, 464, 465, 468, 469, 473, 474, 476, 482, 485, 489, 490, 493, 495], "given": [0, 7, 9, 13, 14, 20, 34, 46, 202, 204, 206, 207, 212, 215, 216, 217, 223, 226, 227, 228, 235, 241, 243, 246, 247, 249, 253, 314, 316, 319, 322, 324, 326, 361, 368, 379, 391, 392, 393, 394, 395, 396, 397, 405, 413, 414, 415, 419, 420, 421, 422, 426, 454, 457, 458, 461, 462, 468, 469, 473, 474, 477, 478], "weight": [0, 7, 19, 20, 33, 46, 163, 198, 208, 223, 226, 228, 235, 243, 245, 250, 253, 282, 310, 312, 313, 314, 315, 316, 319, 322, 324, 327, 329, 330, 331, 335, 346, 347, 389, 401, 405, 409, 412, 452, 460, 461, 462, 464, 469, 494], "As": [0, 7, 12, 13, 15, 16, 18, 20, 22, 24, 27, 38, 202, 209, 216, 218, 221, 228, 234, 235, 242, 246, 310, 312, 318, 319, 320, 391, 473, 474], "result": [0, 2, 4, 6, 7, 9, 12, 14, 15, 16, 17, 18, 19, 24, 33, 37, 52, 53, 54, 55, 90, 91, 100, 116, 124, 202, 204, 212, 216, 217, 218, 220, 223, 226, 227, 228, 231, 235, 242, 243, 245, 246, 247, 252, 253, 254, 262, 268, 269, 278, 284, 286, 288, 289, 292, 293, 310, 313, 314, 316, 318, 319, 321, 324, 325, 327, 391, 393, 396, 415, 462, 473, 475, 477, 485, 489], "comput": [0, 3, 4, 6, 9, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 31, 34, 37, 200, 202, 216, 217, 226, 228, 231, 232, 235, 243, 244, 245, 246, 247, 248, 249, 252, 253, 255, 314, 315, 318, 320, 327, 408, 411, 412, 416, 421, 430, 453, 454, 466, 469, 475, 476, 485], "minimum": [0, 6, 209, 217, 221, 226, 228, 253, 381, 469], "distanc": [0, 7, 15, 17, 18, 243, 253, 327, 362, 401, 405, 409, 410, 411, 412, 413, 431, 443, 485], "ani": [0, 2, 4, 17, 19, 20, 22, 24, 27, 30, 33, 34, 36, 37, 38, 44, 45, 52, 53, 55, 125, 126, 128, 204, 206, 215, 216, 218, 224, 226, 227, 228, 241, 242, 243, 245, 246, 249, 251, 252, 254, 263, 270, 314, 325, 326, 327, 338, 342, 357, 381, 386, 388, 391, 393, 409, 411, 413, 462, 465, 468, 474, 482], "vertex": [0, 2, 3, 4, 6, 9, 12, 13, 14, 15, 16, 17, 18, 19, 22, 30, 33, 34, 45, 47, 74, 75, 90, 91, 124, 147, 148, 163, 164, 197, 208, 215, 221, 223, 224, 226, 230, 231, 232, 235, 242, 243, 244, 245, 246, 247, 250, 252, 253, 254, 255, 260, 281, 311, 312, 313, 314, 315, 316, 319, 322, 324, 326, 327, 401, 406, 423, 424, 440, 465, 467, 471, 473, 475, 476, 479, 485, 490], "other": [0, 3, 4, 6, 8, 9, 10, 12, 14, 16, 20, 23, 24, 29, 30, 33, 34, 36, 37, 46, 47, 49, 201, 202, 204, 207, 209, 212, 216, 224, 226, 228, 231, 232, 235, 237, 242, 244, 245, 246, 247, 248, 249, 253, 255, 310, 312, 314, 316, 320, 323, 324, 325, 327, 331, 362, 364, 368, 371, 381, 390, 396, 402, 411, 412, 454, 462, 464, 465, 468, 469, 473, 474, 478], "vertic": [0, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 33, 46, 47, 52, 125, 198, 202, 208, 215, 216, 218, 221, 223, 224, 226, 232, 235, 242, 243, 245, 246, 247, 252, 253, 254, 255, 283, 311, 312, 313, 314, 315, 316, 319, 322, 324, 385, 396, 406, 408, 423, 424, 435, 437, 448, 449, 455, 468, 469, 471, 473, 474, 475, 476, 485, 489, 490], "all_pairs_shortest_path_length": [0, 34], "refer": [0, 2, 4, 9, 10, 12, 16, 17, 23, 24, 30, 33, 34, 37, 41, 45, 47, 49, 199, 200, 202, 204, 207, 209, 215, 217, 218, 221, 224, 226, 228, 232, 233, 235, 245, 246, 247, 249, 253, 272, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 327, 360, 361, 372, 381, 382, 383, 384, 385, 386, 387, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 461, 462, 475, 479, 493], "tendenc": [0, 20], "similar": [0, 10, 12, 20, 37, 45, 215, 216, 224, 227, 228, 232, 235, 241, 242, 245, 249, 253, 310, 311, 312, 313, 316, 319, 324, 454, 462], "over": [0, 9, 12, 15, 16, 18, 22, 24, 33, 34, 209, 212, 226, 230, 235, 242, 244, 245, 249, 250, 253, 255, 313, 327, 349, 350, 356, 408, 462, 471, 479], "dissimilar": 0, "measur": [0, 6, 20, 216, 245, 247, 253, 311, 327, 405, 406, 439], "extent": [0, 6], "same": [0, 2, 4, 6, 10, 13, 15, 17, 20, 22, 29, 30, 37, 47, 48, 199, 216, 221, 224, 226, 228, 232, 241, 245, 246, 250, 311, 312, 316, 317, 320, 322, 324, 326, 327, 355, 356, 377, 385, 386, 391, 393, 419, 420, 422, 455, 456, 462, 469, 473, 474, 475, 476, 477], "properti": [0, 4, 6, 7, 9, 12, 15, 17, 20, 33, 45, 46, 47, 90, 91, 124, 163, 164, 197, 198, 199, 200, 207, 208, 217, 220, 223, 229, 243, 245, 246, 247, 252, 253, 254, 255, 272, 286, 300, 301, 302, 313, 316, 324, 325, 409, 424, 454, 459, 462, 465, 468, 469, 471, 475, 476, 483, 489, 490, 493], "each": [0, 6, 9, 10, 12, 13, 14, 15, 16, 19, 20, 24, 30, 34, 35, 36, 38, 41, 45, 46, 47, 51, 52, 125, 198, 215, 216, 223, 224, 226, 227, 228, 232, 234, 235, 237, 238, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 301, 310, 311, 312, 313, 314, 315, 316, 320, 321, 322, 324, 327, 336, 338, 356, 357, 362, 366, 368, 373, 379, 381, 383, 384, 385, 387, 388, 390, 391, 393, 394, 396, 401, 404, 406, 409, 410, 411, 412, 413, 416, 417, 419, 421, 422, 427, 430, 442, 447, 452, 456, 458, 459, 460, 462, 468, 469, 471, 473, 474, 475, 476, 479, 483], "attribute_assort": [0, 34], "nearest": [0, 253], "neighbor": [0, 6, 9, 13, 14, 17, 18, 208, 223, 226, 228, 232, 235, 239, 245, 246, 247, 253, 255, 310, 311, 313, 314, 316, 318, 319, 320, 322, 323, 327, 332, 333, 352, 404, 405, 419, 422, 455, 462, 471, 474, 485], "return": [0, 6, 9, 15, 18, 20, 51, 87, 107, 124, 160, 180, 197, 198, 208, 216, 218, 219, 220, 221, 223, 226, 227, 228, 235, 237, 239, 240, 243, 246, 253, 254, 255, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 303, 304, 305, 309, 310, 312, 313, 314, 315, 316, 319, 320, 321, 322, 324, 325, 326, 327, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 464, 468, 469, 471, 474, 485, 494], "success": [0, 13, 22, 52, 53, 54, 55, 93, 116, 125, 126, 127, 128, 189, 198, 257, 312, 396, 427], "0": [0, 9, 10, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 27, 28, 29, 30, 31, 33, 35, 44, 46, 48, 124, 163, 197, 198, 209, 212, 215, 217, 218, 222, 226, 228, 232, 234, 235, 237, 238, 239, 240, 241, 243, 250, 252, 253, 254, 255, 269, 310, 311, 312, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 327, 329, 330, 331, 333, 337, 338, 341, 342, 346, 356, 360, 361, 363, 364, 365, 366, 368, 371, 373, 374, 376, 377, 378, 380, 381, 384, 385, 386, 387, 389, 390, 391, 393, 394, 397, 400, 402, 409, 410, 411, 412, 413, 419, 420, 424, 427, 440, 445, 454, 456, 457, 462, 464, 465, 469, 471, 474, 475, 476, 477, 483, 485, 487, 488, 489, 490, 492, 493, 494, 495], "1": [0, 6, 7, 9, 10, 13, 14, 15, 17, 19, 20, 22, 23, 24, 28, 30, 31, 33, 34, 35, 37, 44, 46, 47, 48, 90, 91, 124, 163, 164, 197, 198, 207, 212, 215, 216, 217, 218, 222, 223, 224, 226, 228, 232, 234, 235, 237, 238, 239, 240, 241, 243, 246, 247, 250, 253, 254, 310, 313, 315, 316, 317, 319, 324, 325, 326, 327, 329, 330, 331, 333, 337, 338, 341, 346, 347, 350, 355, 356, 360, 362, 363, 364, 365, 366, 368, 372, 373, 374, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 462, 464, 465, 469, 474, 475, 476, 477, 483, 485, 489, 490, 492, 493, 494, 495], "2": [0, 6, 9, 10, 13, 14, 17, 18, 19, 20, 22, 23, 28, 31, 33, 34, 37, 44, 46, 47, 48, 124, 163, 164, 198, 207, 215, 216, 217, 218, 222, 223, 226, 228, 232, 234, 235, 237, 238, 239, 240, 241, 243, 246, 247, 250, 253, 254, 310, 313, 314, 315, 316, 317, 319, 324, 327, 329, 330, 331, 333, 341, 342, 346, 347, 350, 355, 356, 363, 364, 365, 368, 373, 374, 379, 381, 383, 385, 387, 388, 389, 391, 392, 393, 395, 396, 397, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 420, 421, 422, 423, 424, 429, 431, 433, 434, 435, 439, 440, 442, 444, 445, 447, 454, 455, 456, 457, 462, 464, 465, 469, 473, 474, 476, 477, 485, 486, 487, 489, 490, 493, 494, 495], "average_degree_connect": [0, 253, 485], "source_degree_typ": 0, "target_degree_typ": 0, "paramet": [0, 2, 6, 9, 15, 16, 17, 30, 44, 48, 51, 87, 107, 124, 160, 180, 197, 200, 202, 204, 209, 216, 221, 226, 227, 228, 235, 240, 243, 247, 252, 253, 254, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 299, 302, 309, 311, 312, 314, 316, 319, 322, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 336, 338, 340, 341, 342, 344, 345, 346, 347, 351, 352, 356, 357, 360, 362, 364, 365, 367, 368, 369, 371, 372, 374, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 469, 473, 474, 475, 482], "str": [0, 20, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 182, 184, 185, 187, 188, 192, 193, 194, 195, 196, 237, 238, 239, 241, 253, 254, 255, 261, 262, 268, 269, 270, 272, 279, 280, 281, 284, 286, 287, 288, 289, 292, 293, 322, 324, 325, 340, 342, 456, 462, 464, 468, 469, 475, 490, 495], "target": [0, 6, 17, 22, 24, 124, 198, 217, 226, 232, 233, 242, 243, 247, 249, 253, 255, 316, 318, 324, 327, 398, 400, 419, 422, 454, 475, 485], "base": [0, 4, 6, 9, 11, 12, 13, 14, 18, 32, 34, 44, 46, 47, 49, 202, 212, 215, 216, 217, 220, 224, 226, 228, 231, 235, 242, 243, 244, 245, 246, 247, 250, 252, 253, 254, 276, 282, 310, 312, 314, 316, 317, 318, 327, 398, 437, 452, 462, 474, 475, 479, 485, 494], "v": [0, 2, 6, 7, 9, 10, 13, 14, 15, 18, 20, 22, 24, 33, 37, 208, 212, 218, 221, 224, 227, 228, 235, 243, 246, 247, 252, 253, 254, 255, 310, 313, 314, 315, 316, 319, 322, 324, 325, 326, 327, 333, 356, 381, 384, 389, 391, 395, 401, 404, 409, 412, 419, 422, 424, 456, 462, 468, 469, 473, 474, 475, 485, 489, 493, 494], "sum": [0, 20, 221, 224, 239, 245, 253, 255, 327, 381, 386, 389, 391, 392, 393, 402, 409, 412, 413, 420, 421, 460, 462, 493], "fraction": [0, 253, 327, 381], "pass": [0, 2, 6, 9, 10, 14, 15, 16, 18, 20, 24, 27, 37, 44, 100, 173, 202, 204, 216, 218, 220, 226, 228, 235, 241, 246, 247, 253, 255, 260, 316, 320, 322, 371, 409, 411, 454, 462, 466, 475, 485, 490, 495], "through": [0, 2, 4, 6, 12, 13, 14, 15, 16, 19, 22, 24, 27, 32, 34, 37, 38, 42, 45, 199, 214, 215, 216, 218, 219, 220, 222, 223, 226, 227, 228, 229, 232, 235, 241, 243, 245, 246, 247, 249, 254, 257, 311, 312, 314, 315, 316, 321, 322, 324, 327, 357, 371, 388, 427, 462, 473, 474, 475], "betweenness_centr": [0, 34, 327], "normal": [0, 6, 27, 209, 228, 253, 316, 324, 327, 384, 474], "endpoint": [0, 9, 10, 27, 28, 29, 44, 48, 52, 53, 55, 91, 124, 125, 126, 128, 164, 197, 198, 199, 202, 215, 217, 219, 222, 226, 227, 237, 241, 243, 252, 316, 325, 327, 469, 471, 475, 482, 485, 493, 495], "bool": [0, 6, 14, 15, 20, 82, 96, 131, 160, 180, 208, 221, 241, 252, 253, 255, 299, 307, 324, 327, 334, 344, 346, 347, 356, 385, 395, 401, 405, 421, 462, 464, 469, 474, 495], "whether": [0, 37, 44, 46, 204, 215, 216, 223, 226, 228, 241, 242, 246, 252, 253, 311, 312, 316, 324, 384, 386, 389, 409, 420, 421, 462, 473, 474, 475, 476], "should": [0, 6, 9, 13, 16, 19, 20, 22, 23, 27, 28, 30, 33, 37, 46, 51, 199, 215, 216, 218, 220, 224, 226, 228, 241, 242, 243, 247, 252, 253, 261, 264, 277, 286, 320, 321, 324, 326, 327, 357, 381, 409, 410, 411, 412, 462, 464, 469, 471, 474, 475, 476, 477], "includ": [0, 3, 4, 6, 7, 9, 12, 16, 17, 20, 22, 24, 27, 30, 35, 36, 37, 42, 45, 46, 47, 52, 125, 198, 202, 204, 206, 212, 214, 216, 217, 221, 222, 223, 228, 231, 232, 233, 234, 238, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 312, 313, 316, 318, 324, 327, 342, 381, 389, 395, 405, 454, 461, 462, 473, 474, 475, 482, 483], "count": [0, 6, 33, 51, 122, 123, 124, 195, 196, 197, 198, 216, 218, 221, 223, 224, 227, 228, 235, 243, 245, 252, 253, 314, 315, 319, 320, 323, 327, 337, 395, 462, 475, 489, 493], "an": [0, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 27, 29, 30, 31, 32, 34, 37, 41, 44, 45, 46, 47, 49, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 202, 204, 206, 207, 209, 212, 215, 216, 217, 218, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 257, 261, 264, 265, 266, 267, 268, 269, 271, 272, 274, 277, 279, 280, 281, 282, 283, 284, 287, 288, 289, 292, 293, 294, 296, 297, 305, 310, 311, 312, 314, 315, 316, 318, 319, 321, 322, 324, 326, 327, 338, 339, 344, 349, 350, 356, 357, 359, 360, 361, 363, 366, 367, 368, 369, 371, 372, 374, 376, 377, 380, 382, 383, 391, 393, 394, 395, 397, 398, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 418, 419, 420, 421, 422, 423, 427, 429, 435, 440, 444, 447, 448, 452, 454, 455, 456, 457, 459, 460, 462, 465, 466, 468, 469, 471, 473, 474, 475, 476, 477, 478, 479, 482], "travers": [0, 6, 13, 15, 17, 199, 200, 202, 215, 216, 221, 224, 227, 232, 242, 243, 244, 245, 310, 313, 316, 318, 322, 325, 456, 462, 471, 474, 475, 476, 485, 493], "It": [0, 2, 4, 6, 9, 10, 11, 12, 13, 15, 16, 24, 27, 29, 34, 37, 41, 42, 45, 46, 47, 51, 202, 209, 212, 215, 216, 218, 220, 221, 224, 226, 227, 228, 231, 232, 238, 241, 243, 244, 245, 246, 247, 248, 249, 252, 253, 257, 303, 310, 311, 312, 316, 318, 320, 324, 325, 327, 331, 386, 390, 414, 415, 419, 422, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 443, 446, 448, 449, 454, 462, 469, 473, 474, 475, 476, 482, 483], "start": [0, 2, 4, 6, 9, 16, 19, 20, 27, 28, 29, 31, 32, 37, 39, 44, 47, 49, 55, 128, 202, 204, 206, 207, 214, 215, 219, 220, 221, 226, 227, 235, 237, 239, 240, 241, 246, 248, 251, 252, 254, 310, 314, 316, 325, 326, 327, 362, 387, 391, 393, 394, 397, 413, 427, 456, 464, 469, 474, 475, 479, 492], "root": [0, 4, 27, 32, 36, 44, 205, 209, 241, 244, 362, 364, 455, 456, 473], "explor": [0, 17, 45, 46, 201, 207, 212, 217, 226, 228, 242, 243, 246, 474], "present": [0, 2, 20, 27, 46, 206, 223, 226, 228, 235, 236, 237, 238, 239, 240, 242, 243, 245, 257, 327, 338, 381, 462, 473, 474], "prior": [0, 12, 34, 45, 226, 228, 231, 242], "move": [0, 4, 6, 45, 202, 220, 244, 316, 419, 422], "next": [0, 6, 9, 12, 14, 16, 24, 29, 30, 33, 34, 201, 227, 228, 232, 235, 236, 241, 242, 247, 310, 311, 314, 316, 318, 320, 321, 322, 388, 456, 468, 471, 474, 475, 477], "level": [0, 6, 12, 38, 44, 202, 212, 216, 242, 244, 247, 253, 318, 372, 419, 420, 459, 474, 475], "int": [0, 14, 15, 16, 17, 18, 19, 20, 23, 24, 33, 134, 149, 152, 154, 156, 157, 159, 160, 161, 162, 166, 178, 191, 195, 196, 208, 223, 224, 237, 239, 241, 252, 253, 254, 255, 287, 311, 312, 313, 314, 315, 316, 319, 322, 323, 324, 326, 327, 355, 360, 362, 364, 367, 369, 371, 372, 374, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 397, 398, 399, 400, 401, 403, 404, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 423, 424, 425, 426, 457, 462, 464, 469, 471, 475, 485, 493, 495], "evalu": [0, 6, 14, 15, 16, 18, 37, 231, 243, 244, 247, 250, 252, 253, 254, 265, 288, 297, 299, 303, 305, 324, 469, 479, 493], "also": [0, 1, 2, 4, 6, 9, 10, 12, 16, 17, 19, 20, 22, 23, 27, 29, 30, 32, 34, 36, 37, 38, 45, 47, 48, 49, 198, 200, 202, 206, 209, 212, 215, 216, 220, 224, 226, 228, 231, 234, 236, 237, 242, 243, 244, 245, 247, 249, 250, 252, 253, 255, 257, 310, 311, 312, 314, 317, 318, 319, 322, 324, 325, 327, 362, 381, 406, 408, 409, 413, 432, 437, 442, 454, 456, 460, 462, 465, 468, 469, 471, 473, 474, 475, 478, 479, 485], "known": [0, 6, 8, 9, 24, 32, 215, 218, 220, 221, 228, 245, 246, 253, 344, 362, 365, 414, 415, 432, 456, 477], "see": [0, 2, 4, 13, 19, 20, 27, 29, 30, 36, 37, 38, 46, 125, 126, 127, 128, 163, 164, 173, 189, 198, 199, 202, 209, 215, 218, 220, 224, 227, 228, 231, 241, 248, 253, 254, 257, 303, 305, 311, 312, 314, 319, 322, 324, 360, 370, 375, 381, 384, 385, 386, 387, 389, 391, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 409, 410, 411, 412, 413, 416, 417, 418, 419, 422, 427, 454, 457, 459, 462, 464, 468, 469, 473, 474, 475, 478], "max_round": [0, 253, 473, 485], "10": [0, 13, 15, 16, 17, 20, 27, 31, 47, 209, 211, 212, 216, 219, 224, 226, 228, 234, 235, 237, 238, 239, 240, 243, 250, 253, 311, 312, 313, 315, 316, 322, 324, 327, 329, 330, 331, 365, 371, 381, 384, 386, 395, 396, 397, 398, 400, 404, 409, 413, 417, 433, 439, 444, 457, 462, 469, 473, 475, 483, 485, 489, 493], "maximum": [0, 47, 215, 221, 226, 228, 245, 253, 313, 327, 381, 397, 412, 413, 414, 415, 420, 461, 475], "round": [0, 9, 14, 17, 24, 253, 255, 379, 389], "default": [0, 6, 13, 15, 20, 23, 28, 29, 30, 32, 36, 41, 44, 46, 47, 48, 51, 125, 126, 127, 128, 163, 164, 173, 189, 198, 199, 202, 204, 206, 209, 212, 215, 217, 218, 224, 226, 228, 234, 237, 239, 241, 250, 252, 253, 254, 255, 272, 281, 303, 304, 307, 311, 312, 316, 323, 324, 326, 327, 329, 330, 331, 334, 356, 358, 359, 362, 364, 365, 367, 369, 371, 372, 374, 376, 377, 380, 381, 384, 385, 386, 387, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 454, 455, 457, 459, 460, 462, 464, 465, 469, 471, 473, 475, 482, 483, 495], "origin": [0, 4, 6, 9, 12, 13, 22, 45, 216, 223, 224, 226, 232, 237, 238, 247, 252, 254, 281, 310, 312, 324, 325, 381, 403, 409, 448, 456, 460, 462, 468, 469, 475, 476], "reciproc": [0, 327], "n": [0, 19, 20, 30, 33, 38, 44, 46, 51, 125, 126, 127, 128, 163, 164, 173, 189, 197, 198, 204, 206, 216, 218, 219, 221, 226, 228, 231, 235, 243, 247, 250, 253, 254, 314, 316, 319, 321, 327, 337, 341, 342, 344, 348, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 379, 380, 381, 383, 384, 385, 390, 391, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 427, 440, 455, 456, 457, 459, 462], "reachabl": [0, 327], "node": [0, 4, 10, 13, 15, 18, 27, 30, 33, 47, 51, 198, 209, 212, 221, 222, 234, 235, 236, 242, 243, 245, 247, 249, 251, 253, 254, 255, 275, 278, 283, 286, 287, 305, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 344, 348, 350, 352, 354, 355, 356, 357, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 474, 476, 485, 488, 489, 494], "wasserman": 0, "faust": 0, "propos": [0, 3, 6, 12, 14, 24, 34, 231, 242, 244, 245, 247, 249, 314, 320, 471, 474], "improv": [0, 6, 9, 17, 19, 23, 202, 224, 244, 247, 248, 249, 478], "formula": 0, "more": [0, 2, 3, 4, 6, 7, 9, 12, 13, 14, 15, 16, 17, 20, 27, 29, 30, 32, 34, 36, 37, 38, 41, 47, 51, 124, 197, 198, 199, 202, 204, 209, 212, 216, 217, 218, 220, 223, 224, 226, 228, 231, 232, 233, 234, 235, 241, 242, 244, 245, 246, 247, 248, 249, 252, 253, 254, 257, 310, 311, 314, 315, 316, 320, 321, 324, 327, 360, 401, 408, 409, 423, 424, 456, 462, 464, 469, 473, 474, 475, 478, 479, 482], "than": [0, 13, 15, 18, 23, 24, 29, 30, 33, 37, 202, 209, 215, 216, 221, 226, 228, 230, 235, 241, 242, 245, 246, 248, 249, 253, 312, 314, 316, 323, 327, 337, 371, 379, 381, 383, 388, 390, 401, 403, 412, 469, 474, 475, 478, 479], "one": [0, 2, 6, 9, 10, 12, 13, 14, 15, 19, 20, 22, 24, 29, 30, 36, 37, 41, 47, 51, 198, 202, 209, 212, 214, 215, 216, 221, 224, 226, 228, 232, 235, 241, 243, 246, 247, 249, 252, 253, 255, 261, 262, 302, 310, 311, 312, 313, 314, 316, 320, 324, 327, 336, 360, 361, 364, 365, 368, 377, 378, 381, 390, 391, 396, 398, 399, 400, 401, 402, 404, 419, 422, 430, 433, 437, 440, 446, 447, 448, 454, 456, 458, 462, 468, 469, 471, 473, 474, 475, 478, 489, 493], "compon": [0, 4, 6, 12, 19, 29, 32, 34, 38, 41, 47, 209, 218, 223, 242, 244, 245, 246, 252, 253, 327, 395, 409, 468, 474, 475], "ratio": [0, 13, 228, 454], "actor": [0, 198, 204, 228, 242, 439], "group": [0, 2, 202, 209, 216, 239, 241, 243, 245, 246, 252, 318, 324, 385, 386, 387, 389, 406, 434, 452, 473, 475, 493, 495], "who": [0, 11, 29, 202, 228, 242, 246, 317, 322, 475], "closeness_centr": [0, 34], "wf": 0, "quantifi": 0, "how": [0, 2, 4, 8, 9, 12, 13, 14, 16, 20, 27, 30, 33, 34, 36, 38, 46, 47, 199, 202, 204, 206, 209, 211, 212, 214, 215, 217, 220, 223, 225, 226, 227, 228, 229, 230, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 251, 254, 257, 265, 311, 312, 316, 318, 469, 470, 473, 474, 475, 476, 478, 479, 489], "its": [0, 4, 6, 7, 9, 10, 12, 13, 14, 18, 24, 30, 31, 34, 44, 45, 46, 124, 197, 202, 204, 206, 212, 220, 223, 224, 226, 228, 232, 234, 235, 238, 241, 242, 243, 245, 246, 247, 253, 254, 255, 302, 310, 312, 316, 320, 322, 324, 327, 369, 372, 379, 381, 401, 406, 419, 422, 430, 449, 459, 469, 474, 475, 477], "being": [0, 47, 224, 235, 246, 324, 361, 391, 471, 474, 475, 476], "cliqu": [0, 6, 228, 242, 245, 382, 383, 387, 388, 390, 404], "complet": [0, 14, 31, 33, 34, 198, 216, 220, 224, 228, 241, 244, 310, 312, 316, 337, 362, 363, 365, 367, 368, 374, 379, 388, 419, 422, 446, 462, 475], "have": [0, 2, 4, 6, 8, 9, 11, 12, 13, 15, 19, 20, 23, 24, 27, 29, 30, 31, 32, 33, 36, 37, 38, 41, 44, 45, 47, 201, 209, 212, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 228, 230, 231, 233, 235, 241, 242, 243, 245, 246, 247, 249, 253, 254, 257, 261, 310, 311, 312, 313, 314, 316, 317, 319, 320, 322, 324, 327, 337, 341, 344, 356, 362, 367, 372, 381, 391, 392, 393, 395, 401, 404, 419, 420, 422, 438, 442, 456, 462, 468, 469, 473, 474, 475, 477, 479, 482, 483, 489], "edg": [0, 6, 7, 9, 12, 13, 15, 17, 18, 19, 22, 24, 30, 33, 37, 45, 47, 52, 77, 90, 124, 125, 150, 163, 197, 198, 202, 208, 215, 216, 220, 221, 223, 224, 226, 232, 234, 235, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 252, 253, 254, 255, 266, 267, 270, 275, 282, 286, 287, 305, 310, 311, 312, 313, 314, 315, 316, 318, 319, 322, 323, 324, 325, 326, 327, 329, 330, 331, 334, 337, 338, 340, 341, 342, 344, 346, 347, 350, 351, 353, 355, 356, 357, 361, 363, 364, 365, 366, 367, 368, 371, 373, 374, 375, 378, 379, 381, 383, 386, 387, 389, 391, 392, 393, 395, 397, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 419, 420, 421, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 448, 449, 452, 456, 459, 460, 461, 462, 463, 465, 468, 469, 471, 473, 475, 476, 477, 485, 489, 490, 494], "u": [0, 6, 14, 16, 18, 20, 37, 208, 209, 224, 228, 241, 243, 253, 316, 320, 322, 324, 327, 333, 356, 368, 381, 395, 401, 404, 409, 412, 424, 462, 474, 485, 495], "equal": [0, 10, 209, 221, 226, 228, 234, 238, 241, 243, 327, 379, 381, 412, 417, 455, 489], "degree_assortativity_coeffici": [0, 253, 485], "hold": [0, 10, 20, 48, 226, 252, 253, 254, 255, 281, 289, 312, 324, 327, 462, 468], "numer": [0, 20, 221, 226, 242, 244, 245, 253, 254, 327, 462, 468, 474], "valu": [0, 6, 9, 13, 15, 18, 20, 24, 29, 36, 44, 46, 47, 51, 57, 58, 67, 82, 84, 87, 90, 91, 93, 96, 97, 102, 103, 107, 113, 119, 163, 164, 168, 186, 192, 208, 209, 215, 216, 218, 221, 232, 237, 239, 241, 245, 247, 252, 253, 254, 255, 288, 297, 309, 310, 312, 313, 314, 315, 316, 319, 321, 322, 323, 324, 326, 327, 336, 356, 371, 381, 409, 410, 411, 412, 419, 421, 422, 454, 455, 456, 462, 464, 465, 468, 469, 471, 473, 474, 475, 476, 485, 493, 494, 495], "If": [0, 2, 4, 6, 7, 8, 13, 14, 15, 17, 20, 23, 27, 29, 30, 32, 33, 36, 37, 44, 45, 46, 47, 48, 198, 199, 201, 204, 206, 209, 215, 217, 218, 220, 226, 228, 234, 241, 243, 249, 253, 254, 257, 309, 311, 312, 316, 317, 320, 321, 323, 324, 325, 326, 327, 332, 333, 335, 342, 346, 347, 356, 357, 362, 363, 364, 365, 367, 368, 369, 371, 372, 374, 376, 377, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 419, 422, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 454, 457, 458, 460, 462, 464, 465, 468, 469, 471, 474, 475, 476, 482, 483], "fals": [0, 13, 15, 17, 18, 19, 20, 44, 46, 48, 202, 215, 220, 226, 239, 240, 241, 252, 253, 255, 303, 310, 311, 312, 316, 322, 324, 326, 327, 340, 344, 346, 347, 356, 358, 359, 384, 385, 386, 389, 395, 405, 420, 462, 465, 469, 473, 475, 485, 494], "ha": [0, 2, 4, 6, 8, 9, 10, 12, 13, 14, 15, 17, 23, 28, 29, 31, 34, 37, 41, 44, 45, 47, 198, 202, 209, 212, 216, 217, 218, 220, 221, 223, 224, 225, 228, 232, 235, 236, 237, 241, 242, 243, 244, 246, 247, 248, 249, 252, 253, 254, 255, 257, 302, 310, 311, 312, 313, 314, 316, 319, 320, 321, 322, 324, 325, 327, 344, 346, 347, 350, 355, 356, 362, 377, 379, 381, 392, 396, 401, 409, 410, 411, 412, 413, 419, 422, 428, 429, 433, 434, 438, 444, 446, 449, 452, 454, 456, 460, 462, 466, 468, 469, 475, 477, 479, 489, 490, 493], "adjac": [0, 10, 16, 20, 24, 226, 228, 247, 253, 313, 318, 327, 350, 383, 407, 425, 440, 454, 455, 462, 463, 474], "direct": [0, 9, 10, 15, 45, 47, 215, 228, 232, 235, 238, 241, 243, 244, 247, 252, 253, 273, 303, 310, 312, 316, 319, 322, 324, 327, 332, 337, 343, 358, 369, 382, 383, 384, 385, 386, 389, 393, 394, 396, 405, 406, 407, 408, 419, 420, 429, 456, 460, 462, 463, 465, 469, 473, 474, 476, 490, 494, 495], "three": [0, 6, 10, 12, 14, 18, 30, 34, 38, 41, 45, 47, 228, 241, 242, 244, 249, 250, 257, 311, 314, 315, 316, 319, 320, 321, 322, 327, 356, 361, 368, 444, 449, 458, 462, 475, 479], "separ": [0, 6, 17, 30, 36, 204, 215, 217, 228, 242, 249, 311, 312, 409, 464, 474, 475], "defin": [0, 4, 6, 10, 12, 13, 18, 20, 24, 27, 45, 46, 47, 52, 53, 54, 55, 90, 91, 125, 126, 127, 128, 163, 164, 173, 189, 199, 202, 204, 209, 215, 220, 223, 224, 226, 228, 231, 234, 237, 241, 242, 243, 244, 246, 252, 253, 257, 272, 310, 311, 314, 316, 319, 321, 322, 327, 364, 386, 388, 411, 468, 469, 473, 474, 475, 489], "name": [0, 2, 4, 6, 12, 16, 17, 20, 22, 23, 27, 28, 29, 30, 32, 33, 37, 38, 41, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 204, 206, 209, 215, 216, 217, 220, 221, 223, 224, 226, 228, 239, 240, 241, 242, 244, 246, 252, 253, 254, 255, 261, 297, 311, 313, 316, 318, 320, 322, 324, 325, 327, 346, 347, 361, 428, 435, 440, 452, 458, 462, 464, 465, 468, 469, 473, 474, 475, 483, 485, 486, 488, 493, 495], "both": [0, 2, 10, 12, 13, 18, 19, 20, 32, 34, 46, 47, 199, 204, 215, 218, 223, 224, 232, 238, 241, 242, 243, 244, 245, 246, 247, 253, 255, 310, 311, 312, 324, 325, 326, 341, 350, 355, 356, 361, 381, 405, 408, 413, 419, 422, 469, 471, 473, 474, 475, 477, 478, 492, 493], "degree_centr": [0, 34, 212, 253, 327, 463, 485], "centrality_typ": [0, 253], "appli": [0, 6, 9, 10, 12, 13, 24, 27, 33, 44, 48, 199, 215, 216, 223, 226, 230, 232, 242, 243, 245, 249, 404, 411, 427, 454, 471, 474, 475, 477, 479], "far": [0, 242, 311], "possibl": [0, 4, 6, 15, 46, 202, 207, 209, 216, 232, 246, 247, 253, 312, 318, 319, 327, 395, 403, 404, 419, 420, 421, 422, 454, 458, 474], "along": [0, 6, 10, 20, 24, 31, 206, 224, 226, 232, 255, 312, 316, 322, 456, 462, 475, 476], "branch": [0, 221, 228, 316, 362, 372, 493], "befor": [0, 4, 17, 22, 23, 27, 29, 30, 37, 44, 45, 47, 199, 206, 220, 226, 228, 235, 237, 252, 253, 257, 310, 316, 323, 362, 364, 365, 367, 369, 372, 374, 376, 377, 380, 391, 393, 394, 396, 398, 399, 400, 406, 407, 408, 414, 415, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 457, 464, 469, 471, 474, 475, 477], "backtrack": 0, "influenc": [0, 27, 327], "relationship": [0, 47, 202, 209, 216, 221, 222, 223, 228, 232, 235, 242, 245, 246, 247, 311, 312, 322, 474, 475], "high": [0, 6, 9, 202, 207, 212, 216, 223, 228, 241, 244, 245, 247, 248, 249, 250, 318, 396, 427, 469, 471], "score": [0, 228, 247], "contribut": [0, 4, 214, 474], "low": [0, 6, 7, 13, 32, 216, 234, 242, 243, 247, 248, 249, 454, 475], "A": [0, 6, 7, 9, 10, 24, 27, 28, 29, 37, 44, 46, 47, 198, 200, 207, 212, 217, 219, 221, 227, 228, 232, 234, 241, 242, 244, 245, 246, 247, 250, 252, 253, 254, 255, 262, 263, 265, 266, 267, 270, 273, 275, 282, 283, 287, 288, 297, 314, 315, 316, 319, 321, 324, 325, 326, 327, 329, 330, 331, 333, 334, 336, 338, 340, 341, 342, 344, 345, 346, 347, 350, 355, 356, 357, 360, 361, 362, 364, 365, 367, 371, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 397, 401, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 428, 430, 439, 450, 454, 455, 456, 457, 459, 460, 462, 464, 469, 473, 474, 475, 476, 477], "mean": [0, 2, 20, 29, 30, 36, 37, 44, 47, 202, 215, 216, 224, 237, 252, 254, 260, 299, 312, 315, 316, 326, 327, 367, 384, 391, 401, 410, 411, 412, 462, 465, 468, 469, 471, 473, 474, 475, 477, 482], "themselv": [0, 216, 228, 232, 456], "eigenvector_centr": [0, 34, 253, 327, 463, 485], "toler": [0, 253, 327, 381], "doubl": [0, 9, 14, 16, 18, 33, 46, 82, 96, 208, 221, 223, 224, 226, 241, 250, 255, 311, 321, 432, 456, 473, 477, 485, 493, 495], "error": [0, 2, 32, 36, 37, 38, 44, 49, 52, 54, 55, 90, 91, 100, 116, 125, 127, 128, 163, 164, 173, 189, 209, 214, 216, 218, 223, 252, 253, 316, 320, 327, 361, 462, 475], "check": [0, 6, 12, 17, 27, 29, 30, 32, 33, 34, 35, 37, 38, 46, 48, 202, 206, 209, 215, 216, 220, 223, 226, 228, 235, 237, 245, 246, 253, 320, 324, 327, 420, 421, 462, 469, 474, 475, 483, 488, 489], "converg": [0, 6, 9, 14, 17, 24, 247, 250, 253, 327], "number": [0, 8, 9, 13, 19, 20, 24, 28, 30, 33, 38, 44, 47, 52, 125, 212, 215, 217, 218, 225, 226, 228, 232, 236, 237, 239, 243, 245, 247, 250, 252, 253, 255, 312, 313, 314, 315, 316, 319, 323, 327, 337, 342, 344, 353, 354, 355, 360, 361, 363, 365, 368, 372, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 426, 427, 435, 440, 445, 452, 454, 455, 457, 459, 460, 461, 462, 469, 471, 474, 475, 476, 483, 489, 493], "iter": [0, 6, 9, 14, 16, 17, 19, 20, 24, 226, 227, 232, 234, 235, 237, 238, 241, 242, 243, 244, 245, 247, 248, 253, 255, 310, 313, 322, 326, 327, 329, 330, 331, 332, 333, 338, 349, 350, 351, 352, 356, 357, 367, 368, 369, 371, 374, 376, 377, 380, 381, 409, 410, 411, 412, 413, 419, 422, 424, 456, 462, 485, 489, 494], "import": [0, 2, 4, 7, 10, 15, 16, 17, 18, 19, 20, 22, 27, 29, 30, 33, 36, 37, 38, 52, 53, 54, 55, 90, 91, 100, 116, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 206, 207, 212, 214, 216, 218, 219, 220, 226, 227, 228, 230, 232, 234, 235, 237, 238, 240, 241, 243, 245, 247, 253, 254, 303, 305, 310, 311, 312, 314, 317, 319, 321, 322, 323, 324, 327, 381, 409, 410, 411, 412, 462, 469, 473, 477, 479, 483, 485, 486, 487, 489, 490, 493, 494, 495], "rate": [0, 45, 202, 207, 242, 248, 253, 409, 411, 412], "two": [0, 2, 6, 9, 13, 16, 17, 18, 19, 29, 37, 47, 202, 203, 209, 212, 215, 216, 220, 221, 223, 224, 226, 228, 232, 233, 241, 243, 245, 246, 247, 249, 250, 310, 311, 312, 313, 314, 316, 318, 320, 322, 324, 327, 333, 356, 363, 364, 366, 368, 369, 373, 390, 401, 402, 409, 410, 411, 412, 413, 417, 419, 422, 423, 428, 429, 437, 455, 456, 461, 462, 473, 474, 475, 482, 489], "hub": [0, 29, 253, 254, 327, 380, 468], "author": [0, 27, 49, 238, 243, 253, 327, 381, 469, 489], "estim": [0, 216, 223, 228, 245, 246, 322, 327], "within": [0, 13, 30, 36, 44, 46, 47, 51, 202, 204, 206, 207, 220, 221, 223, 224, 226, 227, 228, 233, 242, 243, 244, 245, 246, 247, 316, 325, 327, 381, 384, 385, 405, 411, 412, 469, 474, 483, 489, 493], "we": [0, 2, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 34, 35, 36, 37, 41, 44, 45, 46, 47, 48, 51, 124, 197, 198, 199, 201, 202, 204, 209, 212, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 254, 257, 261, 263, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 324, 325, 365, 379, 381, 391, 393, 419, 440, 462, 465, 468, 469, 473, 474, 475, 477, 479, 489, 495], "need": [0, 2, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 27, 29, 30, 31, 32, 33, 34, 36, 37, 41, 44, 45, 46, 47, 48, 51, 52, 53, 55, 125, 126, 128, 202, 209, 212, 215, 216, 220, 228, 231, 232, 233, 234, 237, 241, 242, 243, 244, 246, 247, 249, 252, 253, 257, 310, 311, 312, 314, 316, 319, 320, 321, 323, 324, 396, 409, 414, 420, 440, 456, 462, 465, 471, 474, 475, 477, 478, 479, 485], "rel": [0, 27, 44, 46, 52, 53, 54, 55, 90, 91, 100, 116, 124, 125, 126, 127, 128, 163, 164, 173, 189, 197, 216, 217, 232, 241, 247, 312, 316, 327, 475], "immedi": [0, 6, 202, 216, 248, 253, 255, 316, 327, 465, 469, 475], "under": [0, 9, 10, 14, 17, 24, 38, 47, 202, 204, 223, 228, 234, 241, 242, 253, 257, 316, 318, 319, 327, 474], "consider": [0, 223, 224, 241, 327, 384], "katz_centr": [0, 34, 253, 327, 463, 485], "alpha": [0, 228, 253, 327, 401, 402, 413, 454], "beta": [0, 253, 327, 402, 413], "attenu": [0, 327], "factor": [0, 13, 217, 228, 253, 327, 362, 372, 394, 396, 474], "neighborhood": [0, 6, 242, 244, 247, 253, 316, 320, 327, 405], "maxim": [0, 6, 327, 415, 461], "subgraph": [0, 6, 9, 17, 33, 228, 229, 231, 243, 244, 245, 253, 275, 281, 310, 316, 318, 324, 325, 327, 338, 341, 363, 374, 405, 462, 473, 489, 493], "contain": [0, 2, 4, 6, 8, 17, 20, 23, 27, 32, 37, 38, 45, 46, 199, 201, 204, 209, 212, 215, 216, 221, 223, 225, 226, 228, 232, 235, 236, 239, 241, 242, 243, 245, 247, 249, 250, 252, 255, 257, 310, 311, 314, 316, 319, 320, 321, 322, 324, 327, 329, 330, 331, 338, 341, 342, 357, 367, 368, 369, 371, 374, 389, 414, 415, 419, 420, 462, 465, 466, 469, 473, 474, 475, 483, 487, 493], "found": [0, 4, 9, 16, 17, 18, 36, 52, 54, 90, 91, 125, 127, 163, 164, 198, 209, 215, 227, 228, 232, 233, 244, 250, 303, 323, 381, 423, 424, 460, 462, 469, 473, 474, 475, 479], "recurs": [0, 6, 316, 364], "prune": 0, "less": [0, 2, 6, 13, 17, 27, 215, 220, 221, 226, 241, 253, 316, 323, 327, 379, 390, 401, 403, 475], "kkore": [0, 34], "order": [0, 6, 34, 46, 202, 216, 221, 223, 231, 244, 246, 247, 253, 254, 311, 316, 322, 327, 329, 330, 336, 360, 361, 364, 369, 376, 389, 390, 393, 425, 426, 429, 454, 455, 462, 468, 471, 475, 493], "That": [0, 27, 253, 321, 379, 422, 465, 477], "kshell": [0, 34], "fast": [0, 9, 20, 216, 253, 320], "where": [0, 2, 6, 12, 13, 14, 18, 24, 37, 38, 41, 44, 47, 48, 198, 209, 220, 221, 223, 224, 231, 232, 241, 242, 243, 246, 247, 249, 253, 297, 311, 312, 314, 316, 320, 327, 337, 344, 362, 391, 395, 397, 406, 409, 410, 411, 412, 440, 462, 469, 474, 475, 482, 489, 493], "assign": [0, 7, 9, 15, 18, 20, 36, 37, 215, 224, 233, 241, 243, 245, 247, 252, 253, 255, 327, 381, 389, 391, 393, 395, 409, 412, 417, 462, 465, 468, 471, 474, 475, 495], "unlabel": 0, "dure": [0, 6, 9, 13, 24, 198, 204, 209, 218, 226, 228, 244, 245, 247, 252, 311, 316, 381, 469, 471, 475, 476, 477, 478], "aim": [0, 22, 51, 202, 228, 238, 244, 245, 246, 247, 249], "local": [0, 2, 4, 6, 10, 13, 14, 22, 24, 27, 30, 34, 37, 46, 124, 205, 209, 214, 215, 219, 227, 228, 236, 241, 242, 243, 247, 252, 253, 257, 287, 311, 312, 320, 321, 322, 324, 473, 476, 482, 492, 493], "follow": [0, 4, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 42, 44, 45, 46, 47, 48, 51, 124, 197, 198, 199, 201, 204, 206, 207, 209, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 234, 235, 236, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 257, 261, 310, 311, 312, 313, 314, 316, 319, 320, 322, 324, 326, 361, 381, 391, 395, 401, 404, 414, 415, 421, 424, 445, 458, 462, 469, 471, 473, 474, 475, 476, 478, 479, 482, 483], "specif": [0, 4, 6, 9, 12, 14, 15, 16, 20, 24, 33, 34, 37, 38, 41, 42, 44, 51, 199, 206, 209, 212, 215, 216, 218, 221, 223, 224, 226, 228, 231, 238, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 314, 315, 316, 319, 322, 324, 381, 409, 413, 462, 468, 471, 473, 474, 475, 482], "ldbc": [0, 4, 34, 202, 215, 217, 224, 225, 231, 241, 245, 249, 250, 473, 490, 495], "wai": [0, 1, 4, 6, 10, 14, 20, 29, 36, 37, 45, 47, 51, 202, 204, 209, 212, 215, 216, 223, 224, 227, 231, 244, 246, 247, 314, 316, 318, 320, 327, 381, 447, 454, 456, 462, 469, 473, 474, 476], "exist": [0, 2, 4, 6, 8, 9, 10, 12, 14, 15, 20, 34, 37, 44, 48, 51, 90, 91, 163, 164, 206, 212, 214, 221, 223, 226, 232, 241, 242, 244, 245, 246, 247, 249, 253, 255, 261, 263, 307, 309, 311, 314, 316, 320, 321, 324, 327, 346, 347, 351, 393, 402, 416, 460, 462, 469, 471, 473], "variant": [0, 31, 247, 250], "networkx": [0, 3, 7, 8, 12, 34, 212, 231, 248, 251, 252, 253, 287, 327, 329, 330, 331, 332, 333, 334, 336, 338, 340, 341, 342, 344, 345, 346, 347, 351, 352, 356, 357, 361, 362, 364, 365, 367, 368, 369, 372, 374, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 398, 399, 400, 402, 405, 406, 407, 408, 413, 414, 415, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 455, 457, 462, 464, 465, 467, 491, 496], "damp": 0, "set": [0, 2, 4, 6, 7, 9, 10, 13, 14, 15, 16, 18, 20, 23, 27, 30, 31, 39, 41, 42, 44, 45, 46, 47, 48, 124, 199, 202, 209, 212, 215, 216, 217, 218, 221, 222, 223, 226, 228, 231, 234, 235, 241, 242, 243, 244, 246, 247, 250, 251, 252, 253, 255, 303, 309, 310, 311, 312, 314, 316, 319, 322, 323, 324, 325, 326, 327, 341, 365, 381, 395, 396, 401, 405, 413, 416, 417, 418, 423, 424, 442, 457, 460, 462, 465, 469, 473, 474, 475, 476, 479, 482, 487, 488, 492], "sampling_path": [0, 34], "source_id": [0, 14], "cutoff": 0, "fix": [0, 6, 47, 226, 228, 232, 234, 247, 302, 454, 475, 477], "rank": [0, 6, 33, 239, 242, 252, 253, 254, 454, 468], "vote": [0, 255], "scheme": [0, 6, 9, 45, 46, 103, 176, 198, 215, 241], "With": [0, 4, 12, 19, 24, 34, 36, 41, 204, 205, 217, 223, 224, 226, 228, 231, 236, 237, 242, 243, 244, 400, 473, 482], "top": [0, 9, 12, 22, 34, 125, 126, 127, 128, 163, 164, 173, 189, 224, 226, 228, 249, 314, 436, 475, 493], "highest": [0, 228, 396], "elect": 0, "num_of_nod": [0, 253], "select": [0, 9, 15, 36, 47, 216, 220, 224, 232, 235, 241, 242, 245, 247, 254, 262, 268, 269, 279, 280, 284, 292, 293, 310, 316, 324, 381, 390, 413, 425, 459, 462, 468, 469, 473, 474, 493], "influenti": 0, "extract": [0, 201, 219, 221, 226, 241, 242, 243, 244, 253, 261, 325, 469, 471, 475], "weakli": [0, 253, 327, 401], "In": [1, 2, 4, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 28, 29, 32, 34, 37, 38, 44, 45, 46, 47, 48, 51, 200, 201, 202, 204, 209, 212, 214, 215, 216, 217, 218, 220, 221, 224, 226, 227, 228, 230, 231, 232, 235, 237, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 327, 384, 413, 416, 419, 420, 422, 462, 465, 468, 471, 474, 475, 477, 479, 482], "addit": [1, 4, 6, 9, 10, 12, 15, 18, 20, 24, 32, 34, 37, 45, 212, 216, 217, 218, 221, 223, 224, 226, 228, 230, 231, 232, 235, 241, 244, 250, 272, 288, 311, 312, 313, 314, 324, 456, 462, 475, 479], "built": [1, 3, 4, 8, 9, 12, 15, 18, 20, 22, 32, 34, 36, 41, 202, 204, 209, 217, 218, 220, 223, 228, 242, 243, 247, 248, 250, 251, 310, 324, 398, 399, 400, 471, 473, 479], "provid": [1, 2, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 23, 29, 30, 31, 32, 33, 34, 35, 36, 42, 44, 45, 46, 47, 48, 49, 91, 164, 198, 199, 202, 203, 204, 206, 209, 212, 214, 215, 216, 220, 221, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 271, 310, 312, 316, 317, 318, 322, 327, 358, 359, 381, 409, 410, 411, 412, 459, 462, 464, 469, 471, 473, 474, 475, 476, 479, 482, 485], "run": [1, 2, 4, 6, 8, 9, 12, 13, 19, 20, 24, 27, 29, 30, 31, 32, 38, 44, 45, 48, 49, 90, 93, 100, 124, 163, 173, 197, 198, 202, 204, 206, 207, 209, 215, 217, 219, 220, 227, 230, 233, 236, 237, 241, 242, 243, 244, 247, 249, 251, 252, 253, 254, 288, 299, 316, 320, 321, 322, 324, 325, 414, 415, 465, 466, 469, 474, 475, 476, 477, 478, 479, 482, 483, 485, 487], "your": [1, 2, 4, 7, 8, 12, 13, 14, 20, 23, 24, 27, 29, 30, 31, 32, 36, 38, 41, 45, 48, 124, 199, 201, 202, 204, 207, 209, 217, 218, 219, 220, 227, 232, 233, 234, 236, 237, 243, 249, 251, 253, 257, 312, 317, 321, 322, 371, 391, 462, 469, 471, 474, 485, 493], "own": [1, 4, 6, 8, 12, 15, 24, 34, 36, 37, 199, 220, 224, 230, 231, 245, 251, 257, 302, 314, 317, 322, 381, 391, 469, 474, 475, 479], "design": [1, 4, 6, 7, 12, 13, 15, 18, 27, 44, 46, 47, 197, 202, 204, 206, 207, 212, 214, 218, 223, 224, 228, 234, 235, 236, 237, 244, 246, 247, 248, 249, 252, 310, 312, 318, 327, 462, 475], "extens": [1, 4, 6, 27, 36, 46, 216, 218, 221, 235, 242, 311], "henc": [1, 2, 10, 32, 241, 336, 459, 462, 475], "you": [1, 2, 4, 7, 8, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 33, 36, 37, 38, 41, 44, 45, 46, 48, 51, 124, 197, 198, 199, 201, 202, 204, 209, 215, 217, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 233, 234, 236, 237, 241, 243, 246, 248, 249, 251, 253, 257, 309, 311, 312, 315, 316, 317, 320, 321, 324, 327, 340, 371, 381, 391, 393, 405, 410, 411, 412, 462, 469, 471, 473, 474, 475, 477, 482, 483, 485, 495], "flash": [1, 3, 8, 12, 242], "java": [1, 4, 8, 12, 14, 34, 49, 203, 207, 214, 217, 223, 229, 231, 244, 245, 249, 253, 257, 261, 474, 485], "c": [1, 6, 8, 12, 14, 17, 18, 31, 34, 38, 44, 45, 49, 51, 198, 199, 200, 202, 204, 206, 207, 223, 226, 228, 231, 232, 239, 242, 244, 245, 252, 253, 254, 257, 260, 272, 284, 312, 316, 320, 322, 327, 360, 361, 371, 391, 402, 415, 416, 419, 420, 454, 456, 458, 459, 462, 474, 477, 483, 485, 487, 493], "python": [1, 7, 8, 11, 12, 14, 16, 17, 20, 22, 23, 27, 29, 30, 32, 33, 34, 37, 42, 49, 199, 203, 207, 209, 212, 214, 215, 218, 220, 222, 228, 229, 232, 234, 237, 241, 242, 243, 245, 246, 248, 249, 252, 253, 260, 310, 313, 317, 320, 322, 325, 326, 462, 464, 465, 473, 474, 482, 483, 485, 486, 488, 489, 491, 492, 493, 495], "These": [1, 4, 9, 15, 20, 24, 46, 47, 202, 215, 221, 232, 241, 242, 243, 245, 246, 247, 248, 316, 322, 474, 482], "type": [1, 3, 4, 6, 9, 12, 13, 15, 16, 18, 19, 20, 27, 29, 30, 33, 34, 36, 37, 38, 45, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 202, 204, 212, 215, 216, 217, 220, 222, 224, 226, 228, 232, 235, 237, 238, 239, 240, 242, 243, 245, 246, 247, 250, 252, 253, 254, 260, 261, 263, 264, 268, 269, 272, 273, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 289, 292, 293, 297, 303, 305, 310, 312, 313, 314, 315, 316, 319, 320, 321, 322, 324, 325, 326, 327, 332, 333, 336, 338, 341, 342, 344, 346, 347, 350, 351, 352, 355, 356, 357, 360, 361, 362, 364, 365, 367, 368, 369, 371, 372, 374, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 454, 455, 456, 457, 458, 459, 463, 464, 466, 467, 469, 471, 474, 475, 477, 486, 489, 494], "queri": [1, 2, 7, 9, 13, 14, 19, 22, 29, 34, 44, 45, 48, 49, 67, 87, 90, 91, 100, 107, 124, 140, 160, 163, 164, 173, 180, 197, 198, 200, 203, 205, 207, 209, 212, 215, 217, 218, 219, 221, 222, 223, 225, 226, 227, 229, 230, 231, 232, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 262, 268, 269, 281, 284, 288, 292, 293, 297, 310, 312, 314, 316, 318, 322, 324, 326, 346, 347, 467, 468, 469, 474, 477, 479, 483, 489], "upon": [1, 2, 9, 14, 202, 221, 223, 249, 324, 475, 476], "pregel": [1, 4, 8, 12, 17, 22, 34, 231, 242, 245, 467, 479, 489, 491], "alreadi": [2, 8, 20, 23, 24, 27, 29, 30, 36, 37, 41, 44, 90, 91, 163, 164, 212, 217, 223, 228, 235, 241, 243, 310, 460, 462, 495], "deploi": [2, 15, 33, 37, 124, 207, 209, 214, 216, 217, 218, 219, 227, 231, 234, 242, 244, 249, 312, 469, 471, 476], "machin": [2, 4, 6, 7, 11, 14, 20, 24, 27, 30, 32, 36, 37, 38, 46, 201, 202, 209, 215, 217, 218, 219, 227, 233, 234, 236, 237, 242, 243, 244, 245, 246, 247, 253, 310, 322, 469, 474], "take": [2, 4, 6, 9, 14, 15, 18, 24, 27, 29, 30, 36, 41, 44, 47, 199, 204, 209, 216, 220, 223, 228, 231, 232, 241, 243, 244, 247, 257, 274, 311, 314, 315, 316, 320, 322, 324, 327, 390, 411, 442, 460, 462, 466, 468, 474, 475, 476, 477], "advantag": [2, 216, 231, 241, 248, 249, 478], "3": [2, 6, 9, 10, 13, 14, 17, 19, 20, 22, 23, 27, 30, 31, 32, 34, 37, 41, 44, 47, 90, 124, 163, 197, 198, 207, 209, 212, 215, 216, 217, 218, 222, 224, 226, 227, 228, 232, 235, 239, 240, 243, 247, 250, 253, 254, 313, 314, 315, 316, 319, 324, 325, 327, 329, 330, 331, 333, 338, 342, 346, 347, 363, 365, 368, 371, 377, 381, 382, 383, 385, 386, 387, 389, 393, 396, 397, 401, 402, 406, 408, 419, 420, 422, 424, 427, 430, 435, 439, 440, 443, 446, 449, 451, 454, 455, 456, 457, 462, 464, 465, 474, 477, 486, 489, 492, 493], "gie": [2, 32, 33, 214, 221, 228, 231, 241, 242, 246, 249, 250, 251, 281, 469, 486, 487, 496], "gle": [2, 32, 214, 231, 234, 235, 236, 242, 247, 249, 251, 486, 487, 494], "address": [2, 9, 14, 17, 23, 31, 44, 209, 223, 224, 239, 242, 247, 475, 493], "differ": [2, 6, 9, 10, 12, 13, 15, 17, 18, 20, 23, 27, 30, 34, 35, 36, 37, 41, 46, 199, 202, 212, 215, 216, 220, 223, 226, 228, 229, 231, 232, 235, 241, 242, 243, 244, 245, 246, 247, 249, 250, 253, 272, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 381, 385, 386, 387, 409, 412, 419, 439, 454, 462, 467, 469, 471, 473, 474, 475, 476, 477, 478, 479, 482], "complex": [2, 4, 6, 12, 22, 34, 37, 42, 200, 202, 204, 212, 216, 217, 223, 224, 225, 226, 231, 232, 241, 242, 244, 245, 246, 247, 248, 249, 253, 313, 327, 391, 395, 410, 411, 412, 474], "relat": [2, 4, 13, 23, 24, 27, 33, 38, 45, 47, 57, 124, 130, 197, 198, 199, 200, 202, 206, 209, 214, 216, 220, 222, 223, 227, 232, 235, 238, 242, 243, 244, 246, 247, 252, 312, 316, 322, 418, 454, 459, 473, 474, 475], "show": [2, 14, 19, 20, 27, 29, 30, 38, 204, 206, 209, 216, 217, 228, 231, 236, 237, 243, 245, 246, 247, 313, 314, 322, 465, 469, 471, 474], "kubernet": [2, 29, 209, 212, 214, 215, 217, 231, 236, 239, 241, 243, 248, 469, 475, 486, 488, 489, 491, 495, 496], "cluster": [2, 6, 7, 10, 14, 15, 17, 18, 19, 20, 22, 23, 29, 34, 209, 212, 214, 217, 219, 227, 228, 231, 234, 236, 241, 242, 243, 244, 245, 246, 247, 248, 253, 312, 322, 327, 384, 463, 469, 475, 476, 483, 485, 492], "howev": [2, 6, 9, 11, 13, 15, 20, 24, 30, 37, 44, 47, 48, 199, 202, 209, 212, 215, 216, 218, 220, 221, 223, 224, 228, 232, 241, 242, 247, 249, 311, 312, 313, 318, 327, 391, 462, 474, 475], "scenario": [2, 4, 6, 8, 12, 13, 41, 47, 202, 204, 216, 226, 227, 228, 232, 235, 241, 242, 246, 247, 249, 311, 312, 314], "quit": [2, 30, 220, 381], "common": [2, 6, 12, 15, 30, 48, 216, 220, 228, 232, 235, 241, 242, 244, 245, 246, 247, 249, 310, 311, 318, 319, 333, 454, 456, 462, 473, 474, 483], "intend": [2, 13, 36, 221, 454, 468], "analysi": [2, 7, 8, 11, 13, 216, 227, 228, 231, 241, 247, 248, 250, 251, 253, 415], "offlin": [2, 214, 231, 232, 244, 247, 248, 471], "everi": [2, 6, 23, 44, 47, 200, 226, 228, 235, 247, 252, 316, 327, 329, 330, 331, 346, 347, 365, 379, 442, 449, 462, 468, 474], "dai": [2, 20, 47, 228, 462, 465, 473], "export": [2, 4, 23, 29, 31, 33, 39, 201, 209, 217, 233, 473, 475, 488], "warehous": 2, "without": [2, 4, 6, 9, 14, 22, 27, 29, 30, 34, 37, 44, 204, 206, 215, 224, 226, 242, 244, 249, 257, 270, 311, 313, 314, 315, 316, 337, 374, 388, 395, 401, 402, 409, 410, 411, 412, 413, 462, 465, 469, 474, 475, 477, 493], "real": [2, 6, 9, 12, 13, 34, 198, 212, 215, 224, 226, 231, 242, 243, 245, 247, 454, 473, 475], "time": [2, 6, 9, 12, 13, 14, 17, 19, 20, 23, 27, 29, 30, 33, 34, 37, 47, 198, 199, 209, 216, 217, 218, 221, 224, 226, 228, 231, 235, 239, 240, 241, 243, 246, 247, 250, 253, 311, 312, 316, 327, 360, 361, 397, 398, 399, 400, 410, 411, 412, 414, 415, 424, 427, 462, 474, 475, 477, 489, 493], "sampl": [2, 29, 30, 31, 33, 45, 51, 207, 214, 215, 231, 232, 239, 242, 243, 249, 257, 311, 312, 313, 315, 318, 320, 323, 326, 401, 421, 454, 475, 494], "case": [2, 4, 6, 8, 10, 13, 14, 15, 18, 27, 37, 41, 48, 209, 212, 215, 216, 221, 224, 226, 228, 235, 241, 246, 250, 255, 311, 312, 316, 318, 320, 323, 327, 381, 389, 395, 419, 430, 446, 468, 469, 473, 474, 475, 479, 482], "unnecessari": [2, 6, 9, 223, 228, 474], "capabl": [2, 6, 11, 16, 20, 202, 221, 222, 223, 226, 229, 242, 244, 246, 249, 462], "independ": [2, 6, 30, 242, 249, 311, 325, 338, 341, 389, 416, 462], "document": [2, 10, 27, 29, 33, 35, 36, 38, 49, 204, 206, 207, 209, 217, 220, 221, 222, 226, 227, 229, 231, 233, 247, 253, 310, 311, 317, 469, 470, 475], "walk": [2, 4, 32, 45, 199, 215, 228, 242, 243, 246, 316, 363, 374], "process": [2, 3, 4, 6, 9, 11, 12, 13, 14, 15, 16, 19, 22, 23, 24, 27, 29, 30, 32, 34, 35, 37, 44, 45, 198, 199, 200, 202, 204, 207, 212, 214, 215, 217, 218, 222, 223, 227, 228, 230, 231, 232, 234, 235, 236, 237, 242, 244, 245, 246, 247, 248, 252, 263, 311, 312, 314, 316, 320, 322, 391, 393, 396, 424, 430, 462, 469, 471, 473, 474, 477, 479], "standalon": [2, 23, 27, 32, 209, 214, 217, 218, 228, 241, 242, 476, 482, 495], "self": [2, 215, 228, 241, 297, 310, 313, 316, 327, 337, 350, 389, 391, 393, 395, 401, 409, 410, 411, 412, 413, 462, 463, 465, 469, 475, 490, 494, 495], "manag": [2, 4, 10, 12, 14, 16, 27, 29, 30, 49, 124, 197, 198, 200, 203, 204, 206, 207, 209, 212, 215, 222, 228, 231, 235, 236, 237, 242, 244, 245, 246, 247, 248, 249, 250, 252, 469, 475, 476, 482, 485], "k8": [2, 4, 7, 17, 22, 30, 37, 38, 41, 48, 209, 212, 214, 215, 219, 227, 231, 234, 236, 241, 249, 251, 469, 475, 485, 486, 487, 489, 492, 495], "7": [2, 10, 20, 23, 27, 30, 31, 32, 124, 197, 209, 218, 226, 228, 250, 311, 317, 322, 329, 330, 342, 365, 427, 433, 435, 439, 440, 443, 445, 457, 462, 477, 488, 492, 493], "To": [2, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 27, 29, 30, 32, 34, 36, 37, 44, 45, 46, 48, 51, 124, 198, 199, 201, 202, 204, 209, 212, 215, 216, 228, 230, 231, 232, 233, 235, 237, 238, 241, 242, 243, 247, 249, 250, 253, 257, 310, 311, 312, 314, 316, 317, 318, 320, 322, 327, 340, 391, 393, 398, 400, 409, 412, 452, 456, 462, 464, 468, 469, 471, 474, 475, 478, 479, 482, 483], "get": [2, 4, 6, 12, 16, 18, 19, 20, 27, 29, 30, 31, 32, 33, 34, 38, 41, 49, 52, 53, 54, 55, 90, 91, 125, 126, 127, 128, 163, 164, 198, 202, 207, 209, 214, 215, 216, 217, 221, 228, 232, 235, 241, 246, 248, 251, 253, 254, 255, 273, 310, 313, 314, 315, 316, 319, 324, 325, 326, 327, 360, 381, 452, 462, 468, 469, 471, 474, 475, 479, 482, 483, 485, 488, 489], "instal": [2, 4, 15, 16, 17, 19, 23, 33, 35, 41, 48, 49, 199, 207, 209, 215, 217, 219, 227, 243, 253, 257, 320, 462, 465, 469, 486, 487, 488, 489, 492], "client": [2, 17, 22, 23, 29, 33, 38, 41, 124, 125, 126, 127, 128, 163, 164, 173, 189, 197, 198, 199, 208, 216, 227, 229, 231, 237, 240, 252, 253, 322, 469, 471, 473, 474, 475, 476, 485, 487, 492], "prepar": [2, 4, 33, 36, 45, 207, 215, 218, 220, 232, 233, 234, 235, 237, 238, 243, 247, 251, 474, 489], "continu": [2, 6, 15, 16, 20, 27, 215, 216, 227, 228, 231, 232, 242, 243, 247, 250, 310, 381, 419, 422, 474, 475, 476], "incas": [2, 215], "doesn": [2, 13, 29, 32, 37, 38, 41, 202, 215, 228, 257, 316, 391, 393, 395, 462, 468, 477], "t": [2, 6, 8, 13, 17, 23, 29, 30, 32, 33, 36, 37, 38, 41, 201, 202, 206, 208, 209, 215, 224, 226, 228, 239, 240, 241, 244, 250, 252, 253, 255, 257, 263, 310, 315, 316, 322, 326, 327, 340, 356, 391, 393, 395, 415, 419, 420, 454, 456, 459, 462, 468, 475, 477, 494], "could": [2, 4, 6, 9, 15, 22, 27, 28, 29, 31, 32, 36, 38, 41, 47, 198, 201, 215, 217, 218, 226, 231, 233, 241, 251, 253, 305, 312, 314, 315, 324, 390, 473, 474, 475, 476], "creat": [2, 9, 10, 12, 13, 16, 17, 19, 23, 27, 29, 30, 31, 34, 38, 46, 48, 49, 52, 54, 90, 91, 100, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 202, 206, 207, 209, 215, 217, 218, 220, 223, 226, 227, 228, 239, 241, 242, 243, 246, 247, 252, 253, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 277, 281, 282, 283, 287, 290, 291, 297, 303, 304, 305, 314, 316, 319, 321, 324, 325, 340, 362, 364, 365, 367, 368, 369, 371, 372, 374, 376, 377, 379, 380, 381, 383, 384, 386, 389, 391, 393, 394, 396, 397, 398, 399, 400, 402, 403, 404, 406, 407, 408, 410, 411, 412, 414, 415, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 456, 457, 462, 464, 465, 466, 469, 475, 476, 477, 478, 483, 485, 488], "distinct": [2, 51, 221, 226, 242, 243, 246, 367, 429, 455, 474], "method": [2, 15, 16, 17, 18, 20, 22, 23, 29, 52, 53, 54, 55, 90, 91, 100, 116, 124, 125, 126, 127, 128, 163, 164, 173, 189, 197, 198, 223, 228, 235, 237, 241, 245, 247, 252, 253, 255, 276, 287, 302, 310, 314, 318, 319, 325, 327, 390, 398, 400, 409, 411, 462, 465, 467, 469, 474, 475, 479, 485], "entir": [2, 9, 34, 202, 204, 216, 228, 243, 247, 316, 327, 462], "discret": [2, 232, 247, 310, 381, 394, 396, 402, 406, 417], "util": [2, 4, 6, 9, 15, 32, 36, 41, 42, 45, 47, 51, 202, 206, 221, 222, 223, 228, 231, 233, 238, 241, 242, 244, 245, 248, 252, 253, 255, 326, 427, 473, 474, 475, 478], "either": [2, 13, 30, 34, 46, 199, 204, 209, 215, 223, 224, 227, 228, 235, 253, 312, 316, 324, 325, 365, 368, 381, 408, 419, 452, 462, 476], "aforement": [2, 51, 241, 245, 247, 311, 316, 475], "per": [2, 46, 202, 215, 223, 474, 475], "prefer": [2, 13, 27, 36, 44, 202, 203, 474], "session": [2, 7, 8, 16, 17, 22, 27, 28, 29, 33, 124, 197, 209, 212, 218, 220, 225, 227, 228, 231, 234, 236, 239, 241, 243, 251, 253, 254, 272, 303, 304, 305, 307, 309, 324, 325, 462, 466, 467, 473, 475, 477, 482, 483, 485, 486, 487, 489, 490, 493, 495], "class": [2, 4, 9, 15, 17, 18, 20, 22, 23, 52, 53, 54, 55, 90, 91, 100, 116, 124, 125, 126, 127, 128, 163, 164, 173, 189, 197, 221, 228, 235, 238, 241, 243, 247, 252, 253, 254, 255, 260, 310, 311, 324, 325, 326, 327, 371, 440, 462, 466, 469, 474, 475, 476, 485, 494], "option": [2, 4, 6, 13, 15, 27, 29, 31, 32, 37, 41, 44, 46, 47, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 172, 173, 174, 175, 176, 177, 178, 179, 180, 187, 188, 189, 192, 193, 194, 195, 204, 206, 215, 217, 219, 220, 221, 224, 226, 227, 228, 231, 233, 239, 241, 244, 246, 249, 253, 254, 257, 260, 281, 287, 288, 289, 299, 309, 311, 314, 316, 324, 325, 327, 329, 330, 331, 346, 347, 356, 362, 364, 365, 367, 369, 371, 372, 374, 376, 377, 380, 384, 385, 386, 389, 391, 393, 394, 396, 397, 398, 399, 400, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 419, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 454, 457, 460, 462, 464, 465, 468, 469, 475, 476], "control": [2, 6, 27, 38, 241, 242, 244, 252, 327, 462, 474, 475], "subset": [2, 6, 20, 202, 224, 226, 238, 243, 368, 379, 468, 469], "launch": [2, 8, 9, 17, 22, 29, 36, 41, 48, 198, 209, 212, 215, 225, 234, 236, 237, 243, 251, 303, 321, 466, 469, 475, 476, 482, 485, 489], "For": [2, 4, 6, 9, 10, 12, 15, 16, 17, 20, 22, 29, 30, 35, 37, 41, 44, 45, 47, 48, 49, 51, 124, 198, 199, 202, 204, 209, 212, 215, 216, 221, 223, 224, 226, 228, 231, 232, 235, 237, 241, 242, 243, 245, 246, 247, 253, 255, 261, 310, 311, 312, 313, 316, 318, 320, 322, 324, 327, 339, 360, 363, 365, 368, 391, 393, 395, 396, 401, 404, 405, 409, 410, 411, 412, 413, 424, 427, 456, 462, 466, 468, 469, 475, 477, 478, 483], "exampl": [2, 7, 10, 15, 16, 18, 19, 20, 27, 31, 37, 41, 45, 46, 47, 49, 51, 124, 197, 201, 204, 212, 214, 215, 218, 220, 221, 223, 224, 227, 228, 229, 231, 232, 234, 235, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 253, 254, 260, 261, 303, 305, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 325, 327, 329, 330, 331, 333, 338, 340, 341, 346, 347, 350, 355, 356, 361, 363, 365, 367, 368, 371, 374, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 397, 398, 400, 402, 405, 409, 410, 411, 412, 413, 419, 422, 427, 452, 454, 455, 456, 457, 460, 462, 464, 465, 466, 468, 469, 473, 474, 475, 476, 477, 482, 483, 485, 489, 494], "set_opt": [2, 7, 15, 17, 19, 29, 38, 209, 218, 220, 234, 237, 238, 239, 240, 243, 483, 488], "show_log": [2, 7, 15, 17, 19, 29, 38, 209, 218, 234, 237, 238, 239, 240, 243, 309, 483, 488], "true": [2, 6, 7, 9, 13, 15, 16, 17, 18, 19, 20, 29, 38, 44, 46, 48, 198, 209, 215, 218, 223, 226, 227, 228, 234, 235, 237, 238, 239, 240, 241, 243, 252, 253, 255, 257, 299, 303, 307, 310, 311, 312, 316, 319, 322, 324, 327, 334, 343, 344, 345, 346, 347, 356, 358, 359, 365, 367, 385, 389, 391, 395, 401, 405, 408, 420, 460, 462, 464, 465, 469, 475, 476, 483, 485, 488, 493, 494, 495], "sess": [2, 16, 17, 22, 27, 29, 30, 33, 212, 220, 237, 238, 239, 241, 253, 254, 299, 303, 324, 325, 469, 473, 477, 483, 485, 486, 487, 489, 490, 493, 495], "enabled_engin": [2, 309, 469], "g": [2, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 28, 29, 32, 33, 34, 36, 37, 41, 45, 47, 51, 198, 199, 202, 204, 206, 212, 217, 218, 220, 224, 226, 227, 228, 230, 231, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 261, 305, 310, 312, 313, 314, 315, 316, 317, 319, 320, 322, 324, 325, 327, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 361, 362, 364, 365, 367, 368, 371, 372, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 418, 419, 422, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 454, 455, 459, 460, 462, 464, 465, 468, 469, 471, 473, 474, 475, 476, 478, 479, 482, 483, 485, 488, 489, 490, 492, 493, 494, 495], "custom": [2, 3, 4, 7, 8, 22, 29, 35, 36, 46, 47, 198, 199, 202, 207, 216, 231, 235, 241, 242, 245, 247, 248, 310, 311, 314, 316, 318, 319, 320, 409, 411, 412, 459, 479], "command": [2, 4, 7, 16, 23, 27, 29, 30, 31, 32, 35, 36, 41, 44, 45, 48, 49, 51, 124, 199, 204, 205, 209, 214, 217, 233, 234, 239, 252, 311, 475, 476, 483], "line": [2, 4, 6, 7, 17, 36, 37, 38, 41, 51, 124, 198, 206, 214, 216, 233, 234, 244, 249, 310, 311, 462, 464, 475, 476, 483, 494], "releas": [2, 27, 31, 32, 35, 45, 48, 199, 209, 224, 237, 250, 419, 422, 468, 469, 475, 488, 492], "replac": [2, 17, 19, 22, 23, 29, 30, 45, 197, 216, 217, 220, 226, 244, 250, 313, 314, 315, 324, 462], "my": [2, 18, 29, 462, 465, 469, 475], "illustr": [2, 4, 29, 45, 46, 47, 223, 228, 232, 238, 239, 240, 245, 247, 313, 439], "Then": [2, 9, 14, 15, 16, 17, 19, 22, 23, 27, 29, 30, 33, 48, 124, 197, 212, 215, 216, 219, 227, 228, 235, 237, 241, 242, 243, 310, 316, 456, 471, 477], "connect": [2, 6, 15, 17, 19, 20, 27, 37, 41, 47, 124, 197, 199, 202, 203, 209, 215, 216, 222, 226, 228, 229, 231, 235, 237, 241, 242, 243, 244, 245, 247, 253, 254, 255, 311, 312, 314, 316, 319, 325, 327, 331, 348, 363, 365, 367, 369, 373, 374, 376, 377, 379, 380, 381, 383, 384, 385, 386, 388, 390, 395, 396, 401, 402, 404, 409, 411, 412, 413, 414, 415, 416, 418, 427, 437, 438, 440, 442, 444, 461, 462, 469, 476, 477, 485, 493], "servic": [2, 27, 28, 29, 38, 39, 46, 48, 49, 51, 52, 55, 125, 128, 203, 204, 205, 207, 219, 227, 231, 237, 242, 243, 245, 247, 252, 469, 476], "detail": [2, 4, 6, 7, 9, 12, 13, 14, 17, 20, 27, 29, 30, 33, 34, 38, 39, 44, 45, 46, 47, 48, 49, 93, 124, 166, 197, 199, 202, 205, 209, 211, 215, 221, 223, 226, 228, 231, 234, 235, 241, 245, 247, 249, 252, 253, 254, 303, 305, 309, 311, 312, 314, 315, 318, 319, 320, 322, 419, 462, 469, 473, 475, 478, 479], "addr": [2, 29, 255, 469], "ip": [2, 29, 215, 217, 227, 469, 475, 493], "port": [2, 23, 29, 38, 44, 48, 199, 202, 206, 209, 215, 217, 220, 227, 239, 241, 252, 469, 475, 493, 495], "mai": [2, 4, 6, 7, 8, 14, 15, 18, 20, 22, 24, 27, 29, 30, 31, 32, 36, 37, 38, 202, 209, 212, 215, 216, 218, 220, 224, 226, 228, 232, 234, 237, 241, 242, 243, 246, 247, 248, 249, 263, 311, 316, 318, 319, 320, 321, 324, 361, 384, 391, 393, 401, 462, 465, 468, 469, 474, 475, 477, 479, 482], "would": [2, 4, 20, 29, 31, 36, 37, 41, 47, 209, 217, 220, 228, 242, 252, 253, 316, 322, 465, 468, 469, 475], "previou": [2, 9, 15, 19, 27, 29, 31, 33, 41, 198, 228, 243, 253, 262, 310, 314, 316, 400, 475], "wcc_result": 2, "wcc": [2, 13, 250, 253, 485, 490], "print": [2, 7, 16, 20, 29, 30, 33, 48, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 209, 212, 215, 218, 219, 220, 227, 228, 234, 235, 237, 238, 239, 240, 241, 243, 253, 254, 313, 315, 316, 319, 322, 324, 325, 327, 340, 389, 457, 462, 465, 473, 475, 483, 490, 493, 495], "to_datafram": [2, 7, 15, 212, 243, 254, 324, 468, 473, 485], "id": [2, 4, 7, 9, 13, 15, 17, 18, 28, 30, 33, 38, 45, 46, 47, 51, 52, 53, 84, 87, 93, 107, 125, 126, 157, 160, 163, 166, 180, 198, 208, 209, 212, 215, 216, 217, 220, 221, 223, 229, 232, 235, 241, 243, 246, 247, 250, 252, 253, 254, 255, 281, 287, 289, 310, 311, 312, 313, 314, 315, 316, 319, 320, 322, 323, 324, 326, 419, 420, 459, 462, 465, 468, 469, 473, 475, 476, 483, 485, 486, 488, 489, 493, 494, 495], "r": [2, 6, 7, 15, 16, 17, 22, 31, 33, 35, 212, 215, 221, 243, 244, 247, 253, 254, 362, 372, 379, 385, 389, 401, 409, 418, 450, 455, 468, 469, 473, 475, 485, 489, 490], "tip": [2, 13, 447], "encount": [2, 32, 37, 202, 209, 245, 263], "fail": [2, 37, 93, 100, 173, 198, 209, 216, 223, 226, 247, 327, 462, 475], "project": [2, 4, 7, 13, 15, 17, 23, 33, 37, 124, 199, 202, 216, 219, 221, 243, 244, 246, 252, 253, 254, 286, 317, 324, 469, 473, 475, 485, 489, 490, 493], "simpl": [2, 7, 9, 15, 16, 17, 20, 27, 30, 32, 33, 44, 46, 124, 197, 199, 204, 209, 214, 216, 218, 224, 226, 228, 234, 241, 242, 243, 246, 253, 254, 286, 310, 312, 325, 327, 391, 393, 396, 397, 419, 420, 421, 422, 424, 436, 454, 462, 468, 475, 485, 488, 489, 493], "empti": [2, 19, 29, 41, 100, 173, 198, 206, 208, 226, 228, 241, 253, 255, 344, 368, 371, 401, 402, 440, 456, 462, 465, 475], "load": [2, 4, 7, 10, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 29, 33, 45, 52, 125, 198, 199, 200, 206, 207, 209, 212, 214, 215, 216, 217, 218, 219, 222, 227, 234, 243, 244, 245, 247, 250, 251, 252, 253, 261, 263, 265, 294, 310, 312, 321, 322, 324, 469, 474], "dataset": [2, 4, 7, 15, 16, 17, 18, 19, 20, 22, 23, 27, 33, 209, 212, 218, 222, 228, 234, 237, 238, 239, 240, 243, 247, 250, 253, 254, 310, 316, 322, 469, 473, 485, 487, 489, 493, 495], "load_modern_graph": [2, 7, 30, 33, 218, 243, 253, 325], "modern": [2, 6, 7, 33, 44, 45, 48, 51, 197, 198, 199, 204, 206, 207, 215, 217, 218, 223, 228, 231, 243, 244, 245, 471, 475, 476], "current": [2, 7, 11, 12, 13, 16, 17, 22, 27, 29, 32, 37, 38, 44, 45, 46, 47, 48, 55, 90, 100, 128, 163, 173, 198, 199, 202, 204, 206, 209, 212, 215, 216, 221, 224, 226, 228, 231, 235, 237, 239, 241, 243, 245, 246, 248, 253, 255, 304, 307, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 454, 457, 462, 469, 474, 475, 482, 485, 492], "e": [2, 4, 6, 9, 10, 12, 13, 14, 17, 18, 19, 20, 22, 23, 32, 34, 37, 47, 48, 52, 53, 54, 55, 90, 91, 100, 116, 125, 126, 127, 128, 163, 164, 173, 189, 198, 202, 208, 212, 217, 221, 223, 224, 228, 230, 231, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 249, 250, 253, 254, 263, 312, 313, 314, 315, 316, 319, 322, 324, 325, 326, 327, 363, 381, 391, 393, 395, 396, 398, 399, 400, 403, 408, 409, 416, 417, 418, 419, 422, 424, 440, 445, 451, 453, 462, 464, 465, 468, 469, 471, 473, 474, 476, 478, 479, 485, 489, 492, 493, 495], "path": [2, 4, 6, 7, 9, 17, 19, 22, 23, 24, 27, 28, 30, 31, 33, 39, 44, 45, 46, 48, 116, 198, 215, 216, 217, 220, 221, 223, 229, 231, 232, 235, 239, 241, 243, 245, 246, 249, 253, 261, 311, 312, 314, 316, 321, 322, 324, 327, 330, 363, 369, 373, 374, 376, 393, 456, 462, 464, 466, 468, 469, 473, 475, 477, 485, 486, 489, 490, 493], "store": [2, 10, 12, 13, 16, 17, 30, 34, 44, 45, 47, 48, 49, 124, 197, 198, 199, 202, 203, 206, 207, 209, 214, 215, 221, 222, 224, 226, 228, 231, 241, 242, 244, 245, 246, 248, 249, 254, 255, 268, 269, 284, 292, 293, 312, 318, 324, 325, 381, 386, 409, 410, 411, 412, 413, 462, 464, 469, 471, 473, 474, 476, 483, 485, 488], "pod": [2, 27, 28, 29, 30, 38, 41, 48, 198, 209, 212, 215, 237, 241, 469, 475, 483, 486, 488, 489, 495], "elimin": [2, 6, 14, 51, 312], "extran": 2, "resourc": [2, 27, 29, 33, 38, 201, 202, 209, 212, 227, 237, 242, 249, 253, 261, 381, 414, 469, 475, 478, 482, 488], "fewer": 2, "inconveni": 2, "requir": [2, 4, 6, 13, 15, 17, 20, 31, 32, 35, 37, 44, 46, 47, 49, 52, 53, 54, 55, 90, 91, 100, 116, 125, 126, 127, 128, 163, 164, 173, 189, 199, 201, 204, 209, 212, 216, 218, 220, 223, 224, 226, 228, 232, 235, 237, 241, 242, 243, 247, 249, 253, 257, 271, 310, 311, 312, 314, 315, 319, 320, 321, 322, 323, 360, 408, 409, 413, 462, 469, 474, 475, 478, 492], "equival": [2, 20, 209, 221, 223, 224, 226, 228, 316, 381, 418, 462], "function": [2, 4, 6, 9, 12, 14, 16, 17, 19, 20, 24, 34, 42, 45, 47, 200, 202, 204, 206, 209, 220, 221, 223, 224, 226, 227, 228, 232, 241, 242, 244, 247, 249, 252, 316, 320, 327, 360, 361, 368, 371, 391, 393, 398, 409, 410, 411, 412, 413, 421, 457, 460, 461, 462, 463, 464, 467, 473, 474, 479, 482, 485], "when": [2, 4, 6, 9, 10, 13, 20, 23, 24, 27, 29, 30, 31, 37, 46, 47, 48, 52, 53, 54, 55, 90, 91, 100, 116, 125, 126, 127, 128, 163, 164, 173, 189, 198, 202, 204, 209, 212, 215, 216, 220, 221, 226, 227, 228, 232, 235, 237, 242, 244, 245, 247, 249, 250, 253, 254, 255, 263, 297, 303, 311, 312, 313, 314, 315, 316, 319, 320, 321, 323, 324, 326, 327, 371, 381, 401, 409, 410, 411, 412, 418, 462, 464, 465, 469, 471, 473, 474, 475, 477, 482, 483], "close": [2, 6, 27, 29, 30, 33, 198, 227, 235, 237, 242, 253, 312, 322, 325, 464, 469, 475, 489], "free": [2, 9, 37, 209, 235, 249, 402, 409, 419, 422, 424, 455, 461, 469], "delet": [2, 9, 27, 29, 30, 33, 48, 52, 53, 54, 90, 91, 124, 125, 126, 127, 163, 164, 197, 198, 209, 282, 321, 469, 471, 475, 488], "handl": [3, 6, 8, 9, 11, 12, 20, 27, 34, 37, 47, 202, 206, 207, 215, 216, 224, 227, 228, 231, 242, 244, 245, 246, 247, 254, 284, 311, 323, 326, 462, 464, 474, 475], "variou": [3, 4, 8, 12, 14, 15, 20, 24, 30, 34, 38, 41, 44, 202, 206, 216, 224, 228, 231, 232, 242, 243, 244, 245, 247, 248, 274, 324, 427, 474, 479], "algorithm": [3, 4, 7, 8, 12, 13, 14, 20, 24, 30, 209, 212, 216, 230, 232, 235, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 257, 312, 315, 316, 318, 324, 372, 381, 384, 385, 393, 394, 395, 396, 397, 401, 402, 403, 404, 409, 414, 415, 418, 419, 421, 422, 445, 454, 459, 462, 463, 465, 467, 468, 478], "deriv": [3, 12, 34, 243, 246, 252, 254, 324, 327, 471], "grape": [3, 4, 15, 16, 22, 23, 34, 214, 230, 242, 248, 252, 261, 471, 474, 476, 477, 478, 479, 485, 491], "system": [3, 6, 8, 9, 12, 24, 30, 31, 33, 34, 36, 37, 42, 51, 52, 53, 54, 55, 90, 91, 100, 116, 124, 198, 199, 200, 201, 202, 209, 212, 215, 216, 218, 221, 222, 223, 224, 228, 229, 230, 231, 234, 242, 244, 245, 246, 247, 248, 250, 311, 312, 317, 320, 459, 461, 471, 473, 474, 475, 477, 479, 485, 493], "sigmod": [3, 12, 14, 24, 34, 242, 485, 491], "2017": [3, 12, 14, 34, 242, 419, 420, 485], "further": [3, 6, 10, 14, 20, 27, 30, 34, 202, 212, 217, 221, 224, 226, 228, 243, 244, 254, 312, 324, 325, 340, 471, 474], "enhanc": [3, 4, 9, 198, 202, 223, 226, 243], "introduc": [3, 6, 10, 19, 20, 24, 46, 124, 197, 214, 216, 221, 223, 224, 226, 228, 230, 232, 242, 244, 246, 249, 310, 313, 314, 316, 318, 327, 439, 461, 474, 479], "lot": [3, 13, 37, 212, 228, 230, 479], "new": [3, 4, 6, 9, 12, 13, 14, 17, 20, 23, 30, 33, 34, 37, 44, 52, 53, 54, 55, 90, 91, 100, 116, 125, 127, 198, 202, 207, 216, 218, 223, 228, 233, 242, 243, 244, 252, 255, 262, 263, 304, 321, 324, 325, 327, 334, 340, 381, 393, 402, 404, 424, 453, 460, 462, 469, 471, 473, 474, 475, 477, 489], "featur": [3, 6, 9, 12, 23, 32, 34, 45, 124, 197, 207, 221, 223, 230, 232, 234, 237, 238, 242, 243, 246, 247, 248, 249, 252, 257, 310, 311, 318, 322, 324, 462, 469, 474, 479, 489, 494], "storag": [3, 9, 30, 42, 48, 58, 61, 131, 134, 202, 209, 216, 217, 221, 223, 224, 228, 241, 244, 247, 249, 289, 312, 473, 475, 476], "languag": [3, 12, 16, 35, 42, 199, 200, 203, 205, 207, 212, 216, 218, 223, 224, 226, 227, 228, 229, 231, 232, 235, 242, 243, 244, 245, 246, 249, 257, 325, 474, 475, 479], "pattern": [3, 6, 12, 23, 30, 44, 202, 216, 217, 220, 223, 224, 226, 231, 235, 242, 245, 249, 253, 315, 320, 475], "better": [3, 8, 12, 20, 24, 29, 34, 215, 216, 228, 230, 247, 249, 469, 475, 479], "integr": [3, 4, 9, 12, 13, 22, 23, 34, 46, 124, 197, 199, 216, 218, 220, 223, 229, 230, 242, 244, 246, 248, 249, 455, 474, 475, 477, 479], "big": [3, 6, 12, 37, 230, 244, 479], "overview": [3, 23, 34, 49, 199, 205, 207, 223, 228, 243, 471], "architectur": [3, 9, 201, 202, 242, 247, 253], "kei": [3, 4, 13, 20, 27, 45, 46, 47, 74, 75, 90, 91, 124, 147, 148, 163, 164, 197, 198, 207, 215, 218, 221, 222, 223, 226, 228, 241, 244, 246, 247, 248, 253, 254, 255, 286, 287, 288, 297, 313, 316, 322, 324, 327, 356, 405, 409, 410, 411, 412, 460, 462, 464, 465, 468, 469, 474, 475, 485, 495], "concept": [3, 244, 247, 310, 311], "centric": [3, 6, 9, 12, 14, 15, 17, 18, 22, 34, 230, 231, 242, 244, 245, 479], "ingress": [3, 12], "increment": [3, 14, 16, 18, 20, 34, 227, 232, 244, 252, 479], "compat": [3, 7, 12, 13, 15, 19, 20, 23, 32, 34, 199, 209, 212, 215, 218, 221, 229, 231, 232, 234, 235, 236, 237, 238, 243, 247, 248, 251, 253, 318, 325, 468, 469, 471, 473, 489], "tune": [3, 212, 241, 242], "guid": [4, 7, 9, 16, 27, 29, 32, 37, 41, 44, 45, 46, 124, 197, 198, 199, 201, 202, 204, 206, 207, 214, 215, 218, 220, 222, 226, 227, 229, 234, 237, 238, 243, 257, 489], "code": [4, 6, 8, 14, 15, 16, 18, 29, 31, 32, 34, 36, 49, 52, 53, 54, 55, 90, 91, 100, 116, 124, 125, 126, 127, 128, 163, 164, 173, 189, 197, 200, 202, 204, 214, 216, 217, 220, 221, 228, 233, 242, 243, 244, 249, 250, 252, 253, 255, 260, 310, 311, 312, 313, 316, 317, 322, 381, 423, 466, 474, 475, 477, 482], "organ": [4, 51, 206, 220, 226, 228, 231, 232, 247, 251, 310, 312, 314, 318, 319, 398, 400, 439], "identifi": [4, 9, 13, 24, 47, 221, 224, 226, 228, 242, 243, 245, 253, 302, 389, 456, 459, 462, 469, 475, 482, 495], "simplic": [4, 9], "suggest": [4, 13, 216, 220, 228, 241, 244, 381], "prebuilt": [4, 41, 217], "docker": [4, 27, 32, 33, 36, 38, 41, 45, 199, 201, 206, 207, 209, 217, 231, 475, 482, 486, 489, 491, 492], "imag": [4, 29, 36, 38, 48, 199, 206, 209, 217, 231, 233, 239, 250, 313, 469, 482], "necessari": [4, 6, 23, 27, 37, 41, 45, 201, 204, 217, 218, 223, 227, 241, 264, 272, 277, 311, 312, 314, 316, 324, 474, 475, 483], "depend": [4, 13, 17, 22, 27, 30, 35, 36, 37, 41, 124, 201, 209, 217, 219, 220, 227, 228, 233, 234, 244, 247, 253, 316, 384, 389, 475, 482, 485], "shm": [4, 32, 41, 217, 233, 239, 487], "size": [4, 6, 10, 13, 16, 17, 23, 24, 32, 41, 46, 208, 209, 215, 217, 227, 232, 233, 235, 239, 241, 247, 250, 255, 311, 313, 314, 316, 321, 323, 324, 367, 368, 379, 381, 382, 383, 384, 386, 387, 388, 389, 390, 393, 404, 413, 417, 419, 462, 473, 474, 475, 476, 487], "4096m": [4, 32, 41, 217, 233], "registri": [4, 27, 32, 41, 48, 217, 233, 239, 317, 469, 475, 487], "cn": [4, 23, 27, 29, 31, 32, 41, 48, 217, 233, 239, 241, 317, 475, 486, 487, 495], "hongkong": [4, 27, 32, 41, 48, 217, 233, 239, 475, 487], "aliyunc": [4, 23, 27, 29, 31, 32, 41, 48, 217, 233, 239, 241, 317, 475, 486, 487, 495], "com": [4, 7, 17, 19, 22, 23, 27, 29, 30, 31, 32, 35, 41, 48, 52, 53, 54, 55, 90, 91, 100, 116, 124, 164, 197, 217, 218, 220, 233, 234, 239, 241, 244, 245, 250, 253, 257, 317, 320, 327, 414, 423, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438, 442, 447, 469, 474, 475, 485, 486, 487, 488, 495], "latest": [4, 14, 17, 32, 37, 38, 39, 41, 48, 199, 201, 217, 220, 233, 234, 474, 475, 487, 492], "altern": [4, 45, 47, 221, 390, 409, 413, 462, 474, 475], "manual": [4, 9, 27, 30, 33, 124, 209, 242, 249, 324, 475], "all": [4, 6, 9, 10, 12, 13, 15, 16, 17, 20, 22, 23, 24, 27, 29, 30, 35, 37, 47, 48, 52, 53, 54, 55, 90, 91, 100, 116, 124, 125, 126, 127, 128, 163, 164, 173, 189, 197, 198, 199, 201, 202, 204, 206, 209, 215, 216, 218, 221, 223, 224, 226, 227, 228, 233, 235, 237, 239, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 255, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 327, 331, 332, 334, 335, 339, 341, 356, 357, 361, 362, 365, 367, 368, 372, 381, 390, 399, 405, 419, 420, 422, 424, 448, 456, 457, 460, 462, 469, 473, 474, 475, 478, 483], "pleas": [4, 9, 12, 14, 16, 17, 23, 24, 27, 30, 32, 33, 34, 37, 41, 44, 45, 48, 124, 197, 199, 201, 202, 209, 217, 220, 224, 235, 237, 241, 243, 310, 311, 312, 314, 315, 316, 317, 320, 322, 473, 475, 479, 482, 489], "environ": [4, 11, 19, 20, 23, 24, 27, 29, 33, 37, 38, 39, 45, 199, 209, 212, 214, 218, 222, 231, 237, 243, 244, 251, 253, 257, 317, 321, 327, 469, 474, 475, 476, 483, 488], "after": [4, 6, 9, 14, 15, 17, 18, 20, 22, 24, 29, 32, 33, 34, 44, 100, 173, 198, 204, 212, 220, 224, 226, 232, 244, 245, 247, 253, 254, 255, 265, 310, 311, 312, 313, 320, 321, 322, 327, 424, 435, 454, 462, 466, 468, 469, 471, 474, 475, 476, 483, 485], "clone": [4, 17, 22, 29, 30, 31, 32, 36, 37, 48, 124, 217, 220, 257, 317, 475, 487], "repositori": [4, 29, 36, 37, 48, 124, 215, 220, 257, 469, 475], "enter": [4, 125, 126, 127, 128, 163, 164, 173, 189, 216, 227], "analytical_engin": [4, 15, 17, 31, 36, 257, 485], "directori": [4, 22, 27, 30, 31, 32, 33, 36, 38, 44, 45, 48, 198, 204, 209, 220, 227, 231, 252, 256, 258, 310, 321, 324, 469, 473, 482, 483, 486, 488, 489], "git": [4, 17, 22, 29, 30, 31, 32, 35, 37, 48, 124, 217, 220, 257, 320, 474, 487], "http": [4, 7, 17, 19, 22, 23, 27, 29, 30, 31, 32, 35, 44, 48, 49, 124, 197, 209, 217, 218, 219, 220, 222, 227, 234, 237, 238, 243, 244, 245, 253, 257, 317, 320, 327, 381, 385, 386, 387, 401, 404, 411, 412, 414, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 446, 447, 448, 449, 454, 469, 474, 475, 485, 486, 487, 488, 489, 492, 493, 495], "github": [4, 22, 29, 30, 31, 32, 35, 48, 124, 217, 220, 244, 245, 253, 257, 317, 320, 412, 469, 474, 485, 487, 495], "alibaba": [4, 17, 22, 23, 29, 31, 32, 48, 52, 53, 54, 55, 90, 91, 100, 116, 124, 217, 231, 242, 244, 247, 248, 257, 317, 320, 485, 487, 495], "cd": [4, 17, 22, 29, 31, 32, 35, 48, 124, 201, 217, 219, 227, 257, 317, 320, 322, 475, 482, 483, 485, 487, 493], "sinc": [4, 6, 23, 24, 29, 30, 37, 44, 46, 47, 199, 202, 216, 220, 226, 228, 233, 237, 241, 242, 250, 263, 312, 316, 324, 360, 361, 391, 393, 440, 457, 464, 468, 473, 474, 475], "inherit": [4, 6, 9, 16, 216, 244, 252, 310, 320], "libgrap": [4, 16, 31, 34, 244, 257], "lite": [4, 16, 31, 34, 244, 257], "note": [4, 13, 14, 20, 27, 29, 37, 38, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 202, 204, 216, 220, 221, 223, 226, 228, 232, 237, 238, 241, 243, 244, 245, 253, 254, 255, 263, 302, 304, 312, 316, 324, 327, 336, 337, 340, 344, 357, 358, 359, 360, 361, 362, 368, 369, 374, 377, 379, 381, 382, 383, 384, 386, 388, 390, 391, 393, 394, 395, 396, 397, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 439, 454, 455, 456, 457, 459, 462, 464, 465, 468, 469, 473, 475, 482, 489, 495], "core": [4, 6, 12, 34, 37, 209, 216, 218, 242, 243, 244, 253, 257, 322, 327, 469, 489], "structur": [4, 6, 9, 12, 15, 16, 17, 20, 24, 44, 46, 47, 49, 202, 212, 216, 223, 227, 228, 238, 243, 244, 245, 246, 247, 253, 311, 312, 313, 324, 372, 391, 439, 454, 456, 462, 463, 473, 474, 475, 478], "partition": [4, 208, 320], "worker": [4, 9, 13, 14, 23, 28, 34, 44, 217, 235, 237, 239, 312, 315, 322, 469, 473], "between": [4, 6, 9, 10, 12, 13, 18, 19, 47, 198, 209, 214, 216, 223, 228, 229, 232, 245, 247, 252, 253, 311, 312, 314, 316, 322, 327, 384, 385, 386, 389, 395, 401, 402, 404, 408, 409, 410, 411, 413, 416, 418, 419, 420, 422, 427, 457, 459, 462, 474, 475, 482], "heavili": 4, "reus": [4, 30, 204, 223, 232, 235, 244, 253, 322, 324, 469, 471], "want": [4, 6, 7, 18, 20, 22, 27, 29, 30, 32, 33, 48, 204, 224, 228, 234, 241, 248, 257, 263, 309, 320, 324, 371, 405, 462, 468, 469, 471, 473, 475, 482], "fulli": [4, 202, 232, 235, 246, 253, 263, 404, 474, 485], "recommend": [4, 27, 30, 36, 37, 209, 215, 218, 220, 228, 232, 241, 242, 243, 247, 316], "locat": [4, 23, 27, 36, 38, 45, 46, 47, 103, 176, 198, 199, 201, 215, 217, 221, 228, 233, 241, 246, 256, 258, 312, 313, 324, 475, 476, 482], "like": [4, 14, 15, 18, 19, 20, 23, 24, 27, 32, 36, 37, 41, 44, 45, 47, 48, 198, 209, 212, 215, 216, 218, 220, 223, 228, 229, 231, 233, 241, 242, 243, 247, 248, 249, 251, 252, 253, 311, 316, 320, 322, 324, 381, 391, 393, 401, 462, 468, 469, 471, 473, 474, 475, 476, 495], "therebi": [4, 202, 224], "fledg": [4, 12, 242], "coordin": [4, 15, 27, 29, 35, 37, 38, 41, 214, 218, 237, 252, 324, 374, 469, 475, 482, 483, 486, 487, 489], "while": [4, 6, 12, 19, 20, 29, 34, 46, 47, 199, 202, 204, 212, 215, 219, 221, 223, 224, 226, 227, 228, 232, 242, 244, 245, 246, 248, 249, 311, 316, 322, 358, 359, 419, 422, 424, 456, 462, 471, 474, 475, 483], "": [4, 6, 9, 13, 14, 15, 17, 18, 19, 20, 23, 24, 27, 29, 30, 32, 33, 35, 37, 38, 41, 44, 45, 46, 47, 48, 51, 90, 91, 124, 125, 126, 127, 128, 163, 164, 173, 189, 197, 198, 199, 200, 202, 204, 206, 209, 215, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 231, 232, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 250, 253, 263, 279, 280, 297, 310, 312, 314, 316, 319, 321, 323, 324, 327, 363, 374, 381, 384, 386, 389, 393, 396, 398, 399, 400, 416, 424, 425, 426, 449, 452, 454, 462, 468, 469, 471, 473, 474, 475, 476, 493, 494], "onli": [4, 6, 9, 12, 13, 14, 15, 17, 18, 20, 22, 23, 27, 29, 30, 34, 36, 44, 45, 46, 47, 48, 202, 212, 215, 216, 221, 223, 224, 226, 228, 231, 232, 234, 235, 241, 242, 243, 244, 245, 246, 247, 249, 252, 253, 254, 255, 257, 261, 310, 311, 312, 314, 315, 316, 317, 324, 325, 327, 346, 347, 356, 382, 383, 408, 409, 413, 421, 434, 455, 456, 462, 468, 469, 473, 474, 475, 476, 479], "ship": 4, "6": [4, 10, 17, 18, 22, 31, 197, 198, 212, 218, 226, 227, 228, 243, 250, 253, 311, 316, 322, 327, 346, 365, 394, 395, 396, 413, 427, 429, 435, 436, 439, 442, 446, 447, 455, 457, 462, 475, 477, 485, 488, 489, 493], "graphalyt": [4, 249], "benchmark": [4, 34, 202, 224, 228, 231, 245, 247, 249, 381], "flatten": [4, 13, 239], "thu": [4, 6, 12, 16, 20, 27, 34, 36, 209, 212, 228, 237, 247, 253, 315, 357, 365, 462, 474], "execut": [4, 6, 9, 12, 14, 15, 17, 23, 24, 27, 29, 41, 44, 45, 47, 124, 197, 199, 200, 202, 204, 212, 215, 216, 217, 218, 222, 223, 226, 228, 231, 243, 244, 246, 247, 252, 253, 254, 281, 316, 320, 324, 325, 327, 422, 466, 469, 471, 475, 477, 482, 483, 485, 489, 493], "written": [4, 12, 20, 47, 228, 242, 244, 246, 440, 471, 474, 477, 485], "giraph": [4, 7, 8, 12, 17, 23, 24, 230, 249, 479], "graphx": [4, 7, 8, 12, 17, 24, 230, 249, 479], "app": [4, 15, 16, 17, 18, 33, 254, 255, 257, 262, 265, 288, 294, 297, 311, 324, 467, 468, 474, 485], "librari": [4, 6, 12, 15, 16, 31, 32, 33, 87, 107, 124, 160, 180, 199, 202, 216, 217, 242, 252, 253, 257, 475], "serv": [4, 27, 42, 198, 209, 220, 223, 231, 243, 244, 247, 312, 475, 482], "layer": [4, 6, 215, 216, 232, 235, 244, 247, 249, 310, 311, 314, 318, 322, 494], "cuda": [4, 250], "suit": [4, 36, 212, 217, 232, 247, 482], "gpu": [4, 244, 317], "acceler": [4, 27, 474], "fragment": [4, 10, 12, 13, 14, 16, 17, 18, 208, 216, 245, 247, 255, 287, 324, 325, 471, 476, 479, 485], "extend": [4, 9, 17, 23, 202, 223, 224, 226, 227, 228, 249, 254, 311, 319, 320, 408, 474, 485], "loader": [4, 22, 217, 240, 252, 263, 274, 467, 476, 490, 491], "mutabl": [4, 244], "io": [4, 27, 30, 33, 41, 244, 245, 253, 321, 324, 412, 469, 475, 478, 492], "io_adaptor": 4, "parallel": [4, 6, 12, 14, 15, 16, 24, 34, 212, 231, 239, 242, 244, 246, 252, 255, 312, 391, 393, 430, 462, 465, 475, 485], "sub": [4, 12, 14, 18, 228, 231, 241, 254, 314, 316, 474, 479], "helper": [4, 482], "thread": [4, 6, 31, 44, 215, 217, 232, 250, 323], "messag": [4, 6, 10, 14, 15, 16, 17, 18, 24, 34, 36, 37, 38, 198, 199, 206, 209, 216, 228, 235, 247, 252, 255, 323, 474, 485], "buffer": [4, 321], "sync": [4, 255, 321, 474], "serial": [4, 226, 227, 252, 324, 469, 474, 493], "vertex_map": [4, 13, 45, 46, 174, 193, 198, 303, 324, 469], "some": [4, 6, 10, 12, 13, 17, 20, 23, 29, 31, 34, 36, 37, 45, 198, 199, 215, 216, 218, 221, 224, 226, 227, 232, 241, 242, 245, 247, 253, 310, 311, 312, 318, 320, 322, 323, 324, 325, 372, 381, 391, 393, 396, 415, 456, 461, 462, 473, 474, 475, 476, 482], "map": [4, 6, 13, 45, 74, 75, 93, 104, 115, 147, 148, 198, 199, 206, 207, 221, 224, 226, 228, 245, 252, 311, 320, 324, 454, 469, 475, 476, 490, 493], "intern": [4, 13, 45, 52, 54, 55, 90, 91, 100, 116, 125, 127, 128, 163, 164, 173, 189, 198, 199, 224, 245, 324, 362, 485, 487], "frame": [4, 247], "wrap": [4, 241, 244, 252, 257], "becaus": [4, 37, 216, 220, 224, 228, 247, 310, 313, 327, 457, 474, 475], "reli": [4, 9, 19, 201, 220, 222, 317, 474], "templat": [4, 9, 15, 28, 48, 208, 239, 252, 474], "inadequ": 4, "usual": [4, 9, 13, 19, 27, 38, 39, 209, 212, 216, 220, 226, 228, 232, 235, 236, 237, 247, 316, 320, 323, 390, 413, 456, 462, 474, 476, 477], "multipl": [4, 6, 12, 14, 17, 29, 30, 41, 42, 46, 47, 202, 204, 215, 216, 221, 223, 226, 231, 232, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 311, 312, 316, 327, 424, 462, 468, 473, 474, 477, 483], "label": [4, 6, 7, 13, 15, 20, 33, 51, 52, 77, 90, 91, 119, 121, 125, 150, 163, 164, 192, 194, 198, 208, 215, 220, 221, 223, 224, 234, 238, 239, 240, 242, 243, 245, 247, 252, 253, 254, 255, 263, 310, 313, 316, 322, 324, 327, 362, 366, 373, 377, 378, 380, 390, 391, 393, 394, 395, 396, 397, 439, 440, 462, 464, 465, 468, 469, 473, 475, 476, 489, 490, 493, 494], "cannot": [4, 27, 30, 198, 209, 223, 226, 228, 232, 247, 249, 252, 253, 257, 312, 324, 381, 420, 421, 468, 469, 475, 477, 488], "determin": [4, 37, 44, 216, 226, 228, 232, 235, 241, 245, 246, 252, 253, 312, 316, 407, 410, 411, 412, 469], "reason": [4, 52, 53, 54, 55, 90, 91, 100, 116, 209, 224, 226, 232, 311, 312, 442], "jit": 4, "technologi": [4, 214, 216, 248], "compil": [4, 15, 31, 32, 34, 44, 49, 124, 199, 202, 206, 207, 209, 215, 216, 217, 221, 227, 242, 253, 265, 474, 475, 477, 483], "associ": [4, 6, 9, 29, 44, 45, 47, 204, 221, 226, 247, 396, 408, 454, 456, 462, 469, 474, 475], "runtim": [4, 6, 17, 23, 31, 49, 51, 198, 199, 216, 242, 244, 245, 246, 252, 253, 257, 474, 487, 488], "wrapper": [4, 219, 227, 229, 231, 246, 252, 265, 271, 324, 325, 474], "facilit": [4, 20, 217, 226, 231, 232, 235, 247, 311, 474, 475], "task": [4, 6, 7, 14, 34, 37, 41, 216, 218, 228, 231, 232, 234, 236, 237, 238, 239, 240, 242, 244, 245, 247, 311, 322, 474], "api": [4, 8, 15, 16, 18, 22, 24, 30, 34, 42, 49, 52, 53, 54, 55, 90, 91, 100, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 207, 212, 214, 222, 231, 242, 248, 251, 257, 263, 310, 312, 314, 315, 316, 320, 326, 462, 469, 473, 474, 475, 476, 485, 496], "jar": [4, 8, 22, 23, 35, 39, 124, 253, 475, 485], "read": [4, 8, 20, 24, 37, 46, 202, 212, 219, 221, 225, 236, 241, 242, 243, 244, 310, 311, 316, 321, 322, 324, 360, 361, 460, 462, 463, 467, 469, 471, 475, 493], "about": [4, 7, 12, 14, 17, 30, 34, 37, 38, 48, 202, 215, 217, 218, 228, 233, 234, 242, 247, 248, 252, 253, 316, 320, 321, 468, 469, 473, 478, 485], "cmake": [4, 31, 32, 36, 209, 317], "script": [4, 32, 37, 249, 250, 281, 310, 311, 322, 325, 486], "configur": [4, 15, 16, 17, 23, 27, 31, 35, 37, 38, 39, 45, 47, 52, 53, 54, 55, 90, 91, 100, 116, 124, 125, 126, 127, 128, 163, 164, 173, 189, 198, 199, 201, 202, 204, 206, 207, 209, 217, 226, 227, 228, 237, 241, 242, 252, 253, 264, 265, 271, 272, 277, 302, 321, 322, 324, 381, 391, 393, 469, 471, 476, 482], "figur": [4, 6, 9, 12, 24, 27, 30, 34, 216, 220, 228, 232, 235, 243, 245, 246, 247, 312, 314, 445, 471], "abov": [4, 6, 7, 9, 13, 14, 15, 16, 19, 22, 27, 30, 32, 33, 45, 204, 212, 215, 218, 224, 226, 228, 230, 234, 241, 245, 246, 310, 311, 312, 316, 320, 365, 381, 401, 424, 458, 468, 475, 477, 479, 483], "well": [4, 6, 8, 9, 12, 13, 18, 20, 27, 29, 34, 47, 201, 216, 220, 223, 224, 231, 232, 241, 243, 244, 245, 246, 247, 251, 316, 324, 332, 365, 413, 462, 471, 475, 478, 479, 483], "thei": [4, 6, 20, 24, 27, 30, 31, 46, 212, 216, 220, 223, 228, 231, 237, 242, 245, 247, 249, 310, 311, 319, 324, 368, 376, 381, 409, 411, 412, 455, 456, 462, 468, 469, 471, 474, 475], "work": [4, 8, 11, 14, 18, 20, 32, 34, 36, 37, 41, 47, 198, 212, 215, 216, 218, 223, 226, 231, 235, 241, 242, 243, 244, 245, 246, 247, 252, 254, 314, 316, 324, 461, 462, 468, 477], "partit": [4, 6, 9, 10, 12, 13, 14, 15, 18, 24, 215, 216, 224, 235, 242, 245, 247, 253, 315, 320, 379, 384, 385, 386, 389, 420, 479], "object": [4, 15, 38, 72, 78, 90, 91, 93, 97, 104, 113, 115, 121, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 217, 218, 219, 221, 226, 227, 228, 232, 235, 241, 242, 243, 245, 247, 250, 252, 264, 277, 289, 303, 311, 313, 314, 315, 316, 319, 322, 325, 326, 340, 360, 361, 419, 459, 462, 464, 465, 467, 468, 475, 485, 495], "messagemessag": 4, "strategi": [4, 9, 10, 12, 16, 24, 47, 224, 226, 227, 228, 235, 247, 250, 255, 314, 315, 316, 319, 320, 465, 478, 493], "respons": [4, 9, 12, 16, 27, 34, 36, 37, 49, 209, 216, 220, 242, 252, 320, 323, 469, 471], "state": [4, 6, 9, 10, 12, 24, 27, 34, 216, 231, 245, 246, 248, 250, 321, 324, 381, 384, 385, 386, 387, 389, 391, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 409, 410, 411, 412, 413, 416, 417, 418, 422, 454, 457, 459], "synchron": [4, 6, 10, 12, 14, 15, 242, 474], "explicitli": [4, 13, 252, 312, 381, 469, 475], "implicitli": [4, 263], "main": [4, 6, 30, 34, 37, 42, 45, 52, 53, 54, 55, 90, 91, 100, 116, 124, 202, 216, 223, 224, 227, 228, 249, 310, 319, 322, 327, 469, 475, 494, 495], "logic": [4, 6, 9, 14, 16, 17, 216, 226, 228, 231, 244, 246, 250, 313, 473, 474, 475, 483, 485], "access": [4, 6, 12, 14, 27, 29, 30, 31, 38, 48, 51, 200, 202, 209, 215, 217, 220, 226, 227, 228, 232, 235, 241, 242, 244, 245, 246, 247, 311, 312, 313, 314, 315, 316, 321, 322, 324, 462, 465, 469, 471, 473, 474, 475, 476, 483, 495], "send": [4, 6, 10, 18, 24, 198, 217, 245, 255, 474, 485], "receiv": [4, 6, 9, 14, 16, 17, 24, 37, 198, 241, 242, 245, 247, 255, 316, 320, 471, 474, 485], "messagemanag": [4, 17, 485], "call": [4, 6, 12, 13, 16, 17, 19, 24, 51, 52, 53, 54, 55, 90, 91, 100, 116, 125, 126, 127, 128, 163, 164, 173, 189, 202, 204, 209, 224, 226, 228, 235, 252, 255, 310, 312, 316, 319, 320, 325, 357, 371, 372, 402, 413, 442, 454, 462, 465, 469, 474, 475], "encourag": [4, 6, 15, 24, 37], "fork": 4, "repo": [4, 29, 37, 217, 244, 475, 486, 487], "much": [4, 6, 13, 19, 22, 199, 209, 216, 226, 228, 312, 316, 474], "easier": [4, 32, 36, 37, 42, 226, 244, 245, 246, 316, 469], "begin": [4, 15, 16, 30, 45, 208, 212, 220, 221, 225, 228, 243, 254, 255, 401, 468, 474], "small": [4, 9, 11, 13, 20, 202, 212, 228, 245, 246, 249, 327, 382, 383, 409, 452, 463, 469, 475], "chang": [4, 9, 11, 12, 14, 20, 23, 33, 34, 36, 44, 199, 228, 242, 246, 247, 249, 250, 253, 270, 302, 311, 324, 327, 340, 462, 469, 475], "revis": [4, 14, 17, 250], "ad": [4, 6, 9, 13, 15, 17, 19, 29, 37, 221, 231, 232, 247, 249, 250, 261, 262, 312, 324, 329, 330, 340, 398, 399, 400, 402, 456, 462, 471, 493, 495], "gradual": 4, "avoid": [4, 13, 224, 227, 474, 475], "larg": [4, 6, 7, 9, 11, 12, 13, 14, 18, 20, 23, 27, 34, 37, 47, 202, 209, 212, 215, 216, 218, 222, 227, 228, 229, 231, 232, 235, 236, 237, 242, 243, 244, 248, 249, 253, 297, 311, 312, 314, 316, 318, 322, 323, 336, 360, 361, 381, 416, 474, 485], "singl": [4, 6, 7, 11, 14, 15, 17, 20, 24, 27, 36, 37, 41, 47, 198, 201, 204, 209, 215, 221, 224, 226, 228, 233, 234, 236, 237, 242, 243, 245, 246, 253, 254, 310, 324, 335, 342, 364, 368, 373, 383, 388, 405, 411, 456, 458, 462, 469, 473, 477], "commit": [4, 250, 471], "python3": [4, 7, 23, 27, 28, 30, 31, 32, 35, 36, 41, 209, 217, 218, 233, 234, 239, 243, 485, 486, 487, 488], "gsctl": [4, 32, 36, 41, 214, 217, 233, 486, 487], "py": [4, 15, 32, 36, 41, 125, 126, 127, 128, 163, 164, 173, 189, 197, 217, 233, 239, 310, 317, 322, 469, 475, 482, 485, 486, 487, 494], "cmakelist": 4, "txt": [4, 31, 35, 485], "artifact": [4, 17, 23, 29, 36, 48, 217, 233, 482], "grape_engin": [4, 38, 287, 483], "togeth": [4, 9, 10, 20, 41, 216, 228, 237, 242, 250, 316, 320, 363], "share": [4, 6, 30, 31, 37, 44, 47, 48, 228, 233, 242, 244, 245, 474, 476, 487], "bunch": [4, 41, 249, 252], "binari": [4, 15, 27, 31, 247, 482], "choos": [4, 6, 12, 22, 34, 41, 47, 215, 216, 226, 228, 231, 232, 242, 247, 310, 311, 401, 402, 440], "prefix": [4, 31, 36, 37, 200, 209, 217, 226, 233, 239, 324, 456, 474, 493], "usr": [4, 475], "look": [4, 15, 18, 20, 27, 44, 45, 124, 198, 215, 228, 241, 257, 323, 468, 471, 475, 476], "file": [4, 15, 17, 22, 23, 28, 29, 35, 37, 38, 39, 44, 45, 47, 48, 51, 103, 116, 189, 198, 199, 201, 202, 204, 206, 207, 209, 214, 215, 217, 220, 241, 252, 253, 261, 284, 310, 311, 317, 322, 324, 360, 361, 412, 462, 464, 469, 471, 475, 476, 482, 483, 485, 495], "investig": [4, 6], "ensur": [4, 6, 9, 32, 35, 36, 37, 44, 45, 46, 48, 198, 199, 201, 202, 204, 216, 221, 224, 243, 249, 469], "correct": [4, 6, 14, 37, 38, 216, 220, 316, 324, 327, 474], "unit": [4, 216, 228, 246, 320, 410, 411, 412, 475], "easili": [4, 12, 20, 22, 23, 24, 27, 29, 30, 34, 204, 209, 215, 218, 228, 231, 242, 243, 244, 246, 247, 249, 316, 318, 474], "graphscope_hom": [4, 23, 487], "pwd": [4, 30, 201, 322], "download": [4, 7, 17, 19, 22, 23, 27, 29, 30, 32, 35, 36, 39, 48, 201, 206, 218, 219, 222, 227, 233, 234, 241, 250, 317, 322, 487], "tmp": [4, 18, 19, 28, 38, 48, 215, 217, 284, 289, 322, 324, 469, 473, 475, 483, 485, 488], "gstest": [4, 19, 22, 23, 30, 485, 487], "against": [4, 14, 37, 217, 253, 444], "compar": [4, 19, 216, 221, 223, 224, 226, 228, 245, 250, 252, 253, 313, 381, 468], "ground": [4, 223, 247], "truth": [4, 247], "distribut": [6, 10, 11, 12, 14, 15, 18, 20, 22, 23, 24, 27, 32, 34, 202, 209, 214, 215, 216, 218, 222, 224, 226, 229, 231, 232, 235, 236, 237, 239, 240, 242, 244, 245, 247, 248, 249, 253, 257, 310, 313, 315, 319, 321, 322, 326, 381, 384, 391, 393, 402, 409, 410, 411, 412, 413, 421, 475, 476], "broad": [6, 244], "spectrum": [6, 244, 327, 454], "central": [6, 15, 42, 212, 231, 232, 243, 244, 247, 248, 253, 316, 327, 439, 474], "match": [6, 15, 44, 46, 51, 124, 197, 198, 202, 216, 217, 218, 219, 220, 221, 223, 242, 243, 244, 253, 361, 381, 389, 391, 393, 420, 456, 493], "mine": [6, 15, 242, 244, 245], "philosophi": [6, 24, 244], "step": [6, 9, 14, 15, 27, 29, 30, 31, 32, 33, 36, 37, 199, 200, 202, 207, 215, 216, 217, 218, 219, 224, 227, 229, 231, 232, 239, 240, 241, 242, 243, 244, 246, 255, 310, 311, 312, 314, 316, 319, 322, 381, 389, 401, 454, 475, 483, 495], "stronger": [6, 244], "flexibl": [6, 12, 13, 23, 44, 47, 222, 223, 228, 231, 242, 243, 244, 469, 473], "flow": [6, 200, 244, 245, 310, 452], "oper": [6, 9, 12, 15, 30, 31, 36, 44, 52, 53, 54, 55, 116, 125, 126, 127, 128, 189, 201, 202, 204, 206, 209, 212, 214, 215, 216, 218, 222, 223, 224, 226, 231, 232, 235, 241, 242, 244, 245, 246, 247, 248, 253, 255, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 282, 283, 284, 286, 287, 290, 291, 292, 293, 311, 312, 313, 314, 315, 316, 318, 319, 321, 323, 324, 344, 423, 424, 462, 465, 467, 469, 471, 474, 475, 482], "arbitrari": [6, 226, 228, 244, 314, 389, 393, 409, 410, 411, 412, 462, 465, 475, 493], "beyond": [6, 24, 223, 244, 248, 422], "make": [6, 9, 13, 14, 15, 16, 23, 27, 29, 30, 31, 32, 35, 36, 37, 41, 42, 45, 51, 100, 173, 199, 202, 204, 214, 215, 216, 217, 219, 220, 221, 223, 226, 227, 228, 231, 233, 241, 244, 245, 246, 247, 250, 316, 317, 320, 322, 324, 340, 392, 456, 462, 469, 473, 474, 475, 482, 486, 487], "divers": [6, 10, 12, 34, 47, 214, 216, 244, 245, 311, 471], "easi": [6, 7, 12, 202, 204, 212, 215, 216, 218, 219, 227, 228, 229, 231, 234, 235, 241, 242, 243, 244, 248, 311, 316, 320, 482], "write": [6, 8, 9, 12, 15, 17, 22, 24, 34, 37, 202, 209, 212, 221, 224, 226, 228, 231, 241, 242, 243, 244, 245, 246, 251, 255, 257, 310, 316, 320, 324, 325, 464, 465, 471, 474, 479, 485, 489], "few": [6, 29, 202, 209, 215, 244, 474], "satisfactori": [6, 244, 247], "major": [6, 12, 13, 14, 221, 245, 252], "recent": [6, 314, 475], "framework": [6, 9, 15, 16, 17, 18, 22, 23, 24, 209, 216, 223, 229, 232, 235, 241, 242, 244, 245, 246, 247, 248, 249, 253, 254, 303, 314, 316, 318, 320, 324, 325, 466, 469, 471, 473, 485, 490, 495], "focu": [6, 41, 242, 246, 249, 320], "hand": [6, 30, 33, 216, 224, 226, 442], "point": [6, 13, 14, 22, 37, 42, 198, 216, 226, 235, 245, 310, 365, 390, 419, 422, 462, 473, 475, 476, 477, 482], "breadth": [6, 253, 327], "first": [6, 13, 14, 15, 16, 17, 19, 20, 24, 29, 35, 37, 45, 46, 48, 124, 197, 199, 209, 212, 216, 217, 218, 219, 221, 226, 227, 228, 232, 236, 237, 241, 243, 244, 246, 247, 253, 254, 310, 311, 316, 318, 320, 324, 327, 331, 361, 377, 380, 389, 402, 405, 416, 417, 418, 419, 420, 423, 456, 461, 462, 465, 468, 469, 471, 474, 475, 476, 477], "search": [6, 37, 214, 220, 232, 242, 245, 247, 249, 253, 327, 491], "pagerank": [6, 8, 9, 13, 17, 22, 33, 34, 37, 212, 242, 245, 248, 250, 253, 254, 327, 465, 468, 473, 485], "shortest": [6, 7, 19, 24, 216, 243, 245, 253, 327, 477], "leav": [6, 228, 324, 362, 372], "varieti": [6, 12, 34, 212, 242, 249], "suffer": [6, 212], "effici": [6, 9, 12, 13, 16, 18, 23, 34, 47, 51, 198, 202, 204, 209, 212, 214, 220, 223, 224, 227, 228, 231, 232, 235, 241, 242, 243, 244, 245, 246, 247, 248, 249, 257, 314, 316, 318, 395, 416, 473, 474, 476, 478], "limit": [6, 9, 13, 22, 47, 207, 209, 215, 219, 220, 221, 224, 229, 232, 245, 246, 247, 249, 250, 469, 488, 493], "phase": [6, 16, 23, 24, 311, 316], "propag": [6, 7, 9, 14, 36, 242, 243, 245, 247, 253, 316, 334, 424], "short": [6, 244, 249, 250, 342, 474, 475], "isvp": 6, "until": [6, 9, 14, 17, 24, 27, 30, 226, 228, 247, 321, 381, 404, 475, 493], "updat": [6, 9, 12, 14, 15, 17, 20, 24, 27, 29, 32, 34, 44, 54, 90, 91, 124, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 226, 231, 232, 242, 245, 247, 249, 317, 320, 462, 471, 475, 485, 486], "Such": [6, 13, 200, 246, 249, 284, 289, 421, 430], "abstract": [6, 42, 212, 231, 235, 238, 242, 243, 244, 310, 311, 318, 320, 321, 476], "bring": [6, 41], "product": [6, 12, 32, 209, 235, 242, 246, 249, 255, 311, 312, 316, 482, 493], "sacrific": 6, "almost": [6, 22, 228, 397, 474], "infeas": 6, "kind": [6, 9, 12, 13, 15, 27, 33, 34, 47, 48, 209, 228, 239, 241, 243, 244, 249, 252, 254, 314, 316, 320, 321, 459, 468, 473, 475, 477, 478, 486, 488, 492], "At": [6, 12, 14, 15, 20, 34, 37, 124, 216, 227, 228, 311, 321, 475, 477], "advanc": [6, 7, 15, 216, 234, 235, 244, 408], "pose": 6, "challeng": [6, 9, 211, 242, 474], "repres": [6, 9, 12, 15, 44, 46, 47, 212, 216, 220, 224, 228, 232, 234, 235, 238, 241, 242, 243, 244, 245, 247, 250, 252, 253, 254, 261, 288, 311, 312, 313, 314, 316, 320, 322, 324, 368, 401, 409, 410, 411, 412, 413, 421, 428, 431, 435, 443, 452, 454, 456, 457, 462, 466, 469, 474, 475], "non": [6, 9, 27, 198, 226, 249, 252, 255, 313, 351, 352, 372, 391, 393, 396, 420, 424, 431, 449, 462, 463], "ones": [6, 9, 248, 253, 318], "distil": 6, "critic": [6, 13, 232, 253], "context": [6, 15, 17, 18, 20, 27, 31, 47, 125, 126, 127, 128, 163, 164, 173, 189, 224, 244, 246, 253, 255, 260, 261, 262, 268, 269, 284, 289, 292, 293, 295, 304, 307, 320, 324, 327, 452, 467, 469, 474, 482, 485], "fall": 6, "meet": [6, 15, 18, 37, 212, 216, 218, 235, 242, 247, 314, 315, 381, 410, 411, 412, 477, 479], "therefor": [6, 12, 15, 212, 216, 218, 220, 221, 224, 226, 228, 232, 243, 310, 311, 316, 408, 474, 483], "fulfil": [6, 15, 18, 202, 244], "ligra": 6, "By": [6, 13, 17, 20, 30, 36, 44, 45, 46, 48, 199, 209, 212, 224, 226, 228, 229, 234, 241, 245, 247, 248, 311, 312, 327, 462, 471, 474, 482, 483], "must": [6, 13, 24, 27, 30, 37, 45, 46, 47, 51, 62, 135, 204, 206, 209, 215, 226, 228, 242, 252, 254, 263, 311, 312, 314, 315, 316, 324, 326, 327, 340, 379, 381, 389, 392, 402, 404, 406, 409, 411, 413, 421, 424, 460, 462, 464, 468, 474, 475], "race": 6, "schedul": [6, 23, 36, 242, 244, 469], "do": [6, 15, 16, 18, 20, 29, 30, 31, 33, 35, 37, 41, 44, 45, 52, 125, 209, 215, 216, 217, 220, 221, 224, 228, 241, 252, 253, 254, 271, 287, 312, 324, 381, 393, 405, 409, 419, 422, 440, 456, 462, 465, 468, 469, 473, 474, 475, 479, 482], "so": [6, 12, 13, 30, 37, 41, 47, 201, 209, 215, 216, 218, 222, 227, 228, 232, 235, 237, 241, 242, 244, 253, 257, 310, 316, 318, 337, 372, 377, 390, 391, 392, 395, 410, 411, 412, 423, 456, 462, 474, 475, 489], "middlewar": 6, "flashwar": 6, "hide": [6, 212], "automat": [6, 9, 12, 14, 34, 44, 46, 202, 204, 215, 216, 219, 224, 227, 231, 241, 242, 245, 246, 247, 249, 254, 322, 324, 462, 475, 477, 478, 495], "adapt": [6, 22, 44, 202, 216, 247, 249, 250, 477, 478], "70": [6, 15, 493], "40": [6, 15, 250, 312, 313, 315, 389, 455], "commonli": [6, 221, 226, 231, 235, 241], "now": [6, 7, 20, 23, 27, 45, 48, 198, 202, 215, 217, 220, 221, 223, 227, 228, 234, 253, 320, 393, 475, 477, 490], "succinct": [6, 224], "interfac": [6, 9, 11, 12, 17, 18, 19, 22, 23, 34, 42, 198, 209, 212, 214, 216, 228, 229, 230, 232, 235, 242, 245, 246, 247, 248, 249, 252, 257, 312, 313, 314, 316, 317, 318, 319, 462, 469, 479], "help": [6, 9, 12, 13, 16, 17, 32, 37, 38, 199, 206, 220, 226, 228, 239, 241, 245, 246, 320, 324, 474, 476, 482, 486], "demonstr": [6, 16, 44, 215, 216, 223, 231, 236, 238, 242, 243, 245, 247, 249, 254, 310, 322, 324, 469, 474], "up": [6, 13, 20, 23, 37, 199, 220, 226, 228, 231, 233, 235, 248, 255, 320, 323, 361, 365, 389, 456, 474, 475, 492], "92": [6, 327], "bulk": [6, 15, 52, 125, 198], "bsp": [6, 15], "paradigm": [6, 15, 231, 235, 242, 310, 316], "primari": [6, 15, 45, 46, 47, 74, 75, 90, 91, 124, 147, 148, 163, 164, 197, 202, 207, 224, 242, 249, 475], "constitut": [6, 238, 241], "superstep": [6, 16, 17, 24, 255], "vertexsubset": [6, 15], "indic": [6, 13, 24, 37, 38, 46, 47, 51, 198, 202, 204, 215, 228, 241, 244, 245, 246, 250, 261, 311, 313, 316, 324, 368, 371, 381, 384, 385, 386, 387, 389, 391, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 409, 410, 411, 412, 413, 416, 417, 418, 422, 452, 454, 457, 459, 464, 474], "maintain": [6, 10, 14, 35, 36, 46, 223, 224, 226, 242, 245, 246, 475], "onc": [6, 12, 15, 17, 20, 24, 27, 29, 30, 34, 36, 47, 51, 204, 216, 217, 232, 253, 255, 312, 313, 316, 322, 324, 325, 327, 357, 462, 469, 475, 482], "describ": [6, 27, 36, 37, 38, 47, 48, 204, 209, 215, 217, 228, 232, 233, 242, 246, 247, 254, 311, 314, 316, 321, 322, 361, 365, 381, 382, 383, 386, 391, 393, 394, 419, 420, 433, 440, 442, 456, 458, 459, 470, 473, 474, 475, 483, 488], "vsize": [6, 15], "size_t": [6, 13, 208, 252, 255, 321, 471, 474], "vertexmap": [6, 13, 15, 101, 124, 174, 197, 208], "condit": [6, 9, 14, 24, 27, 38, 44, 216, 223, 228, 235, 244, 246, 250, 381, 410, 411, 412, 420, 421, 474], "f": [6, 20, 33, 48, 215, 217, 234, 239, 240, 243, 316, 327, 414, 415, 461, 475, 483, 489], "output": [6, 14, 17, 24, 27, 29, 30, 34, 38, 212, 215, 217, 220, 223, 224, 226, 228, 232, 234, 235, 238, 242, 243, 247, 250, 252, 281, 289, 297, 310, 316, 318, 322, 324, 325, 409, 411, 413, 454, 466, 468, 475, 485, 486, 489, 494], "form": [6, 20, 116, 189, 216, 222, 224, 226, 228, 232, 235, 246, 247, 253, 310, 312, 313, 316, 363, 383, 413, 428, 430, 433, 436, 440, 462, 468], "special": [6, 20, 202, 207, 223, 228, 242, 311, 430, 446, 456, 479], "m": [6, 7, 9, 18, 20, 23, 27, 28, 30, 31, 32, 35, 215, 216, 217, 218, 228, 234, 243, 253, 254, 327, 337, 368, 372, 374, 385, 391, 393, 395, 397, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 441, 450, 454, 455, 459, 462, 475, 485], "omit": [6, 204, 241, 254, 335, 476, 495], "filter": [6, 15, 23, 44, 216, 223, 229, 241, 246, 253, 254, 454, 468, 474, 493], "semant": [6, 216, 235, 315, 474], "unchang": 6, "edgemap": [6, 15, 101, 124, 174, 197], "sourc": [6, 7, 8, 9, 14, 15, 18, 22, 23, 24, 29, 33, 36, 37, 38, 45, 47, 75, 77, 148, 150, 202, 207, 208, 209, 215, 217, 218, 220, 221, 228, 232, 233, 235, 241, 243, 245, 246, 247, 249, 252, 253, 254, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 303, 304, 305, 307, 309, 312, 313, 314, 315, 316, 322, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 464, 466, 468, 469, 471, 473, 474, 475, 477, 482, 485, 486, 487, 493, 495], "satisfi": [6, 9, 24, 32, 202, 218, 228, 246, 249, 253, 257, 321, 327, 379, 409, 413, 420, 421, 479], "h": [6, 9, 15, 16, 20, 36, 41, 198, 206, 232, 233, 250, 261, 327, 338, 341, 362, 389, 393, 409, 454, 461, 462, 474, 486, 491], "conduct": [6, 15, 228, 250, 316], "allow": [6, 11, 12, 20, 22, 24, 27, 30, 36, 42, 44, 45, 47, 124, 197, 199, 202, 212, 215, 216, 220, 221, 223, 224, 226, 228, 229, 230, 231, 235, 241, 242, 243, 245, 246, 247, 248, 249, 311, 316, 386, 391, 393, 396, 401, 404, 409, 454, 462, 471, 474, 479, 482], "dynam": [6, 12, 34, 199, 200, 202, 216, 231, 242, 244, 245, 247, 253, 264, 277, 382, 383, 465, 471, 475], "even": [6, 8, 20, 216, 220, 228, 244, 245, 318, 324, 327, 391, 401, 419, 421, 422, 462, 474], "virtual": [6, 9, 23, 47, 218, 220, 243, 252, 320, 321], "gener": [6, 9, 13, 14, 17, 27, 34, 41, 47, 124, 199, 204, 212, 214, 216, 222, 224, 226, 228, 232, 235, 241, 242, 243, 244, 245, 247, 253, 262, 310, 311, 312, 316, 322, 324, 326, 327, 462, 463, 467, 469, 471, 473, 474, 475, 476, 477, 483], "index": [6, 12, 13, 31, 45, 46, 76, 149, 198, 208, 214, 232, 235, 241, 247, 252, 253, 254, 312, 313, 321, 324, 326, 327, 336, 360, 361, 391, 393, 394, 395, 397, 474, 491, 495], "pre": [6, 29, 32, 51, 209, 216, 223, 228, 234, 238, 243, 246, 469, 488], "conveni": [6, 29, 209, 215, 220, 228, 232, 244, 316, 460, 462], "revers": [6, 20, 221, 228, 270, 273, 326, 327, 405, 413, 462], "exchang": [6, 14], "chosen": [6, 391, 398, 399, 400, 401, 402, 413, 417, 457], "temporari": 6, "sequenti": [6, 12, 14, 18, 34, 36, 242, 360, 361, 397, 474, 479, 485], "pull": [6, 12, 14, 27, 29, 32, 34, 38, 199, 209, 215, 245, 317, 320, 469, 475, 487], "mode": [6, 15, 27, 32, 36, 48, 209, 227, 236, 239, 241, 252, 253, 254, 303, 310, 314, 320, 322, 324, 464, 469, 475, 479, 483, 495], "push": [6, 12, 34, 37, 44, 216, 223, 245, 320], "anoth": [6, 9, 10, 20, 36, 47, 216, 226, 228, 241, 242, 243, 247, 255, 391, 424, 462, 474, 477, 478], "final": [6, 9, 13, 14, 17, 19, 24, 216, 220, 228, 232, 237, 242, 246, 252, 310, 316, 318, 404, 424, 462, 476], "reduc": [6, 9, 13, 14, 15, 17, 202, 216, 220, 223, 227, 235, 311, 314, 410, 411, 412, 462, 475], "commut": 6, "alwai": [6, 201, 228, 237, 254, 358, 359, 398, 400, 419, 422, 456, 474, 482], "ctrue": 6, "doe": [6, 11, 12, 13, 20, 34, 37, 52, 53, 55, 125, 126, 128, 201, 202, 223, 226, 235, 241, 244, 246, 249, 313, 316, 321, 327, 346, 347, 389, 391, 393, 408, 419, 462, 464, 469, 474], "sometim": [6, 27, 228, 241, 372, 432], "similarli": [6, 19, 20, 47, 217, 228, 245, 327, 365, 391, 393, 409, 412, 419, 462, 483], "suppli": [6, 209, 224, 411], "edgeset": 6, "d": [6, 9, 15, 17, 19, 20, 48, 51, 198, 204, 206, 215, 223, 228, 253, 314, 316, 319, 322, 327, 337, 382, 383, 391, 393, 394, 396, 397, 398, 400, 405, 409, 410, 411, 412, 413, 416, 453, 462, 464, 469], "auxiliari": [6, 15, 16, 228], "union": [6, 324, 390, 490], "minu": [6, 226, 365], "intersect": [6, 246, 463], "add": [6, 15, 19, 20, 23, 29, 33, 37, 90, 91, 124, 163, 164, 197, 209, 221, 223, 226, 228, 241, 243, 252, 255, 262, 263, 272, 311, 322, 324, 329, 330, 331, 381, 388, 401, 419, 422, 424, 440, 462, 465, 469, 474, 475, 486, 489, 490, 495], "getv": [6, 216], "besid": [6, 10, 38, 321, 322], "combin": [6, 14, 18, 34, 47, 214, 216, 228, 231, 242, 243, 246, 310, 311, 312, 316, 462, 469, 478, 485], "primit": [6, 45, 244], "natur": [6, 12, 13, 24, 47, 212, 224, 228], "multi": [6, 31, 214, 224, 228, 231, 232, 235, 242, 244, 246, 247, 248, 249, 253, 314, 316, 318, 471, 475], "tradit": [6, 216, 220, 222, 223, 224, 247, 439], "awkward": 6, "supplement": 6, "perspect": [6, 24, 244], "whole": [6, 9, 12, 24, 34, 202, 215, 216, 228, 232, 242, 244, 246, 247, 318, 473, 475, 478], "pick": [6, 228, 250, 404, 419, 422], "transfer": [6, 212, 214, 231, 246, 248, 493], "intuit": [6, 202, 216, 224, 231, 246, 469], "sever": [6, 9, 15, 17, 20, 23, 30, 33, 36, 37, 38, 202, 214, 216, 221, 228, 231, 232, 235, 241, 242, 245, 247, 248, 250, 254, 310, 316, 318, 320, 321, 327, 368, 462, 468, 469, 474, 475], "shown": [6, 7, 9, 10, 12, 15, 16, 18, 24, 27, 34, 46, 51, 198, 216, 218, 228, 234, 235, 245, 247, 250, 311, 312, 313, 316, 322], "input": [6, 9, 12, 13, 15, 17, 22, 24, 45, 46, 73, 90, 91, 120, 146, 163, 164, 193, 198, 204, 206, 212, 232, 234, 235, 238, 241, 242, 243, 246, 247, 253, 272, 276, 297, 310, 311, 312, 313, 314, 316, 319, 322, 325, 327, 395, 409, 411, 413, 419, 420, 454, 462, 465, 466, 469, 474, 475, 489, 494], "second": [6, 13, 27, 46, 48, 202, 212, 221, 228, 232, 241, 246, 249, 250, 254, 318, 407, 408, 416, 417, 418, 419, 423, 461, 462, 469, 475, 476], "fundament": [6, 9, 47, 216, 244], "modul": [6, 8, 9, 15, 19, 20, 23, 214, 216, 220, 226, 231, 239, 242, 243, 244, 246, 247, 323, 461, 491], "produc": [6, 38, 41, 45, 216, 250, 253, 262, 310, 322, 324, 325, 327, 381, 395, 397, 405, 466, 475], "abil": [6, 12, 34, 51, 220, 224, 228, 235, 242, 475], "activ": [6, 9, 23, 24, 30, 51, 198, 204, 218, 237, 243, 247, 322, 469], "dens": [6, 232, 245, 247, 313, 322], "spars": [6, 13, 232, 247, 310, 313, 389, 462, 465], "dispatch": [6, 34, 242, 252], "kernel": [6, 398], "auto": [6, 14, 16, 34, 208, 228, 255, 471, 474, 476], "switch": [6, 12, 23, 34, 198, 227, 245, 419, 422, 474, 482], "prove": [6, 24, 454], "world": [6, 9, 13, 212, 226, 228, 242, 243, 245, 252, 327, 382, 383, 409], "dual": 6, "edgemapdens": 6, "edgemapspars": 6, "instead": [6, 13, 16, 20, 23, 30, 37, 47, 124, 220, 223, 226, 228, 241, 244, 312, 313, 314, 320, 321, 324, 388, 395, 400, 408, 409, 413, 419, 462, 468, 471, 474], "co": [6, 23, 212, 243, 311, 489], "lead": [6, 17, 24, 209, 228, 247, 391, 393], "master": [6, 19, 22, 23, 24, 31, 202, 239, 485], "broadcast": [6, 252, 474], "mirror": [6, 7, 10, 24, 27, 32, 218, 233, 234], "On": [6, 27, 30, 37, 202, 216, 224, 226, 253, 396, 459, 474], "contrari": 6, "total": [6, 8, 12, 34, 212, 216, 217, 218, 227, 228, 239, 255, 337, 381, 404, 421, 427, 462, 475, 476, 489], "4": [6, 9, 10, 13, 17, 19, 20, 22, 27, 31, 48, 198, 209, 216, 217, 219, 222, 223, 224, 226, 227, 228, 239, 240, 243, 250, 261, 310, 312, 313, 315, 316, 317, 327, 333, 338, 340, 341, 346, 347, 365, 367, 368, 377, 385, 388, 390, 397, 406, 408, 413, 422, 429, 432, 433, 439, 440, 446, 448, 455, 456, 457, 462, 464, 465, 469, 474, 475, 476, 477, 478, 485, 488, 489, 493], "redund": [6, 204, 223], "programm": [6, 17, 242, 257], "scope": [6, 23, 37, 124, 198, 244, 324], "disabl": [6, 31, 44, 198, 199, 202, 206, 207, 217, 220, 250, 469], "develop": [6, 8, 9, 11, 12, 14, 24, 29, 34, 37, 124, 197, 202, 207, 212, 216, 217, 222, 223, 224, 228, 229, 230, 231, 232, 233, 242, 245, 246, 247, 249, 257, 314, 316, 317, 318, 320, 381, 474, 482], "katz": [6, 253, 327], "eigenvector": [6, 253, 327, 454], "harmon": 6, "coeffici": [6, 19, 253, 327], "fluid": 6, "version": [6, 15, 17, 18, 20, 23, 27, 29, 37, 44, 45, 47, 124, 199, 209, 218, 220, 224, 226, 227, 234, 242, 244, 249, 250, 253, 317, 324, 382, 383, 398, 400, 413, 419, 440, 462, 471, 473, 474, 475, 482, 485, 488], "color": [6, 19, 20, 228, 462], "biconnect": 6, "bridg": [6, 214, 244], "seven": [6, 322, 361], "strongli": [6, 36, 218, 220, 228, 316, 401], "cut": [6, 12, 24, 447], "k": [6, 20, 37, 208, 217, 228, 232, 242, 243, 244, 246, 253, 254, 314, 327, 364, 372, 382, 383, 384, 385, 387, 389, 390, 391, 398, 401, 410, 411, 412, 414, 417, 418, 419, 420, 421, 422, 427, 462, 468, 474, 489, 493], "decomposit": [6, 243, 327], "degeneraci": 6, "onion": 6, "minim": [6, 11, 245, 322, 413, 414, 435, 461], "domin": [6, 327, 474], "cycl": [6, 244, 246, 249, 252, 329, 365, 366, 369, 380, 402, 406, 427, 429, 445, 449], "triangl": [6, 33, 228, 243, 246, 253, 327, 424, 428, 432, 436, 448, 463, 485, 489], "acycl": [6, 244, 456], "cyclic": [6, 242, 244, 246, 369], "diamond": [6, 432], "rectangl": 6, "tail": [6, 215, 220, 226, 228, 244, 483], "approxim": [6, 381, 454], "densest": 6, "articlerank": 6, "hyperlink": [6, 253, 327], "induc": [6, 224, 226, 253, 275, 338, 341, 357, 405, 462], "topic": [6, 7, 218, 234, 243, 253, 475], "person": [6, 7, 30, 33, 45, 46, 47, 51, 90, 163, 164, 198, 215, 218, 220, 223, 224, 226, 228, 241, 243, 324, 442, 451, 462, 465, 468, 473, 474, 475, 476, 490, 495], "standard": [6, 35, 42, 199, 214, 216, 223, 228, 229, 241, 244, 325, 395, 410, 411, 412, 474], "diamet": 6, "span": [6, 20], "forest": 6, "center": [6, 228, 377, 380, 405], "four": [6, 9, 12, 20, 238, 243, 244, 252, 310, 313, 322, 409, 413, 474], "random": [6, 28, 31, 235, 237, 242, 250, 314, 315, 316, 319, 322, 363, 374, 381, 384, 385, 386, 387, 389, 391, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 422, 454, 457, 459, 461, 469], "give": [7, 12, 13, 31, 34, 46, 198, 218, 228, 234, 241, 250, 316, 324, 389, 409, 429, 461, 462], "quick": [7, 218, 234, 475, 492], "ll": [7, 13, 20, 29, 45, 46, 234], "pip": [7, 27, 30, 31, 32, 49, 209, 215, 218, 234, 243, 320, 475, 488, 492], "upgrad": [7, 23, 32, 218, 234, 492], "occur": [7, 9, 14, 32, 209, 226, 234, 475], "veri": [7, 13, 32, 212, 216, 218, 228, 231, 234, 241, 243, 247, 312, 314, 485], "speed": [7, 32, 202, 207, 228, 233, 234, 244, 323, 389, 462], "try": [7, 17, 23, 32, 36, 41, 52, 53, 54, 55, 90, 91, 100, 116, 124, 125, 126, 127, 128, 163, 164, 173, 189, 197, 207, 209, 212, 218, 227, 233, 234, 237, 238, 243, 251, 253, 340, 381, 465, 469, 489], "site": [7, 32, 218, 234], "aliyun": [7, 27, 32, 218, 233, 234, 250, 469, 486], "pypi": [7, 27, 32, 209, 218, 219, 234, 488], "trust": [7, 27, 32, 218, 234], "host": [7, 15, 17, 22, 23, 27, 28, 32, 46, 91, 125, 126, 127, 128, 163, 164, 173, 189, 198, 199, 212, 217, 218, 220, 227, 234, 241, 250, 252, 253, 254, 465, 469, 473, 485, 493, 495], "packag": [7, 8, 11, 17, 18, 20, 22, 23, 27, 29, 30, 36, 124, 197, 201, 209, 215, 218, 234, 243, 320, 409, 411, 462, 465, 475, 487], "everyth": [7, 234, 243, 474], "job": [7, 13, 23, 52, 53, 124, 125, 126, 197, 198, 212, 216, 234, 242, 243, 244, 248, 252, 287, 311, 469, 475], "modern_graph": [7, 30, 33, 46, 48, 198, 215, 218, 243, 476, 482], "gremlin": [7, 29, 33, 44, 48, 207, 209, 212, 215, 216, 217, 218, 223, 225, 229, 232, 235, 242, 243, 244, 248, 249, 251, 281, 316, 325, 469, 475, 483, 488, 489, 491, 496], "apach": [7, 17, 22, 23, 31, 199, 200, 202, 214, 223, 224, 227, 230, 231, 242, 243, 246, 473, 475, 479, 485, 487, 491], "tinkerpop": [7, 199, 200, 202, 212, 214, 215, 217, 218, 227, 231, 243, 244, 325, 475, 491], "org": [7, 17, 23, 124, 209, 219, 227, 234, 237, 238, 239, 243, 245, 253, 327, 385, 386, 387, 401, 404, 411, 424, 428, 429, 430, 431, 433, 434, 435, 441, 442, 443, 444, 446, 447, 448, 449, 454, 475, 485, 488, 489, 493], "doc": [7, 16, 17, 30, 37, 243, 244, 252, 256, 258, 324, 411, 492], "tutori": [7, 8, 12, 14, 24, 215, 217, 218, 225, 231, 236, 241, 243, 245, 247, 322, 411, 479], "trigger": [7, 14, 15, 18, 37, 235, 243, 263, 477, 482], "ret": [7, 18, 227, 243, 485, 490], "selector": [7, 15, 33, 38, 243, 252, 254, 262, 268, 269, 279, 280, 284, 292, 293, 324, 467, 469, 473, 485, 490], "homogen": [7, 232, 241, 243, 247, 312], "pg": [7, 243, 253, 469, 473, 474], "none": [7, 9, 20, 27, 31, 164, 173, 189, 221, 237, 239, 240, 241, 243, 253, 254, 261, 268, 269, 272, 275, 279, 280, 281, 282, 284, 287, 289, 292, 293, 297, 303, 305, 309, 310, 311, 316, 324, 325, 326, 327, 335, 339, 341, 342, 346, 347, 356, 357, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 454, 456, 457, 459, 462, 464, 465, 466, 469, 473, 474, 475, 490, 494, 495], "know": [7, 8, 30, 33, 38, 46, 47, 198, 215, 223, 225, 226, 228, 236, 241, 243, 246, 311, 312, 320, 324, 473, 475, 476, 490, 493, 495], "src": [7, 13, 15, 16, 17, 18, 30, 34, 90, 124, 163, 197, 208, 212, 224, 227, 234, 235, 238, 241, 243, 253, 254, 261, 310, 312, 324, 468, 471, 474, 475, 477, 485, 489, 494, 495], "our": [7, 12, 13, 17, 32, 34, 36, 37, 41, 44, 46, 47, 199, 212, 216, 221, 223, 224, 233, 243, 245, 246, 247, 249, 250, 251, 317, 318, 327, 475, 477, 485], "learn": [7, 27, 32, 36, 37, 38, 41, 202, 212, 216, 218, 231, 235, 236, 237, 239, 244, 245, 248, 251, 305, 311, 314, 315, 316, 317, 320, 322, 467, 469, 489, 491], "technic": [7, 234, 318, 456, 462], "disaggreg": [7, 36], "deploy": [7, 29, 30, 33, 207, 209, 212, 217, 228, 242, 248, 312, 322, 469, 475], "scale": [7, 11, 12, 13, 20, 23, 27, 34, 37, 202, 212, 215, 217, 222, 227, 228, 229, 231, 232, 242, 243, 244, 245, 247, 248, 249, 312, 314, 316, 318, 323, 391, 402, 409, 461, 474], "usag": [7, 17, 31, 32, 36, 37, 49, 124, 198, 201, 205, 226, 228, 229, 233, 234, 235, 254, 313, 314, 315, 319, 324, 381, 462, 469, 475, 476], "section": [8, 13, 27, 29, 44, 46, 47, 204, 206, 225, 228, 232, 236, 242, 316, 317, 324, 361, 474, 475], "assum": [8, 23, 27, 30, 201, 215, 225, 228, 236, 243, 311, 324, 360, 421, 460, 462, 469, 473, 474, 489], "getting_start": [8, 44, 201, 225, 236], "most": [8, 9, 13, 15, 22, 33, 38, 47, 202, 209, 216, 220, 221, 223, 226, 228, 232, 241, 243, 245, 247, 249, 250, 254, 310, 312, 316, 318, 320, 324, 382, 383, 407, 410, 411, 412, 473, 475], "suffici": [8, 17, 209, 242, 311], "louvain": [8, 245, 253, 485], "social": [8, 47, 212, 217, 228, 242, 245, 247, 250, 389, 439, 454, 463], "scientist": [8, 231, 249], "familiar": [8, 14, 16, 29, 216], "manipul": [8, 11, 19, 20, 202, 228, 231, 246, 249, 251, 252, 462], "invok": [8, 9, 12, 14, 15, 17, 24, 34, 49, 202, 204, 241, 252, 314, 315, 319, 469, 485], "pydata": [8, 248], "eco": 8, "still": [8, 24, 27, 34, 38, 198, 212, 228, 245, 340, 469, 474, 475], "directli": [8, 12, 20, 24, 30, 32, 34, 36, 37, 38, 198, 202, 212, 220, 223, 224, 226, 228, 230, 232, 235, 241, 247, 252, 311, 314, 316, 317, 318, 319, 454, 462, 465, 469, 475, 479], "migrat": [8, 216, 234, 237, 238, 243, 244, 249, 471, 489], "transpar": [8, 242], "don": [8, 17, 23, 30, 33, 36, 37, 209, 215, 228, 263, 356, 462, 475], "autom": [9, 29, 244], "abl": [9, 24, 27, 199, 215, 244, 315, 419, 474, 475], "batch": [9, 12, 19, 46, 217, 227, 232, 235, 239, 240, 244, 247, 310, 313, 315, 316, 318, 320, 322, 326, 475, 494], "counterpart": [9, 223, 231, 244], "redesign": [9, 244], "underli": [9, 42, 212, 216, 228, 244, 318, 474], "equip": [9, 230, 231, 244, 250, 479], "polici": [9, 209, 244, 252, 469], "memori": [9, 12, 23, 24, 27, 34, 47, 198, 202, 209, 212, 214, 224, 227, 231, 233, 236, 237, 239, 242, 244, 245, 247, 248, 249, 250, 310, 311, 312, 318, 322, 324, 462, 469, 475, 478, 487, 488], "todai": 9, "static": [9, 16, 31, 52, 53, 54, 55, 90, 91, 100, 116, 124, 125, 227, 252, 475, 477], "recomput": 9, "costli": 9, "consum": [9, 209, 247, 318, 321], "especi": [9, 241], "trillion": 9, "commerc": [9, 242, 245], "constantli": 9, "issu": [9, 17, 32, 37, 209, 212, 215, 218, 227, 244, 245, 249, 385, 386, 387, 451, 488], "involv": [9, 13, 37, 41, 44, 202, 212, 216, 228, 232, 235, 242, 245, 246, 247, 248, 249], "adjust": [9, 12, 44, 45, 209], "old": [9, 12, 14, 32, 34, 220, 469], "typic": [9, 24, 44, 199, 202, 212, 224, 226, 228, 242, 245, 246, 249, 311, 316, 391, 462, 468, 474], "often": [9, 37, 47, 202, 212, 215, 227, 242, 245, 246, 247, 249, 312, 313, 316, 462, 475, 483], "overlap": [9, 469], "intervent": 9, "burden": [9, 15, 312], "expert": 9, "light": 9, "overal": [9, 247], "verifi": [9, 27, 38, 212, 215, 217, 221, 250, 316], "characterist": [9, 224, 235, 242, 247, 310, 315], "deduc": [9, 324, 495], "appropri": [9, 27, 41, 46, 47, 216, 232, 242, 247, 310], "record": [9, 13, 124, 197, 198, 202, 215, 218, 219, 220, 228, 243, 321, 471, 475], "part": [9, 13, 37, 212, 216, 226, 232, 235, 244, 316, 317, 320, 322, 445, 462, 473, 474, 475], "intermedi": [9, 12, 17, 202, 216, 223, 228, 231, 242, 244], "deliv": [9, 493], "There": [9, 10, 12, 34, 37, 38, 45, 209, 215, 216, 223, 228, 243, 245, 246, 247, 253, 312, 315, 316, 318, 462, 468, 469, 474, 475], "reshap": [9, 322], "eas": [9, 12, 34, 218, 247, 249, 250], "achiev": [9, 12, 20, 24, 27, 34, 202, 228, 242, 245, 250, 471], "decid": [9, 312, 409], "due": [9, 209, 242, 249, 316], "among": [9, 47, 216, 228, 242, 249, 252, 321, 327, 456, 475], "fetch": [9, 15, 17, 469, 475, 485], "suffic": 9, "replai": [9, 235, 244, 471, 475], "affect": [9, 13, 30, 36, 37, 223, 462], "area": [9, 15, 202, 220, 413, 459], "readili": 9, "obtain": [9, 14, 17, 29, 30, 216, 217, 219, 223, 227, 231, 232, 235, 238, 243, 247, 311, 315, 316, 318, 437, 440, 456, 462, 469, 475], "simpli": [9, 17, 20, 44, 124, 204, 215, 220, 228, 241, 243, 316, 384, 388, 462], "coincid": 9, "idea": [9, 37, 232, 247, 257, 318], "invalid": [9, 90, 91, 163, 164, 223, 324, 469], "miss": [9, 37, 314, 324, 372, 469], "comparison": [9, 19, 221, 226, 228, 231, 249, 250], "those": [9, 29, 47, 198, 202, 215, 217, 220, 221, 224, 228, 241, 251, 314, 324, 327, 338, 367, 369, 371, 462, 464, 468], "although": [9, 12, 14, 22, 34, 51, 202, 212, 243, 257, 361, 474, 475], "solut": [9, 31, 48, 202, 209, 246, 247, 249, 327, 488], "enough": [9, 235, 311, 314, 381, 469, 473], "caus": [9, 14, 22, 32, 37, 209, 227, 234, 247, 312, 318, 324, 361], "overwhelm": 9, "overhead": [9, 13, 249, 311, 312], "mf": 9, "delta": [9, 12, 13, 33, 37, 253, 324], "php": 9, "mp": 9, "cc": [9, 474, 490], "sswp": 9, "mv": [9, 220], "track": 9, "gcn": [9, 231, 235, 247, 251, 310, 314, 318, 322, 489, 491, 494, 496], "commnet": 9, "me": 9, "keep": [9, 228, 235, 255, 316, 324, 419, 422, 475], "graphsag": [9, 231, 235, 239, 243, 247, 251, 310, 314, 316, 318, 322, 491, 494, 496], "gin": [9, 247], "vldb": [9, 485, 491], "paper": [9, 14, 24, 232, 234, 237, 238, 239, 240, 242, 243, 244, 250, 322, 327, 459, 469, 485, 489], "publish": [9, 14, 24, 29, 223, 242, 243], "2021": [9, 244], "denot": [9, 47, 51, 200, 202, 226, 228, 315, 390, 475], "w": [9, 198, 227, 253, 327, 389, 395, 409, 412, 414, 419, 422, 424, 452, 462, 464, 475, 493], "respect": [9, 16, 38, 204, 214, 216, 221, 226, 241, 242, 243, 246, 247, 253, 272, 289, 297, 313, 316, 327, 368, 381, 428, 462, 468, 474, 475], "initi": [9, 16, 18, 19, 44, 45, 46, 197, 206, 217, 228, 239, 240, 245, 247, 252, 311, 312, 322, 324, 326, 327, 401, 403, 404, 462, 465, 473, 475, 479, 485], "init_v": 9, "init_m": 9, "aggreg": [9, 216, 221, 229, 247, 255, 310, 316, 318, 322, 474, 493], "vector": [9, 208, 232, 238, 243, 247, 252, 255, 310, 318, 320, 327, 409, 413], "element": [9, 13, 47, 124, 197, 221, 226, 228, 245, 252, 311, 314, 316, 324, 327, 357, 389, 434, 456, 468, 469, 474], "specifi": [9, 16, 17, 20, 23, 24, 30, 36, 44, 45, 46, 47, 51, 55, 90, 91, 128, 163, 164, 198, 199, 202, 204, 206, 215, 221, 224, 226, 231, 235, 239, 243, 245, 253, 255, 261, 268, 269, 279, 280, 284, 288, 292, 293, 309, 310, 311, 313, 316, 319, 324, 326, 327, 338, 346, 347, 368, 381, 391, 393, 394, 397, 398, 405, 409, 410, 411, 412, 413, 419, 422, 424, 427, 440, 459, 462, 464, 468, 469, 473, 475, 476, 482], "addition": [9, 12, 14, 36, 47, 220, 232, 238, 242, 244, 246, 249, 318, 327, 474, 483], "correspond": [9, 10, 13, 15, 17, 18, 37, 41, 198, 216, 220, 224, 226, 228, 231, 235, 241, 246, 249, 253, 287, 310, 311, 312, 313, 315, 316, 320, 324, 327, 360, 361, 391, 393, 394, 395, 396, 397, 409, 455, 456, 458, 462, 464, 465, 471, 475, 483], "iteratorkernel": 9, "void": [9, 14, 15, 16, 17, 24, 52, 53, 54, 55, 90, 91, 100, 116, 124, 208, 252, 471, 474, 475, 476, 485], "m1": [9, 209, 218, 363, 488, 492], "m2": [9, 363], "below": [9, 10, 12, 20, 34, 35, 36, 37, 46, 51, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 226, 235, 242, 243, 245, 246, 247, 250, 311, 314, 316, 319, 322, 361, 391, 393, 427, 462, 469, 475], "ssspkernel": 9, "public": [9, 15, 16, 17, 27, 52, 53, 54, 55, 90, 91, 100, 116, 124, 243, 250, 252, 320, 475, 485, 489], "dbl_max": 9, "backend": [9, 27, 29, 231, 234, 239, 242, 243, 247, 324, 462, 469, 476, 489], "seamless": [9, 51, 212, 248, 475], "block": [9, 198, 209, 216, 313, 389, 475], "spawn": 9, "adopt": [9, 44, 202, 204, 249, 314, 475], "csc": [9, 473], "csr": [9, 13, 208, 324, 473, 476], "sent": [9, 10, 14, 16, 24, 198, 227], "mainten": [9, 474], "preserv": [9, 13, 204, 223, 254, 324, 424, 454], "effect": [9, 36, 37, 44, 202, 204, 212, 223, 226, 227, 235, 242, 247, 314, 393, 462, 475], "readi": [9, 30, 32, 37, 198, 202, 209, 212, 217, 227, 242, 312, 314, 469, 475, 483], "accept": [9, 44, 52, 53, 54, 55, 90, 91, 100, 116, 125, 126, 127, 128, 163, 164, 173, 189, 199, 327, 409, 413, 475, 476], "insert": [9, 14, 47, 90, 163, 216, 282, 475], "newli": [9, 41, 44], "particular": [9, 37, 221, 226, 253, 313, 316, 391], "incid": [9, 20, 224, 226, 228, 338, 339, 381, 403, 452, 462], "encod": [9, 13, 100, 221, 224, 253, 311, 316, 322, 324, 326, 464, 475, 494], "dummi": 9, "furthermor": [9, 227, 228, 231, 242, 249], "proprieti": 9, "deduct": 9, "techniqu": [9, 34, 235, 244, 245, 316], "cancel": [9, 93, 198], "compens": 9, "whose": [9, 24, 220, 228, 314, 316, 327, 332, 352, 434, 438, 454, 456, 457, 473, 474], "proce": [9, 199, 381, 475], "inner": [10, 13, 16, 208, 228, 229, 255, 324, 474], "outer": [10, 14, 208, 221, 255, 377, 474], "cross": [10, 224, 257, 437], "f_": 10, "instanc": [10, 15, 23, 27, 28, 29, 30, 33, 38, 47, 48, 51, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 202, 204, 209, 215, 224, 226, 228, 237, 242, 243, 245, 246, 250, 252, 253, 254, 261, 263, 265, 281, 288, 305, 313, 324, 362, 364, 365, 367, 369, 371, 372, 374, 376, 377, 380, 391, 393, 394, 396, 398, 399, 400, 402, 406, 407, 408, 414, 415, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 457, 464, 469, 474, 483], "5": [10, 13, 19, 20, 31, 198, 209, 217, 222, 226, 228, 234, 235, 237, 238, 239, 240, 243, 246, 250, 310, 313, 315, 316, 317, 319, 322, 327, 333, 338, 340, 346, 365, 368, 381, 385, 386, 387, 389, 390, 398, 400, 407, 408, 409, 410, 412, 413, 427, 428, 430, 431, 432, 433, 435, 436, 439, 441, 443, 445, 446, 452, 457, 462, 468, 469, 475, 477, 483, 488, 489, 493], "9": [10, 31, 215, 218, 226, 228, 243, 311, 327, 365, 367, 413, 431, 439, 452, 457, 492], "12": [10, 20, 32, 209, 218, 228, 250, 253, 311, 312, 313, 315, 317, 329, 330, 331, 367, 429, 430, 434, 438, 442, 448, 486, 488, 492, 493], "split": [10, 46, 223, 226, 228, 237, 238, 239, 240, 311, 312, 469, 475], "roughli": 10, "across": [10, 14, 34, 35, 36, 48, 199, 202, 223, 224, 239, 242, 244, 245, 249, 474, 476], "divid": [10, 221, 226, 228, 232, 242, 253, 311, 314, 318, 319, 327, 473], "place": [10, 18, 19, 36, 45, 46, 215, 228, 320, 321, 324, 389, 409, 410, 411, 412, 413, 442, 460], "itself": [10, 20, 22, 37, 226, 228, 232, 241, 242, 255, 310, 312, 468, 469, 474], "replic": [10, 217, 403], "resid": [10, 14, 38], "j": [10, 31, 208, 253, 322, 327, 360, 361, 382, 383, 391, 393, 394, 396, 402, 413, 416, 417, 418, 440, 474], "outcom": 10, "outgo": [10, 13, 16, 24, 47, 223, 226, 228, 246, 255, 316, 327, 462, 474], "incom": [10, 13, 14, 16, 34, 47, 226, 228, 252, 255, 327], "consid": [10, 15, 18, 27, 37, 223, 228, 235, 245, 253, 254, 311, 312, 327, 391, 454, 471, 474], "vice": [10, 409], "versa": [10, 409], "compani": [10, 474], "syncstateonoutervertexastarget": 10, "certain": [10, 24, 212, 226, 241, 249, 311, 312, 316, 319, 324, 474, 475], "regardless": [10, 204, 221, 244, 311, 407, 474], "friendli": [11, 12, 37, 214, 231, 245, 247, 248, 249], "research": [11, 223, 235, 247, 452, 469], "particularli": [11, 247, 454], "field": [11, 27, 30, 33, 38, 45, 47, 215, 235, 237, 238, 241, 243, 314, 318, 322, 324, 408, 469, 475, 486, 489], "scienc": [11, 416, 439], "solv": [11, 24, 37, 209, 211, 228, 245], "recast": [12, 14, 34], "ga": 12, "plug": [12, 34, 242], "minor": [12, 14, 34, 231, 242, 247, 250, 477], "cope": [12, 34], "life": [12, 32, 34, 215, 242], "extrem": [12, 27, 242, 318, 363, 374, 474], "fashion": [12, 20], "consist": [12, 13, 20, 24, 30, 34, 35, 36, 42, 44, 47, 216, 223, 224, 226, 228, 231, 232, 235, 244, 245, 247, 249, 250, 252, 253, 255, 313, 314, 316, 318, 364, 365, 366, 377, 380, 388, 434, 456, 469, 471, 473, 474, 475, 476], "format": [12, 13, 20, 22, 34, 35, 45, 46, 47, 102, 175, 198, 212, 214, 228, 232, 239, 241, 247, 248, 250, 253, 281, 288, 310, 313, 316, 318, 321, 322, 324, 325, 462, 464, 469, 471, 487], "unifi": [12, 34, 42, 202, 212, 214, 216, 311, 471], "care": [12, 34, 228, 320, 321, 474], "foreign": [12, 474], "ecosystem": [12, 199, 214, 218, 230, 231, 246, 249, 479], "freedom": 12, "accord": [12, 19, 36, 44, 198, 209, 215, 216, 220, 226, 228, 232, 241, 242, 246, 247, 252, 314, 316, 320, 381, 389, 401, 402, 471, 475], "demand": [12, 202, 216, 245, 474, 475, 479], "sdk": [12, 18, 42, 49, 207, 209, 215, 219, 229, 230, 231, 245, 246, 249, 257, 467, 475, 479, 485], "domain": [12, 220, 242, 247, 409, 410, 411, 412, 413], "dedic": 12, "treat": [12, 14, 20, 34, 228, 324, 462, 464, 469, 482], "immut": [12, 34, 214, 224, 244], "persist": [12, 15, 30, 34, 48, 209, 214, 215, 242, 244, 249, 473], "fortun": [12, 20, 45, 212], "grin": [12, 214], "awar": [12, 37, 44, 199, 209, 215, 244], "introduct": [12, 34, 49, 223, 229, 245, 315, 316, 319, 327, 372, 454, 474], "foundat": [12, 207, 223, 242], "visit": [12, 29, 199, 220, 228, 246, 311], "meanwhil": [12, 212, 231, 247, 474], "compress": [12, 13, 201, 243, 253, 311, 427], "pipelin": [12, 34, 231, 242, 245, 249, 478], "balanc": [12, 312, 362], "link": [12, 31, 37, 38, 47, 51, 199, 209, 211, 216, 224, 232, 247, 250, 253, 324, 327, 364, 385, 387, 388, 398, 399, 400, 459, 462, 469], "popular": [12, 22, 29, 200, 212, 241, 243, 246, 247, 310, 322, 475], "freeli": [12, 24], "background": [12, 211], "interoper": [12, 474], "panda": [12, 212, 220, 252, 254, 268, 279, 324, 462, 491], "mar": [12, 27, 212, 226, 244, 469], "fastffi": [12, 257], "via": [12, 14, 17, 18, 20, 22, 23, 24, 27, 32, 45, 48, 124, 197, 202, 204, 209, 215, 221, 222, 224, 226, 229, 230, 231, 242, 244, 246, 249, 252, 363, 374, 381, 457, 460, 462, 479, 485], "emploi": [12, 24, 34, 51, 238, 244, 245], "captur": [12, 247], "20": [12, 13, 27, 29, 32, 34, 215, 218, 226, 228, 231, 250, 253, 254, 312, 313, 315, 324, 381, 409, 410, 431, 433, 462, 485, 486, 492, 493], "100": [12, 34, 220, 228, 234, 237, 238, 243, 253, 322, 327, 384, 391, 395, 402, 411, 462, 469, 475, 489, 493], "build": [12, 15, 31, 34, 35, 37, 124, 209, 216, 220, 227, 231, 232, 241, 244, 252, 253, 263, 265, 312, 316, 318, 320, 321, 324, 410, 411, 412, 454, 469, 471, 482, 487, 494], "been": [12, 17, 23, 24, 28, 29, 33, 37, 44, 198, 209, 216, 217, 218, 220, 223, 226, 228, 230, 232, 242, 244, 245, 246, 247, 249, 253, 302, 314, 316, 324, 325, 327, 381, 404, 454, 466, 479], "go": [13, 233, 322, 389, 442, 475], "impact": [13, 246], "dive": 13, "arrowfrag": [13, 16, 252, 476], "vineyard": [13, 15, 16, 23, 28, 31, 33, 208, 209, 214, 215, 224, 231, 236, 237, 242, 248, 249, 252, 254, 284, 289, 292, 293, 324, 325, 469, 474, 475, 483, 485, 488, 489, 490, 493, 495], "basic": [13, 16, 20, 45, 46, 223, 246, 310, 313, 318, 320, 321, 322, 381, 391, 396, 468], "member": [13, 16, 226, 228, 252, 452], "string": [13, 17, 23, 33, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 119, 120, 121, 122, 123, 124, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 215, 220, 221, 223, 224, 226, 241, 252, 253, 255, 260, 297, 311, 312, 313, 314, 315, 316, 319, 321, 322, 323, 324, 326, 327, 342, 346, 347, 356, 454, 456, 458, 462, 464, 471, 473, 474, 475, 476, 485, 493, 495], "consecut": 13, "hashmap": [13, 208, 324], "arrai": [13, 17, 208, 221, 232, 241, 247, 252, 253, 254, 313, 314, 316, 319, 322, 462, 465, 477, 485], "o2g_": 13, "fragment_id": 13, "_": [13, 30, 37, 198, 219, 226, 241, 253, 324, 327, 462, 465, 485, 488, 490, 495], "vertex_label": [13, 252, 255], "perfect": [13, 324], "int64_t": [13, 208, 215, 241, 252, 253, 324, 477, 495], "std": [13, 14, 15, 208, 252, 471, 476], "string_view": 13, "uint64_t": [13, 16, 324, 471], "oid_arrays_": [13, 208], "topologi": [13, 232, 235, 244, 313, 318, 459, 471, 473, 474], "row": [13, 46, 215, 223, 232, 247, 311, 324, 455, 475], "matrix": [13, 241, 247, 253, 318, 327, 389, 407, 422, 425, 454, 462, 465], "src_type": [13, 313], "edge_typ": [13, 45, 47, 139, 158, 198, 234, 237, 238, 243, 310, 312, 313, 314, 315, 316, 319, 322, 326, 474, 489, 494], "pair": [13, 20, 218, 221, 224, 228, 252, 253, 255, 309, 322, 361, 366, 367, 373, 389, 407, 413, 462, 465, 468, 474, 476], "indptr": 13, "ie_lists_": [13, 208], "edge_label": [13, 145, 151, 163, 220, 252, 255, 469], "neighbor_vertex_id": 13, "edge_table_index": 13, "tabl": [13, 44, 198, 207, 223, 224, 228, 232, 241, 250, 310, 312, 324, 469, 471, 473, 474, 476], "uint32_t": [13, 252, 324], "num_edg": 13, "ie_offsets_lists_": [13, 208], "offset": [13, 208, 252, 313, 321, 365, 475], "slice": [13, 216, 254, 324, 468], "ie_list": 13, "ie_offset": 13, "num_vertic": 13, "oe_lists_": [13, 208], "oe_offsets_lists_": [13, 208], "oe_list": 13, "oe_offset": 13, "edge_tables_": [13, 208], "vertex_tables_": [13, 208], "oid_t": [13, 15, 16, 208, 252], "vid_t": [13, 15, 16, 208, 252], "sizeof": 13, "uint8_t": 13, "load_factor": 13, "observ": [13, 23, 209], "practic": [13, 16, 28, 201, 216, 224, 232, 235, 242, 247, 311, 312, 314, 475], "load_factori": 13, "15": [13, 209, 228, 237, 238, 240, 250, 312, 313, 315, 316, 422, 444, 455, 462, 469], "extra": [13, 37, 209, 215, 217, 327, 423, 488], "column": [13, 18, 33, 45, 47, 62, 74, 75, 124, 135, 147, 148, 197, 198, 207, 208, 212, 216, 224, 232, 241, 243, 247, 252, 254, 255, 262, 311, 321, 324, 455, 471, 475, 476, 485, 489, 495], "edge_id": 13, "uniqu": [13, 45, 46, 47, 198, 206, 216, 220, 221, 224, 226, 241, 242, 243, 244, 253, 301, 302, 311, 315, 320, 321, 324, 327, 429, 435, 468, 475, 476], "kept": [13, 226, 228, 252], "summari": [13, 249, 342], "argument": [13, 23, 30, 99, 172, 198, 226, 228, 235, 239, 241, 327, 329, 330, 331, 360, 368, 398, 405, 409, 410, 411, 412, 413, 440, 462, 465, 468, 469, 475, 476, 485], "use_perfect_hash": [13, 252, 303, 324, 469], "load_from": [13, 22, 30, 324, 469, 473], "realli": 13, "margin": 13, "former": [13, 245], "globalvertexmap": 13, "later": [13, 18, 20, 32, 33, 218, 220, 228, 246, 324, 469, 474, 475, 492], "localvertexmap": 13, "suitabl": [13, 47, 201, 242, 249, 312, 316, 322, 381, 475, 478], "dozen": 13, "hundr": [13, 391, 402], "repeatedli": [13, 216, 245], "add_vertic": [13, 212, 220, 241, 324, 462, 465, 466, 489, 490, 495], "sure": [13, 23, 27, 30, 41, 45, 100, 173, 199, 217, 220, 228, 316, 320, 322, 469, 475], "fairli": [13, 218], "8": [13, 20, 31, 32, 33, 35, 37, 124, 209, 215, 218, 220, 226, 228, 231, 234, 250, 253, 311, 365, 388, 407, 430, 439, 441, 447, 451, 457, 459, 462, 464, 475, 477, 488, 493], "absolut": 13, "int32_t": [13, 241, 324, 495], "vid_typ": [13, 33, 252, 303, 324, 469], "compact_edg": [13, 252, 303, 324, 469], "compact": [13, 252, 324], "varint": [13, 324], "half": [13, 324], "generated_eid": 13, "save": [13, 18, 28, 29, 51, 215, 312, 324, 327, 475], "interact": [13, 27, 29, 33, 36, 37, 38, 41, 42, 44, 45, 47, 48, 52, 53, 54, 55, 90, 91, 100, 116, 124, 197, 198, 200, 202, 204, 205, 206, 212, 215, 216, 217, 219, 220, 222, 223, 225, 227, 228, 229, 231, 241, 242, 244, 245, 248, 249, 251, 281, 324, 403, 452, 467, 469, 482, 489, 493], "vertex_id": [13, 24, 204, 212, 241, 495], "retain_oid": [13, 215, 241, 252, 303, 324, 469, 476, 495], "gain": [13, 37], "signific": [13, 244, 249], "arrowprojectedfrag": [13, 15, 16, 252, 261], "implicit": [13, 465], "arrowflattenfrag": 13, "thought": [13, 390], "view": [13, 20, 24, 207, 241, 242, 273, 335, 339, 358, 359, 462, 465, 471, 483], "mainli": [13, 46, 216, 221, 228, 249, 318], "purpos": [13, 42, 223, 228, 242, 474], "penalti": 13, "arrowprojectfrag": 13, "r1": [13, 254, 477, 478], "r2": [13, 254, 477, 478], "r3": [13, 254, 477], "projected_g": 13, "_project_to_simpl": [13, 16, 17, 22], "otherwis": [13, 33, 228, 245, 253, 311, 315, 316, 317, 327, 344, 381, 401, 411, 460, 462, 469, 474, 475], "express": [14, 15, 24, 200, 216, 221, 222, 224, 235, 244, 246, 254, 311, 313, 316, 413, 462, 493], "modifi": [14, 20, 24, 28, 198, 202, 215, 221, 227, 266, 267, 282, 283, 317, 340, 393, 460, 473, 474], "adher": [14, 35, 47, 223, 474], "think": [14, 24], "principl": [14, 320], "privileg": 14, "experienc": [14, 246], "inform": [14, 15, 16, 19, 27, 29, 38, 124, 198, 199, 209, 216, 217, 220, 221, 224, 238, 243, 245, 247, 248, 257, 271, 310, 311, 312, 313, 316, 318, 320, 324, 327, 342, 360, 401, 423, 424, 452, 462, 469, 471, 475, 482], "hop": [14, 216, 224, 226, 228, 231, 232, 235, 242, 246, 247, 310, 314, 316, 318, 319, 320, 322], "slow": [14, 218], "consequ": [14, 242, 245], "piec": [14, 200, 214, 321, 469], "destin": [14, 33, 45, 46, 47, 74, 77, 147, 150, 215, 220, 221, 228, 232, 241, 243, 252, 254, 270, 311, 312, 313, 315, 316, 322, 324, 326, 468, 473, 474, 475, 495], "abovement": 14, "peval": [14, 16, 17, 18, 34, 245, 252, 260, 479, 485], "incev": [14, 16, 17, 18, 34, 245, 252, 260, 479, 485], "assembl": [14, 34, 216, 244, 245, 252, 324], "unlik": [14, 17, 222, 232, 235, 242, 462], "modif": [14, 22, 231, 242, 247, 324, 465], "convent": [14, 37, 209, 223, 395, 421, 483], "taught": [14, 228], "colleg": 14, "textbook": 14, "answer": [14, 34, 37, 209, 220, 242, 475], "collect": [14, 34, 124, 197, 221, 226, 227, 228, 246, 247, 248, 322, 462], "partial": [14, 16, 18, 34, 226, 252, 254, 311, 404, 479], "intricaci": 14, "fixpoint": 14, "monoton": 14, "guarante": [14, 46, 215, 235, 249, 311, 319, 327, 397, 462], "accur": [14, 220, 223], "long": [14, 17, 30, 33, 38, 204, 220, 224, 226, 228, 244, 249, 253, 316, 474, 475, 485, 493], "const": [14, 15, 16, 208, 252, 255, 320, 321, 474, 475, 476], "fragment_t": [14, 15, 16, 252], "frag": [14, 17, 18, 208, 260, 471, 476, 485], "context_t": [14, 15, 16, 252], "ctx": [14, 17, 22, 252, 473, 485], "message_manager_t": [14, 16, 252], "vertex_t": [14, 16, 208, 252], "native_sourc": [14, 18, 485], "getinnervertex": [14, 252], "partial_result": 14, "getoutgoingadjlist": [14, 16, 17, 208, 252, 471, 485], "get_neighbor": 14, "min": [14, 18, 24, 221, 255, 485, 493], "static_cast": [14, 16, 208, 471], "get_data": [14, 208], "isoutervertex": [14, 252], "put": [14, 16, 17, 22, 47, 48, 54, 90, 91, 124, 127, 163, 164, 197, 198, 320], "channel": [14, 16, 37], "syncstateonoutervertex": 14, "els": [14, 16, 18, 208, 228, 312, 322, 324, 420, 474, 475, 485], "next_modifi": 14, "inner_vertic": [14, 16], "innervertic": [14, 16, 17, 208, 252, 471, 485], "parallelprocess": [14, 16], "thread_num": [14, 16], "tid": [14, 16], "msg": [14, 16, 24, 228, 255, 474], "atomic_min": 14, "curr_modifi": 14, "foreach": [14, 16], "distv": [14, 18, 485], "ndistu": 14, "outer_vertic": 14, "outervertic": [14, 208, 252], "dijkstra": [14, 18, 245, 327, 485], "checkout": [14, 37, 317], "seri": [15, 228, 247, 252, 316, 474], "strong": [15, 201, 216, 245], "typenam": [15, 16, 56, 60, 63, 70, 79, 83, 89, 120, 122, 208, 252], "frag_t": [15, 16, 252], "yourapp": 15, "flashappbas": 15, "v_type": 15, "install_flash_work": 15, "flashvertexdatacontext": 15, "v_res_typ": 15, "sync_all_": 15, "re": [15, 37, 44, 45, 215, 227, 228, 246, 313, 316, 320, 322, 468, 477], "shared_ptr": [15, 208, 252, 471, 476], "fw_t": 15, "fw": 15, "Or": [15, 17, 19, 22, 29, 36, 41, 204, 220, 228, 241, 469, 485, 495], "global": [15, 24, 216, 224, 226, 228, 247, 303, 324, 454, 469, 476, 482, 493], "flashglobaldatacontext": 15, "g_res_typ": 15, "let": [15, 18, 19, 41, 46, 215, 216, 228, 241, 247, 424, 468], "bfsflash": 15, "bfs_type": 15, "value_t": 15, "di": 15, "o_sourc": 15, "oid2flashid": 15, "definemapv": 15, "init": [15, 16, 17, 18, 45, 46, 102, 198, 199, 206, 208, 237, 241, 252, 253, 255, 260, 310, 312, 313, 317, 320, 322, 462, 465, 471, 479, 485, 494, 495], "vset_t": 15, "ctruev": 15, "definefv": 15, "definemap": 15, "cond": [15, 370], "len": [15, 226, 228, 237, 239, 312, 327, 336, 367, 384, 386, 389, 391, 392, 396, 462], "ed": [15, 23, 395, 409, 416, 439, 445], "ctruee": 15, "rather": [15, 18, 202, 228, 241, 246, 248, 249, 327, 381, 423, 474], "project_to_simpl": 15, "not_compatible_for": 15, "arrow_properti": [15, 30, 264, 465], "dynamic_properti": [15, 277, 465], "def": [15, 18, 23, 219, 234, 237, 238, 239, 240, 241, 243, 260, 310, 312, 313, 314, 315, 316, 319, 322, 368, 475, 485, 489, 490, 494, 495], "arg": [15, 52, 53, 54, 55, 90, 91, 100, 116, 124, 237, 239, 252, 253, 254, 255, 288, 306, 313, 314, 315, 316, 319, 322, 326, 469, 475], "appasset": [15, 18, 260, 261, 265, 467, 485], "algo": [15, 16, 17, 22, 23, 253, 261], "flash_bf": 15, "vertex_data": [15, 16, 164, 192, 253, 261], "gscoordin": [15, 28, 36], "builtin": [15, 19, 20, 48, 197, 204, 463, 465, 467], "gs_conf": [15, 16, 261], "yaml": [15, 16, 28, 29, 38, 44, 45, 46, 47, 199, 204, 206, 215, 227, 239, 253, 261, 469, 473, 475, 493], "cpp_flash": 15, "class_nam": [15, 16, 261], "compatible_graph": [15, 16, 261], "immutableedgecutfrag": 15, "log": [15, 17, 44, 93, 166, 198, 209, 214, 237, 238, 242, 244, 474, 476, 488], "p2p": [15, 17, 22, 23], "network": [15, 27, 47, 209, 212, 214, 217, 228, 232, 236, 238, 242, 243, 245, 248, 249, 250, 251, 253, 310, 311, 312, 314, 316, 318, 322, 327, 382, 383, 389, 391, 395, 398, 399, 400, 403, 415, 439, 450, 451, 453, 454, 459, 463, 477, 488], "load_p2p_network": [15, 16, 17, 18, 212, 253, 254, 485], "attribut": [15, 19, 47, 224, 235, 238, 243, 245, 247, 252, 253, 286, 297, 312, 313, 315, 318, 322, 323, 326, 327, 329, 330, 331, 346, 347, 356, 368, 381, 386, 405, 409, 410, 411, 412, 413, 416, 417, 418, 452, 454, 456, 459, 460, 462, 463, 465, 471], "convert": [15, 20, 23, 51, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 223, 232, 253, 268, 269, 279, 280, 292, 293, 310, 311, 318, 322, 382, 383, 440, 457, 462, 464, 465, 471], "simple_graph": [15, 16], "dist": [15, 17, 219, 253, 254, 317, 320, 409, 411, 413, 469, 485, 493], "codegen": [15, 216], "bit": [15, 218, 221, 226, 228, 473], "longer": [15, 237, 255, 469], "retriev": [15, 49, 51, 198, 214, 220, 224, 226, 243, 244, 254, 268, 269, 279, 280, 284, 288, 292, 293, 313, 314, 316, 322, 327, 468, 475, 476], "displai": [15, 206, 227, 311], "vertex_rang": [15, 254, 268, 269, 279, 280, 284, 292, 293, 324, 468], "end": [15, 16, 208, 212, 221, 226, 228, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 249, 254, 255, 316, 321, 327, 341, 350, 355, 356, 369, 381, 464, 468, 474, 479], "sort_valu": 15, "pip3": [16, 19, 23, 35, 37, 197, 209, 219, 227, 482, 486, 488, 492], "degre": [16, 19, 20, 208, 212, 223, 228, 235, 253, 255, 313, 314, 319, 327, 336, 361, 362, 381, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 407, 419, 420, 421, 422, 456, 462, 463, 475], "vertexdatacontext": [16, 17, 252, 327, 485], "myappcontext": 16, "explicit": [16, 252, 406, 462, 469], "parallelmessagemanag": [16, 17, 485], "param1": [16, 91, 164], "setvalu": [16, 17, 485], "vertex_array_t": [16, 252], "variabl": [16, 29, 33, 39, 41, 47, 209, 217, 226, 260, 381, 469, 475, 476, 488], "And": [16, 18, 23, 29, 31, 36, 38, 212, 216, 218, 228, 241, 250, 253, 254, 315, 320, 465, 468, 469, 475], "zero": [16, 47, 244, 253, 311, 316, 327, 344, 362, 371, 404, 456, 457, 476], "myapp": 16, "parallelappbas": [16, 17, 485], "parallelengin": [16, 17, 485], "install_parallel_work": 16, "constexpr": [16, 252], "messagestrategi": [16, 18, 252, 255, 485], "message_strategi": [16, 252], "ksynconoutervertex": [16, 18, 252, 255, 485], "loadstrategi": [16, 252], "load_strategi": [16, 252], "kbothoutin": [16, 252], "initchannel": 16, "noth": [16, 255, 271, 324, 326, 462], "forc": [16, 37, 241], "forcecontinu": [16, 17, 485], "getincomingadjlist": [16, 208, 252], "counter": [16, 228], "runnabl": [16, 17, 23, 87, 160], "content": [16, 47, 52, 53, 54, 55, 90, 91, 100, 116, 125, 126, 127, 128, 163, 164, 173, 189, 198, 201, 212, 228, 238, 241, 243, 327, 459, 473, 495], "my_app": [16, 18, 485], "cpp_pie": [16, 253, 261], "context_typ": [16, 252, 253, 261], "dynamicprojectedfrag": 16, "codebas": [16, 35], "my_app_context": 16, "zip": [16, 201, 219, 220, 227, 261, 409, 413, 462, 493], "jr": 16, "load_app": [16, 17, 18, 22, 485], "path_to_your_gar_resourc": 16, "to_numpi": [16, 17, 22, 253, 254, 324, 468, 485], "demo": [17, 22, 23, 218, 257, 469, 475, 483, 485], "turn": [17, 49, 202, 207, 209, 220, 250, 257, 456, 483], "verbos": [17, 23, 38, 209, 483], "cluster_typ": [17, 22, 220, 241, 253, 254, 469, 473, 485, 495], "add_lib": [17, 22, 469], "home": [17, 22, 23, 28, 38, 45, 46, 209, 212, 241, 252, 317, 318, 320, 321, 323, 324, 327, 371, 482, 483, 485, 487, 495], "19": [17, 22, 23, 32, 209, 219, 228, 250, 312, 313, 315, 483, 488, 492], "shade": [17, 22, 23, 485], "java_pi": [17, 253], "threadnum": [17, 485], "info": [17, 38, 44, 52, 125, 199, 209, 218, 228, 239, 255, 324, 462, 465, 469, 474, 475, 476, 483], "avail": [17, 23, 29, 30, 41, 46, 198, 200, 207, 212, 220, 221, 224, 227, 235, 241, 244, 250, 253, 309, 322, 410, 411, 412, 462, 469, 471, 474, 485], "mvn": [17, 22, 124, 257, 475], "clean": [17, 32, 124, 212, 218, 220, 243, 257, 320, 474], "dskiptest": [17, 257], "pom": [17, 23, 124, 475], "xml": [17, 23, 252, 475], "groupid": [17, 23, 124, 475, 485], "artifactid": [17, 23, 124, 475, 485], "shall": [17, 23], "fat": 17, "plugin": [17, 23, 475, 485], "spark": [17, 473], "drastic": 17, "great": [17, 23, 37, 475], "suppos": [17, 228, 456, 474], "traversecontext": [17, 485], "overrid": [17, 241, 252, 310, 320, 482, 485], "ifrag": [17, 485], "parallelcontextbas": [17, 485], "adjlist": [17, 252, 255, 473, 485], "nbr": [17, 20, 208, 252, 255, 462, 485], "dst": [17, 18, 30, 90, 124, 163, 197, 212, 224, 235, 241, 254, 310, 313, 324, 326, 468, 471, 474, 485, 494, 495], "largest": [17, 228, 327, 407, 485], "vertexarrai": [17, 252, 255, 485], "math": [17, 234, 238, 243, 327, 411, 412, 489, 491], "max": [17, 221, 255, 323, 327, 485, 493], "pars": [17, 216, 241, 253, 311, 471, 475], "maxiter": [17, 485], "jsonobject": [17, 485], "gsvertexarrai": [17, 485], "createfficontext": [17, 485], "containskei": [17, 485], "getinteg": [17, 485], "javadoc": [17, 35], "proper": [17, 37], "javaapp": [17, 467, 485], "But": [17, 215, 228, 241, 249, 257, 462, 468], "rememb": [17, 22, 23, 30, 33, 44, 204, 475, 482], "pack": [17, 23, 485], "param": [17, 23, 29, 87, 107, 160, 180, 198, 209, 218, 220, 239, 253, 273, 274, 288, 303, 305, 309, 316, 322, 469, 475, 485], "b": [17, 18, 22, 37, 221, 223, 226, 228, 316, 371, 389, 402, 408, 409, 413, 418, 419, 420, 422, 450, 458, 462, 485, 493], "bother": 17, "click": [17, 36, 37, 235, 312, 313, 316, 486], "pure": [18, 252, 479], "just": [18, 19, 23, 27, 45, 46, 48, 197, 199, 201, 204, 209, 212, 215, 226, 228, 249, 257, 320, 324, 462, 465, 469, 475, 477], "udf": [18, 260, 468, 485], "decor": [18, 485], "vd_type": [18, 255, 260, 485], "md_type": [18, 255, 260, 485], "youralgorithm": [18, 485], "staticmethod": [18, 260, 485], "statu": [18, 27, 29, 30, 38, 49, 52, 53, 54, 55, 90, 91, 93, 100, 105, 116, 124, 125, 126, 127, 128, 163, 164, 166, 173, 178, 189, 197, 204, 206, 209, 237, 320, 321, 327, 475, 479, 483], "cython": [18, 34, 209, 288, 467, 485], "sssp_pie": [18, 485], "v_label_num": [18, 476, 485], "vertex_label_num": [18, 255, 471, 476, 485], "v_label_id": [18, 255, 485], "init_valu": [18, 255, 485], "1000000000": [18, 253, 485], "pieaggregatetyp": [18, 255, 485], "kminaggreg": [18, 255, 485], "register_sync_buff": [18, 255, 485], "get_config": [18, 255, 469, 485], "declar": [18, 216, 226, 228, 231, 246, 249, 312, 485], "get_inner_nod": [18, 255, 485], "break": [18, 37, 51, 202, 227, 322, 485], "set_node_valu": [18, 255, 485], "e_label_num": [18, 208, 476, 485], "edge_label_num": [18, 255, 471, 476, 485], "e_label_id": [18, 485], "get_outgoing_edg": [18, 255, 485], "third": [18, 241, 242, 246, 324, 447, 448], "get_int": [18, 255, 485], "get_node_valu": [18, 255, 485], "iv": [18, 485], "inner_nod": [18, 255, 485], "v_dist": [18, 485], "u_dist": [18, 208, 485], "classic": [18, 235, 315, 463], "yourpregelalgorithm": [18, 485], "sssp_pregel": [18, 485], "set_valu": [18, 255, 485], "src_id": [18, 46, 208, 235, 311, 312, 313, 315, 316, 319, 322, 326, 485], "cur_dist": [18, 485], "new_dist": [18, 485], "outgoing_edg": [18, 255, 485], "vote_to_halt": [18, 255, 485], "sin": [18, 485], "m_pi": [18, 485], "translat": [18, 37, 220, 242], "generate_eid": [18, 215, 241, 252, 303, 324, 469, 476, 485, 495], "test": [18, 23, 29, 33, 49, 51, 198, 201, 209, 214, 215, 218, 228, 231, 234, 237, 238, 243, 247, 310, 320, 322, 326, 346, 347, 381, 462, 464, 469, 474, 475, 482, 486, 487, 489, 494], "futur": [18, 47, 124, 197, 202, 221, 226, 228, 241], "to_gar": [18, 485], "my_sssp_pregel": [18, 485], "gar": [18, 253, 261, 485], "construct": [19, 202, 207, 228, 232, 235, 241, 242, 243, 244, 252, 303, 310, 311, 312, 313, 314, 324, 325, 329, 330, 370, 391, 393, 394, 396, 402, 406, 407, 408, 416, 419, 420, 421, 422, 424, 440, 444, 448, 454, 456, 469, 473, 476], "expand": [19, 202, 216, 228, 229, 314, 316, 463], "add_edges_from": [19, 20, 346, 462], "add_nod": [19, 20, 462, 465], "number_of_nod": [19, 20, 327, 371, 455, 462], "number_of_edg": [19, 20, 336, 371, 455, 462], "sort": [19, 20, 208, 216, 228, 327, 333, 361, 365, 368, 371, 396, 397, 455, 456, 462, 474], "connected_compon": [19, 327], "nx": [19, 20, 212, 264, 266, 267, 270, 273, 275, 277, 282, 283, 287, 290, 291, 324, 327, 462, 464, 465], "add_nodes_from": [19, 20, 462], "red": [19, 20, 37, 220, 311, 462], "green": [19, 20, 36, 37], "add_edg": [19, 20, 197, 212, 220, 241, 324, 340, 346, 347, 350, 355, 356, 462, 465, 489, 490, 495], "1415": [19, 20], "all_pairs_shortest_path": 19, "sp": [19, 200], "dict": [19, 20, 27, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 253, 254, 281, 289, 309, 312, 313, 316, 324, 325, 409, 410, 411, 412, 419, 420, 440, 462, 468, 469, 475], "draw": [19, 51, 202, 228, 409, 412], "matplotlib": [19, 228], "with_label": 19, "font_weight": 19, "bold": [19, 250], "twitter": [19, 250], "wget": [19, 22, 23, 29, 35, 219, 317, 493], "raw": [19, 22, 23, 45, 46, 48, 199, 206, 215, 216, 232, 279, 280, 312, 318, 320, 321, 326], "githubusercont": [19, 22, 23], "p": [19, 20, 31, 36, 48, 51, 220, 226, 228, 243, 244, 253, 312, 322, 327, 385, 386, 387, 389, 398, 399, 400, 403, 404, 406, 408, 410, 411, 412, 413, 416, 418, 493], "o": [19, 22, 23, 27, 30, 33, 38, 252, 322, 327, 344, 395, 397, 402, 410, 411, 412, 414, 415, 416, 462, 475, 486, 489], "gs_nx": 19, "g1": [19, 324, 466, 477, 478], "read_edgelist": [19, 464], "expandvar": [19, 22], "nodetyp": [19, 464], "create_us": [19, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 391, 392, 393, 394, 396, 398, 399, 400, 402, 406, 407, 408, 414, 415, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 457, 464], "g2": [19, 324, 462, 466, 477, 478], "ret_g": 19, "ret_nx": 19, "lack": [20, 32, 220, 248, 327], "hashabl": [20, 342, 357, 419, 462, 464], "float": [20, 82, 96, 221, 224, 226, 237, 241, 250, 253, 310, 311, 312, 313, 321, 322, 323, 327, 381, 384, 385, 386, 387, 389, 400, 401, 402, 403, 404, 409, 410, 411, 412, 413, 416, 417, 418, 454, 462, 464, 469, 473, 477, 493, 494, 495], "tupl": [20, 228, 241, 311, 312, 313, 322, 324, 327, 346, 347, 356, 368, 409, 413, 419, 458, 462, 464, 469], "though": [20, 381, 462, 475], "yield": [20, 51, 204, 316, 322, 409, 413, 462], "node_attribute_dict": 20, "discuss": [20, 209, 228, 327, 474, 488], "incorpor": [20, 51, 223], "path_graph": [20, 327, 338, 340, 341, 347, 462, 464], "grown": [20, 371, 404, 462], "unpack": [20, 227, 252, 462], "ebunch": [20, 462], "dictionari": [20, 200, 253, 297, 327, 409, 410, 411, 412, 419, 420, 421, 422, 462, 464, 473], "11": [20, 27, 30, 31, 32, 215, 218, 228, 234, 250, 253, 311, 312, 313, 315, 329, 330, 331, 367, 462, 475, 483], "complaint": 20, "clear": [20, 37, 226, 228, 266, 267, 362, 364, 365, 367, 369, 371, 372, 374, 376, 377, 380, 391, 393, 394, 396, 398, 399, 400, 402, 406, 407, 408, 414, 415, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 457, 462, 464, 475], "quietli": [20, 357, 462], "ignor": [20, 48, 327, 338, 357, 462, 469], "spam": 20, "stage": [20, 209, 214, 232, 248, 249, 316, 474], "seen": [20, 216, 242, 474], "report": [20, 209, 223, 250, 287, 385, 386, 387, 462, 465], "adj": [20, 255, 327, 462], "item": [20, 29, 46, 199, 239, 242, 311, 312, 313, 316, 322, 327, 462, 475], "One": [20, 216, 221, 242, 246, 247, 248, 249, 253, 314, 316, 393, 402, 456, 475], "nbunch": [20, 335, 339, 341, 357, 462], "remove_nod": [20, 462], "remove_nodes_from": [20, 462], "remove_edg": [20, 462], "remove_edges_from": [20, 391, 393, 462], "instanti": [20, 253, 322, 477], "digraph": [20, 324, 329, 339, 341, 346, 347, 350, 355, 356, 367, 384, 385, 386, 389, 393, 394, 396, 398, 399, 400, 401, 405, 456, 457, 458, 460, 463, 464, 465], "edgelist": [20, 440, 464], "subscript": [20, 462], "notat": [20, 44, 46, 427, 429, 431, 433, 435, 441, 443, 462], "yellow": [20, 311], "blue": [20, 311, 462], "undirect": [20, 47, 241, 247, 253, 273, 312, 316, 324, 327, 333, 337, 359, 382, 383, 389, 391, 398, 400, 403, 405, 406, 407, 409, 410, 411, 412, 413, 419, 424, 428, 429, 432, 435, 436, 438, 444, 457, 459, 462, 476], "twice": [20, 440, 462], "fg": [20, 476], "add_weighted_edges_from": [20, 346, 462], "125": [20, 311, 395, 406], "75": [20, 228, 234, 237, 238, 243, 250, 327, 385, 386, 387, 389, 469, 489], "375": 20, "eattr": [20, 462], "wt": 20, "attach": [20, 252, 311, 398, 401], "fridai": [20, 462, 465], "mondai": 20, "5pm": [20, 462], "2pm": [20, 462], "room": [20, 462], "714": [20, 462], "to_direct": [20, 324, 382, 383, 398, 400, 462], "represent": [20, 47, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 202, 216, 242, 244, 247, 324, 460, 462, 473], "dg": [20, 231, 247], "dgv": 20, "as_view": [20, 358, 359, 462], "shallow": 20, "out_edg": [20, 339, 462], "in_degre": [20, 235, 237, 314, 316, 319, 322, 393, 419, 420, 462], "predecessor": [20, 332, 405, 456, 462], "successor": [20, 299, 332, 399, 400, 405, 462], "out_degre": [20, 393, 419, 420, 462], "feel": [20, 37, 209], "inconsist": [20, 250], "inde": [20, 22], "lump": 20, "danger": 20, "probabl": [20, 37, 226, 235, 247, 253, 314, 319, 384, 385, 386, 387, 389, 391, 395, 398, 400, 401, 402, 403, 404, 409, 410, 411, 412, 413, 416, 418], "to_undirect": [20, 324, 398, 400, 462], "theoret": 20, "load_ldbc": [20, 228, 473, 493], "foo": [20, 462], "famou": [22, 23, 461], "hadoop": [22, 475], "stop": [22, 27, 30, 45, 55, 124, 128, 197, 198, 206, 244, 248, 252, 327], "open": [22, 36, 37, 198, 217, 227, 229, 235, 246, 249, 322, 464, 474, 475], "actual": [22, 23, 28, 45, 47, 197, 217, 224, 226, 228, 235, 256, 258, 315, 413, 462, 465, 473, 483], "vertexinputformat": 22, "edgeinputformat": 22, "vformat": [22, 324], "p2pvertexinputformat": 22, "eformat": [22, 324], "p2pedgeinputformat": 22, "gs_test_dir": [22, 33], "graphscope_sess": [22, 324], "31": [22, 23, 212, 241, 312, 313, 315, 495], "v_prop": [22, 252, 286], "vdata": 22, "e_prop": [22, 252, 286], "giraph_sssp": 22, "sourceid": 22, "faster": [22, 199, 327], "toward": [22, 475], "offici": [22, 215, 217, 218, 227, 246], "pl": 22, "snapshot": [22, 224, 249, 471, 475], "writabl": 22, "degrad": [22, 249], "procedur": [22, 29, 44, 45, 49, 54, 100, 124, 127, 173, 197, 198, 199, 202, 203, 205, 207, 215, 216, 228, 263, 404], "except": [22, 52, 53, 54, 55, 90, 91, 100, 116, 125, 126, 127, 128, 163, 164, 173, 189, 202, 209, 227, 234, 237, 238, 241, 243, 248, 315, 322, 340, 357, 361, 372, 381, 391, 393, 442, 462, 469, 474, 489], "right": [22, 221, 223, 226, 241, 320, 363, 372, 374, 395, 460], "inputformat": 22, "sparksess": 23, "gssparksess": 23, "experi": [23, 32, 37, 51, 198, 212, 216, 231, 245, 247, 249, 250, 384], "proceed": [23, 27, 199, 384, 402], "side": [23, 37, 216, 226, 227, 253, 272, 312, 365, 474], "venv": [23, 218, 243], "virtualenv": 23, "pyspark_venv": 23, "bin": [23, 31, 44, 45, 51, 198, 199, 204, 217, 218, 227, 228, 242, 243, 336, 475, 483, 487, 493], "pyspark_venv_g": 23, "tar": [23, 29, 31, 475], "gz": [23, 31, 464, 475], "upload": [23, 116, 189, 215], "pyspark_driver_python": 23, "pyspark_python": 23, "archiv": [23, 242, 473, 493], "oss": [23, 29, 31, 241, 252, 317, 324, 475, 485, 486, 495], "beij": [23, 29, 31, 232, 247, 311, 475, 486], "fixm": 23, "yuansi": 23, "env": [23, 209, 218, 239, 243, 317], "var": [23, 33, 38, 209, 241, 322, 475, 483, 495], "gs_jar": 23, "l": [23, 29, 35, 204, 235, 247, 314, 382, 383, 385, 386, 387, 394, 395, 396, 398, 399, 400, 403, 410, 411, 412, 413, 415, 419, 420, 421, 422, 451, 454, 462, 482, 483], "lib": [23, 31, 124, 200, 217, 261, 475], "7077": 23, "master_url": 23, "conf": [23, 44, 45, 199, 217, 227, 252, 475, 493], "executor": [23, 35, 38, 48, 215, 217, 242, 325, 483], "driver": [23, 27, 124, 197, 202, 222, 227, 241, 289, 324, 475, 493], "2g": 23, "10g": [23, 487], "minregisteredresourcesratio": 23, "bfstest": 23, "placehold": [23, 221], "url": [23, 93, 166, 198, 217, 324, 325, 475, 493], "rdd": 23, "classifi": [23, 232, 234, 238, 243, 247, 322, 485], "maven": [23, 49, 257, 475, 485], "conflict": [23, 218, 228, 234, 324, 452, 475], "correctli": [23, 37, 209, 231, 327, 475], "resolv": [23, 28, 209, 241, 324, 476], "goal": [23, 202, 207, 216, 221, 232, 244, 247, 474], "reloc": 23, "shadedpattern": 23, "vineyardmemori": 23, "memorystr": 23, "builder": [23, 208, 216, 368, 475], "config": [23, 27, 28, 31, 48, 206, 215, 217, 227, 239, 287, 297, 309, 310, 323, 326, 466, 469, 471, 475, 476, 482, 493, 494], "socket": [23, 28, 30, 217, 252, 476], "bound": [23, 47, 198, 226, 228, 246, 288, 381, 469, 474, 477], "vineyardsock": 23, "filepath": [23, 115], "sock": [23, 28, 217], "gssubmitjar": 23, "grapegraph": 23, "togsgraph": 23, "vd": 23, "classtag": 23, "grapegraphimpl": 23, "loadgraphtog": 23, "vfilepath": 23, "efilepath": 23, "numpartit": 23, "shell": [23, 35, 51, 199, 204, 205, 215, 217, 222, 246, 253], "grow": [24, 202, 212, 231, 242, 381, 391, 398, 399, 400, 461, 474], "capac": [24, 33, 217, 462, 469], "indivis": 24, "succinctli": [24, 200], "oppos": [24, 235], "orient": [24, 235, 249, 319, 475], "googl": [24, 35, 245, 487], "powergraph": [24, 249, 250], "wa": [24, 29, 30, 37, 204, 223, 226, 228, 244, 250, 316, 327, 381, 396, 409, 410, 411, 412, 461, 475], "2010": [24, 250, 253, 327, 387, 454, 459], "sequenc": [24, 200, 221, 226, 228, 253, 324, 361, 381, 391, 392, 393, 394, 395, 396, 397, 413, 419, 420, 423, 456, 457, 462, 463, 476], "conceptu": [24, 223], "behavior": [24, 44, 198, 226, 228, 241, 255, 469], "becom": [24, 204, 212, 223, 228, 235, 462, 474, 475], "inact": 24, "again": [24, 209, 241, 477, 482], "termin": [24, 36, 199, 220], "halt": [24, 246, 255, 401], "individu": [24, 215, 217, 223, 238, 243], "messageiter": [24, 255], "mindist": 24, "issourc": 24, "inf": 24, "done": [24, 46, 232, 235, 311, 322, 327, 424, 476], "getvalu": [24, 208], "mutablevalu": 24, "outedgeiter": 24, "getoutedgeiter": 24, "sendmessageto": 24, "votetohalt": 24, "drop": [24, 37, 209, 475], "dramat": 24, "face": [24, 31, 216, 228, 245, 447, 448], "power": [24, 124, 197, 204, 221, 222, 226, 228, 231, 246, 253, 327, 381, 391, 439, 462], "law": [24, 381, 391], "gather": [24, 469], "scatter": [24, 312], "accumul": [24, 235, 456], "workload": [27, 36, 202, 212, 214, 216, 217, 225, 228, 231, 242, 244, 250, 475, 477, 478], "grpc": [27, 28, 31, 209, 252, 486, 488], "linux": [27, 30, 31, 36, 201, 215, 234, 250, 257, 492], "maco": [27, 30, 36, 201, 209, 218, 486, 488, 489, 492], "skip": [27, 31, 35, 246, 257, 475], "minikub": [27, 30, 475], "instruct": [27, 29, 30, 33, 37, 199, 202, 204, 215, 217, 218, 219, 220, 227, 243, 246, 252, 265, 316], "platform": [27, 32, 37, 42, 214, 215, 216, 234, 248, 249, 250, 257, 311, 453, 469], "desktop": [27, 475, 489], "server": [27, 29, 48, 52, 90, 91, 100, 116, 125, 163, 164, 173, 189, 197, 198, 216, 217, 220, 224, 227, 229, 231, 235, 240, 242, 244, 246, 251, 315, 320, 321, 322, 475, 487, 493], "kubectl": [27, 29, 30, 33, 38, 48, 209, 215, 475, 483, 488], "kube": [27, 469], "apivers": [27, 33, 239], "v1": [27, 33, 35, 52, 53, 54, 55, 90, 91, 100, 116, 124, 125, 126, 127, 128, 163, 164, 173, 189, 197, 198, 209, 226, 228, 234, 237, 238, 239, 243, 246, 310, 427, 440, 465, 488, 489, 494], "certif": 27, "ca": 27, "crt": 27, "last": [27, 30, 228, 316, 321, 324, 384, 456, 483], "16": [27, 31, 215, 217, 228, 250, 310, 312, 313, 315, 317, 418, 441, 455, 494], "2023": [27, 223, 483], "44": [27, 48, 250, 312, 313, 315, 455], "05": [27, 389, 402], "cst": 27, "sig": [27, 485, 492], "28": [27, 226, 228, 232, 247, 250, 312, 313, 315, 459], "cluster_info": 27, "172": [27, 250], "21": [27, 31, 212, 228, 250, 253, 312, 313, 315, 435, 475], "67": [27, 250, 253], "111": 27, "8443": 27, "context_info": 27, "namespac": [27, 28, 29, 30, 33, 38, 239, 469], "profil": [27, 493], "encapsul": [27, 51, 199, 204, 231, 232, 310, 316, 469], "entranc": [27, 316], "tag": [27, 41, 48, 226, 228, 250, 389, 469, 475, 487], "intranet": 27, "internet": [27, 29, 31, 220, 228, 245, 459, 461], "might": [27, 44, 47, 199, 209, 327, 419, 462, 478], "k8s_image_registri": [27, 33, 469], "k8s_image_repositori": [27, 469], "k8s_image_tag": [27, 33, 239, 469], "fit": [27, 202, 212, 215, 236, 237, 257], "increas": [27, 38, 44, 209, 212, 312, 360, 361, 369, 391, 393, 401, 419, 422, 424, 474], "cpu": [27, 198, 209, 215, 239, 240, 317, 469, 478, 488], "num_work": [27, 28, 33, 239, 240, 309, 469, 493], "k8s_engine_cpu": [27, 309, 469], "32": [27, 226, 250, 312, 313, 315, 323, 327, 473], "k8s_engine_mem": [27, 209, 239, 309, 469, 488], "256gi": 27, "vineyard_shared_mem": [27, 209, 239, 309, 469, 488], "preexist": [27, 223], "k8s_client_config": [27, 469], "disk": [27, 202, 209, 215, 242, 475], "test_data": [27, 234, 238, 243, 486, 489], "testingdata": [27, 30, 33, 486, 489], "k8s_volum": [27, 30, 33, 309, 469, 486, 489], "constructor": [27, 241, 362, 364, 365, 367, 369, 371, 372, 374, 376, 377, 380, 391, 393, 394, 396, 398, 399, 400, 402, 406, 407, 408, 414, 415, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 457, 464], "vm": [27, 30, 252], "copi": [27, 29, 30, 215, 242, 244, 249, 270, 327, 334, 338, 340, 341, 399, 405, 460, 462, 465, 473, 474, 475, 476, 477], "hostpath": [27, 30, 33, 48, 215, 469, 486, 489], "expandus": [27, 486, 489], "mountpath": [27, 30, 33, 239, 469, 486, 489], "expect": [27, 34, 37, 49, 209, 241, 257, 391, 393, 395, 465, 469], "monitor": [27, 29, 231], "wait": [27, 93, 209, 469], "finish": [27, 208, 227, 237, 255, 312, 315, 475], "remov": [27, 29, 90, 91, 124, 163, 164, 197, 206, 223, 226, 228, 253, 257, 317, 334, 340, 342, 388, 391, 393, 395, 437, 440, 456, 462, 475], "remain": [27, 202, 204, 221, 226, 241, 245, 311, 316, 396, 423], "statefulset": [27, 475], "svc": [27, 48, 215], "left": [27, 36, 44, 221, 223, 226, 253, 324, 327, 363, 395], "service_port": 28, "63800": 28, "launcher_typ": 28, "operator_launch": 28, "gae_endpoint": 28, "60001": 28, "instance_id": [28, 476], "0000": [28, 212, 228], "rpc_port": 28, "9600": 28, "sai": [28, 41], "configmap": [28, 239], "mount": [28, 30, 33, 45, 209, 216, 241, 321, 469, 486, 488, 489], "ideal": [29, 37, 47, 202, 249], "deploy_graphscope_on_self_managed_k8": 29, "chart": [29, 48, 209, 215, 217, 228, 475, 486, 488], "minut": [29, 209, 216], "succe": 29, "past": [29, 47, 216, 477], "noteport": 29, "node_ip": [29, 475], "ojsonpath": 29, "hostip": 29, "node_port": 29, "spec": [29, 33, 239, 252, 322], "nodeport": [29, 239, 469, 475, 489], "echo": [29, 31], "listen": [29, 44, 48, 124, 197, 202, 217, 252], "statement": [29, 316, 475], "ident": [29, 254, 270, 358, 359, 363, 434, 454, 456, 462], "reconnect": [29, 469], "disconnect": [29, 327, 403, 404, 419, 422, 469, 482], "sess2": 29, "comment": [29, 37, 212, 220, 221, 228, 241, 311, 462, 464, 465, 473, 490, 495], "homepag": 29, "remot": [29, 36, 124, 227, 239, 240, 257, 325, 469, 493], "cater": [29, 242], "tgz": 29, "unzip": [29, 201, 219, 220, 227, 493], "zxvf": 29, "bundl": [30, 469], "aliv": 30, "reserv": 30, "simplifi": [30, 42, 51, 215, 242, 243, 244, 246, 248, 311, 316, 474], "etcd": [30, 209, 215, 469, 471, 486], "replica": [30, 215, 239], "etcd_replica": 30, "greater": [30, 33, 221, 226, 253, 312, 327, 381, 412, 469, 474], "ag": [30, 33, 46, 47, 164, 198, 216, 223, 224, 226, 228, 232, 247, 310, 311, 324, 468, 483, 493, 494], "33": [30, 202, 226, 312, 313, 315, 452, 455], "vineyardd": [30, 33, 217], "vineyardctl": [30, 469], "v6d": [30, 31, 215, 241, 469], "blob": [30, 209, 485], "cmd": [30, 252, 469], "readm": [30, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 257], "md": [30, 322], "notic": [30, 33, 215, 224, 228, 242, 316, 324, 455, 462, 469, 477], "charact": [30, 46, 453, 458, 464], "vineyard_deploy": 30, "restart": [30, 44, 51, 55, 124, 128, 197, 198, 204, 206, 483], "etcd0": 30, "73m": 30, "5db59987f": 30, "vr2fg": 30, "beforehand": 30, "onto": 30, "stai": 30, "k8s_namespac": [30, 33, 309, 469], "k8s_vineyard_deploy": [30, 33, 309, 469], "reload": [30, 475], "vineyard_id": [30, 33, 324, 483], "new_sess": 30, "22731319746904674": 30, "objectid": [30, 33, 252, 324, 469, 474, 476], "softwar": [30, 33, 46, 90, 163, 198, 215, 218, 223, 226, 231, 242, 324, 476], "successfulli": [30, 90, 91, 100, 163, 164, 173, 198, 201, 217, 220, 232, 237, 381, 475], "folder": [31, 38, 45, 201, 206, 239, 241, 474], "cento": [31, 32, 209, 218, 250, 488, 492], "82": [31, 250], "boost": [31, 231, 242, 252], "perl": 31, "v3": [31, 246, 250], "24": [31, 164, 215, 228, 250, 312, 313, 315, 429, 447, 455], "openmpi": [31, 250], "gflag": 31, "glog": [31, 223], "arrow": [31, 46, 208, 252, 264, 277, 324, 465], "74": [31, 250, 453], "openssl": [31, 209, 488], "zlib": 31, "protobuf": 31, "49": [31, 228, 250, 312, 313, 315], "13": [31, 35, 228, 250, 311, 312, 313, 315, 367, 408], "libclang": 31, "curl": [31, 49, 227], "lo": [31, 227], "czf": 31, "mkdir": [31, 209, 322, 488], "workdir": 31, "xzf": 31, "yum": 31, "scl": 31, "rh": [31, 208], "y": [31, 32, 228, 239, 240, 253, 408, 409, 413], "devtoolset": 31, "python38": 31, "opt": [31, 36, 44, 204, 216, 217, 233, 322], "bash": [31, 226, 239, 483, 487], "euxo": 31, "pipefail": 31, "dir": [31, 475], "ld_library_path": 31, "lib64": 31, "py2": 31, "py3": [31, 487], "manylinux2010_x86_64": 31, "whl": [31, 317, 320], "x86_64": [31, 201, 239], "sh": [31, 35, 227, 317, 475, 493], "licens": [31, 487], "dbuild_shared_lib": 31, "ON": 31, "dcmake_prefix_path": 31, "dcmake_install_prefix": 31, "boost_1_74_0": 31, "bootstrap": 31, "filesystem": [31, 311], "program_opt": 31, "regex": [31, 226], "chrono": 31, "atom": [31, 475], "date_tim": [31, 47], "b2": 31, "openssl_1_1_1h": 31, "fpic": 31, "cpp": [31, 67, 87, 107, 198], "darrow_comput": 31, "darrow_with_utf8proc": 31, "off": [31, 216, 242, 447, 475], "darrow_csv": 31, "darrow_filesystem": 31, "darrow_ipc": 31, "darrow_build_benchmark": 31, "darrow_build_exampl": 31, "darrow_build_integr": 31, "darrow_build_util": 31, "darrow_build_test": 31, "darrow_enable_timing_test": 31, "darrow_fuzz": 31, "darrow_jemalloc": 31, "darrow_build_shar": 31, "darrow_build_stat": 31, "mpi": [31, 252], "cxx": 31, "dlopen": 31, "nproc": 31, "dgrpc_instal": 31, "dgrpc_build_test": 31, "dgrpc_build_csharp_ext": 31, "dgrpc_build_grpc_csharp_plugin": 31, "dgrpc_build_grpc_node_plugin": 31, "dgrpc_build_grpc_objective_c_plugin": 31, "dgrpc_build_grpc_php_plugin": 31, "dgrpc_build_grpc_python_plugin": 31, "dgrpc_build_grpc_ruby_plugin": 31, "dgrpc_backwards_compatibility_mod": 31, "dgrpc_protobuf_provid": 31, "dgrpc_zlib_provid": 31, "dgrpc_ssl_provid": 31, "dopenssl_root_dir": 31, "dcmake_cxx_flag": 31, "fpermiss": 31, "dbuild_vineyard_test": 31, "dbuild_vineyard_python_bind": 31, "j4": 31, "dnetworkx": 31, "denable_java_sdk": 31, "dbuild_test": 31, "ubuntu": [32, 201, 209, 215, 218, 317, 486, 488, 492], "04": [32, 209, 215, 218, 228, 250, 317, 486, 488, 492], "intel": [32, 218, 486, 488, 492], "appl": [32, 209, 218, 462, 486, 488, 492], "silicon": [32, 218, 486, 488], "jdk": [32, 215, 218, 230, 479, 485], "wheel": [32, 209, 380, 446, 488, 491], "manylinux2014": [32, 487], "abi": 32, "wish": [32, 37, 44, 199, 204], "nightli": [32, 209, 488], "tidi": 32, "quickli": [32, 36, 202, 231, 243, 246, 247, 249, 322, 469], "insid": [32, 38, 46, 209, 226, 228, 253, 261, 311, 323, 324, 437, 468, 469, 493], "apt": [32, 317], "ipython": 32, "tensorflow": [32, 231, 232, 234, 237, 238, 242, 243, 247, 248, 310, 311, 312, 315, 316, 318, 322, 489], "tool": [32, 35, 36, 45, 199, 202, 207, 212, 215, 222, 229, 231, 233, 242, 409, 411, 471, 474, 475, 476, 492], "dep": [32, 35, 482, 486, 487], "fly": [32, 202, 243], "clang": [32, 35, 218, 487], "essenti": [32, 46, 47, 209, 221, 226, 231, 246, 248], "arm": 32, "preliminari": 32, "yet": [32, 124, 197, 201, 219, 226, 254, 419, 422, 462, 468, 475], "calcul": [33, 216, 223, 226, 228, 253, 255, 313, 327, 381, 413], "period": [33, 475], "restor": [33, 469, 475], "persistentvolum": [33, 475], "dump": [33, 253, 289], "cat": [33, 239, 240, 475, 483], "eof": 33, "metadata": [33, 45, 46, 104, 115, 177, 188, 198, 204, 206, 209, 239, 252, 324, 462, 471, 475], "1gi": 33, "accessmod": 33, "readwriteonc": 33, "storageclassnam": 33, "importantli": 33, "lost": [33, 469], "persistentvolumeclaim": [33, 469, 475], "matchlabel": 33, "request": [33, 49, 124, 197, 209, 241, 252, 281, 312, 320, 323, 325, 356, 462, 469, 475, 488], "extern": [33, 37, 45, 235, 242, 469, 475], "ccc": 33, "sub_graph": [33, 224, 243, 489, 490], "haslabel": [33, 212, 218, 224, 228, 243, 493], "simple_g": [33, 243, 485, 489], "pr_result": 33, "tc_result": 33, "add_column": [33, 243, 252, 324, 485, 489, 490], "tc": [33, 243, 489], "997255889378630": 33, "997163552113975": 33, "store_graphs_to_pvc": 33, "graphid": [33, 52, 54, 65, 90, 91, 100, 106, 469], "pvc_name": [33, 469], "schema": [33, 45, 46, 52, 62, 64, 84, 124, 125, 135, 197, 198, 202, 206, 208, 216, 217, 220, 222, 223, 224, 228, 237, 238, 241, 253, 311, 312, 321, 324, 462, 471, 473, 474, 475, 476, 490, 493, 495], "oid_typ": [33, 241, 252, 253, 281, 303, 324, 469, 495], "ulong": 33, "lang": [33, 35, 46, 198, 218, 220, 223, 243, 325], "eid": [33, 208, 220, 324, 475], "restore_graphs_from_pvc": 33, "anymor": 33, "nativ": [34, 44, 216, 222, 242, 246, 248, 249], "behind": [34, 237, 474, 477, 482, 483], "scene": [34, 216, 237, 319], "lower": [34, 216, 226, 228, 246, 381, 388, 401], "cost": [34, 216, 228, 242, 246, 327, 475], "ownership": 34, "cach": [34, 199, 232, 239, 245, 249, 462], "layout": [34, 245, 475], "were": [34, 37, 228, 250, 413, 475], "outperform": [34, 231, 245, 247, 248, 249], "art": [34, 231, 245, 248, 250], "voderank": 34, "average_degree_assort": 34, "degree_assort": 34, "guidelin": [35, 37, 202, 204], "promot": 35, "readabl": [35, 51, 226, 462], "qualiti": [35, 37, 247], "black": [35, 487], "enforc": 35, "rule": [35, 44, 204, 216, 228, 235, 245, 314, 320, 324, 361, 471], "cpplint": 35, "flake8": 35, "fmt": 35, "lint": [35, 37], "makefil": 35, "graphscope_clformat": 35, "graphscope_cpplint": 35, "dev": [35, 214, 239, 486, 487], "pushd": 35, "isort": 35, "diff": 35, "popd": 35, "interactive_engin": [35, 36, 217, 227], "check_format": 35, "files_to_format": 35, "aosp": 35, "toolchain": [36, 233], "devcontain": 36, "json": [36, 52, 53, 54, 55, 90, 91, 100, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 215, 217, 469, 471, 475, 476], "setup": [36, 37, 197, 209, 324, 469, 487], "visual": [36, 37, 202, 242], "studio": 36, "collabor": [36, 242, 474], "stabl": [36, 253, 324, 471, 475, 492], "haven": [36, 201, 228], "navig": [36, 474, 482], "icon": 36, "bottom": [36, 372], "corner": 36, "window": [36, 228, 492], "reopen": 36, "marketplac": 36, "prompt": [36, 51, 220, 227], "shift": [36, 221, 226, 228, 327, 427], "ctrl": 36, "made": [36, 37, 44, 199, 215, 235, 250, 311, 314, 320, 327, 422, 474], "rebuild": 36, "subcommand": [36, 233], "assembli": [36, 217], "learning_engin": 36, "graphlearn": [36, 38, 232, 234, 237, 238, 239, 243, 310, 311, 312, 316, 317, 322, 323, 326, 469, 483, 489, 494], "compos": [36, 38, 200, 223, 232, 235, 243, 245, 249], "alon": [36, 216, 224, 482], "circul": [36, 365], "edit": [36, 37, 220, 408, 445, 482], "entrypoint": [36, 482, 489], "plai": [36, 216, 230, 251, 321, 326, 479], "thank": [37, 202, 212, 220, 242], "interest": [37, 228, 231, 245, 475], "focus": [37, 223, 228, 242, 248, 250, 316, 454, 475], "eager": [37, 253, 254, 303, 305, 324, 469], "contributor": [37, 455], "welcom": [37, 198, 199], "engag": [37, 242, 243], "good": [37, 202], "particip": [37, 44], "join": [37, 44, 221, 223, 228, 239, 312, 322, 363, 366, 374, 381, 390, 391, 404, 406, 409, 410, 411, 412, 413, 421, 422, 462, 474], "ask": [37, 214], "question": [37, 214, 222, 228, 488], "ve": [37, 45, 199, 204, 215, 219, 227, 242], "hasn": [37, 228], "confirm": 37, "concis": [37, 223, 224, 246, 325], "descript": [37, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 204, 206, 215, 216, 221, 223, 226, 235, 239, 241, 311, 314, 319, 320, 324, 419, 427, 475], "relev": [37, 44, 45, 317, 356, 462, 473], "reproduc": [37, 462], "yourself": 37, "why": [37, 209, 228, 253], "saw": 37, "incomplet": 37, "inaccur": 37, "knowledg": [37, 212, 220, 232, 247, 318], "submiss": 37, "fact": [37, 216, 220, 223, 419, 422], "page": [37, 45, 199, 214, 244, 253, 256, 258, 372, 387, 451, 491], "button": [37, 220], "tbf": [37, 213, 250, 470, 481, 484], "isn": [37, 206, 224, 315], "someon": 37, "approach": [37, 202, 220, 224, 231, 232, 242, 244, 246, 247, 315, 391, 404, 459, 474], "spend": 37, "secret": [37, 241, 469, 486, 495], "accident": 37, "hook": 37, "titl": [37, 45, 228, 238, 243], "grammar": 37, "spell": 37, "500": [37, 52, 54, 55, 90, 91, 100, 116, 125, 127, 128, 163, 164, 173, 189, 198, 381], "word": [37, 204, 228, 238, 243, 246, 247, 322, 324, 462], "42": [37, 228, 250, 312, 313, 315, 385, 387, 397, 455], "ticket": 37, "chines": 37, "everyon": 37, "beginn": [37, 246], "patch": 37, "rest": [37, 42, 48, 49, 125, 126, 127, 128, 163, 164, 173, 189, 207, 462, 475], "attain": 37, "brief": [37, 211], "valid": [37, 216, 237, 238, 247, 260, 310, 357, 381, 403, 409, 458, 469, 471], "typo": 37, "feat": 37, "inv": [37, 316, 322, 493], "refactor": 37, "gulp": 37, "broccoli": 37, "npm": [37, 475], "ci": 37, "perf": 37, "neither": 37, "nor": 37, "chore": 37, "routin": [37, 327, 462], "insight": [37, 212, 245, 247, 482], "feedback": [37, 212], "discourag": 37, "rebas": 37, "workflow": [37, 212, 242, 247, 248, 252], "upstream": [37, 316], "leas": 37, "ping": [37, 485], "await": 37, "unfamiliar": 37, "acronym": 37, "glossari": [37, 207, 214, 455], "approv": 37, "date": [37, 47, 221, 228, 473, 474, 475], "todo": [37, 48, 100, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 221, 223, 239, 240, 320], "dongz": 37, "potenti": [37, 200, 202, 232, 242, 474], "concern": [37, 242, 249, 474], "reach": [37, 209, 224, 228, 246, 316, 321, 324, 327, 404, 419, 422, 474], "action": [37, 199, 206], "realiti": [37, 316], "uncommon": 37, "infrastructur": 37, "vital": 37, "inspect": [37, 38, 241, 469, 475], "failur": [37, 249], "stream": [38, 209, 215, 226, 227, 228, 232, 316, 321, 324], "stdout": 38, "log_level": [38, 44, 239, 309], "permiss": [38, 47, 209, 261, 488], "consol": [38, 202, 215, 217, 220, 229, 231, 241, 246, 325, 475, 491], "frontend": [38, 39, 48, 215, 217, 218, 219, 227, 475, 483], "event": [38, 381], "involvedobject": 38, "warn": [38, 462], "pinpoint": 38, "exec": [38, 475, 483], "diagnost": 38, "forward": [38, 202, 232, 234, 235, 237, 238, 243, 247, 316, 475, 489], "browser": [38, 228], "explain": [38, 228, 311, 469, 474, 493], "leverag": [39, 124, 222, 224, 230, 231, 244, 246, 257, 454, 471, 475, 479], "opentelemetri": 39, "javaag": 39, "agent": 39, "protocol": [39, 219, 222, 241, 249, 469], "java_tool_opt": 39, "TO": 39, "otel_service_nam": 39, "compris": [41, 45, 221, 224, 238, 242, 315], "busi": [41, 216, 228, 232, 241, 242, 243, 249], "e2": [41, 441], "coupl": [41, 244, 249, 442, 471], "entri": [42, 206, 216, 226, 228, 235, 237, 326, 327, 374, 391, 393, 394, 419, 421, 422, 440, 482], "swagger": 42, "shield": 42, "understand": [42, 45, 46, 228, 235, 246, 310, 316, 324, 474], "straightforward": [44, 218, 243], "gs_interact": [44, 45, 51, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 199, 204, 206], "tailor": [44, 198], "align": [44, 45, 46, 47, 62, 135, 199, 204, 216, 226, 235, 246, 310, 313, 314, 413, 474], "engine_config": [44, 198, 469], "unconfigur": 44, "glimps": 44, "what": [44, 199, 204, 209, 215, 228, 229, 246, 321, 408, 462, 468, 474], "compute_engin": 44, "thread_num_per_work": 44, "planner": [44, 204], "is_on": 44, "rbo": [44, 216], "filtermatchrul": 44, "filterintojoinrul": 44, "notexisttoantijoinrul": 44, "query_timeout": 44, "20000": 44, "timeout": [44, 209, 217, 218, 475], "millisecond": [44, 47, 221, 226, 250, 473], "default_listen_address": 44, "localhost": [44, 217, 219, 227, 239, 241, 469, 495], "bolt_connector": [44, 202], "cypher": [44, 45, 48, 49, 67, 87, 100, 107, 124, 173, 197, 198, 204, 205, 207, 215, 216, 217, 218, 220, 222, 223, 242, 243, 244, 248, 249, 325, 469], "7687": [44, 48, 199, 202, 215, 217, 219, 220], "gremlin_connector": [44, 202], "8182": [44, 48, 215, 217, 227, 475], "http_servic": 44, "admin_port": 44, "7777": [44, 48], "query_port": [44, 198], "10000": [44, 48, 459], "hierarchi": [44, 46], "propertynam": [44, 59, 69, 88, 475], "databas": [44, 45, 200, 202, 205, 209, 216, 221, 222, 223, 226, 228, 242, 244, 246, 248, 250, 475, 485], "debug": [44, 209, 239, 311, 316, 469, 475, 483], "default_graph": 44, "benefit": [44, 223, 227, 241, 245, 474], "throughput": [44, 48, 202, 207, 216, 242, 248, 249, 475], "claus": [44, 202, 222, 223], "calcit": [44, 215, 223], "notmatchtoantijoinrul": 44, "transform": [44, 51, 216, 223, 228, 252, 264, 277, 454, 462, 463, 467, 473], "anti": [44, 221, 223, 242, 246, 249], "bind": [44, 253, 474], "admin": [44, 48, 49, 198, 202, 205, 324, 475], "submit": [44, 100, 173, 198, 199, 202, 203, 216, 219, 220, 226, 227, 228, 243, 246, 311, 312, 325, 471, 475, 489], "movi": [45, 204, 244, 312], "interactive_hom": [45, 201], "destroi": [45, 206], "csv": [45, 48, 207, 212, 215, 220, 241, 324, 462, 465, 473, 475, 476, 489, 490, 495], "volum": [45, 48, 199, 206, 209, 215, 223, 227, 239, 385, 386, 387, 397, 406, 451, 469, 474], "crucial": [45, 47, 51, 198, 242], "conclud": [45, 310], "reflect": [45, 226, 474, 482], "v0": [45, 48, 250, 317, 465], "vertex_typ": [45, 47, 139, 158, 198], "type_nam": [45, 46, 47, 129, 133, 136, 143, 152, 156, 162, 193, 195, 198], "property_nam": [45, 46, 47, 132, 142, 161, 198, 228, 254, 255, 468], "property_typ": [45, 47, 132, 142, 161, 198], "primitive_typ": [45, 47, 155, 170, 198], "dt_signed_int64": [45, 47, 82, 96, 198], "dt_signed_int32": [45, 47, 82, 96], "taglin": 45, "long_text": [45, 47, 167, 182, 198], "primary_kei": [45, 47, 133, 143, 162, 198, 475], "born": 45, "acted_in": 45, "vertex_type_pair_rel": [45, 47, 129, 136, 156, 198], "source_vertex": [45, 46, 47, 130, 150, 196, 198], "destination_vertex": [45, 46, 47, 130, 150, 196, 198], "many_to_mani": [45, 47, 57, 198], "review": [45, 242, 253, 327, 391, 409], "wrote": 45, "dt_unsigned_int32": [45, 47, 82, 96], "dt_unsigned_int64": [45, 47, 82, 96], "dt_bool": [45, 47, 82, 96], "dt_float": [45, 47, 82, 96], "dt_doubl": [45, 47, 82, 96, 198], "comprehens": [45, 124, 197, 198, 202, 204, 206, 242, 248, 250, 251], "administr": [45, 198, 199, 205, 207, 439], "loading_config": [45, 46, 174, 198], "data_sourc": [45, 46, 175, 198], "odp": [45, 103, 207, 311], "import_opt": [45, 46, 175, 198], "append": [45, 208, 228, 237, 238, 239, 240, 243, 255, 310, 321, 322, 393, 456, 489, 494], "overwrit": [45, 46, 102, 206, 469, 475], "delimit": [45, 46, 215, 324, 464, 476, 490], "edge_map": [45, 46, 146, 174, 198], "type_triplet": [45, 46, 146, 198], "column_map": [45, 46, 135, 146, 193, 198], "consult": [45, 202], "graph_algo": 45, "flex": [45, 124, 202, 207, 482], "delv": [46, 198], "deeper": 46, "thorough": 46, "col_nam": 46, "disregard": 46, "examin": [46, 223, 243], "modern_import_ful": 46, "showcas": 46, "dissect": 46, "header_row": [46, 215, 324, 476], "quot": 46, "quote_char": 46, "double_quot": 46, "escape_char": 46, "block_siz": 46, "4mb": 46, "person_knows_person": [46, 475], "source_vertex_map": [46, 146, 198], "destination_vertex_map": [46, 146, 198], "dst_id": [46, 311, 312, 313, 315, 316, 322, 326], "person_created_softwar": 46, "dd_graph": 46, "your_proj_nam": 46, "table_nam": 46, "partition_col_nam": 46, "partition_nam": 46, "src_user_id": 46, "dst_user_id": 46, "mandatori": [46, 47, 243, 311], "ye": [46, 212, 462], "No": [46, 52, 53, 54, 55, 90, 91, 100, 116, 125, 126, 127, 128, 163, 164, 173, 189, 198, 209, 226, 462], "header": [46, 215, 324, 474, 475], "escap": 46, "batch_siz": [46, 235, 237, 239, 240, 310, 314, 315, 316, 319, 322, 478, 494], "triplet": [46, 47, 224], "outlin": [46, 217, 221], "seamlessli": [46, 124, 197, 199, 212, 215, 222, 229, 231, 242, 248, 249], "encompass": [47, 219, 223, 227, 238], "friendship": 47, "peopl": [47, 216, 220, 228, 462, 475], "since_d": 47, "explan": [47, 198, 202, 253, 314], "terminologi": [47, 221], "delin": 47, "plan": [47, 100, 173, 202, 216, 221, 242, 244, 245, 246, 257, 475, 483], "var_char": [47, 182, 190], "fixed_char": [47, 153, 154], "character": [47, 314], "exclus": [47, 51, 221], "symbol": 47, "skill": 47, "profici": [47, 228], "one_to_on": [47, 57], "one_to_mani": [47, 57, 198], "many_to_on": [47, 57], "x_csr_param": [47, 130, 133, 143, 162], "max_vertex_num": [47, 134], "mmap": 47, "48": [47, 212, 250, 312, 313, 315, 414, 415, 461], "edge_storage_strategi": [47, 131], "only_in": [47, 58], "only_out": [47, 58], "both_out_in": [47, 58], "pertain": [47, 215], "categor": [47, 202, 235], "subtyp": 47, "length": [47, 124, 208, 212, 221, 226, 228, 241, 246, 253, 314, 327, 366, 368, 373, 395, 416, 420, 426, 448, 457, 462, 495], "unlimit": 47, "text": [47, 100, 173, 247, 255, 363], "char": [47, 153, 182, 321, 324, 474], "fixed_length": 47, "desir": [47, 224, 324, 381, 403, 423, 425, 426], "restrict": 47, "max_length": [47, 191], "uint32": [47, 221], "situat": [47, 226, 228, 231, 311, 312, 475], "df_yyyy_mm_dd": 47, "iso": 47, "fomat": 47, "2019": [47, 455], "01": [47, 228, 234, 238, 240, 243, 253, 311, 327, 386, 489], "date_format": 47, "tf_hh_mm_ss_sss": 47, "00": [47, 228], "000": [47, 215, 228, 250], "time_format": 47, "tzf_utc": 47, "tzf_offset": 47, "time_zone_format": 47, "dtf_yyyy_mm_dd_hh_mm_ss_sss": 47, "date_time_format": 47, "date32": [47, 71, 111, 144, 184], "int32": [47, 221, 234, 238, 243, 311, 313, 321, 322, 473, 489], "1970": 47, "time32": 47, "midnight": 47, "timestamp": [47, 111, 112, 184, 185, 473, 475], "int64": [47, 221, 241, 255, 281, 303, 311, 313, 314, 319, 321, 322, 324, 469, 473, 495], "000000": 47, "zone": [47, 221], "signifi": [47, 346, 347], "integ": [47, 61, 76, 79, 81, 83, 84, 86, 87, 88, 89, 93, 105, 118, 122, 123, 221, 226, 327, 362, 365, 366, 367, 368, 369, 371, 373, 374, 376, 377, 380, 381, 384, 385, 386, 387, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 427, 440, 454, 455, 456, 457, 459, 462, 473, 475], "januari": 47, "timezon": 47, "albeit": 47, "previous": [47, 204, 228, 261, 398, 399, 400, 473, 474], "mention": [47, 226, 228, 473, 474, 483], "component_typ": 47, "overflow": 47, "truncat": [47, 447, 448, 449, 454], "bolt": [48, 199, 202, 217, 219, 220, 246], "grep": [48, 215], "awk": [48, 215], "192": 48, "168": [48, 250], "pvc": [48, 215, 469, 475], "higher": [48, 216, 248, 327, 337, 401, 475], "nf": [48, 209, 321, 488], "dataload": [48, 52, 53, 124, 125, 126, 197, 198, 239, 240], "pv": [48, 209, 215, 469, 475, 488], "vim": 48, "someth": [48, 218, 462], "claim": [48, 215, 444, 474, 475], "emptydir": [48, 239], "existingclaim": 48, "replicacount": [48, 215, 475], "num": [48, 208, 217, 227, 228, 323, 474], "gremlinport": [48, 105, 215], "hiactor": [48, 242], "hiactorworkernum": 48, "hiactortimeout": 48, "240000": 48, "craft": [49, 202, 204], "listgraph": [49, 124], "graphmanag": 49, "categori": [49, 221, 226, 232, 234, 235, 243, 247, 322], "getgraphstatist": 49, "creategraph": [49, 124], "deletegraph": [49, 124], "getgraphschema": 49, "getgraphmeta": 49, "importgraph": 49, "createprocedur": [49, 124], "proceduremanag": 49, "listallprocedur": 49, "getprocedur": [49, 124], "updateprocedur": [49, 124], "deleteprocedur": [49, 124], "startservic": [49, 124], "servicemanag": 49, "restartservic": [49, 124], "stopservic": [49, 124], "servicestatu": [49, 55, 124, 128, 197], "systemmetr": 49, "nodemetr": 49, "getjobbyid": [49, 124], "jobmanag": 49, "getalljob": 49, "canceljobbyid": 49, "adminservic": 49, "setuptool": 49, "intric": [51, 198, 228], "inspir": [51, 257, 462], "neo4j": [51, 124, 199, 200, 202, 204, 214, 215, 217, 218, 219, 220, 221, 244, 249, 250, 325, 473], "empow": [51, 222, 229, 246], "skeleton": [51, 430, 433, 447, 448], "param_nam": [51, 202], "clariti": [51, 221], "mandat": 51, "hous": [51, 242, 436, 437], "personid": 51, "draft": 51, "query1": 51, "firstnam": [51, 228, 241, 473, 490, 495], "lastnam": [51, 228, 241, 473, 490, 495], "intrins": 51, "absenc": 51, "imper": [51, 226, 246], "subsequ": [51, 199, 204, 215, 216, 217, 223, 227, 253, 311, 312], "1l": [51, 204, 226], "conclus": [51, 228], "effortlessli": [51, 243], "streamlin": [51, 223, 226], "uri": [52, 53, 54, 55, 90, 91, 100, 116, 124, 125, 126, 127, 128, 163, 164, 173, 189, 197, 219, 241, 324, 473, 495], "interactive_endpoint": [52, 53, 54, 55, 90, 91, 100, 116, 124, 125, 126, 127, 128, 163, 164, 173, 189, 197, 198], "post": [52, 53, 54, 55, 90, 91, 100, 116, 124, 125, 126, 127, 128, 163, 164, 173, 189, 197, 198, 209, 228, 241, 316, 381, 495], "graph_id": [52, 53, 54, 90, 91, 100, 124, 125, 126, 127, 138, 163, 164, 173, 179, 197, 198, 469], "statist": [52, 125, 198, 216, 223, 228, 313], "jobrespons": [52, 124, 125, 197], "schemamap": [52, 84, 124, 125, 157, 197], "apicli": [52, 53, 54, 55, 90, 91, 100, 116, 125, 126, 127, 128, 163, 164, 173, 189, 469], "apiexcept": [52, 53, 54, 55, 90, 91, 100, 116, 125, 126, 127, 128, 163, 164, 173, 189], "defaultcli": [52, 53, 54, 55, 90, 91, 100, 116], "getdefaultapicli": [52, 53, 54, 55, 90, 91, 100, 116], "setbasepath": [52, 53, 54, 55, 90, 91, 100, 116], "apiinst": [52, 53, 54, 55, 90, 91, 100, 116], "graphid_exampl": [52, 54, 90, 91, 100], "println": [52, 53, 54, 55, 90, 91, 100, 116, 124, 475], "catch": [52, 53, 54, 55, 90, 91, 100, 116, 475], "err": [52, 53, 54, 55, 90, 91, 100, 116, 340], "getcod": [52, 53, 54, 55, 90, 91, 100, 116], "getresponsebodi": [52, 53, 54, 55, 90, 91, 100, 116], "getresponsehead": [52, 53, 54, 55, 90, 91, 100, 116], "printstacktrac": [52, 53, 54, 55, 90, 91, 100, 116], "200": [52, 53, 54, 55, 90, 91, 100, 116, 125, 126, 127, 128, 163, 164, 173, 189, 198, 228, 310, 468, 478, 494], "creategraphrespons": [52, 124, 125, 197], "creategraphrequest": [52, 124, 125, 197], "400": [52, 54, 90, 91, 125, 127, 163, 164, 198, 468], "badrequest": [52, 125], "Not": [52, 53, 54, 55, 90, 91, 125, 126, 127, 128, 163, 164, 198, 202, 223, 462, 475], "404": [52, 54, 90, 91, 125, 127, 163, 164, 198], "getgraphrespons": [52, 105, 124, 125, 178, 197], "getgraphstatisticsrespons": [52, 125], "503": [52, 125], "unavail": [52, 125], "getgraphschemarespons": [52, 84, 124, 125, 157, 197], "job_id": [53, 124, 126, 165, 197, 198], "jobid": [53, 92], "jobid_exampl": 53, "jobstatu": [53, 124, 126, 197], "procedure_id": [54, 124, 127, 141, 197, 198], "createprocedurerespons": [54, 124, 127, 197], "createprocedurerequest": [54, 64, 124, 127, 137, 197], "bad": [54, 90, 91, 127, 163, 164], "procedureid": [54, 68], "procedureid_exampl": 54, "getprocedurerespons": [54, 84, 124, 127, 157, 197], "updateprocedurerequest": [54, 124, 127, 197], "startservicerequest": [55, 124, 128, 197], "vertextypepairrel": [56, 63, 83], "baseedgetypevertextypepairrelationsinn": [56, 63, 83, 124, 129, 136, 156, 197], "sourcevertex": [57, 77, 123], "destinationvertex": [57, 77, 123], "xcsrparam": [57, 60, 70, 89], "baseedgetypevertextypepairrelationsinnerxcsrparam": [57, 124, 130, 197], "edgestoragestrategi": 58, "sortoncompact": 58, "boolean": [58, 87, 107, 221, 223, 226, 241, 253, 255, 312, 316, 327, 346, 347, 384, 386, 389, 420, 460, 473], "oemut": 58, "iemut": 58, "propertytyp": [59, 69, 88], "gsdatatyp": [59, 69, 88, 95, 113, 124, 132, 142, 161, 169, 186, 197], "primarykei": [60, 70, 89], "basevertextypexcsrparam": [60, 70, 89, 124, 133, 143, 162, 197], "maxvertexnum": 61, "edgemappingsourcevertexmappingsinnercolumn": [62, 74, 75, 124, 135, 147, 148, 197], "createpropertymeta": [63, 70, 124, 136, 143, 197], "storedprocedur": [64, 84], "creategraphschemarequest": [64, 124, 137, 197], "vertextyp": [66, 85], "createvertextyp": [66, 124, 139, 197], "edgetyp": [66, 85, 464], "createedgetyp": [66, 124, 139, 197], "srclabel": [72, 78, 90, 475], "dstlabel": [72, 78, 90, 475], "edgelabel": [72, 78, 90, 226, 274], "srcprimarykeyvalu": [72, 78, 90], "dstprimarykeyvalu": [72, 78, 90], "typetriplet": 73, "edgemappingtypetriplet": [73, 124, 146, 197], "sourcevertexmap": 73, "edgemappingsourcevertexmappingsinn": [73, 124, 146, 197], "destinationvertexmap": 73, "edgemappingdestinationvertexmappingsinn": [73, 124, 146, 197], "columnmap": [73, 120, 124, 146, 193, 197], "typeid": [79, 83, 89, 122], "vertextypepairstatist": [79, 152], "_char": [80, 109], "fixedcharchar": [80, 109, 124, 153, 182, 197], "fixedchar": [81, 124, 197], "primitivetyp": [82, 124, 197], "stringtypestr": [82, 108, 124, 155, 181, 197], "tempor": [82, 110, 155, 183, 221, 226], "temporaltypetempor": [82, 110, 155, 183], "signed_int32": [82, 96], "unsigned_int32": [82, 96], "signed_int64": [82, 96], "unsigned_int64": [82, 96], "dt_string": [82, 96], "getpropertymeta": [83, 89, 124, 156, 162, 197], "storetyp": 84, "creationtim": [84, 87], "dataupdatetim": 84, "dataimportconfig": 84, "mutable_csr": [84, 198], "getvertextyp": [85, 124, 158, 197], "getedgetyp": [85, 124, 158, 197], "totalvertexcount": 86, "totaledgecount": 86, "vertextypestatist": 86, "vertexstatist": [86, 159], "edgetypestatist": 86, "edgestatist": [86, 159], "boundgraph": 87, "updatetim": 87, "propertyid": 88, "edgerequest": [90, 124, 163, 197], "409": [90, 91, 163, 164, 198], "exit": [90, 91, 163, 164, 227, 239, 253, 493], "edgedata": [90, 124, 163, 197], "paramt": [90, 91, 163, 164], "vertexrequest": [91, 124, 164, 197], "primarykeyvalu": [91, 121], "label_exampl": [91, 164], "null": [91, 100, 221, 226, 327, 344, 360, 361, 368, 375, 427, 457, 462], "vertexdata": [91, 124, 164, 197], "value1": [91, 164, 215, 241, 495], "param2": [91, 164], "value2": [91, 164, 215], "starttim": [93, 105], "endtim": 93, "querynam": 99, "typedvalu": [99, 124, 172, 197], "byte": [100, 221, 253, 261, 321], "xinteractiverequestformat": 100, "bodi": [100, 173, 198, 316, 320, 428], "typeinfo": [100, 173], "proto": [100, 252, 272, 297], "enum": [100, 252], "plain": [100, 173, 247], "loadingconfig": 101, "schemamappingloadingconfig": [101, 124, 174, 197], "datasourc": [102, 241, 495], "schemamappingloadingconfigdatasourc": [102, 175], "importopt": 102, "schemamappingloadingconfigformat": [102, 124, 175, 197], "boltport": 105, "hqpsport": 105, "longtext": [109, 124, 197], "varchar": [109, 124, 197], "varcharvarchar": [109, 117, 124, 182, 190, 197], "uploadfilerespons": [116, 189], "filestorag": [116, 189], "multipart": [116, 189], "maxlength": 118, "propertyarrai": [121, 124, 194, 197], "gradl": 124, "ossrh": 124, "gettingstart": [124, 202], "neo4jsess": 124, "getneo4jsess": [124, 197], "tostr": [124, 252, 476], "adminservicegraphmanagementapi": [124, 197], "createdataloadingjob": 124, "getgraph": 124, "getschema": 124, "adminservicejobmanagementapi": [124, 197], "deletejobbyid": 124, "listjob": 124, "adminserviceproceduremanagementapi": [124, 197], "listprocedur": 124, "adminserviceservicemanagementapi": [124, 197], "getservicestatu": 124, "graphserviceedgemanagementapi": [124, 197], "addedg": 124, "deleteedg": 124, "getedg": 124, "updateedg": 124, "graphservicevertexmanagementapi": [124, 197], "addvertex": 124, "deletevertex": 124, "getvertex": [124, 252], "updatevertex": 124, "queryserviceapi": [124, 197], "proccal": 124, "baseedgetyp": [124, 197], "basepropertymeta": [124, 197], "basevertextyp": [124, 197], "collectiveresult": [124, 197], "keyvalu": [124, 197], "queryrequest": [124, 197], "storedproceduremeta": [124, 197], "stringtyp": [124, 197], "temporaltyp": [124, 197], "timestamptyp": [124, 197], "authent": [124, 197, 217, 219, 248, 475], "schema_map": [125, 174], "job_respons": [125, 165], "pprint": [125, 126, 127, 128, 163, 164, 173, 189], "api_cli": [125, 126, 127, 128, 163, 164, 173, 189, 469], "api_inst": [125, 126, 127, 128, 163, 164, 173, 189], "graph_id_exampl": [125, 127, 163, 164, 173], "api_respons": [125, 126, 127, 128, 163, 164, 173, 189], "back": [125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 228, 231, 237, 320, 474, 482], "create_graph_request": [125, 137], "create_graph_respons": [125, 138], "get_graph_respons": [125, 157], "get_graph_statistics_respons": [125, 159], "get_graph_schema_respons": [125, 158], "job_id_exampl": 126, "job_statu": [126, 166], "create_procedure_request": [127, 140], "create_procedure_respons": [127, 141], "procedure_id_exampl": 127, "get_procedure_respons": [127, 160], "update_procedure_request": [127, 187], "service_statu": [128, 178], "start_service_request": [128, 179], "base_edge_typ": 129, "base_edge_type_inst": 129, "from_json": [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196], "to_json": [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196], "base_edge_type_dict": 129, "to_dict": [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196], "base_edge_type_from_dict": 129, "from_dict": [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196], "base_edge_type_vertex_type_pair_relations_inn": 130, "base_edge_type_vertex_type_pair_relations_inner_inst": 130, "base_edge_type_vertex_type_pair_relations_inner_dict": 130, "base_edge_type_vertex_type_pair_relations_inner_from_dict": 130, "sort_on_compact": 131, "oe_mut": 131, "ie_mut": 131, "base_edge_type_vertex_type_pair_relations_inner_x_csr_param": 131, "base_edge_type_vertex_type_pair_relations_inner_x_csr_params_inst": 131, "base_edge_type_vertex_type_pair_relations_inner_x_csr_params_dict": 131, "base_edge_type_vertex_type_pair_relations_inner_x_csr_params_from_dict": 131, "base_property_meta": 132, "base_property_meta_inst": 132, "base_property_meta_dict": 132, "base_property_meta_from_dict": 132, "base_vertex_typ": 133, "base_vertex_type_inst": 133, "base_vertex_type_dict": 133, "base_vertex_type_from_dict": 133, "base_vertex_type_x_csr_param": 134, "base_vertex_type_x_csr_params_inst": 134, "base_vertex_type_x_csr_params_dict": 134, "base_vertex_type_x_csr_params_from_dict": 134, "var_properti": [135, 147, 148], "column_mapping_inst": 135, "column_mapping_dict": 135, "column_mapping_from_dict": 135, "create_edge_typ": 136, "create_edge_type_inst": 136, "create_edge_type_dict": 136, "create_edge_type_from_dict": 136, "stored_procedur": [137, 157, 198, 204, 206], "var_schema": [137, 157], "create_graph_request_inst": 137, "create_graph_request_dict": 137, "create_graph_request_from_dict": 137, "create_graph_response_inst": 138, "create_graph_response_dict": 138, "create_graph_response_from_dict": 138, "create_graph_schema_request": 139, "create_graph_schema_request_inst": 139, "create_graph_schema_request_dict": 139, "create_graph_schema_request_from_dict": 139, "create_procedure_request_inst": 140, "create_procedure_request_dict": 140, "create_procedure_request_from_dict": 140, "create_procedure_response_inst": 141, "create_procedure_response_dict": 141, "create_procedure_response_from_dict": 141, "create_property_meta": 142, "create_property_meta_inst": 142, "create_property_meta_dict": 142, "create_property_meta_from_dict": 142, "create_vertex_typ": 143, "create_vertex_type_inst": 143, "create_vertex_type_dict": 143, "create_vertex_type_from_dict": 143, "date_typ": 144, "date_type_inst": 144, "date_type_dict": 144, "date_type_from_dict": 144, "src_label": [145, 151, 163, 215, 241, 324, 465, 469, 475, 476, 489, 490], "dst_label": [145, 151, 163, 215, 241, 324, 465, 469, 475, 476, 489, 490], "src_primary_key_valu": [145, 151, 163], "dst_primary_key_valu": [145, 151, 163], "modelproperti": [145, 151, 171, 192, 197], "edge_data": [145, 163, 287, 477], "edge_data_inst": 145, "edge_data_dict": 145, "edge_data_from_dict": 145, "edge_mapping_inst": 146, "edge_mapping_dict": 146, "edge_mapping_from_dict": 146, "edge_mapping_destination_vertex_mappings_inn": 147, "edge_mapping_destination_vertex_mappings_inner_inst": 147, "edge_mapping_destination_vertex_mappings_inner_dict": 147, "edge_mapping_destination_vertex_mappings_inner_from_dict": 147, "edge_mapping_source_vertex_mappings_inn": 148, "edge_mapping_source_vertex_mappings_inner_inst": 148, "edge_mapping_source_vertex_mappings_inner_dict": 148, "edge_mapping_source_vertex_mappings_inner_from_dict": 148, "edge_mapping_source_vertex_mappings_inner_column": 149, "edge_mapping_source_vertex_mappings_inner_column_inst": 149, "edge_mapping_source_vertex_mappings_inner_column_dict": 149, "edge_mapping_source_vertex_mappings_inner_column_from_dict": 149, "edge_mapping_type_triplet": 150, "edge_mapping_type_triplet_inst": 150, "edge_mapping_type_triplet_dict": 150, "edge_mapping_type_triplet_from_dict": 150, "edge_request": [151, 163], "edge_request_inst": 151, "edge_request_dict": 151, "edge_request_from_dict": 151, "type_id": [152, 156, 162, 195, 198], "vertex_type_pair_statist": [152, 196, 198], "edge_statist": 152, "edge_statistics_inst": 152, "edge_statistics_dict": 152, "edge_statistics_from_dict": 152, "fixed_char_inst": 153, "fixed_char_dict": 153, "fixed_char_from_dict": 153, "fixed_char_char": 154, "fixed_char_char_inst": 154, "fixed_char_char_dict": 154, "fixed_char_char_from_dict": 154, "gs_data_typ": 155, "gs_data_type_inst": 155, "gs_data_type_dict": 155, "gs_data_type_from_dict": 155, "get_edge_typ": 156, "get_edge_type_inst": 156, "get_edge_type_dict": 156, "get_edge_type_from_dict": 156, "store_typ": [157, 198], "creation_tim": [157, 160, 198], "data_update_tim": [157, 198], "data_import_config": [157, 198], "get_graph_response_inst": 157, "get_graph_response_dict": 157, "get_graph_response_from_dict": 157, "get_graph_schema_response_inst": 158, "get_graph_schema_response_dict": 158, "get_graph_schema_response_from_dict": 158, "total_vertex_count": [159, 198], "total_edge_count": [159, 198], "vertex_type_statist": [159, 198], "edge_type_statist": [159, 198], "get_graph_statistics_response_inst": 159, "get_graph_statistics_response_dict": 159, "get_graph_statistics_response_from_dict": 159, "bound_graph": [160, 198], "update_tim": 160, "get_procedure_response_inst": 160, "get_procedure_response_dict": 160, "get_procedure_response_from_dict": 160, "property_id": [161, 198, 255], "get_property_meta": 161, "get_property_meta_inst": 161, "get_property_meta_dict": 161, "get_property_meta_from_dict": 161, "get_vertex_typ": 162, "get_vertex_type_inst": 162, "get_vertex_type_dict": 162, "get_vertex_type_from_dict": 162, "src_pk_name": 163, "src_pk_valu": 163, "dst_pk_name": 163, "dst_pk_valu": 163, "vertex_request": [164, 194], "primimary_key_valu": 164, "bob": [164, 475], "primary_key_valu": [164, 194], "cindi": 164, "job_response_inst": 165, "job_response_dict": 165, "job_response_from_dict": 165, "start_tim": [166, 178, 198], "end_tim": 166, "job_status_inst": 166, "job_status_dict": 166, "job_status_from_dict": 166, "long_text_inst": 167, "long_text_dict": 167, "long_text_from_dict": 167, "model_properti": 168, "model_property_inst": 168, "model_property_dict": 168, "model_property_from_dict": 168, "parameter_inst": 169, "parameter_dict": 169, "parameter_from_dict": 169, "primitive_type_inst": 170, "primitive_type_dict": 170, "primitive_type_from_dict": 170, "property_arrai": 171, "property_array_inst": 171, "property_array_dict": 171, "property_array_from_dict": 171, "query_nam": 172, "query_request": 172, "query_request_inst": 172, "query_request_dict": 172, "query_request_from_dict": 172, "bytearrai": [173, 189], "x_interactive_request_format": 173, "x_interactive_request_format_exampl": 173, "schema_mapping_inst": 174, "schema_mapping_dict": 174, "schema_mapping_from_dict": 174, "schema_mapping_loading_config": 175, "schema_mapping_loading_config_inst": 175, "schema_mapping_loading_config_dict": 175, "schema_mapping_loading_config_from_dict": 175, "schema_mapping_loading_config_data_sourc": 176, "schema_mapping_loading_config_data_source_inst": 176, "schema_mapping_loading_config_data_source_dict": 176, "schema_mapping_loading_config_data_source_from_dict": 176, "schema_mapping_loading_config_format": 177, "schema_mapping_loading_config_format_inst": 177, "schema_mapping_loading_config_format_dict": 177, "schema_mapping_loading_config_format_from_dict": 177, "bolt_port": 178, "hqps_port": 178, "gremlin_port": [178, 475], "service_status_inst": 178, "service_status_dict": 178, "service_status_from_dict": 178, "start_service_request_inst": 179, "start_service_request_dict": 179, "start_service_request_from_dict": 179, "stored_procedure_meta": 180, "stored_procedure_meta_inst": 180, "stored_procedure_meta_dict": 180, "stored_procedure_meta_from_dict": 180, "string_typ": 181, "string_type_inst": 181, "string_type_dict": 181, "string_type_from_dict": 181, "string_type_str": 182, "string_type_string_inst": 182, "string_type_string_dict": 182, "string_type_string_from_dict": 182, "temporal_typ": 183, "temporal_type_inst": 183, "temporal_type_dict": 183, "temporal_type_from_dict": 183, "temporal_type_tempor": 184, "temporal_type_temporal_inst": 184, "temporal_type_temporal_dict": 184, "temporal_type_temporal_from_dict": 184, "time_stamp_typ": 185, "time_stamp_type_inst": 185, "time_stamp_type_dict": 185, "time_stamp_type_from_dict": 185, "typed_valu": 186, "typed_value_inst": 186, "typed_value_dict": 186, "typed_value_from_dict": 186, "update_procedure_request_inst": 187, "update_procedure_request_dict": 187, "update_procedure_request_from_dict": 187, "file_path": 188, "upload_file_respons": [188, 189], "upload_file_response_inst": 188, "upload_file_response_dict": 188, "upload_file_response_from_dict": 188, "var_char_inst": 190, "var_char_dict": 190, "var_char_from_dict": 190, "var_char_var_char": 191, "var_char_var_char_inst": 191, "var_char_var_char_dict": 191, "var_char_var_char_from_dict": 191, "vertex_data_inst": 192, "vertex_data_dict": 192, "vertex_data_from_dict": 192, "vertex_mapping_inst": 193, "vertex_mapping_dict": 193, "vertex_mapping_from_dict": 193, "vertex_request_inst": 194, "vertex_request_dict": 194, "vertex_request_from_dict": 194, "vertex_statist": 195, "vertex_statistics_inst": 195, "vertex_statistics_dict": 195, "vertex_statistics_from_dict": 195, "vertex_type_pair_statistics_inst": 196, "vertex_type_pair_statistics_dict": 196, "vertex_type_pair_statistics_from_dict": 196, "assist": [197, 217, 222, 245], "har": 197, "interactive_sdk": 197, "sudo": [197, 317, 486, 487], "pytest": 197, "mock": 197, "virtserv": 197, "swaggerhub": 197, "resp": 197, "f0": [197, 324], "create_dataloading_job": 197, "create_graph": 197, "delete_graph": 197, "get_graph": 197, "get_schema": 197, "list_graph": 197, "delete_job_by_id": 197, "get_job_by_id": 197, "list_job": 197, "create_procedur": 197, "delete_procedur": 197, "get_procedur": 197, "list_procedur": 197, "update_procedur": 197, "get_service_statu": 197, "restart_servic": 197, "start_servic": 197, "stop_servic": 197, "delete_edg": [197, 475], "get_edg": [197, 313], "update_edg": 197, "add_vertex": 197, "delete_vertex": [197, 475], "get_vertex": 197, "update_vertex": 197, "proc_cal": 197, "seek": [198, 321], "toolkit": 198, "showprocedur": 198, "proc_nam": [198, 206], "metric": [198, 247, 409, 410, 411, 412, 413], "canceljob": 198, "x": [198, 227, 228, 239, 240, 250, 253, 310, 316, 322, 327, 365, 398, 406, 408, 409, 413, 437, 494], "ok": [198, 252], "enumer": [198, 239, 240, 252], "respond": [198, 312], "NOT": [198, 221, 226, 474], "yourfil": 198, "123": [198, 311], "example_graph": 198, "11223444": 198, "11123445": 198, "rune": 198, "path_to_fil": 198, "query_servic": 198, "reject": [198, 469], "unabl": 198, "emptybodi": 198, "cpu_usag": 198, "memory_usag": 198, "job_": 198, "create_timestamp": 198, "process_id": 198, "line1": 198, "nlin2": 198, "1706786404768": 198, "bulk_load": 198, "workspac": [198, 239], "maintan": 198, "interactive_serv": 198, "subprocess": 198, "statuscod": 198, "invalidargu": 198, "unsupportedoper": 198, "alreadyexist": 198, "notexist": 198, "codegenerror": 198, "uninitializedstatu": 198, "invalidschema": 198, "permissionerror": [198, 261], "403": 198, "illegaloper": 198, "internalerror": 198, "invalidimportfil": 198, "ioerror": 198, "notfound": 198, "queryfail": 198, "depth": [199, 217, 221, 243, 310, 322, 327, 494], "graph_data": 199, "gs_interactive_conf": 199, "breakdown": [199, 207], "regist": [199, 200, 202, 216, 223, 241, 252, 255, 284, 469], "meta": [199, 217, 232, 241, 252, 313, 314, 473, 475], "tell": [199, 474], "eras": [199, 206], "irrevers": [199, 206], "caution": 199, "establish": [199, 212, 475], "connector": [199, 202, 219, 228], "opencyph": [199, 244], "supported_cyph": [199, 202], "term": [200, 232], "proc": [200, 414, 415, 419, 420, 461], "storp": 200, "sproc": 200, "stopro": 200, "storedproc": 200, "storeproc": 200, "subroutin": 200, "rdbm": [200, 220], "wikipedia": [200, 245, 253, 424, 428, 429, 430, 431, 433, 434, 435, 441, 442, 443, 444, 446, 447, 448, 449, 455], "nest": [200, 226], "sole": [201, 220, 221], "theori": [201, 235, 314, 322], "arm64": 201, "mac": [201, 257, 487, 489], "gs_interactive_hom": 201, "concurr": [202, 207, 242, 312], "impress": [202, 207], "Its": [202, 207, 209, 244, 441, 474], "timefram": [202, 207], "emphas": [202, 207, 249], "stand": [202, 249, 314, 315, 474], "shoulder": 202, "pivot": 202, "pillar": 202, "qp": [202, 215, 228, 248, 475], "snb": [202, 228, 241, 490, 495], "180": 202, "87": [202, 250, 453], "op": [202, 254, 264, 266, 267, 268, 269, 271, 272, 274, 276, 277, 279, 280, 281, 282, 283, 284, 287, 288, 289, 292, 293, 294, 296, 297, 320, 462, 466, 469], "boast": 202, "highlight": [202, 221, 242, 246], "laid": 202, "triumph": 202, "ten": [202, 245, 249, 314], "thousand": 202, "swiftli": 202, "versatil": [202, 223, 248, 474], "expans": [202, 246, 247, 319, 493], "prowess": 202, "prime": [202, 406, 408], "gql": [202, 216, 242, 249], "scalabl": [202, 215, 227, 245, 246, 247, 248, 249, 459], "possess": 202, "larger": [202, 224, 228, 238, 409], "massiv": [202, 216, 246], "too": [202, 215, 228, 249, 312, 381, 462], "offload": [202, 475], "excess": 202, "slave": 202, "constraint": [202, 221, 228, 229, 246], "portion": [202, 228, 245, 246, 254, 324], "occurr": [202, 220, 246], "syntax": [202, 221, 226, 235, 246, 254, 316, 462, 468], "definit": [202, 226, 242, 327, 408, 409, 411], "ir": [202, 215, 216, 217, 242, 244], "unif": 202, "physic": [202, 215, 216, 242, 253, 327, 385, 386, 387, 409, 473], "ddl": 202, "supported_gremlin_step": 202, "acid": [202, 248], "graph_nam": [204, 206, 217], "stored_procedure_1": 204, "flag": [204, 311, 312], "taken": [204, 462], "account": [204, 216, 246, 460, 493], "compile_onli": [204, 206], "procedure_nam": 204, "comma": [204, 311], "proc1": 204, "proc2": 204, "appear": [204, 209, 216, 228, 253, 367, 369, 371, 374, 376, 403, 404, 462, 488], "capit": [204, 221, 223], "aspect": [206, 216, 223, 228, 249], "desc": [206, 226, 228], "input_fil": 206, "solid": [207, 430, 447, 448], "prerequisit": 207, "helm": [207, 209, 214, 215, 475, 486, 488], "entiti": [207, 223, 224, 228, 238, 243, 247, 311], "\u6807\u7b7e": 208, "\u8868\u793a\u67d0\u4e00\u7c7b\u9876\u70b9\u6216\u8005\u8fb9": 208, "\u5c5e\u6027": [208, 493, 495], "\u8868\u793a\u9876\u70b9\u6216\u8fb9\u6240\u5173\u8054\u7684\u6570\u636e": 208, "\u539f\u59cbid": 208, "oid": [208, 252, 254, 255], "\u539f\u59cb\u6570\u636e\u96c6\u4e2d\u7684id": 208, "\u4e0d\u540c\u6807\u7b7e\u7684\u9876\u70b9\u5141\u8bb8\u6709\u76f8\u540c\u7684oid": 208, "\u5b50\u56feid": 208, "fid": [208, 252, 255, 287, 471], "\u5b50\u56fe\u7684\u552f\u4e00\u7f16\u53f7": 208, "\u5206\u533a\u5668": 208, "\u80fd\u591f\u786e\u5b9a\u9876\u70b9oid\u5230\u5206\u533aid": 208, "\u7684\u6620\u5c04": 208, "\u5b50\u56fe": 208, "\u901a\u8fc7\u5207\u8fb9\u5f97\u5230\u7684\u5b50\u56fe": 208, "\u5b58\u50a8\u4e86\u9876\u70b9": 208, "\u8fb9": [208, 485], "\u9876\u70b9\u6570\u636e": 208, "\u8fb9\u6570\u636e\u7b49\u4fe1\u606f": 208, "\u5185\u90e8\u70b9": 208, "\u5c5e\u4e8e\u672cfragment\u7684\u9876\u70b9": 208, "\u5916\u90e8\u70b9": 208, "\u4e0d\u5c5e\u4e8e\u672cfragment\u7684\u9876\u70b9": 208, "\u672c\u5730id": 208, "lid": [208, 252, 287], "\u53ea\u5728\u67d0\u4e2afragment\u5185\u90e8\u6709\u610f\u4e49": 208, "\u5168\u5c40id": 208, "gid": [208, 252, 287], "\u80fd\u591f\u8868\u793a\u4efb\u610f\u4e00\u4e2a\u9876\u70b9": 208, "\u88abfragment\u5171\u8bc6": 208, "\u7528\u4e8e\u5b58\u50a8gid": 208, "oid\u7684\u6620\u5c04\u5173\u7cfb": 208, "\u7684\u8282\u70b9": 208, "\u5b58\u5728\u4ee5\u4e0b\u7f16\u7801\u65b9\u5f0f": 208, "gid\u7f16\u7801": 208, "\u5176\u4e2d": [208, 485, 490], "\u548c": [208, 316, 485, 487, 488, 489, 490, 492, 493, 494, 495], "\u5171\u540c\u7ec4\u6210": 208, "\u67d0\u4e00\u7c7b\u9876\u70b9\u5728\u67d0\u4e2a": 208, "\u7684\u9876\u70b9": 208, "\u5e8f\u53f7": 208, "lid\u7f16\u7801": 208, "\u586b\u5145": 208, "\u603b\u662f": 208, "\u6309\u7167\u6267\u884c\u6d41\u7a0b\u7f16\u53f7": 208, "\u63cf\u8ff0\u4e86\u8f7d\u56fe\u7684\u4e3b\u8981\u903b\u8f91": 208, "\u5206\u4e3ahashpartitioner\u548csegmentedpartition": 208, "\u521d\u59cb\u5316\u4ed6\u4eec\u9700\u8981\u7ed9\u51fafragment\u7684\u6570\u91cf": 208, "segmentedpartitioner\u8fd8\u9700\u7ed9\u51fa\u5168\u90e8\u7684oid": 208, "\u6bcf\u4e2a\u8fdb\u7a0b\u8bfb\u53d6\u4e00\u90e8\u5206\u70b9": 208, "\u8fb9\u6587\u4ef6": 208, "\u5f97\u5230\u591a\u4e2avertex": 208, "\u548cedg": 208, "etabl": 208, "\u5176\u4e2dvtable\u6309\u7167\u9876\u70b9\u6807\u7b7e": 208, "\u5206\u7ec4": 208, "etable\u5148\u6309\u7167\u8fb9\u6807\u7b7e": 208, "\u540c\u4e00\u4e2a\u8fb9\u6807\u7b7e\u4e0b\u9762\u53c8\u6309\u7167src\u548cdst\u7684\u9876\u70b9\u6807\u7b7e\u5206\u7ec4": 208, "\u539f\u59cb\u7684\u9876\u70b9\u8868": 208, "\u8fb9\u8868": 208, "\u6bcf\u4e2a\u8fdb\u7a0b\u6301\u6709\u90e8\u5206\u7684\u6570\u636e": 208, "partial_v_t": 208, "partial_e_t": 208, "table\u5305\u542boid": 208, "table\u5305\u62ecsrc\u548cdst\u7684oid": 208, "\u8bbf\u95eevtable\u7684oid\u5217": 208, "\u6839\u636eoid\u67e5\u8be2partit": 208, "\u5c06\u8868\u4e2d\u7684\u8bb0\u5f55\u5206\u53d1\u7ed9\u9876\u70b9\u7684\u62e5\u6709\u8005": 208, "\u4eceshuffle\u540e\u7684vtable\u53d6\u51faoid\u6267\u884cal": 208, "gather\u64cd\u4f5c": 208, "\u4f7f\u5f97\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u80fd\u591f\u83b7\u53d6\u7684\u6240\u6709oid": 208, "\u6839\u636efrag\u6570\u91cf": 208, "label\u6570\u91cf\u548c\u5168\u90e8oid": 208, "\u6bcf\u4e2a\u8fdb\u7a0b\u6784\u5efavertex": 208, "fid_t": [208, 252], "fnum_": 208, "label_id_t": [208, 252], "label_num_": 208, "hashmapbuild": 208, "cur_gid": 208, "id_parser_": 208, "generateid": 208, "\u8d77\u59cbgid": 208, "vnum": 208, "\u904d\u5386\u5168\u90e8\u5185\u90e8\u70b9": 208, "\u751f\u6210gid": 208, "emplac": 208, "getview": 208, "\u6309\u7167elabel\u904d\u5386\u6bcf\u4e00\u5f20edg": 208, "\u83b7\u53d6\u5230src\u548cdst\u7684label": 208, "\u8bbf\u95ee\u6bcf\u4e2asrc\u7684oid": 208, "\u6839\u636epartitioner\u83b7\u53d6fid": 208, "\u6839\u636efid": 208, "id\u548coid\u67e5\u8be2gid": 208, "\u751f\u6210gid\u6570\u7ec4": 208, "\u5904\u7406dst\u7684\u903b\u8f91\u540c\u7406": 208, "\u5f97\u5230src\u548cdst\u4e24\u4e2agid\u6570\u7ec4\u540e": 208, "\u66ff\u6362\u6389\u539fetable\u7684oid\u6570\u7ec4": 208, "\u5bf9etable\u6267\u884cshuffl": 208, "\u5c06\u76f8\u5e94\u7684\u884c\u4f20\u8f93\u7ed9\u6b63\u786e\u7684\u8fdb\u7a0b": 208, "\u5c06shuffle\u8fc7\u7684vtable\u548cetable\u9001\u7ed9basicarrowfragmentbuilder\u6784\u5efacsr": 208, "\u5904\u7406\u9876\u70b9": 208, "\u521d\u59cb\u5316id": 208, "parser": [208, 216, 239], "\u521d\u59cb\u5316ivnum": 208, "ovnum\u548ctvnum\u6570\u7ec4": 208, "\u6309\u7167vertex": 208, "label\u5206\u7ec4": 208, "\u904d\u5386\u6bcf\u4e00\u79cd\u9876\u70b9": 208, "\u5411vertex": 208, "map\u67e5\u8be2\u672cfragment\u7684\u5185\u90e8\u70b9\u6570\u91cf": 208, "\u5e76\u8bbe\u7f6e\u5bf9\u5e94\u7684ivnum": 208, "\u5c06vertex": 208, "table\u5408\u5e76\u6210\u4e00\u4e2achunk\u4fbf\u4e8e\u540e\u7eed\u8bbf\u95ee": 208, "vid_parser_": 208, "vertex_label_num_": 208, "resiz": 208, "ivnums_": 208, "ovnums_": 208, "tvnums_": 208, "combinechunk": 208, "default_memory_pool": 208, "vm_ptr_": 208, "getinnervertexs": [208, 252], "fid_": 208, "\u5904\u7406\u8fb9\u5305\u62ec\u4ee5\u4e0b5\u4e2a\u6b65\u9aa4": 208, "\u904d\u5386\u6bcf\u4e00\u79cd\u8fb9": 208, "\u901a\u8fc7src": 208, "gid\u5217\u548cdst": 208, "gid\u5217\u67e5\u8be2\u51fa\u672cfragment\u6240\u6709\u7684\u5916\u90e8\u70b9": 208, "\u5e76\u6309\u7167vertex": 208, "edge_t": [208, 311, 322], "table\u5408\u5e76\u6210\u4e00\u4e2achunk": 208, "\u627e\u51fa\u672cfragment\u5168\u90e8\u5916\u90e8\u70b9\u7684gid": 208, "collect_outer_vertic": 208, "dynamic_pointer_cast": [208, 476], "converttoarrowtyp": [208, 252], "arraytyp": [208, 252], "chunk": [208, 297, 324, 473], "\u6839\u636e\u5916\u90e8\u70b9\u7684gid": 208, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u6784\u5efagid\u5230lid\u7684\u6620\u5c04\u4e0e\u53bb\u91cd\u7684gid\u6570\u7ec4": 208, "\u5916\u90e8\u70b9\u7684lid\u7531label": 208, "id\u548c\u9876\u70b9\u5e8f\u53f7\u7ec4\u6210": 208, "\u9876\u70b9\u5e8f\u53f7\u4eceivnum\u5f00\u59cb\u8ba1\u6570": 208, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u586b\u5145ovnum\u548ctvnum": 208, "ovg2l_maps_": 208, "ovgid_lists_": 208, "cur_list": 208, "collected_ovgids_": 208, "\u6392\u5e8fgid": 208, "cur_map": 208, "buildertyp": 208, "vec_build": 208, "\u751f\u6210\u5916\u90e8\u70b9\u7684lid": 208, "\u5176\u4e2dfid\u4e3a0": 208, "offset\u4eceivnum\u5f00\u59cb\u7f16\u53f7": 208, "cur_id": 208, "\u5904\u7406\u7b2c\u4e00\u4e2a\u5143\u7d20": 208, "cur_list_length": 208, "\u627e\u5230\u4e0d\u91cd\u590d\u7684\u4e24\u4e2agid": 208, "\u6839\u636e\u4e0a\u4e00\u6b65\u6784\u6210\u7684gid\u5230lid\u7684\u6620\u5c04": 208, "\u5c06src\u548cdst\u7684gid\u90fd\u8f6c\u6362\u6210lid": 208, "\u5220\u9664edg": 208, "table\u7684src\u5217\u548cdst\u5217": 208, "gid\u5230lid\u8f6c\u6362\u51fd\u6570": 208, "generate_local_id_list": 208, "gid_list": 208, "lid_list": 208, "vec": 208, "getfid": 208, "\u751f\u6210\u5185\u90e8\u70b9lid": 208, "getlabelid": 208, "getoffset": 208, "\u67e5\u8be2g2l": 208, "\u901a\u8fc7gid\u627e\u5230\u5916\u90e8\u70b9lid": 208, "\u6839\u636esrc\u548cdst\u5217\u7684gid\u751f\u6210lid": 208, "edge_src_": 208, "edge_dst_": 208, "table\u7684src\u5217\u548cgid\u5217": 208, "\u53ea\u4fdd\u7559\u5c5e\u6027": 208, "tmp_table0": 208, "removecolumn": 208, "\u6784\u5efacsr": 208, "\u5bf9\u4e8e\u6709\u5411\u56fe": 208, "\u6784\u5efa\u51fa\u8fb9\u548c\u5165\u8fb9\u4e24\u4e2acsr": 208, "\u9996\u5148\u6784\u5efa\u51fa\u8fb9csr": 208, "\u7edf\u8ba1\u6bcf\u79cd\u6e90\u9876\u70b9\u7684\u51fa\u5ea6": 208, "\u6784\u5efarow": 208, "offset\u6570\u7ec4": 208, "\u8bbf\u95ee\u6bcf\u6761\u8fb9": 208, "\u4f7f\u7528row": 208, "offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u76ee\u7684\u9876\u70b9nbr\u7684\u5730\u5740": 208, "\u586b\u5145dst": 208, "lid\u548ceid\u5230nbr": 208, "\u6309\u7167\u76ee\u7684\u9876\u70b9\u7684lid": 208, "\u5c06\u6bcf\u4e00\u4e2a\u6e90\u9876\u70b9\u7684\u76ee\u7684\u9876\u70b9\u6392\u5e8f": 208, "generate_directed_csr": 208, "vid_array_t": [208, 252], "src_list": 208, "dst_list": 208, "fixedsizebinaryarrai": 208, "int64arrai": 208, "edge_offset": 208, "actual_edge_num": 208, "v_label": [208, 252, 471], "edge_num": [208, 287, 489, 493], "src_list_ptr": 208, "raw_valu": 208, "dst_list_ptr": 208, "\u8ba1\u7b97\u6e90\u9876\u70b9\u7684\u5ea6": 208, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u6784\u5efarow": 208, "tvnum": 208, "offset_vec": 208, "degree_vec": 208, "int64build": 208, "podarraybuild": 208, "nbr_unit_t": [208, 252], "edge_build": 208, "v_offset": 208, "\u83b7\u53d6\u76ee\u7684\u9876\u70b9\u6307\u9488": 208, "ptr": 208, "mutablepoint": 208, "\u586b\u5145\u76ee\u7684\u9876\u70b9lid": 208, "\u5176\u4e2deid\u7528\u4e8e\u4e4b\u540e\u83b7\u53d6\u8fb9\u4e0a\u7684\u5c5e\u6027": 208, "vid": [208, 252, 324], "eid_t": [208, 252], "\u66f4\u65b0offset": 208, "\u6307\u5411\u6e90\u9876\u70b9\u7684\u4e0b\u4e00\u6761\u51fa\u8fb9": 208, "\u5bf9\u4e34\u63a5\u70b9\u6309\u7167lid\u6392\u5e8f": 208, "offsets_ptr": 208, "lh": 208, "\u6784\u5efa\u5165\u8fb9csr\u548c\u51fa\u8fb9\u540c\u7406": 208, "\u5bf9\u4e8e\u65e0\u5411\u56fe": 208, "\u51fa\u8fb9\u548c\u5165\u8fb9\u5171\u7528\u4e00\u4e2acsr": 208, "\u903b\u8f91\u548c\u6709\u5411\u56fe\u7c7b\u4f3c": 208, "\u4f46\u662f\u8981\u540c\u65f6\u7edf\u8ba1\u6e90\u9876\u70b9\u548c\u76ee\u7684\u9876\u70b9\u7684\u5ea6\u6765\u6784\u5efarow": 208, "offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u6e90\u9876\u70b9\u7684nbr\u586b\u5145\u5165\u8fb9\u7684src": 208, "lid\u548ceid": 208, "\u540c\u65f6\u8fd8\u8981\u4f7f\u7528offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u76ee\u7684\u9876\u70b9\u7684nbr\u586b\u5145dst": 208, "\u5c01\u88c5": 208, "seal": [208, 231, 247], "\u51c6\u5907\u597d\u9876\u70b9\u6570\u91cf": 208, "ovgid\u548cg2l_map\u540e": 208, "\u5c06\u4ed6\u4eec\u5c01\u88c5\u6210\u5404\u79cdvineyardobject": 208, "\u6839\u636emetadata\u4ecevineyard\u67e5\u8be2\u548c\u6784\u5efa\u4ee5\u4e0b\u6570\u636e\u7ed3\u6784\u4f5c\u4e3aarrowfragment\u7684\u6210\u5458": 208, "\u4e5f\u5c31\u662f\u8bf4": [208, 486], "\u4ee5\u4e0b\u6570\u636e\u90fd\u662f\u5b58\u50a8\u5728vineyard\u4e2d\u7684": 208, "\u5f53\u524dfragment": 208, "fragment\u603b\u6570": 208, "directed_": 208, "\u662f\u5426\u4e3a\u6709\u5411\u56fe": 208, "\u9876\u70b9\u79cd\u7c7b\u6570\u91cf": 208, "edge_label_num_": 208, "\u8fb9\u79cd\u7c7b\u6570\u91cf": 208, "propertygraphschema": 208, "schema_": 208, "\u5185\u90e8\u548c\u5916\u90e8\u70b9\u603b\u6570": 208, "\u9876\u70b9\u5c5e\u6027\u8868": 208, "\u4e0d\u5305\u542bid\u5217": 208, "\u5916\u90e8\u70b9gid": 208, "gid\u5230lid\u6620\u5c04": 208, "\u8fb9\u5c5e\u6027": 208, "csr\u7ed3\u6784\u7684column": 208, "\u5bf9\u4e8e\u65e0\u5411\u56fe\u53ea\u6709oe_lists_\u88ab\u4f7f\u7528": 208, "csr\u7ed3\u6784\u7684row": 208, "vertex_map_t": [208, 252], "\u5269\u4e0b\u7684\u6210\u5458\u5c06\u6839\u636e\u4ee5\u4e0a\u4fe1\u606f\u6765\u6784\u5efa": 208, "edge_tables_columns_": 208, "\u6bcf\u4e00\u79cd\u8fb9\u7684\u5c5e\u6027\u5217\u5730\u5740": 208, "flatten_edge_tables_columns_": 208, "\u540c\u4e0a": 208, "vertex_tables_columns_": 208, "\u6bcf\u4e00\u79cd\u9876\u70b9\u7684\u5c5e\u6027\u5217\u5730\u5740": 208, "ie_ptr_lists_": 208, "oe_ptr_lists_": 208, "\u6bcf\u4e00\u79cd\u9876\u70b9\u7684\u6bcf\u4e00\u79cd\u5165": 208, "\u51fa\u8fb9\u7684\u8d77\u59cb\u5730\u5740": 208, "\u4e5f\u5c31\u662fcolumn": 208, "index\u7684\u8d77\u59cb\u5730\u5740": 208, "ie_offsets_ptr_lists_": 208, "oe_offsets_ptr_lists_": 208, "\u51fa\u8fb9\u7684row": 208, "offset\u8d77\u59cb\u5730\u5740": 208, "offset\u7684\u8d77\u59cb\u5730\u5740": 208, "\u4ee5\u4e0b\u662f\u6bcf\u4e00\u79cd\u9876\u70b9": 208, "\u6bcf\u4e00\u79cd\u8fb9\u7684\u6e90\u9876\u70b9fid": 208, "\u76ee\u7684\u9876\u70b9fid": 208, "\u6e90\u9876\u70b9\u548c\u76ee\u7684\u9876\u70b9fid\u6784\u6210\u7684csr\u7ed3\u6784": 208, "idst_": 208, "odst_": 208, "iodst_": 208, "idoffset_": 208, "odoffset_": 208, "iodoffset_": 208, "\u4ee5\u4e0b\u5185\u5bb9\u63cf\u8ff0\u4e86\u8bbf\u95ee\u9876\u70b9": 208, "\u9876\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e\u7684api\u548c\u5b9e\u73b0": 208, "\u5185\u90e8\u70b9\u8303\u56f4\u7531\u8d77\u59cblid\u548c\u7ec8\u6b62lid\u6784\u6210": 208, "lid\u7684\u7f16\u7801\u5305\u542b\u4e86\u9876\u70b9label": 208, "id\u548c\u9876\u70b9\u5e8f\u53f7": 208, "\u5185\u90e8\u70b9\u7684\u9876\u70b9\u5e8f\u53f7\u8303\u56f4\u4e3a": 208, "ivnum": 208, "\u5916\u90e8\u70b9\u5e8f\u53f7\u8303\u56f4\u4e3a": 208, "\u5168\u90e8\u9876\u70b9\u5e8f\u53f7\u4e3a": 208, "vertex_range_t": [208, 252], "label_id": [208, 252, 254, 255, 287], "\u751f\u6210lid\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u8303\u56f4": 208, "\u7ed3\u675f\u8303\u56f4\u662f\u5f00\u533a\u95f4": 208, "\u6839\u636e\u9876\u70b9lid\u83b7\u53d6\u9876\u70b9\u7c7b\u578b": 208, "\u5c5e\u6027id": 208, "\u5217\u53f7": 208, "\u83b7\u53d6\u5230\u5217\u6307\u9488": 208, "\u7136\u540e\u4ecelid\u83b7\u53d6\u5230\u9876\u70b9\u5e8f\u53f7": 208, "\u884c\u53f7": 208, "\u5373\u53ef\u8bbf\u95ee\u5230\u9876\u70b9\u7684\u67d0\u4e2a\u5c5e\u6027": 208, "getdata": [208, 252], "prop_id_t": [208, 252], "prop_id": 208, "property_graph_util": [208, 252], "valuegett": 208, "\u8bbf\u95ee\u51fa\u8fb9\u9700\u8981\u7ed9\u51fa\u6e90\u9876\u70b9lid\u548c\u67d0\u4e00\u79cd\u8fb9\u7684\u7c7b\u578b": 208, "\u800c\u6e90\u9876\u70b9\u7684\u7c7b\u578b\u5df2\u7ecf\u88ablid\u7f16\u7801\u6240\u5305\u542b": 208, "\u6240\u4ee5\u4e0d\u7528\u7ed9\u51fa": 208, "adj_list_t": [208, 252], "e_label": [208, 252], "\u83b7\u53d6\u6e90\u9876\u70b9lid": 208, "\u83b7\u53d6\u6e90\u9876\u70b9\u7c7b\u578b": 208, "\u83b7\u53d6\u6e90\u9876\u70b9\u5e8f\u53f7": 208, "offset_arrai": 208, "\u8bbf\u95eerow": 208, "oe": 208, "\u83b7\u53d6\u51fa\u8fb9\u8d77\u59cb\u5730\u5740": 208, "\u751f\u6210adjlist\u5bf9\u8c61": 208, "\u5206\u522b\u4e3a\u51fa\u8fb9\u8d77\u59cb\u5730\u5740": 208, "\u7ed3\u675f\u5730\u5740": 208, "\u8fb9\u5c5e\u6027\u5217\u5730\u5740": 208, "\u548c\u51fa\u8fb9\u540c\u7406": 208, "\u53ea\u9700\u8981\u628aoe\u76f8\u5173\u53d8\u91cf\u540d\u6362\u6210ie\u5373\u53ef": 208, "ie": 208, "\u56e0\u4e3a\u5728adjlist\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u51fa\u8fb9\u5c5e\u6027\u8868\u7684\u8d77\u59cb\u5730\u5740": 208, "\u6bcf\u6761\u51fa\u8fb9\u8fd8\u5305\u542b\u4e86\u8fb9id": 208, "\u5bf9\u5e94\u5230\u884c\u53f7": 208, "\u56e0\u6b64\u518d\u7ed9\u51fa\u5c5e\u6027\u7684\u5217\u53f7\u5c31\u80fd\u591f\u53bb\u5f97\u5230\u5177\u4f53\u7684\u6570\u636e": 208, "\u4f8b\u5982": [208, 485, 489, 493, 495], "\u83b7\u53d6edg": 208, "struct": [208, 252, 385, 418], "\u83b7\u53d6\u5c5e\u6027\u5217\u7684\u5730\u5740": 208, "\u548ceid\u5c31\u80fd\u591f\u83b7\u53d6\u5230\u5177\u4f53\u7684\u5c5e\u6027": 208, "edata_arrays_": 208, "nbr_": 208, "8g": [209, 239], "18": [209, 218, 228, 250, 312, 313, 315, 324, 327, 385, 434, 439, 443, 445, 448, 454, 473, 485, 488, 492], "silent": [209, 462, 483], "did": [209, 322], "role": [209, 216, 230, 239, 244, 312, 321, 327, 413, 451, 459, 475, 479, 483, 488], "rolebind": [209, 488], "uninstal": [209, 215, 488], "recycl": 209, "alloc": [209, 233, 237], "seem": [209, 228], "stuck": 209, "consumpt": 209, "poor": [209, 318], "acquir": [209, 219, 227], "mostli": [209, 217, 288], "visibl": [209, 255], "cloud": [209, 248, 249, 475], "k8s_vineyard_mem": [209, 239, 309, 469, 488], "shape": [209, 234, 235, 238, 243, 252, 254, 313, 314, 315, 316, 319, 322, 326, 384, 489], "forth": 209, "smaller": [209, 228, 250, 325, 327, 383, 384, 388], "shared_mem": [209, 488], "grpcio": [209, 488], "grpc_python_build_system_openssl": [209, 488], "scipi": [209, 409, 410, 411, 412, 462, 465, 488], "anaconda": [209, 488], "workaround": 209, "openbla": 209, "tri": [209, 212, 237, 246, 391, 397], "pkgconfig": 209, "cmake_prefix_path": 209, "brew": 209, "deni": [209, 261, 488], "kafka": [209, 471, 475, 488], "zookeep": [209, 488], "crashloopbackoff": [209, 488], "bitnami": [209, 488], "755": 209, "1001": [209, 475], "brutal": 209, "chmod": [209, 227, 488], "777": [209, 250, 488], "eleg": [209, 212], "grant": [209, 459], "rais": [209, 216, 253, 261, 263, 297, 309, 316, 324, 325, 327, 333, 342, 346, 347, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 396, 397, 401, 403, 406, 407, 408, 419, 422, 454, 457, 458, 462, 465, 469], "timeout_second": [209, 309, 469, 488], "600": [209, 250, 469, 488], "enterpris": 209, "proxi": [209, 488], "properli": [209, 224], "wrong": 209, "resolut": [209, 475], "occup": 209, "hostnam": [209, 488], "no_proxi": [209, 488], "suffix": [209, 226], "flush": 209, "forcibli": 209, "contact": 209, "slack": [209, 488], "dingtalk": [209, 488], "happi": 209, "90": [211, 250], "traffic": 212, "web": [212, 253, 327, 395, 409, 414, 455], "ever": [212, 235], "amount": [212, 227, 233, 247, 314, 316, 318], "hidden": [212, 244, 245, 247, 310, 494], "attract": 212, "attent": [212, 247, 316], "difficult": [212, 311, 321, 475], "obstacl": 212, "attempt": [212, 215, 245, 246, 249, 462], "curv": [212, 245], "hard": [212, 226, 236, 237, 423, 474], "complic": [212, 216, 228, 254], "sql": [212, 216, 223, 226, 228, 229], "deep": [212, 235, 242, 310, 315, 316, 318, 338, 341, 450, 462], "gnn": [212, 214, 232, 234, 235, 238, 242, 243, 248, 249, 310, 314, 315, 316, 318, 319, 469, 491, 494], "train": [212, 220, 232, 234, 235, 236, 242, 243, 248, 249, 251, 312, 315, 316, 318, 319, 322, 326, 469, 489, 494], "fist": 212, "interpret": [212, 242, 327], "mount_dataset": [212, 241], "ran": [212, 237], "p2p_network": 212, "embed": [212, 232, 238, 243, 247, 311, 318], "inter": [212, 323, 381, 384], "wherea": [212, 381, 474], "numpi": [212, 228, 232, 252, 254, 269, 280, 289, 313, 314, 316, 317, 318, 319, 322, 324, 326, 327, 454, 462, 465, 491], "datafram": [212, 241, 254, 268, 279, 289, 292, 324, 462, 485, 495], "head": [212, 215, 220, 226, 228], "creationd": [212, 226, 228, 241, 473, 490, 495], "locationip": [212, 241, 495], "browserus": [212, 228, 241, 495], "618475290625": 212, "2011": [212, 228, 395], "08": [212, 250, 327], "17t14": 212, "26": [212, 226, 228, 239, 250, 312, 313, 315, 411], "59": [212, 250], "961": 212, "210": [212, 250, 458], "17": [212, 228, 250, 312, 313, 315, 485], "chrome": [212, 228], "618475290626": 212, "17t11": 212, "570": 212, "comment_replyof_com": 212, "274877907301": 212, "274877907299": 212, "274877907302": 212, "pd": [212, 220, 241, 495], "df_v": [212, 241, 485, 495], "read_csv": [212, 220, 241, 495], "sep": [212, 220, 241, 324, 495], "df_e": [212, 241, 495], "graphcomput": [214, 493], "gl": [214, 235, 248, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323], "neural": [214, 232, 242, 243, 248, 249, 251, 310, 311, 314, 316, 318, 322], "posit": [214, 228, 247, 248, 310, 316, 327, 372, 391, 393, 394, 396, 397, 401, 409, 410, 411, 412, 413, 457, 460, 474, 477], "frequent": [214, 242, 245, 475], "groot": [214, 224, 242, 249], "graphar": [214, 324], "gart": 214, "gap": 214, "oltp": [214, 242, 244], "style": [214, 231, 242, 467], "wonder": 215, "throughout": [215, 216, 226], "smoothli": 215, "easiest": 215, "websit": [215, 245, 381], "untar": 215, "cp": [215, 217, 459, 474], "tree": [215, 244, 362, 364, 372, 392, 398, 400, 410, 411, 412, 425, 426, 463, 469, 495], "your_release_nam": 215, "cypherport": 215, "littl": [215, 226, 228], "v6d_modern_load": [215, 217], "data_path": [215, 476], "store_data_path": [215, 217], "thing": [215, 316, 482], "key1": 215, "key2": 215, "token": [215, 226], "column_typ": 215, "infer": [215, 241, 247, 248], "filed1": 215, "filed2": 215, "unexpect": 215, "troubl": 215, "correspondingli": [215, 235, 419, 422], "v6d_ldbc_loader": 215, "hdf": [215, 241, 289, 321, 324, 475, 485, 495], "pegasusworkernum": 215, "pegasustimeout": 215, "durat": [215, 221, 226], "pegasusbatchs": 215, "1024": [215, 217, 226, 473], "pegasusoutputcapac": 215, "frontendquerypersecondlimit": 215, "2147483647": [215, 475], "gremlinscriptlanguagenam": 215, "antlr_gremlin_travers": 215, "antlr_gremlin_calcit": 215, "inher": 216, "manufactur": 216, "upcom": 216, "sticki": 216, "shelv": 216, "intellig": [216, 228, 242, 249, 419, 422], "hybrid": [216, 474, 475], "dedupl": 216, "latenc": [216, 227, 242, 248, 249], "hope": [216, 228, 475], "trade": [216, 242, 475], "inevit": 216, "realist": [216, 454], "lengthi": 216, "verif": [216, 242], "80": [216, 250, 441], "decoupl": [216, 242, 249], "upper": [216, 226, 228, 232, 246, 381, 474], "briefli": [216, 247], "algebra": [216, 451], "edgeexpans": 216, "pathexpans": 216, "legal": 216, "predic": [216, 228], "arithmet": [216, 226, 228], "firstli": [216, 224, 228, 241, 249], "down": [216, 223, 240, 379], "cbo": 216, "glogu": 216, "shuffl": [216, 226, 239, 240, 316, 322, 326], "plu": [216, 226, 228, 365, 437], "unaccept": 216, "come": [216, 220, 228, 231, 241, 243, 244, 247, 248, 250, 313, 428, 465], "end2end": 217, "sf": [217, 228], "v6d_object_id": 217, "unsur": [217, 220], "vineyard_ipc_socket": [217, 476], "gie_test_hom": 217, "rpc": [217, 239, 252, 323, 469, 475], "1234": 217, "127": [217, 250, 475], "11234": 217, "pegasu": [217, 242], "gaia_executor": 217, "log4r": [217, 475], "yml": [217, 473, 475], "usernam": [217, 475], "password": [217, 475], "auth": [217, 219, 327, 475], "3000000": [217, 218, 475], "djna": 217, "kill": [217, 469], "pkill": 217, "gcc": [218, 250, 492], "64": [218, 227, 235, 315, 316, 393, 473, 493], "chip": [218, 492], "hereaft": [218, 228, 243], "q1": [218, 220, 228, 243], "q2": [218, 228, 243], "q3": [218, 228, 243], "453": 218, "xxx": [218, 220, 320, 324, 469, 485], "pppp": 218, "startup": 218, "3000": 218, "entr": 218, "ee": 218, "syntact": [218, 224, 229, 246], "sugar": [218, 224, 229, 246], "graphdatabas": 219, "routingcontrol": [219, 243], "print_top_10": 219, "execute_queri": 219, "routing_": [219, 243], "simpler": [219, 227, 228, 462], "nowadai": 220, "shortcom": [220, 224, 228], "gpt": 220, "materi": 220, "year": [220, 226, 228, 243, 245, 489], "mislead": 220, "hot": 220, "cold": 220, "workabl": 220, "significantli": [220, 223, 224, 245, 248], "openai": 220, "novic": 220, "dream": 220, "chamber": 220, "25": [220, 228, 234, 238, 243, 250, 312, 313, 315, 384, 386, 389, 408, 455, 489], "langchain": 220, "316": 220, "suchun": 220, "sv": 220, "nodes_set": 220, "stone_story_nodes_rel": 220, "vid_field": [220, 241, 324, 490], "edges_set": 220, "stone_story_edg": 220, "edges_sets_": 220, "src_field": [220, 241, 324, 490], "dst_field": [220, 241, 324, 490], "daughter_in_law_of_grandson_of": 220, "wife_of": 220, "api_kei": 220, "query_to_cyph": 220, "langchain_prompt": 220, "son": 220, "baoyu": 220, "jia": 220, "\u8d3e\u5b9d\u7389\u662f\u8c01\u7684\u513f\u5b50": 220, "cypher_sent": 220, "son_of": 220, "q": [220, 227, 314, 316, 322, 404, 408], "\u8d3e\u5b9d\u7389": 220, "lastli": 220, "\u8d3e\u653f": 220, "stori": 220, "compli": [221, 316], "unaddress": 221, "regard": [221, 228, 238, 474], "keyword": [221, 329, 330, 331, 398, 405, 409, 410, 411, 412, 413, 462, 465, 468, 469], "insensit": [221, 226], "lowercas": 221, "letter": [221, 456], "slightli": [221, 317, 381, 468], "elabor": [221, 249], "uint64": [221, 303, 324, 469], "byte_arrai": 221, "datetim": 221, "citizen": 221, "unsupport": [221, 224, 226], "conceiv": [221, 409], "inner_typ": 221, "mathemat": [221, 394, 396, 404, 406, 408, 417], "moment": [221, 257, 475], "averag": [221, 226, 238, 243, 253, 327, 381], "avg": [221, 226, 327], "summar": [221, 228, 232], "subtract": [221, 226], "divis": [221, 226], "modulo": [221, 226, 406], "exponenti": [221, 226, 228, 247, 409, 411, 412], "multipli": [221, 226, 449], "inequ": 221, "sensit": [221, 454], "WITH": [221, 226], "conjunct": 221, "AND": [221, 226, 243, 255], "disjunct": 221, "OR": [221, 224, 226, 255, 462], "xor": [221, 226], "negat": [221, 226], "bitopr": 221, "scalar": [221, 320, 327], "listliter": 221, "fold": [221, 474, 493], "mapliter": 221, "elementid": [221, 226], "interv": [221, 381, 413, 469], "notabl": 221, "AS": [221, 224, 459, 463], "BY": [221, 224], "interconnect": [222, 245, 312], "tcp": [222, 239], "llm": 222, "sentenc": [222, 223, 226, 228], "tradition": 223, "accommod": [223, 249], "heurist": [223, 246, 389], "coexist": 223, "sophist": [223, 244], "cardin": 223, "primarili": [223, 228, 246, 474], "stem": 223, "atc": 223, "instrument": 223, "efficaci": 223, "alias": [223, 226], "p1": [223, 228], "p2": [223, 228], "id1": [223, 493], "id2": [223, 493], "expedit": 223, "intent": 223, "k1": [223, 226], "k2": [223, 226], "p3": 223, "retain": [223, 226, 403, 476], "constrain": 223, "simultan": [223, 243, 249, 471], "necessit": [223, 242], "lai": 223, "groundwork": 223, "conform": 223, "nonexist": 223, "kno": 223, "mismatch": 223, "websocket": [224, 493], "worth": [224, 238, 316, 324, 462], "mutat": 224, "lambda": [224, 228, 310, 316, 322, 327, 398, 409, 411, 412, 413, 494], "groovi": 224, "currenttimemilli": [224, 475, 493], "expr": [224, 226, 228, 493], "transact": [224, 242, 248, 249, 250, 471, 475, 485], "secondari": 224, "rocksdb": [224, 475], "isol": [224, 327, 423, 475], "therein": 224, "council": [224, 250], "birthdai": [224, 241, 495], "differenti": 224, "123456": [224, 232, 247, 475], "hasid": 224, "expos": [224, 230, 314, 325, 469, 479], "secondli": [224, 249], "path_expand": 224, "concret": [224, 253, 254, 324], "endv": [224, 228, 246, 493], "repeat": [224, 246, 247, 316, 322, 396, 401, 404, 424, 427, 493], "path_opt": [224, 226, 228, 246, 493], "pathexpand": 224, "marko": [224, 226, 228], "27": [224, 226, 228, 250, 312, 313, 315, 443], "hasstep": 224, "groupcount": [224, 493], "age_cnt": 224, "age_sum": 224, "scan": [224, 474], "propertyidvalu": 224, "moreov": [224, 226, 242, 246, 248, 474], "propertyidvalue1": 224, "propertyidvalue2": 224, "inE": [224, 316, 493], "conquer": 225, "meant": [226, 228], "vertexid": 226, "inject": 226, "edgeid": 226, "histori": [226, 228, 246], "propertykei": 226, "accessor": 226, "eq": [226, 228, 246, 253, 493], "neq": [226, 493], "gt": [226, 228, 493], "lt": [226, 228, 493], "gte": [226, 228, 243, 489, 493], "lte": [226, 243, 489, 493], "outsid": [226, 493], "textp": [226, 493], "startingwith": [226, 493], "endingwith": [226, 493], "rko": 226, "ark": 226, "notstartingwith": [226, 493], "notendingwith": [226, 493], "notcontain": [226, 493], "unequ": 226, "wheretravers": 226, "act": [226, 310, 459, 462, 482, 494], "startkei": 226, "alter": [226, 462], "opposit": [226, 316, 390, 437], "nottravers": 226, "duplic": [226, 228, 389, 391, 393, 462, 463], "deduplabel": 226, "composit": [226, 228], "de": [226, 237], "impli": 226, "flat": 226, "br": 226, "selectkei": 226, "roll": [226, 228, 231], "accompani": 226, "aggregatefunc": 226, "emit": [226, 228, 310, 313, 316, 322, 494], "ascend": [226, 228], "asc": [226, 228], "bias": 226, "toss": 226, "merg": [226, 316], "uniontravers": 226, "matchsent": 226, "binder": 226, "__": [226, 227, 228, 243, 316, 489, 493], "graphnam": 226, "unrol": 226, "linear": [226, 396, 398, 454, 474], "result_opt": [226, 228, 493], "all_v": [226, 228, 493], "lengthrang": 226, "keyvaluepair": 226, "end_v": [226, 228, 493], "all_v_": 226, "vada": 226, "josh": 226, "29": [226, 228, 312, 313, 315], "ongo": 226, "liter": 226, "0f": 226, "0d": 226, "2l": 226, "IN": [226, 244], "isnul": 226, "month": 226, "1000": [226, 253, 312, 327, 459, 462, 475], "bitwis": 226, "startswith": 226, "ma": 226, "endswith": 226, "ko": 226, "substr": [226, 493], "preced": [226, 462, 475], "parenthes": 226, "unari": 226, "modulu": 226, "membership": [226, 462], "lop": 226, "rippl": 226, "peter": 226, "34": [226, 228, 250, 312, 313, 315, 455], "729": 226, "1225": 226, "841": 226, "v2": [226, 228, 234, 246, 310, 440, 494], "35": [226, 228, 250, 312, 313, 315, 322, 389, 439, 455], "simplepath": [226, 493], "latter": [226, 228, 245], "mix": [226, 253, 474], "sack": [226, 493], "guidanc": 227, "gremlinpython": [227, 475], "sy": [227, 322], "gremlin_python": [227, 475], "graph_travers": 227, "driver_remote_connect": 227, "driverremoteconnect": [227, 475], "gremlin_endpoint": [227, 475], "remoteconn": [227, 475], "withremot": [227, 475], "assert": [227, 253, 474], "oom": 227, "vast": 227, "mitig": 227, "risk": [227, 242], "queue": [227, 255], "graph_url": [227, 325, 475, 493], "stopiter": 227, "resultiterationbatchs": 227, "addcontactpoint": [227, 475], "resultset": [227, 475], "hasnext": 227, "dlcdn": 227, "your_endpoint_address": 227, "your_endpoint_port": 227, "classnam": [227, 493], "ser": [227, 493], "gryomessageserializerv1d0": [227, 493], "serializeresulttostr": [227, 493], "realm": 228, "audit": 228, "toolsuit": 228, "simul": [228, 287, 322], "confid": 228, "permit": [228, 462], "3k": 228, "gremlin_queri": 228, "190376": 228, "787074": 228, "sf1": 228, "432345564227583365": 228, "504403158265495622": 228, "576460752303435306": 228, "432345564227579434": 228, "hastyp": 228, "504403158265495612": 228, "144115188075855941": 228, "issubclassof": 228, "504403158265495553": 228, "confus": [228, 410, 411, 412], "mechan": [228, 244, 247, 249, 471, 479], "belong": [228, 247, 253, 254, 255, 324, 452, 455, 462, 468, 475], "distinguish": [228, 242, 310, 311, 312, 474], "worri": 228, "havelabel": 228, "216172782113783808": 228, "216172782113784710": 228, "label1": 228, "label2": 228, "forum": 228, "72057594037936036": 228, "360287970189718653": 228, "360287970189718655": 228, "joseph": 228, "yacin": 228, "01t00": 228, "curiou": 228, "38416": 228, "mayb": 228, "pyplot": 228, "plt": 228, "comment_cont": 228, "comment_length": 228, "histogram": 228, "hist": [228, 336], "50": [228, 250, 409, 411, 412], "607c8e": 228, "grid": [228, 455], "axi": [228, 252, 253, 254, 269, 293, 322, 468], "xlabel": 228, "ylabel": 228, "gender": [228, 241, 495], "person_gend": 228, "male": 228, "femal": 228, "male_count": 228, "female_count": 228, "216172782113784483": 228, "around": [228, 325], "432345564227569033": 228, "288230376151712472": 228, "144115188075856168": 228, "144115188075860911": 228, "72057594037934114": 228, "hasmoder": 228, "studyat": 228, "workat": 228, "islocatedin": 228, "432345564227582847": 228, "hasinterest": 228, "504403158265496227": 228, "864691128455136658": 228, "1008806316530991636": 228, "360287970189645858": 228, "en": [228, 245, 253, 424, 428, 429, 430, 431, 433, 434, 435, 441, 442, 443, 444, 446, 447, 448, 449], "e1": 228, "citi": [228, 232, 245, 247], "ispartof": 228, "countri": 228, "288230376151711797": 228, "216172782113784555": 228, "14": [228, 250, 312, 313, 315, 367, 427, 435, 447, 462], "exactli": [228, 232, 246, 253, 327, 372, 381, 395, 440, 468, 475], "432345564227569357": 228, "432345564227570524": 228, "288230376151712984": 228, "144115188075861043": 228, "replyof": [228, 473, 490], "54336": 228, "33411": 228, "360287970189700805": 228, "59465": 228, "33403": 228, "awai": 228, "ineffect": 228, "illeg": 228, "simple_path": 228, "unfold": [228, 253], "hascreat": 228, "nation": 228, "china": 228, "np": [228, 313, 316, 322, 326, 477], "market": 228, "japan": 228, "browsers_us": 228, "browser_list": 228, "firefox": 228, "safari": 228, "browser_count": 228, "autopct": 228, "1f": 228, "univers": [228, 242, 327, 360, 361, 408, 418, 450, 454], "person1": 228, "person2": 228, "university1": 228, "university2": 228, "studi": [228, 238, 243, 249, 408, 410], "216172782113784481": 228, "216172782113784279": 228, "144115188075858884": 228, "216172782113784361": 228, "216172782113784291": 228, "144115188075858879": 228, "216172782113784642": 228, "216172782113784473": 228, "216172782113784328": 228, "144115188075858700": 228, "216172782113784700": 228, "216172782113784331": 228, "144115188075860619": 228, "216172782113784375": 228, "216172782113784333": 228, "144115188075858813": 228, "216172782113784593": 228, "216172782113784688": 228, "144115188075860870": 228, "216172782113784047": 228, "216172782113784692": 228, "144115188075862429": 228, "isomorph": [228, 247, 312, 316, 441, 463], "22": [228, 250, 312, 313, 315, 324, 455, 473], "23": [228, 312, 313, 315], "216172782113784192": 228, "216172782113784107": 228, "216172782113784171": 228, "regular": [228, 401, 406, 407, 408, 430, 435, 438, 443, 446, 447, 448, 449], "squar": [228, 389, 408, 436, 437, 440, 455], "butterfli": 228, "notion": 228, "matchanalyticsalgorithm": 228, "matchoptimizationalgorithm": 228, "216172782113784587": 228, "216172782113784363": 228, "144115188075860919": 228, "216172782113784532": 228, "216172782113784400": 228, "144115188075861858": 228, "216172782113784491": 228, "216172782113784401": 228, "144115188075858086": 228, "216172782113784598": 228, "216172782113784629": 228, "144115188075858881": 228, "216172782113783931": 228, "216172782113784657": 228, "144115188075858708": 228, "repli": 228, "pa": 228, "pb": 228, "216172782113783809": 228, "216172782113784011": 228, "360287970189640007": 228, "360287970189640008": 228, "360287970189640009": 228, "2012": [228, 421], "216172782113783812": 228, "216172782113783882": 228, "36": [228, 250, 312, 313, 315, 367, 447, 455, 487], "360287970189640010": 228, "37": [228, 250, 312, 313, 315, 327, 455, 487], "216172782113784105": 228, "38": [228, 250, 312, 313, 315, 455, 487], "41": [228, 250, 312, 313, 315, 402, 455], "43": [228, 312, 313, 315, 327, 429, 455, 485], "216172782113783814": 228, "216172782113783962": 228, "360287970189640135": 228, "52": [228, 455], "216172782113784199": 228, "54": [228, 250, 402, 455], "216172782113784038": 228, "56": [228, 250, 361, 455], "216172782113783816": 228, "216172782113784144": 228, "175": 228, "360287970189640462": 228, "72057594037927936": 228, "144115188075855872": 228, "288230376151711744": 228, "432345564227567616": 228, "504403158265495555": 228, "india": 228, "hasmemb": 228, "8248": 228, "8101": 228, "imposs": 228, "2822": 228, "tag1": 228, "tag2": 228, "37164": 228, "432": 228, "property1": 228, "property2": 228, "donati": 228, "luigi": 228, "hall": 228, "costa": 228, "carlo": 228, "khan": 228, "meera": 228, "mahinda": 228, "eli": 228, "94": 228, "228": [228, 250], "emb": [228, 310, 494], "th": [228, 314, 327, 440], "dom": 228, "pedro": 228, "ii": 228, "condariuc": 228, "bonomi": 228, "anyth": 228, "david": [228, 363, 374, 439], "silva": 228, "guliyev": 228, "tagclass": 228, "504403158265495552": 228, "504403158265495554": 228, "504403158265495556": 228, "504403158265495557": 228, "504403158265495558": 228, "504403158265495559": 228, "504403158265495560": 228, "504403158265495561": 228, "504403158265495562": 228, "504403158265495563": 228, "504403158265495564": 228, "504403158265495565": 228, "504403158265495566": 228, "504403158265495567": 228, "504403158265495568": 228, "504403158265495569": 228, "504403158265495570": 228, "504403158265495571": 228, "504403158265495572": 228, "504403158265495573": 228, "504403158265495574": 228, "504403158265495575": 228, "504403158265495576": 228, "504403158265495577": 228, "504403158265495578": 228, "504403158265495579": 228, "504403158265495580": 228, "504403158265495581": 228, "504403158265495582": 228, "504403158265495583": 228, "504403158265495584": 228, "504403158265495585": 228, "504403158265495586": 228, "504403158265495587": 228, "504403158265495588": 228, "504403158265495589": 228, "504403158265495590": 228, "504403158265495591": 228, "504403158265495592": 228, "504403158265495593": 228, "504403158265495594": 228, "504403158265495595": 228, "504403158265495596": 228, "504403158265495597": 228, "504403158265495598": 228, "504403158265495599": 228, "504403158265495600": 228, "504403158265495601": 228, "504403158265495602": 228, "504403158265495603": 228, "504403158265495604": 228, "504403158265495605": 228, "504403158265495606": 228, "504403158265495607": 228, "504403158265495608": 228, "504403158265495609": 228, "504403158265495610": 228, "504403158265495611": 228, "504403158265495613": 228, "504403158265495614": 228, "504403158265495615": 228, "504403158265495616": 228, "504403158265495617": 228, "504403158265495618": 228, "504403158265495619": 228, "504403158265495620": 228, "504403158265495621": 228, "q4": 228, "690": 228, "134313148716225": 228, "216172782113783811": 228, "216172782113783813": 228, "216172782113784707": 228, "216172782113784708": 228, "216172782113784709": 228, "216172782113783910": 228, "216172782113784104": 228, "216172782113784207": 228, "216172782113784318": 228, "216172782113784305": 228, "216172782113784597": 228, "216172782113784693": 228, "216172782113784018": 228, "216172782113784092": 228, "216172782113784108": 228, "216172782113784161": 228, "216172782113784162": 228, "73": [228, 250, 408], "216172782113783875": 228, "216172782113783932": 228, "216172782113784057": 228, "216172782113784068": 228, "216172782113784065": 228, "216172782113784235": 228, "216172782113784247": 228, "meaning": [228, 241, 254, 324], "449": 228, "454": [228, 250], "216172782113783810": 228, "descend": [228, 456], "216172782113784082": 228, "216172782113784169": 228, "216172782113784267": 228, "216172782113784368": 228, "216172782113784376": 228, "216172782113783938": 228, "216172782113784405": 228, "216172782113783980": 228, "216172782113783844": 228, "216172782113783901": 228, "216172782113783935": 228, "216172782113784439": 228, "216172782113784315": 228, "216172782113784374": 228, "216172782113784601": 228, "216172782113784431": 228, "216172782113783815": 228, "216172782113783817": 228, "216172782113783971": 228, "216172782113784154": 228, "216172782113784381": 228, "216172782113783933": 228, "earlier": [228, 413, 475], "216172782113783819": 228, "216172782113783826": 228, "216172782113783836": 228, "bi": [228, 245, 248], "query2": 228, "09": [228, 250], "07": [228, 237, 250, 381, 389], "hastag": 228, "count1": 228, "count2": 228, "jet_li": 228, "zhang_yim": 228, "faye_wong": 228, "tsui_hark": 228, "bruce_le": 228, "johnny_depp": 228, "tom_cruis": 228, "jackie_chan": 228, "query3": 228, "moder": 228, "infinit": [228, 423], "seriou": 228, "song": 228, "containerof": 228, "message_count": 228, "824633725780": 228, "08t02": 228, "334": [228, 250], "album": 228, "hao": 228, "wang": [228, 394, 396], "19791209300479": 228, "755914248304": 228, "02t20": 228, "03": [228, 250, 483], "344": 228, "wall": 228, "lin": 228, "lei": 228, "24189255811275": 228, "824633725045": 228, "02": [228, 389], "03t18": 228, "633": 228, "893353201782": 228, "28t23": 228, "53": [228, 250, 455], "251": 228, "1030792152809": 228, "03t09": 228, "47": [228, 239, 240, 250, 312, 313, 315], "414": 228, "chen": 228, "32985348833887": 228, "07t07": 228, "30": [228, 250, 312, 313, 315, 386, 431, 433, 438, 475, 493], "038": 228, "zhang": [228, 485], "yang": [228, 485], "15393162789707": 228, "query4": 228, "membercount": 228, "country_count": 228, "personcount": 228, "72057594037932503": 228, "72057594037932473": 228, "72057594037932489": 228, "72057594037932494": 228, "72057594037932501": 228, "72057594037934803": 228, "72057594037934804": 228, "72057594037935005": 228, "72057594037928132": 228, "72057594037935879": 228, "288230376151711799": 228, "country_top100_forums_dict": 228, "personcountforum": 228, "72057594037935702": 228, "72057594037930685": 228, "72057594037932114": 228, "72057594037934231": 228, "72057594037935703": 228, "72057594037935730": 228, "72057594037935734": 228, "72057594037932509": 228, "72057594037935707": 228, "72057594037935708": 228, "72057594037935711": 228, "72057594037935714": 228, "72057594037935719": 228, "72057594037935729": 228, "72057594037935731": 228, "72057594037935724": 228, "72057594037929560": 228, "72057594037931546": 228, "72057594037931545": 228, "72057594037932479": 228, "72057594037932485": 228, "72057594037932505": 228, "72057594037932511": 228, "72057594037935710": 228, "72057594037935722": 228, "72057594037929246": 228, "72057594037928266": 228, "72057594037935713": 228, "72057594037934308": 228, "72057594037934313": 228, "72057594037934302": 228, "72057594037930430": 228, "72057594037934303": 228, "72057594037932482": 228, "72057594037935147": 228, "72057594037935148": 228, "72057594037935157": 228, "72057594037927973": 228, "72057594037929386": 228, "72057594037934315": 228, "72057594037935720": 228, "72057594037935015": 228, "72057594037934300": 228, "72057594037930861": 228, "72057594037934319": 228, "72057594037931542": 228, "72057594037929583": 228, "72057594037933324": 228, "72057594037929182": 228, "72057594037929739": 228, "72057594037934829": 228, "72057594037935658": 228, "72057594037935660": 228, "72057594037935674": 228, "72057594037935682": 228, "72057594037935683": 228, "72057594037935672": 228, "72057594037927978": 228, "72057594037935163": 228, "72057594037935014": 228, "72057594037931544": 228, "72057594037934297": 228, "72057594037927979": 228, "72057594037932474": 228, "72057594037934384": 228, "72057594037932639": 228, "72057594037934380": 228, "72057594037935146": 228, "72057594037935152": 228, "72057594037928134": 228, "72057594037928674": 228, "72057594037929248": 228, "72057594037931240": 228, "72057594037931247": 228, "72057594037931256": 228, "72057594037930958": 228, "72057594037930963": 228, "72057594037931259": 228, "72057594037931260": 228, "72057594037931262": 228, "72057594037929365": 228, "72057594037929419": 228, "72057594037929421": 228, "72057594037929431": 228, "72057594037929434": 228, "72057594037929437": 228, "72057594037929446": 228, "72057594037929447": 228, "72057594037929449": 228, "72057594037929450": 228, "72057594037935166": 228, "72057594037929519": 228, "72057594037929451": 228, "72057594037929452": 228, "72057594037935046": 228, "72057594037932339": 228, "72057594037932481": 228, "72057594037934294": 228, "72057594037932389": 228, "72057594037932976": 228, "72057594037930870": 228, "72057594037931266": 228, "72057594037928092": 228, "72057594037928495": 228, "72057594037929510": 228, "72057594037929517": 228, "72057594037929961": 228, "72057594037929965": 228, "72057594037930242": 228, "72057594037930248": 228, "72057594037930250": 228, "72057594037930313": 228, "72057594037931547": 228, "72057594037935686": 228, "72057594037929052": 228, "72057594037929053": 228, "72057594037929055": 228, "72057594037929057": 228, "72057594037929060": 228, "72057594037934811": 228, "72057594037934813": 228, "72057594037934816": 228, "72057594037934821": 228, "72057594037934822": 228, "72057594037934823": 228, "72057594037934828": 228, "72057594037934835": 228, "72057594037934837": 228, "72057594037934975": 228, "72057594037934976": 228, "72057594037935032": 228, "72057594037935038": 228, "72057594037935045": 228, "72057594037935664": 228, "72057594037935673": 228, "72057594037935678": 228, "72057594037935685": 228, "72057594037931549": 228, "72057594037931550": 228, "72057594037931552": 228, "72057594037931554": 228, "72057594037931557": 228, "72057594037931560": 228, "72057594037931566": 228, "72057594037935671": 228, "72057594037935670": 228, "72057594037934977": 228, "72057594037931543": 228, "72057594037929518": 228, "72057594037935679": 228, "72057594037931575": 228, "72057594037932438": 228, "72057594037932878": 228, "72057594037932886": 228, "72057594037932888": 228, "72057594037927982": 228, "72057594037930526": 228, "72057594037930535": 228, "72057594037930546": 228, "72057594037930976": 228, "72057594037930536": 228, "72057594037931358": 228, "72057594037930366": 228, "72057594037931574": 228, "72057594037932435": 228, "72057594037935020": 228, "72057594037935864": 228, "72057594037933861": 228, "72057594037932440": 228, "72057594037927981": 228, "72057594037931349": 228, "72057594037931366": 228, "72057594037932885": 228, "72057594037927980": 228, "72057594037930529": 228, "72057594037930532": 228, "72057594037931304": 228, "72057594037932433": 228, "72057594037932441": 228, "72057594037934547": 228, "query11": 228, "live": 228, "startdat": 228, "enddat": 228, "216172782113784091": 228, "216172782113784250": 228, "216172782113784403": 228, "216172782113784537": 228, "216172782113784122": 228, "query14": 228, "country1": 228, "country2": 228, "subscor": 228, "award": [228, 485], "chile": 228, "case1": 228, "case2": 228, "case3": 228, "case4": 228, "216172782113784153": 228, "216172782113784100": 228, "216172782113783956": 228, "216172782113784673": 228, "216172782113784252": 228, "216172782113784263": 228, "216172782113784193": 228, "216172782113784242": 228, "216172782113784623": 228, "216172782113784498": 228, "216172782113784251": 228, "216172782113784538": 228, "216172782113784167": 228, "216172782113783864": 228, "216172782113784613": 228, "216172782113784116": 228, "faq": 229, "javasdk": [230, 479], "creation": [231, 312, 386], "transit": [231, 431, 459], "magnitud": [231, 244], "superior": [231, 243, 245, 249], "rich": [231, 242, 245, 247, 312, 314], "neg": [231, 232, 310, 314, 316, 318, 322, 327, 346, 424], "gsl": [231, 232, 242, 312, 313, 314, 315, 319, 326], "gat": [231, 247, 310, 318, 494], "deepwalk": [231, 310, 494], "trans": [231, 310, 494], "pyg": [231, 232, 235, 236, 247, 248, 249], "flexibli": [231, 242, 247, 249], "pytorch": [231, 232, 239, 242, 247, 316, 318], "onlin": [231, 244, 247, 248, 471, 475], "fed": [231, 243, 247], "dockerfil": [231, 317], "ek": 231, "aw": [231, 250, 486], "ack": 231, "failov": [231, 249], "concentr": [231, 249, 366], "secur": [232, 247, 248], "industri": [232, 242, 247, 249, 250], "feasibl": [232, 247], "preprocess": [232, 322], "uniformli": [232, 399, 400, 401, 409, 410, 411, 412, 413, 457], "lookup": [232, 247, 322, 462], "topolog": [232, 312], "nn": [232, 234, 237, 238, 239, 240, 243, 247, 253, 310, 322, 489, 494], "ego": [232, 247, 318, 463, 494], "dimension": [232, 238, 243, 247, 311, 313, 314], "conv": [232, 235, 247], "edge_index": [232, 235, 239, 240], "carri": 232, "predict": [232, 238, 242, 243, 247], "asynchron": 232, "tensor": [232, 235, 252, 253, 254, 293, 310, 314, 318, 320, 466, 468], "plaintext": 232, "clearli": [232, 247], "space": [232, 247, 311, 312, 316, 327, 361, 409, 410, 411, 412, 413], "dimens": [232, 234, 237, 238, 243, 247, 311, 409, 410, 411, 412, 454, 489], "batchgraph": 232, "mini": [232, 247], "loss": [232, 234, 237, 238, 239, 240, 243, 247, 322, 489, 494], "mind": 232, "classif": [232, 236, 243, 247, 251, 310, 311, 322], "trainer": [232, 234, 237, 238, 243, 310, 489, 494], "hk": 233, "rm": [233, 322], "4g": 233, "aarch64": 234, "processor": 234, "egographsag": [234, 237, 243, 489], "349": [234, 238, 243, 489], "venu": [234, 243], "confer": [234, 243, 314, 485], "www": [234, 237, 238, 243, 327, 381, 435, 444, 447, 475, 489], "tf": [234, 235, 237, 238, 243, 310, 311, 316, 317, 322, 489, 494], "disable_v2_behavior": [234, 237, 238, 243, 489], "importerror": [234, 237, 238, 243, 489], "load_ogbn_mag": [234, 237, 238, 241, 243, 489, 495], "egosagesuperviseddataload": [234, 238, 243, 489], "localtrain": [234, 237, 238, 243, 489], "node_typ": [234, 237, 238, 243, 310, 312, 313, 316, 319, 322, 326, 489, 494], "class_num": [234, 238, 243, 310, 489, 494], "features_num": [234, 237, 238, 243, 310, 489, 494], "hops_num": [234, 238, 243, 310, 489, 494], "nbrs_num": [234, 237, 238, 243, 489], "epoch": [234, 235, 237, 238, 239, 240, 243, 310, 315, 473, 489, 494], "hidden_dim": [234, 237, 238, 243, 310, 322, 489, 494], "256": [234, 238, 239, 240, 243, 250, 391, 451, 475, 489], "in_drop_r": [234, 238, 243, 489], "learning_r": [234, 237, 238, 243, 322, 489], "reset_default_tf_graph": [234, 238, 243, 489], "act_func": [234, 238, 243, 489], "relu": [234, 238, 243, 489], "dropout": [234, 237, 238, 243, 322, 489], "train_data": [234, 237, 238, 243, 489], "mask": [234, 238, 243, 326, 489], "train_embed": [234, 238, 243, 489], "src_ego": [234, 237, 238, 243, 489], "train_label": [234, 238, 243, 489], "reduce_mean": [234, 238, 243, 310, 322, 489, 494], "sparse_softmax_cross_entropy_with_logit": [234, 238, 243, 310, 322, 489, 494], "logit": [234, 238, 243, 322, 489], "adamoptim": [234, 237, 238, 243, 322, 489], "test_embed": [234, 238, 243, 489], "test_label": [234, 238, 243, 489], "test_indic": [234, 238, 243, 489], "argmax": [234, 238, 239, 240, 243, 489], "output_typ": [234, 238, 243, 297, 466, 489], "test_acc": [234, 238, 239, 240, 243, 489], "div": [234, 238, 243, 489], "reduce_sum": [234, 238, 243, 489], "cast": [234, 238, 241, 243, 322, 474, 489], "float32": [234, 238, 239, 240, 243, 313, 322, 489], "obgn": [234, 238], "mag": [234, 238, 243, 489], "paper_featur": [234, 243, 489], "feat_": [234, 237, 238, 239, 240, 243, 489], "128": [234, 237, 238, 239, 240, 243, 322, 489], "lg": [234, 237, 238, 243, 305, 469, 483, 489], "cite": [234, 237, 238, 243, 489], "gen_label": [234, 237, 238, 243, 305, 469, 489], "val": [234, 237, 238, 243, 310, 326, 469, 489, 494], "85": [234, 237, 238, 243, 250, 253, 469, 489], "seed": [235, 310, 318, 322, 381, 384, 385, 386, 387, 389, 391, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 409, 410, 411, 412, 413, 416, 417, 418, 419, 422, 454, 457, 459], "sampler": [235, 237, 315, 318, 320], "perceptu": 235, "unsupervis": [235, 237, 251, 310, 316, 318, 319, 469], "mainstream": [235, 314, 315], "putback": 235, "outofrangeerror": [235, 315, 316, 322], "evolv": [235, 242, 475], "neighborsampl": [235, 314], "edge_weight": [235, 314, 316], "random_with_replac": 235, "topk": [235, 314, 316], "pad": [235, 314], "expand_factor": [235, 314, 319], "sparsenod": [235, 313, 314, 316], "sparseedg": [235, 313, 314, 316], "layer1": [235, 314], "layer2": [235, 314], "neighbor_sampl": [235, 314], "bui": [235, 242, 313, 314, 315, 316, 319, 322], "i2i": [235, 314, 316], "layer_nod": [235, 314], "int_attr": [235, 313, 314, 315, 319, 322], "layer_edg": [235, 314], "float_attr": [235, 313, 314, 315, 319, 322], "egograph": [235, 247, 310, 318, 494], "negativesampl": [235, 319], "node_weight": [235, 316, 319], "edge_sampl": [235, 315, 319], "negative_sampl": [235, 310, 319, 494], "neg_nod": [235, 319], "heterogen": [235, 238, 243, 245, 247, 311, 312, 313, 314, 316], "randomli": [235, 316, 381, 387, 391, 393, 402, 404, 409, 412, 417, 459], "outv": [235, 310, 314, 316, 322, 493, 494], "overs": 235, "citat": [236, 238, 239, 240, 243, 251, 322, 489], "revisit": [236, 237, 251], "ho2": 236, "with_dataset": [237, 239, 309, 469, 495], "k8s_service_typ": [237, 239, 309, 469, 489], "loadbalanc": [237, 469, 489], "k8s_image_pull_polici": [237, 239, 309, 469], "cell": [237, 455], "metainfo": 237, "obgn_mag": 237, "ogbn_mag_smal": [237, 241, 489, 495], "chose": [237, 238], "i_featur": [237, 238], "argpars": [237, 239], "tfg": 237, "egosageunsuperviseddataload": 237, "parse_arg": [237, 239], "argumentpars": [237, 239], "egosag": 237, "add_argu": [237, 239], "output_dim": [237, 310, 494], "neg_num": 237, "0001": 237, "agg_typ": 237, "drop_out": 237, "neg_sampl": 237, "temperatur": 237, "dim": [237, 239, 240, 409, 410, 411, 412], "src_emb": [237, 310, 494], "dst_emb": 237, "dst_ego": 237, "neg_dst_emb": 237, "neg_dst_ego": 237, "unsupervised_softmax_cross_entropy_loss": 237, "ogbn": [238, 239, 240, 243, 489], "academ": [238, 243, 489], "microsoft": [238, 243, 489], "institut": [238, 243, 489], "accomplish": [238, 243, 381], "word2vec": [238, 243, 489], "load_ogbn_arxiv": [239, 240], "num_server_nod": 239, "num_client_nod": 239, "ogbn_arxiv": [239, 240], "8gi": 239, "ifnotpres": [239, 469], "0a20240115": 239, "glt_graph": [239, 240], "graphlearn_torch": [239, 240], "node_featur": [239, 240], "node_label": [239, 240, 469], "edge_dir": [239, 240], "random_node_split": [239, 240], "num_val": [239, 240], "num_test": [239, 240], "num_client": [239, 240], "manifest_path": 239, "client_folder_path": 239, "kubeflow": [239, 321], "pytorchjob": 239, "torch": [239, 240], "pytorchreplicaspec": 239, "restartpolici": 239, "onfailur": 239, "imagepullpolici": 239, "node_rank": 239, "master_addr": [239, 240], "volumemount": 239, "medium": 239, "sizelimit": 239, "num_worker_replica": 239, "my_pod_nam": 239, "group_mast": 239, "valuefrom": 239, "fieldref": 239, "fieldpath": 239, "distributeddataparallel": 239, "torch_geometr": [239, 240], "glt": [239, 240], "gl_torch_graph": 239, "gltorchgraph": 239, "no_grad": [239, 240], "test_load": [239, 240], "dataset_nam": [239, 240], "eval": [239, 240, 466], "y_true": [239, 240], "devic": [239, 240, 250], "del": [239, 240, 324, 462], "y_pred": [239, 240], "keepdim": [239, 240], "run_client_proc": 239, "num_serv": [239, 240], "client_rank": [239, 240], "server_rank_list": 239, "training_pg_master_port": 239, "init_cli": [239, 240], "master_port": [239, 240], "server_client_master_port": [239, 240], "num_rpc_thread": [239, 240], "client_group_nam": 239, "k8s_glt_client": 239, "is_dynam": [239, 240], "current_ctx": 239, "get_context": 239, "init_process_group": 239, "gloo": 239, "world_siz": 239, "init_method": 239, "train_load": [239, 240], "distneighborload": [239, 240], "num_neighbor": [239, 240], "input_nod": [239, 240], "collect_featur": [239, 240], "to_devic": [239, 240], "worker_opt": [239, 240], "remotedistsamplingworkeropt": [239, 240], "server_rank": 239, "worker_devic": [239, 240], "worker_concurr": [239, 240], "buffer_s": [239, 240], "256mb": 239, "prefetch_s": [239, 240], "workload_typ": [239, 240], "in_channel": [239, 240], "hidden_channel": [239, 240], "num_lay": [239, 240], "out_channel": [239, 240], "device_id": 239, "adam": [239, 240], "lr": [239, 240], "001": 239, "arxiv": [239, 240, 327, 370, 385, 386, 387, 401, 454], "zero_grad": [239, 240], "log_softmax": [239, 240], "nll_loss": [239, 240], "backward": [239, 240, 247, 316, 413, 469], "03d": [239, 240], "04f": 239, "barrier": 239, "accuraci": [239, 240, 247], "4f": [239, 240], "shutdown": 239, "shutdown_cli": [239, 240], "__name__": [239, 322], "__main__": [239, 322], "supervis": [239, 243, 251, 311, 314, 322, 469, 489], "sage": 239, "9997": 239, "train_loader_master_port": 239, "9998": 239, "test_loader_master_port": 239, "9999": 239, "9001": 239, "9002": 239, "9003": 239, "9004": 239, "k8s_launch": 239, "ogb": 240, "nodeproppr": 240, "unsqueez": 240, "acc": 240, "512": [240, 316], "1gb": 240, "shut": 240, "trivial": [241, 249, 378], "bucket": [241, 469, 485], "_e": [241, 324, 471, 495], "ldbc_sampl": [241, 475, 493, 495], "person_0_0": [241, 475, 490, 495], "didn": [241, 250], "person_knows_person_0_0": [241, 475, 490, 495], "comment_0_0": [241, 490, 495], "person_likes_comment_0_0": [241, 495], "deal": [241, 245, 314], "unseen": [241, 247, 477], "person_likes_post_0_0": [241, 495], "post_0_0": [241, 495], "ndarrai": [241, 254, 269, 280, 313, 314, 316, 319, 324, 326, 462, 495], "apart": [241, 409], "comment_replyof_comment_0_0": [241, 490, 495], "col_0": [241, 495], "col_1": [241, 495], "coo": [241, 473, 495], "array_v": [241, 495], "col": [241, 495], "array_": [241, 495], "s3": [241, 324, 495], "hood": 241, "distributedli": [241, 312, 318, 320, 321, 322], "fsspec": [241, 495], "kwarg": [241, 253, 254, 261, 272, 284, 288, 289, 306, 309, 319, 324, 325, 326, 469], "ds1": [241, 495], "datafil": [241, 495], "ds2": [241, 495], "graphscope_bucket": [241, 495], "hangzhou": [241, 311, 495], "ds3": [241, 495], "9000": [241, 475, 495], "extra_conf": [241, 495], "conf1": [241, 495], "d34": [241, 495], "client_kwarg": [241, 495], "region_nam": [241, 495], "east": [241, 495], "ossf": [241, 495], "subclass": [241, 252, 462], "abstractfilesystem": [241, 495], "abstractbufferfil": 241, "_upload_chunk": [241, 495], "_initiate_upload": [241, 495], "_fetch_rang": [241, 495], "register_implement": [241, 495], "protocol_nam": [241, 495], "protocol_file_system": [241, 495], "direction": 241, "exce": [241, 420, 421], "super": [241, 253, 312, 316], "precis": [241, 247, 454], "modular": [242, 454], "rapidli": [242, 314], "seller": 242, "buyer": [242, 246], "fraudul": 242, "sell": 242, "suspici": 242, "fraud": [242, 249], "feed": [242, 305, 310, 313, 316, 322, 326, 469, 494], "webui": 242, "diversifi": 242, "ingest": [242, 475], "rapid": 242, "parti": [242, 442], "analyst": 242, "gaia": [242, 493], "resembl": [242, 454, 459, 461], "olap": 242, "gen": [242, 316], "dataflow": [242, 244], "arriv": 242, "financi": 242, "billion": [242, 245, 249], "preval": 242, "miniconda": 243, "scientif": 243, "field_of_studi": [243, 489], "subject": 243, "4307": [243, 489], "n1": 243, "n2": 243, "proven": 243, "2014": [243, 327, 489], "2020": [243, 489], "ret1": [243, 489], "k_core": [243, 253, 327, 463, 485, 489], "ret2": [243, 489], "kcore": [243, 489], "downstream": [243, 316], "train_sag": 243, "130": [243, 489], "conduit": 243, "icde2023": 244, "sigmod2017": [244, 485, 491], "gra": 244, "ph": 244, "arallel": 244, "ngine": 244, "opensourc": 244, "raph": 244, "nalysi": 244, "elat": 244, "ransact": 244, "loos": [244, 249, 471], "mysql": [244, 471], "nutshel": [244, 471], "exploit": [244, 471], "ahead": [244, 471], "wal": [244, 471], "etriev": 244, "terfac": 244, "portabl": [244, 474], "rust": [244, 474, 475], "handler": [244, 469], "chive": 244, "guardian": 244, "galaxi": 244, "steal": 244, "tackl": [244, 245], "imbal": 244, "nvlink": 244, "acut": 244, "asymmetr": 244, "holist": 244, "innov": 244, "speedup": 244, "cncf": 244, "sandbox": 244, "soon": [244, 248, 249, 250, 313], "amplifi": 244, "dissoci": 244, "ly": 244, "dag": [244, 253, 254, 272, 324, 462, 466, 469], "laptop": 244, "loop": [244, 327, 337, 350, 389, 391, 393, 395, 401, 409, 410, 411, 412, 413, 419, 422, 462, 463, 493], "correl": [244, 327], "subtask": 244, "earli": 244, "nsdi": [244, 491], "legaci": 244, "interchang": 244, "memoiz": 244, "vldb2021": 244, "artial": 244, "ncrement": 244, "transport": 245, "protein": [245, 403], "uncov": 245, "vari": [245, 311], "unless": [245, 314, 462], "discov": 245, "discoveri": [245, 247, 469, 475], "rough": 245, "accordingli": [245, 302], "snap": 245, "stanford": [245, 453], "cs224w": 245, "constitu": 245, "bellman": [245, 327], "ford": [245, 327], "wiki": [245, 253, 424, 428, 429, 430, 431, 433, 434, 435, 441, 442, 443, 444, 446, 447, 448, 449], "s_algorithm": 245, "towardsdatasci": 245, "9bd8951e7da": 245, "road": [245, 477], "logist": 245, "deliveri": 245, "media": 245, "nontrivi": [245, 434], "steep": 245, "sought": 245, "monei": [246, 249], "launder": [246, 249], "exact": [246, 391, 393, 489], "exclud": 246, "purchas": 246, "bolder": 246, "border": 246, "sens": [246, 454, 469], "worst": 246, "embrac": 246, "grasp": 246, "drug": 247, "likelihood": 247, "biologi": 247, "valuabl": 247, "bioinformat": 247, "chemic": 247, "promis": 247, "driven": [247, 454, 474], "carefulli": 247, "rewind": 247, "stack": 247, "convolut": [247, 318], "weigh": 247, "choic": [247, 474, 475], "huge": [247, 477], "gradient": 247, "recal": 247, "f1": [247, 324], "assess": [247, 322, 439], "irregular": 247, "unstructur": 247, "pool": 247, "hardwar": [247, 478], "undergo": 247, "perceiv": 247, "maxgraph": [248, 491], "2x": 248, "excel": 248, "elast": [248, 475], "encrypt": 248, "geminigraph": [249, 250], "plato": [249, 250], "empir": 249, "enjoi": 249, "janusgraph": 249, "nebula": 249, "dbm": 249, "relaunch": [249, 475], "recoveri": 249, "coars": 249, "grain": 249, "invest": 249, "trace": [249, 253], "dgl": 249, "nebular": 249, "movement": [249, 316], "grade": 250, "r6": 250, "8xlarg": 250, "alibabacloud": 250, "ec": 250, "xl": 250, "a038f97": 250, "170e7d3": 250, "21009d6": 250, "v4": 250, "mpich": 250, "fair": 250, "huge_pag": 250, "jemalloc": 250, "o3": 250, "stub": [250, 256, 258, 391, 419, 422], "determinist": [250, 255, 469, 475], "cdlp": [250, 253, 485], "load_direct": 250, "load_undirected_from_direct": 250, "reformat": 250, "mark": [250, 327], "datagen": 250, "9_0": 250, "fb": 250, "62": 250, "9_1": 250, "78": [250, 381, 455], "9_2": 250, "zf": 250, "88": [250, 394, 396], "60": [250, 327, 455, 475], "61": 250, "176": [250, 418], "graph500": 250, "71": [250, 327, 399, 403, 409], "79": [250, 394, 396], "friendster": 250, "97": 250, "39": [250, 312, 313, 315, 327, 455, 485, 487], "86": 250, "57": 250, "126": [250, 395], "98": 250, "83": 250, "66": 250, "1695": 250, "2742": 250, "3600": 250, "425": 250, "55": [250, 361], "lcc": 250, "521": 250, "51": [250, 455], "296": 250, "1859": 250, "201": [250, 458], "842": 250, "68": 250, "competitor": 250, "pagerank_loc": 250, "65": 250, "72": 250, "84": 250, "63": [250, 398, 400], "gunrock": 250, "0c9a96": 250, "grout": 250, "5ce160": 250, "v7": 250, "v10": 250, "gn6v": 250, "c8g1": 250, "16xlarg": 250, "8x": 250, "16gb": 250, "nvidia": 250, "v100": 250, "gb": 250, "soc": [250, 382, 383], "livejournal1": 250, "89": 250, "9345": 250, "215": [250, 451], "560": 250, "3029": 250, "129": [250, 417], "389": 250, "155": 250, "0549": 250, "sinaweibo": 250, "1649": 250, "647": 250, "orkut": 250, "105": [250, 382, 383], "121": 250, "193": 250, "658": 250, "3201": 250, "7677": 250, "137": [250, 389], "2139": 250, "319": 250, "261": 250, "69": [250, 449, 455], "235": 250, "567": 250, "283": 250, "073": 250, "6619": 250, "45": [250, 312, 313, 315, 391], "150": 250, "87299": 250, "162": 250, "60403": 250, "9676": 250, "141": 250, "347": 250, "7772": 250, "0118": 250, "306": 250, "8618": 250, "9134": 250, "467": 250, "60801": 250, "8666": 250, "3501": 250, "870": 250, "6451": 250, "198": 250, "829": 250, "5036": 250, "229": 250, "024": 250, "483": 250, "178": 250, "5593": 250, "807": 250, "367": 250, "6946": 250, "2339": 250, "jupyt": [251, 469], "notebook": [251, 469], "jupyterlab": 251, "playground": [251, 496], "bipartit": [251, 310, 312, 368, 416, 417, 418, 450, 494], "grapeengin": 252, "vineyardserv": 252, "grapeinst": 252, "graphscopeserv": 252, "inlin": 252, "dag_fil": 252, "dagfil": 252, "rundagfil": 252, "subscrib": 252, "charg": 252, "commspec": [252, 471, 474, 476], "comm_spec": [252, 471, 474, 476], "vineyard_socket": 252, "bl": 252, "dispatchresult": 252, "onrec": 252, "commanddetail": 252, "gsobject": 252, "objectmanag": 252, "appentri": 252, "icontextwrapp": 252, "ifragmentwrapp": 252, "projector": 252, "propertygraphutil": 252, "objecttyp": 252, "putobject": 252, "obj": 252, "removeobject": 252, "getobject": [252, 475, 476], "hasobject": 252, "analyticalserv": 252, "startserv": 252, "stopserv": 252, "engineconfig": 252, "tojsonstr": 252, "vineyard_rpc_endpoint": 252, "enable_java_sdk": 252, "setcommand": 252, "aggregatepolici": 252, "kpickfirst": 252, "kpickfirstnonempti": 252, "krequireconsist": 252, "kconcat": 252, "kpickfirstnonemptygraphdef": 252, "kmergegraphdef": 252, "worker_id": 252, "error_cod": 252, "set_error": 252, "has_large_data": 252, "set_graph_def": 252, "graphdefpb": 252, "graph_def": 252, "set_data": 252, "large_data": 252, "inarch": 252, "arc": 252, "aggregate_polici": 252, "fragmentwrapp": 252, "addcolumn": 252, "vdata_t": 252, "edata_t": 252, "arrowvertexmap": 252, "internaltyp": 252, "arrowprojectedfragmentbas": 252, "bareregist": 252, "internal_oid_t": 252, "property_graph_typ": 252, "eid_typ": 252, "vertexrang": [252, 255], "inner_vertices_t": 252, "outer_vertices_t": 252, "vertices_t": 252, "sub_vertices_t": 252, "nbr_t": 252, "arrow_projected_fragment_impl": 252, "compact_nbr_t": 252, "compactnbr": 252, "nbrunit": 252, "compact_adj_list_t": 252, "compactadjlist": 252, "const_adj_list_t": 252, "const_compact_adj_list_t": 252, "property_vertex_map_t": 252, "arrowprojectedvertexmap": 252, "label_id_typ": 252, "prop_id_typ": 252, "property_graph_t": 252, "eid_array_t": 252, "data_t": 252, "inner_vertex_array_t": 252, "outer_vertex_array_t": 252, "objectmeta": 252, "preparetorunapp": 252, "prepareconf": 252, "fnum": [252, 255], "vertex_prop_id": 252, "edge_prop_id": 252, "mirrorvertic": 252, "getid": 252, "getinternalid": 252, "getfragid": 252, "typedarrai": 252, "value_typ": 252, "gid2vertex": 252, "vertex2gid": 252, "getinnerverticesnum": 252, "getouterverticesnum": 252, "getverticesnum": 252, "getedgenum": [252, 476], "getinedgenum": [252, 476], "getoutedgenum": [252, 476], "getoutgoingedgenum": 252, "getincomingedgenum": 252, "gettotalverticesnum": 252, "isinnervertex": 252, "getoutervertex": 252, "getinnervertexid": 252, "getinnervertexinternalid": 252, "getoutervertexid": 252, "getoutervertexinternalid": 252, "gid2oid": 252, "oid2gid": 252, "innervertexgid2vertex": 252, "outervertexgid2vertex": 252, "getoutervertexgid": 252, "getinnervertexgid": 252, "compact_": 252, "enable_if": 252, "getincominginnervertexadjlist": 252, "getoutgoinginnervertexadjlist": 252, "getincomingoutervertexadjlist": 252, "getoutgoingoutervertexadjlist": 252, "src_fid": 252, "dst_fid": 252, "getlocaloutdegre": 252, "getlocalindegre": 252, "destlist": 252, "iedest": 252, "oedest": 252, "ioedest": 252, "getvertexmap": 252, "get_out_edges_ptr": 252, "get_in_edges_ptr": 252, "get_oe_offsets_begin_ptr": 252, "get_oe_offsets_end_ptr": 252, "get_ie_offsets_begin_ptr": 252, "get_ie_offsets_end_ptr": 252, "get_edata_array_accessor": 252, "get_vdata_array_accessor": 252, "get_arrow_frag": 252, "vertex_map_id": 252, "local_vertex_map": [252, 476], "getoid": 252, "getgid": 252, "offset2lid": 252, "getoffsetfromlid": 252, "getlidfromgid": 252, "getfidfromgid": 252, "oid_t_": 252, "vid_t_": 252, "arrowfragmentload": 252, "efil": [252, 476], "vfile": [252, 476], "graph_info": 252, "leaf": [252, 254, 299, 327, 372, 456], "table_vec_t": 252, "loadvertexedget": 252, "loadvertext": 252, "loadedget": 252, "loadfrag": 252, "loadfragmentasfragmentgroup": 252, "addlabelstofrag": 252, "frag_id": [252, 471, 476], "adddatatoexistedvlabel": 252, "adddatatoexistedelabel": 252, "addlabelstofragmentasfragmentgroup": 252, "extendlabeldata": 252, "extend_typ": 252, "initpartition": 252, "doxygenclass": 252, "arrowfragmentappend": 252, "doxygen": 252, "runner": [252, 485], "_build": 252, "appbas": 252, "defaultmessagemanag": 252, "need_split_edg": 252, "konlyout": 252, "propertyappbas": 252, "propertymessagemanag": 252, "propertyautoappbas": 252, "propertyautomessagemanag": 252, "app_t": 252, "defaultwork": 252, "parallelenginespec": 252, "pe_spec": 252, "defaultparallelenginespec": 252, "getcontext": 252, "ostream": 252, "parallelpropertywork": 252, "parallelpropertymessagemanag": 252, "propertyautowork": 252, "pointer": 252, "appfram": 252, "creatework": 252, "deletework": 252, "lib_path": 252, "worker_handl": 252, "queryarg": 252, "query_arg": [252, 297, 466], "context_kei": 252, "frag_wrapp": 252, "functiontyp": 252, "argsnum": 252, "argsunpack": 252, "datatyp": 252, "argtypeat": 252, "defaultpropertywork": 252, "ctx_t": 252, "ctxwrapperbuild": 252, "contextwrapp": 252, "vertexpropertycontext": [252, 485], "contextbas": 252, "labeledvertexdatacontext": 252, "contextdatatyp": 252, "icolumn": 252, "get_column": 252, "get_typed_column": 252, "vertex_properti": [252, 253, 255], "properties_map": 252, "vertexdatacontextwrapp": 252, "ivertexdatacontextwrapp": 252, "fragment_wrapp": 252, "unique_ptr": 252, "tondarrai": 252, "todatafram": 252, "tovineyardtensor": 252, "tovineyarddatafram": 252, "toarrowarrai": 252, "tensorcontext": [252, 254], "set_shap": 252, "tensor_t": 252, "tensorcontextwrapp": 252, "itensorcontextwrapp": 252, "cmake_extra_opt": 253, "asset": 253, "labeled_vertex_data": 253, "dynamic_vertex_data": 253, "labeled_vertex_properti": 253, "cpp_pregel": 253, "cython_pi": 253, "cython_pregel": 253, "appdagnod": [253, 288, 294], "__init__": [253, 310, 317, 324, 325, 326, 462, 463, 465, 469, 475, 494], "bytesio": [253, 261], "is_compat": 253, "graphdagnod": [253, 265, 279, 280, 296, 303, 305, 324, 325, 469], "invalidargumenterror": [253, 469], "scannererror": 253, "incorrect": 253, "signatur": [253, 316, 462], "full_jar_path": [253, 485], "java_app_class": [253, 485], "neccessari": 253, "resouc": 253, "__call__": 253, "qualifi": [253, 485], "app_asset": [253, 265, 271], "app_nod": 253, "__del__": 253, "unload": [253, 276, 294, 296], "attribute_assortativity_coeffici": [253, 485], "assort": 253, "ref": [253, 474], "joint": [253, 419, 420, 421, 422, 463], "newman": [253, 327, 391, 393, 454], "026126": 253, "2003": [253, 327, 384, 391, 402, 410], "numeric_assortativity_coeffici": [253, 485], "analog": 253, "k_": [253, 363, 427], "rac": 253, "s_i": 253, "sum_": [253, 327, 395], "w_": [253, 327, 395], "ij": [253, 327], "k_j": 253, "valueerror": [253, 309, 324, 327, 401, 458, 469], "barrat": 253, "barth\u00e9lemi": 253, "pastor": 253, "satorra": 253, "vespignani": 253, "pna": 253, "101": [253, 491], "3747": 253, "3752": 253, "2004": [253, 416], "average_shortest_path_length": [253, 327, 463, 485], "frac": [253, 327, 337, 395], "vertexdatacontextdagnod": [253, 254], "avg_clust": [253, 485], "degree_threshold": 253, "threshold": [253, 409, 410, 411, 412], "1e9": 253, "unweight": [253, 327], "foster": 253, "grassberg": 253, "paczuski": 253, "107": [253, 415], "10815": 253, "1e": [253, 322, 327, 381], "06": [253, 327], "html": [253, 327, 411, 414, 423, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438, 442, 444], "gv": 253, "hits_algorithm": 253, "vertexpropertycontextdagnod": [253, 254], "is_simple_path": [253, 485], "nonempti": 253, "biject": [253, 457], "smallest": [253, 414, 434, 444], "pairwis": 253, "k_shell": [253, 485], "katz_centrality_numpi": [253, 327], "auttenu": 253, "maximun": 253, "min_progress": 253, "progress_tri": 253, "progress": [253, 406], "met": 253, "blondel": 253, "et": [253, 459], "al": [253, 459], "stat": [253, 409, 411], "mech": 253, "10008": 253, "2008": [253, 381, 404], "sotera": 253, "lpa_u2i": [253, 485], "labeledvertexpropertycontextdagnod": [253, 254], "pagerank_nx": [253, 485], "max_it": [253, 327, 381], "tol": [253, 327, 381], "solver": 253, "voterank": [253, 485], "unsign": [253, 475], "basecontextdagnod": [254, 324], "bound_app": [254, 271], "contextdagnod": 254, "to_vineyard_tensor": [254, 468, 485], "to_vineyard_datafram": [254, 468, 485], "lazi": [254, 324, 469], "sg": 254, "resultdagnod": [254, 289], "r4": [254, 477], "62586": 254, "comparis": 254, "alphabet": [254, 468], "tensorcontextdagnod": 254, "quer": 254, "labeledvertexdatacontextdagnod": 254, "label_nam": [254, 468], "column_nam": [254, 468], "labeld": 254, "context_nod": 254, "result_schema": 254, "referenc": 254, "dynamicvertexdatacontext": 254, "dag_nod": 254, "get_str": 255, "get_doubl": 255, "edge_label_id": 255, "edge_label_nam": 255, "incoming_edg": 255, "register_aggreg": 255, "pregelaggregatortyp": 255, "aggr_typ": 255, "get_aggregated_valu": 255, "get_total_vertices_num": 255, "vertex_property_num": 255, "vertex_label_nam": 255, "vertex_label_id": 255, "edge_property_num": 255, "get_vertex_label_by_id": 255, "get_vertex_label_id_by_nam": 255, "get_edge_label_by_id": 255, "get_edge_label_id_by_nam": 255, "edge_properti": 255, "get_vertex_property_id_by_nam": 255, "vertex_property_nam": [255, 474], "get_vertex_property_by_id": 255, "vertex_property_id": 255, "get_edge_property_id_by_nam": 255, "edge_property_nam": 255, "get_edge_property_by_id": 255, "edge_property_id": 255, "kboolandaggreg": 255, "kbooloraggreg": 255, "kbooloverwriteaggreg": 255, "overwritten": 255, "kdoubleminaggreg": 255, "kdoublemaxaggreg": 255, "kdoublesumaggreg": 255, "kdoubleproductaggreg": 255, "kdoubleoverwriteaggreg": 255, "kint64minaggreg": 255, "kint64maxaggreg": 255, "kint64sumaggreg": 255, "kint64productaggreg": 255, "kint64overwriteaggreg": 255, "ktextappendaggreg": 255, "kalongoutgoingedgetooutervertex": 255, "kalongincomingedgetooutervertex": 255, "kalongedgetooutervertex": 255, "get_total_nodes_num": 255, "get_nodes_num": 255, "get_inner_nodes_num": 255, "get_outer_nodes_num": 255, "outer_nod": 255, "get_node_fid": 255, "is_inner_nod": 255, "is_outer_nod": 255, "get_nod": [255, 313], "get_outer_nod": 255, "get_node_id": 255, "get_incoming_edg": 255, "has_child": 255, "child": [255, 364, 456], "has_par": 255, "parent": [255, 257, 297, 302, 456], "get_indegre": 255, "get_outdegre": 255, "kmaxaggreg": 255, "ksumaggreg": 255, "kproductaggreg": 255, "koverwriteaggreg": 255, "subproject": 257, "scratch": 257, "never": [257, 462], "hopefulli": 257, "dmaven": 257, "antrun": 257, "jni": 257, "gae_java": 258, "graphscope_typ": 260, "graphscopetyp": 260, "myalgorithm": 260, "filenotfounderror": 261, "typeerror": [261, 297, 469], "arrowproperti": [262, 324], "subrang": 262, "loader_op": 263, "notimplementederror": 263, "run_app": [268, 269, 284, 292, 293], "copy_typ": 270, "session_id": [272, 276, 297, 324, 325, 462, 466], "graph_typ": [272, 462], "graphtyp": [272, 462, 471, 476], "view_typ": 273, "vertex_or_edge_label_list": 274, "graph_util": 274, "vertexlabel": 274, "op_typ": [276, 297, 466], "uiliti": 276, "interactive_queri": [281, 469], "gremlin_script": [281, 325], "request_opt": [281, 325], "interactivequerydagnod": 281, "modify_typ": [282, 283], "attr": [282, 283, 297, 316, 329, 330, 331, 462, 465], "type_pb2": [282, 283, 287], "nx_add_edg": 282, "nx_del_edg": 282, "nx_update_edg": 282, "nx_add_nod": 283, "nx_del_nod": 283, "nx_update_nod": 283, "fd": [284, 289, 485], "storage_opt": [284, 289], "write_opt": [284, 289], "adaptor": 284, "result_path": [284, 289], "vertex_collect": 285, "edge_collect": 285, "report_typ": 287, "variati": 287, "node_num": [287, 489, 493], "has_nod": [287, 462], "has_edg": [287, 462], "node_data": 287, "neighbors_by_nod": 287, "succs_by_nod": 287, "preds_by_nod": 287, "neighbors_by_loc": 287, "succs_by_loc": 287, "preds_by_loc": 287, "deg_by_nod": 287, "in_deg_by_nod": 287, "out_deg_by_nod": 287, "deg_by_loc": 287, "in_deg_by_loc": 287, "out_deg_by_loc": 287, "nodes_by_loc": 287, "loc": 287, "multigraph": [287, 327, 329, 337, 341, 350, 355, 356, 382, 383, 391, 393, 406, 407, 408, 462, 465], "multidigraph": [287, 329, 341, 350, 355, 356, 393, 401, 402, 460, 462], "large_attr": [297, 466], "types_pb2": [297, 462], "operationtyp": 297, "opdef": [297, 301], "attrvalu": [297, 324, 493], "largeattrvalu": 297, "op_def_pb2": 301, "incoming_data": [303, 324, 469], "as_default": [303, 469], "alia": [308, 310, 316, 462, 469, 494], "k8s_gs_imag": [309, 469, 487], "k8s_etcd_imag": 309, "k8s_image_pull_secret": [309, 469], "k8s_coordinator_cpu": [309, 469], "k8s_coordinator_mem": [309, 469], "k8s_vineyard_cpu": [309, 469], "k8s_mars_worker_cpu": [309, 469], "k8s_mars_worker_mem": [309, 469], "k8s_mars_scheduler_cpu": [309, 469], "k8s_mars_scheduler_mem": [309, 469], "with_mar": [309, 469], "k8s_waiting_for_delet": [309, 469], "dataset_download_retri": 309, "k8s_deploy_mod": [309, 469], "kv": 309, "cooper": [310, 324], "\u02bbegograph": 310, "\u02bbegotensor": 310, "sample_se": [310, 494], "positive_sampl": [310, 494], "receptive_fn": [310, 494], "egotensor": [310, 318, 494], "egoflow": [310, 318, 494], "cora": [310, 322, 494], "convers": [310, 311, 471], "node_t": [310, 311, 322, 494], "edge_table_with_self_loop": [310, 494], "train_tabl": [310, 494], "val_tabl": [310, 494], "test_tabl": [310, 494], "dataset_fold": [310, 494], "decod": [310, 311, 312, 322, 494], "attr_typ": [310, 311, 312, 322, 494], "1433": [310, 322, 494], "attr_delimit": [310, 311, 312, 494], "learningbasedmodel": [310, 494], "categorical_attrs_desc": [310, 494], "_sample_se": [310, 494], "_positive_sampl": [310, 494], "_receptive_fn": [310, 494], "ego_flow": [310, 494], "src_ego_spec": [310, 494], "pos_src_ego_tensor": [310, 494], "identityencod": [310, 494], "widendeepencod": [310, 494], "feature_encod": [310, 494], "gcnconv": [310, 494], "sparseegographencod": [310, 494], "_encod": [310, 494], "conv_lay": [310, 494], "_supervised_loss": [310, 494], "full_graph_mod": [310, 494], "localtftrain": [310, 494], "model_fn": [310, 322, 494], "load_graph": [310, 494], "server_id": [310, 494], "server_count": [310, 312, 322, 494], "tracker": [310, 322, 494], "bought": 311, "saturdai": 311, "morn": 311, "bigint": 311, "shanghai": 311, "localfilesystem": 311, "pai": [311, 316, 317], "tab": 311, "s2": [311, 427], "215340": 311, "933091": 311, "grei": 311, "362519": 311, "097545": 311, "chapter": [311, 312, 314, 408, 445], "dscript": 311, "dentryfil": 311, "dtabl": 311, "prj": 311, "define_str": 311, "node_sourc": 311, "edge_sourc": 311, "hash": [311, 324], "bucket_s": 311, "greatli": [311, 312, 474], "your_attr_typ": 311, "you_delimit": 311, "scr_id": 311, "10001": [311, 312, 313, 315], "feature1": 311, "10002": [311, 312, 313, 315], "feature2": 311, "10003": [311, 312, 313, 315], "feature3": 311, "124": 311, "\u02bbitem_node_decod": 311, "\u02bbuser_node_decod": 311, "\u02bbedge_decod": 311, "item_node_decod": 311, "user_node_decod": 311, "edge_decod": [311, 322], "graph_object": 311, "commod": 312, "swing": [312, 313], "30001": [312, 313, 315], "30002": [312, 313, 315], "30003": [312, 313, 315], "table_1": 312, "table_2": 312, "dest": 312, "10004": [312, 313], "20001": [312, 313, 315], "20003": [312, 313, 315], "20004": [312, 313, 315], "46": [312, 313, 315, 327, 449], "ui_decod": 312, "uv_decod": 312, "table_3": 312, "table_4": 312, "click_v": 312, "task_index": [312, 322], "task_count": 312, "atyp": 312, "job_nam": [312, 322], "worker_host": 312, "necessarili": [312, 424], "serious": 312, "decreas": [312, 391, 393], "speak": 312, "client_count": [312, 322], "wait_for_clos": [312, 322], "matter": [312, 468], "get_topologi": 313, "dst_type": 313, "figure1": 313, "topo": 313, "print_al": 313, "string_attr": 313, "src_node": 313, "dst_node": 313, "dense_shap": 313, "__next__": 313, "table1": 313, "u_nod": 313, "table2": 313, "table3": 313, "click_edg": 313, "table4": 313, "conduc": 314, "recept": [314, 318], "ai": 314, "meta_path": 314, "layer_id": 314, "famili": [314, 327, 365, 423, 451], "random_without_replac": 314, "ueri": 314, "default_neighbor_id": 314, "set_default_neighbor_id": [314, 323], "xx": 314, "set_padding_mod": 314, "circular": [314, 316, 366], "throw": 315, "nodesampl": 315, "node_sampl": 315, "by_ord": 315, "node_from": [315, 326], "edge_src": [315, 326], "edge_dst": [315, 326], "edgesampl": 315, "matur": 316, "dl": 316, "sheer": 316, "sink": 316, "generatortyp": [316, 326], "won": [316, 477], "cursor": 316, "ingo": 316, "query\u5bf9\u8c61": 316, "outneg": [316, 319], "inneg": [316, 319, 322], "candid": [316, 319], "u2i": 316, "ouv": 316, "func": 316, "edeg": 316, "src_1hop": 316, "dst_1hop": 316, "neg_i": 316, "neg_i_1hop": 316, "params_list": 316, "arrang": 316, "anonym": [316, 454], "src_attr": 316, "neg_attr": 316, "encode_fn": [316, 322], "src_atr": 316, "outnegv": 316, "gen1": 316, "gen2": 316, "circumst": 316, "foewa": 316, "from_gener": [316, 322], "make_one_shot_iter": [316, 322], "get_next": [316, 322], "zhangjiak": 317, "cp27": 317, "cp27mu": 317, "linux_x86_64": 317, "autoconf": 317, "automak": 317, "libtool": 317, "submodul": [317, 320, 474], "your_wheel_nam": [317, 320], "test_cpp_ut": 317, "test_python_ut": 317, "fastgcn": [318, 494], "graphsaint": 318, "amd": 318, "object_typ": 319, "oprequest": 320, "req": 320, "oprespons": 320, "params_": 320, "tensors_": 320, "redirect": [320, 400], "rewrit": 320, "till": [320, 469], "happen": [320, 474, 477], "stitch": 320, "myoper": 320, "register_oper": 320, "opnam": 320, "randomsampl": 320, "xxxsampler": 320, "reader": 321, "litestr": 321, "getfiles": 321, "getrecordcount": 321, "register_file_system": 321, "myfilesystem": 321, "registr": 321, "ppi": 322, "train_supervis": 322, "gen_test_data": 322, "getopt": 322, "argv": 322, "cur_path": 322, "elif": 322, "102": [322, 458], "dirnam": 322, "rf": 322, "\u4f60\u9700\u8981\u628agen_test_data": 322, "py\u653e\u5230shell\u811a\u672c\u540c\u4e00\u76ee\u5f55\u4e0b": 322, "fi": 322, "sleep": 322, "case_bas": 322, "genetic_algorithm": 322, "neural_network": 322, "probabilistic_method": 322, "reinforcement_learn": 322, "rule_learn": 322, "bag": 322, "1033": 322, "103482": 322, "103515": 322, "31336": 322, "1061127": 322, "05882353": 322, "1106406": 322, "n_featur": 322, "node_decod": 322, "n_class": 322, "140": [322, 385], "n_hop": 322, "n_epoch": 322, "tripl": 322, "graph_object_cn": 322, "sample_gen": 322, "input_fn": 322, "sample_input_fn": 322, "float64": 322, "tensorshap": 322, "layer_featur": 322, "aggregate_fn": 322, "self_vec": 322, "neigh_vec": 322, "raw_feat_layer_index": 322, "layer_index": 322, "variable_scop": 322, "_layer": 322, "auto_reus": 322, "neigh_weight": 322, "get_vari": 322, "self_weight": 322, "output_shap": 322, "get_shap": 322, "neigh_mean": 322, "from_neigh": 322, "matmul": 322, "from_self": 322, "add_n": 322, "leaky_relu": 322, "depth_to_encod": 322, "h_self_vec": 322, "h_neighbor_vec": 322, "features_column": 322, "feature_column": 322, "numeric_column": 322, "loss_fn": 322, "train_op": 322, "global_step": 322, "get_global_step": 322, "estimatorspec": 322, "modekei": 322, "set_xxx": 323, "set_yyi": 323, "other_model": 323, "fill": [323, 363, 374, 384, 418], "nbr_id": 323, "set_default_int_attribut": 323, "set_default_float_attribut": 323, "set_default_string_attribut": 323, "set_inter_threadnum": 323, "intra": [323, 381, 384], "set_intra_threadnum": 323, "16mb": 323, "reset": 323, "enlarg": 323, "set_rpc_message_max_s": 323, "objectnam": 324, "degener": 324, "unspecifi": [324, 339], "consolidate_column": 324, "result_column": 324, "consolid": [324, 476, 483], "weight0": 324, "weight1": 324, "graph_nod": 324, "detach": 324, "varaibl": 324, "lexic": 324, "classmethod": 324, "graphar_store_in_loc": [324, 473], "save_to": [324, 473], "graphar_graph_nam": [324, 473], "graphar_file_typ": [324, 473], "parquet": [324, 473], "orc": [324, 473], "graphar_vertex_chunk_s": [324, 473], "graphar_edge_chunk_s": [324, 473], "graphschema": [324, 462], "schema_path": 324, "currrent": 324, "object_id": [324, 325, 326], "filetyp": 324, "ordinari": 324, "graph_build": 324, "deprec": [324, 342, 440], "group_id": 324, "member_s": 324, "leader_student_id": 324, "student": 324, "member_student_id": 324, "group_for_teacher_stud": 324, "group_nam": 324, "establish_d": 324, "teacher_in_charge_id": 324, "teacher": 324, "lesson_num": 324, "avg_scor": 324, "student_id": 324, "salari": 324, "teacher_id": 324, "both_in_out": 324, "unambigu": 324, "orign": 324, "interactivequeri": [325, 467, 469, 493], "frontend_gremlin_endpoint": 325, "frontend_cypher_endpoint": 325, "gremlin_url": 325, "lifetim": 325, "traversal_sourc": 325, "graphtraversalsourc": 325, "cypher_driv": 325, "cypher_url": 325, "gremlin_cli": 325, "runtimeerror": [325, 469], "modern_graph_data_dir": 325, "tolist": [325, 475], "dtype": 326, "pywrap": 326, "nodefrom": 326, "get_handl": 326, "worker_count": 326, "base64": 326, "nstart": 327, "poweriterationfailedconverg": 327, "langvil": 327, "meyer": 327, "survei": [327, 415], "cites": 327, "ist": 327, "psu": 327, "edu": 327, "713792": 327, "jon": 327, "kleinberg": 327, "authorit": 327, "journal": [327, 396, 404, 421, 452, 455, 459], "acm": [327, 402, 453, 485], "604": 327, "1999": [327, 382, 383], "doi": [327, 397, 404, 439], "1145": 327, "324133": 327, "324140": 327, "cornel": 327, "kleinber": 327, "pdf": [327, 409, 411, 412], "load_centr": 327, "in_degree_centr": [327, 463], "networkxnotimpl": 327, "out_degree_centr": [327, 463], "equat": 327, "ax": 327, "eigenvalu": [327, 407], "virtu": 327, "perron": 327, "frobeniu": 327, "theorem": [327, 406, 418], "0e": 327, "strength": 327, "2f": 327, "networkxpointlessconcept": [327, 457], "networkxerror": [327, 333, 340, 342, 346, 347, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 397, 403, 406, 407, 408, 419, 422, 454, 462, 465], "eigenvector_centrality_numpi": 327, "discern": 327, "phillip": 327, "bonacich": 327, "american": 327, "sociologi": 327, "1170": 327, "1182": 327, "1986": [327, 451], "leonidzhukov": 327, "net": [327, 381], "hse": 327, "socialnetwork": 327, "oxford": [327, 360, 361, 410, 454], "press": [327, 360, 361, 408, 450, 453, 454], "usa": [327, 414, 415, 461], "pp": [327, 391, 394, 395, 396, 409, 415, 416, 453, 459], "169": 327, "x_i": 327, "a_": 327, "x_j": 327, "lambda_": 327, "distant": 327, "penal": 327, "strictli": [327, 381], "invers": [327, 406], "phi": 327, "sqrt": [327, 407], "adjacency_spectrum": 327, "720": 327, "leo": 327, "sociometr": 327, "psychometrika": 327, "1953": 327, "springer": [327, 416], "1007": [327, 361, 397], "bf02289026": 327, "has_path": [327, 463], "djikstra": 327, "floyd": 327, "warshal": 327, "bfs_edg": [327, 463], "depth_limit": 327, "core_numb": 327, "vladimir": 327, "batagelj": 327, "matjaz": 327, "zaversnik": 327, "ab": [327, 385, 386, 387, 401, 409, 413, 454, 456], "0310049": 327, "c_u": 327, "deg": [327, 381, 395, 462], "geometr": [327, 449, 463], "vw": 327, "hat": 327, "uv": [327, 395], "uw": 327, "tot": 327, "2deg": 327, "leftrightarrow": 327, "complete_graph": [327, 333, 462], "saram\u00e4ki": 327, "kivel\u00e4": 327, "onnela": 327, "kaski": 327, "kert\u00e9sz": 327, "027105": 327, "2007": [327, 409, 455], "jponnela": 327, "web_docu": 327, "a9": 327, "intens": 327, "coher": 327, "motif": 327, "065103": 327, "2005": [327, 403, 409], "sign": 327, "costantini": 327, "perugini": 327, "plo": 327, "e88669": 327, "fagiolo": 327, "76": 327, "026107": 327, "average_clust": [327, 463], "count_zero": 327, "c_v": 327, "nonzero": [327, 391, 408], "marcu": 327, "kaiser": 327, "0802": 327, "2512": 327, "g_to_add_to": [329, 330, 331], "nodes_for_cycl": 329, "add_path": [329, 331, 462], "add_star": [329, 330], "nodes_for_path": 330, "add_cycl": [330, 331], "nodes_for_star": 331, "star": [331, 368, 377], "middl": 331, "cnbor": 333, "with_data": 334, "empty_graph": [334, 375], "frequenc": 336, "width": 336, "2m": [337, 415], "prevent": 340, "frozen": [340, 345], "unfreez": 340, "frozen_graph": 340, "unfrozen_graph": 340, "is_frozen": 340, "neighbour": 342, "freez": [345, 463], "nodelist": [350, 389], "selfloop_edg": [350, 355, 391, 393], "number_of_selfloop": [350, 356], "selfloop": [355, 356, 389, 395], "nloop": 355, "nodes_with_selfloop": [355, 356], "datadict": [356, 462], "datavalu": 356, "attrnam": [356, 493], "edgeit": 356, "ekei": 356, "graph_atlas_g": 360, "linearli": [360, 376], "ronald": [360, 361, 451], "robin": [360, 361], "wilson": [360, 361], "1998": [360, 361], "111223": 361, "112222": 361, "automorph": [361, 434], "graph_atla": 361, "expens": 361, "popul": [361, 362, 364, 365, 367, 369, 372, 374, 376, 377, 380, 391, 393, 394, 396, 398, 399, 400, 406, 407, 408, 414, 415, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 457, 464], "book": 361, "violat": 361, "lexicograph": 361, "nondecreas": 361, "001111": 361, "000112": 361, "1008": 361, "3333444": 361, "3333336": 361, "1012": 361, "1213": 361, "1244555": 361, "1244456": 361, "perfectli": 362, "ari": [362, 372], "height": 362, "children": [362, 372, 456], "barbel": [363, 374], "bell": 363, "p_": [363, 395, 409], "mere": [363, 374], "aldou": [363, 374], "jim": [363, 374], "binomi": 364, "leftmost": 364, "ci_n": 365, "x_1": 365, "x_2": 365, "x_m": 365, "mod": [365, 379, 408, 427], "subfamili": 365, "ladder": [366, 373], "cl_n": 366, "k_n": 367, "is_direct": [367, 462], "subset_s": 368, "multipartit": [368, 379], "tripartit": 368, "bc": 368, "complete_bipartite_graph": 368, "c_n": 369, "hierarch": 370, "dorogovtsev": 370, "goltsev": 370, "mend": 370, "mat": 370, "0112143": 370, "kw": [371, 469], "unknown": [371, 474], "abc": 371, "rightmost": 372, "jame": 372, "andrew": 372, "storer": 372, "birkhaus": 372, "boston": 372, "2001": [372, 385, 393, 398, 400, 408, 417, 475], "225": [372, 462], "lollipop": 374, "k_m": 374, "p_n": [374, 376], "etext": 374, "turan": 379, "disjoint": [379, 390, 428], "2r": 379, "tau1": 381, "tau2": 381, "mu": 381, "average_degre": 381, "min_degre": 381, "max_degre": 381, "min_commun": 381, "max_commun": 381, "lfr": 381, "mathrm": 381, "expon": 381, "reassign": [381, 419], "affili": [381, 489], "random_st": [381, 384, 385, 386, 387, 389, 391, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 409, 410, 411, 412, 413, 416, 417, 418, 422, 454, 457, 459], "exceededmaxiter": 381, "250": 381, "frozenset": [381, 464], "rewir": [381, 383, 387, 419, 422], "wire": 381, "robust": 381, "somewhat": 381, "narrow": 381, "andrea": 381, "lancichinetti": 381, "santo": [381, 385, 386, 387], "fortunato": [381, 385, 386, 387], "filippo": 381, "radicchi": 381, "phy": [381, 393, 398, 399, 400, 403], "rev": [381, 393, 398, 399, 400, 403], "046110": 381, "santofortunato": 381, "caveman": [382, 383, 387], "unclear": [382, 383], "connected_caveman_graph": [382, 388], "watt": [382, 383, 393], "phenomenon": [382, 383], "amer": [382, 383], "493": [382, 383], "527": [382, 383], "caveman_graph": 383, "p_in": [384, 385, 386], "p_out": [384, 385, 386], "gaussian": [384, 410, 411, 412], "drawn": [384, 412], "varianc": 384, "probabilti": [384, 387], "random_partition_graph": [384, 389], "ulrik": 384, "brand": 384, "marco": 384, "gaertler": 384, "dorothea": 384, "wagner": 384, "11th": 384, "europ": 384, "symp": 384, "plant": [385, 386], "random_partition_model": 385, "condon": 385, "karp": 385, "algor": 385, "116": 385, "486": [385, 386, 387], "174": [385, 386, 387], "0906": [385, 386, 387], "0612": [385, 386, 387], "relax": 387, "februari": 387, "num_cliqu": 388, "clique_s": 388, "ring": 388, "stochast": [389, 463], "densiti": [389, 391, 409, 411], "symmetr": [389, 408, 431, 435, 441, 443, 454], "300": [389, 458], "prob": 389, "450": 389, "quotient_graph": 389, "relabel": 389, "245": 389, "348": 389, "405": 389, "051": 389, "022": 389, "planted_partition_graph": 389, "gaussian_random_partition_graph": 389, "gnp_random_graph": [389, 416, 417, 418], "holland": 389, "laskei": 389, "leinhardt": 389, "blockmodel": 389, "109": 389, "1983": 389, "windmil": 390, "contract": 390, "wd": 390, "deg_sequ": [391, 392, 393, 394, 396], "pseudograph": [391, 393], "nonneg": [391, 393], "is_graph": [391, 397], "graphic": [391, 393, 396, 397], "realiz": [391, 393, 396, 419, 420, 421, 422, 449, 474], "tend": 391, "poisson": 391, "constant": [391, 493], "siam": [391, 396, 402], "167": 391, "random_sequ": 391, "random_powerlaw_tree_sequ": 391, "5000": [391, 475], "actual_degre": 391, "in_degree_sequ": 393, "out_degree_sequ": 393, "directed_random": 393, "configuration_model": [393, 394, 397], "finit": [393, 395, 408], "strogatz": 393, "026118": 393, "din": 393, "dout": 393, "in_deg_sequ": 394, "out_deg_sequ": 394, "kleitman": [394, 396], "valenc": [394, 396], "1973": [394, 396], "w_0": 395, "w_1": 395, "ldot": 395, "w_u": [395, 409, 412], "w_v": [395, 409, 412], "sum_k": 395, "w_k": 395, "z": [395, 408, 409, 413], "mathcal": 395, "ne": 395, "uu": 395, "fan": [395, 409, 485], "chung": [395, 409], "lu": [395, 485], "ann": 395, "combinator": [395, 455], "145": 395, "2002": 395, "joel": 395, "miller": 395, "aric": [395, 409], "hagberg": [395, 409], "waw": [395, 409], "alan": 395, "friez": 395, "paul": 395, "horn": 395, "pawe\u0142": 395, "pra\u0142at": 395, "lnc": 395, "6732": 395, "115": 395, "havel": 396, "hakimi": 396, "networkxexcept": 396, "resort": 396, "496": 396, "506": 396, "1962": [396, 414, 415, 461], "d_m": 397, "uniform": [397, 409, 418], "networkxunfeas": 397, "moshen": 397, "bayati": 397, "jeong": 397, "han": 397, "kim": 397, "amin": 397, "saberi": 397, "algorithmica": 397, "58": 397, "860": 397, "910": 397, "s00453": 397, "009": 397, "9340": 397, "gn": [398, 461], "a_k": 398, "krapivski": [398, 399, 400, 403], "redner": [398, 399, 400], "066123": [398, 400], "gnc": 399, "growth": [399, 459], "036118": 399, "2005k": 399, "gnr": 400, "probabilii": 400, "self_loop": 401, "preferenti": 401, "proport": 401, "peterson": [401, 444], "nichola": 401, "bori": 401, "pittel": 401, "preprint": 401, "1311": 401, "5961": 401, "2013": [401, 421], "gamma": 402, "delta_in": 402, "delta_out": 402, "bia": 402, "bollob\u00e1": 402, "borg": 402, "chay": 402, "riordan": 402, "fourteenth": 402, "annual": 402, "symposium": 402, "132": [402, 417], "139": 402, "diverg": [403, 463], "retent": 403, "disallow": 403, "ispolatov": 403, "yuryev": 403, "061911": 403, "inclus": 404, "knudsen": 404, "michael": 404, "carsten": 404, "wiuf": 404, "markov": 404, "chain": 404, "1155": 404, "190836": 404, "radiu": [405, 410, 411, 412], "chordal": 406, "chord": [406, 420], "mildli": 406, "lubotzki": 406, "invari": 406, "birkh\u00e4us": 406, "verlag": 406, "basel": 406, "1994": 406, "marguli": 407, "gabber": 407, "galil": 407, "palei": 408, "pz": 408, "f_q": 408, "odd": 408, "bolloba": 408, "cambridg": 408, "theta": [409, 412], "po": [409, 410, 411, 412, 413], "p_dist": [409, 411], "geograph": [409, 412], "rectangular": [409, 413], "ge": [409, 413], "prone": 409, "le": [409, 413, 453], "euclidean": [409, 410, 411, 412, 413], "taxicab": [409, 413], "expovari": [409, 412], "masuda": 409, "miwa": 409, "konno": 409, "036108": 409, "milan": 409, "bradonji\u0107": 409, "allon": 409, "percu": 409, "giant": 409, "antoni": 409, "bonato": 409, "209": 409, "216": 409, "cube": [410, 411, 412, 430, 447], "kdtree": [410, 411, 412], "minkowski": [410, 411, 412], "infin": [410, 411, 412], "erd\u0151": [410, 411, 412], "r\u00e9nyi": [410, 411, 412], "twenti": 410, "2d": [410, 411, 412, 462, 465], "deviat": [410, 411, 412], "gauss": [410, 411, 412], "penros": [410, 411], "mathew": [410, 411], "soft": 411, "exp": [411, 413], "annal": 411, "2016": 411, "986": 411, "1028": 411, "summat": 412, "nodethr": 412, "cole": 412, "maclean": 412, "blog": 412, "thesi": [412, 418], "waxman": 413, "x_min": 413, "y_min": 413, "x_max": 413, "y_max": 413, "Their": 413, "incompat": [413, 474], "rout": 413, "multipoint": 413, "ieee": [413, 421, 422, 454, 459], "1988": 413, "1617": 413, "1622": 413, "harari": [414, 415, 463], "h_": [414, 415], "ceil": 414, "kn": 414, "hnm_harary_graph": 414, "weisstein": 414, "eric": 414, "mathworld": [414, 423, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438, 442], "wolfram": [414, 423, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438, 442], "hararygraph": 414, "nat": [414, 415, 461], "acad": [414, 415, 461], "sci": [414, 415, 461], "1142": [414, 415, 461], "1146": [414, 415, 461], "floor": 415, "hkn_harary_graph": 415, "boesch": 415, "satyanarayana": 415, "suffel": 415, "reliabl": 415, "synthesi": 415, "99": [415, 493], "2009": [415, 455], "uniform_random_intersection_graph": [416, 417], "nikoletsea": 416, "raptopoulo": 416, "spiraki": 416, "icalp": 416, "\u0131az": 416, "karhum": 416, "aki": 416, "lepist": 416, "sannella": 416, "vol": [416, 459], "3142": 416, "lectur": 416, "1029": 416, "1040": 416, "godehardt": 417, "jaworski": 417, "electron": [417, 455], "singer": 418, "cohen": 418, "1995": 418, "phd": 418, "john": [418, 435], "hopkin": 418, "scheinerman": 418, "evolut": 418, "2000": 418, "156": 418, "nkk": [419, 420], "degree_seq": 419, "n_edges_add": 419, "li": [419, 422], "unsatur": 419, "proof": 419, "tillman": [419, 420, 422], "markopoul": [419, 420, 421, 422, 454], "butt": [419, 420, 454], "gjoka": [419, 420, 421, 422], "2k": [419, 420], "kdd": [419, 420], "seconnd": 420, "joint_degre": [421, 422], "diagon": [421, 437], "joint_degree_graph": 421, "kurant": 421, "5k": 421, "infocom": [421, 422, 454], "stanton": 421, "pinar": 421, "prescrib": 421, "experiment": [421, 469], "n_th": 423, "m_1": 423, "singleton": [423, 462], "m_2": 423, "m_i": 423, "mycielskian": 423, "m_": 423, "mycielskigraph": 423, "p_2": 423, "chromat": [424, 455], "2n": 424, "bigcup": 424, "nonisomporph": 425, "adjanc": 425, "matric": [425, 454], "nonisomorph": 426, "shift_list": 427, "cubic": [427, 430, 431, 434, 435, 441, 443, 444, 449], "lcf": [427, 429, 431, 433, 435, 441, 443], "lederberg": 427, "coxet": 427, "frucht": [427, 434], "hamiltonian": [427, 429, 434, 435, 438, 443, 449], "symmetri": [427, 434], "dodecahedral_graph": 427, "desargues_graph": 427, "heawood_graph": 427, "pappus_graph": 427, "s1": 427, "sk": 427, "v_current": 427, "shiftlist": 427, "heawood": [427, 435], "lcfnotat": 427, "bull": 428, "planar": [428, 431, 432, 434], "pendant": 428, "leg": 428, "chv\u00e1tal": 429, "370": 429, "chv": 429, "c3": [429, 441, 442], "a1tal_graph": 429, "chvatalgraph": 429, "platon": [430, 433, 438, 442, 446, 448], "hypercub": 430, "aris": 430, "desargu": 431, "desarguesgraph": 431, "kite": [432, 439], "diamondgraph": 432, "dodecahedr": 433, "dodecahedron": 433, "regular_dodecahedron": 433, "dodecahedralgraph": 433, "fruchtgraph": 434, "cage": 435, "perci": 435, "nonplanar": 435, "girth": 435, "heawoodgraph": 435, "win": [435, 444], "tue": [435, 444], "nl": [435, 444], "aeb": [435, 444], "housegraph": [436, 437], "pentatop": 437, "icosahedr": 438, "icosahedron": 438, "icosahedralgraph": 438, "krackhardt": 439, "andr": 439, "beverlei": 439, "carol": 439, "dian": 439, "fernando": 439, "garth": 439, "heather": 439, "ik": 439, "jane": 439, "polit": 439, "landscap": 439, "cognit": 439, "quarterli": 439, "342": [439, 462], "369": 439, "2307": 439, "2393394": 439, "jstor": 439, "june": 439, "1990": 439, "graph_descript": 440, "ltype": 440, "adjacencylist": 440, "from_dict_of_list": 440, "from_edgelist": 440, "xlist": 440, "c_4": 440, "w2": 440, "vk": 440, "wk": 440, "vj": 440, "wj": 440, "moebiu": 441, "kantor": 441, "m\u00f6biu": 441, "petersen": [441, 444], "b6biu": 441, "93kantor_graph": 441, "octahedr": 442, "octahedron": 442, "shake": 442, "hi": [442, 452, 461], "her": 442, "partner": 442, "handshak": 442, "cocktail": 442, "octahedralgraph": 442, "tur": 442, "a1n_graph": 442, "special_cas": 442, "pappu": 443, "juliu": 444, "counterexampl": [444, 449], "bridgeless": 444, "colour": 444, "drg": 444, "maze": 445, "sedgewick": 445, "3rd": 445, "tetrahedr": 446, "k4": 446, "w4": 446, "grpah": 446, "tetrahedron": [446, 448, 449], "archimedean": [447, 448], "octagon": 447, "triangular": 447, "truncated_cub": 447, "coolmath": 447, "polyhedra": 447, "hexagon": 448, "equilater": 448, "truncated_tetrahedron": 448, "tutt": 449, "polyhedr": 449, "tait": 449, "conjectur": 449, "polyhedron": 449, "davi": 450, "southern": 450, "women": 450, "gardner": 450, "1941": 450, "south": 450, "chicago": 450, "il": 450, "florentin": 451, "breiger": 451, "philippa": 451, "pattison": 451, "cumul": 451, "dualiti": 451, "septemb": 451, "zachari": 452, "karat": 452, "club": 452, "mr": [452, 455], "offic": 452, "wayn": 452, "fission": 452, "anthropolog": 452, "452": 452, "473": 452, "1977": 452, "coappear": 453, "novel": 453, "miser": 453, "knuth": 453, "1993": 453, "graphbas": 453, "combinatori": 453, "york": 453, "spectral": [454, 463], "forg": 454, "sgf": 454, "eigenstructur": 454, "synthes": 454, "percentag": 454, "telecommun": 454, "bernoulli": 454, "baldesi": 454, "1801": 454, "01715": 454, "karate_club_graph": 454, "sud": 455, "81": 455, "810": 455, "herzberg": 455, "murti": 455, "polynomi": 455, "am": 455, "708": 455, "717": 455, "sander": 455, "torsten": 455, "7pp": 455, "2529816": 455, "encyclopedia": 455, "dec": 455, "nil": 456, "arboresc": 456, "downward": 456, "synthet": 456, "trie": 456, "recov": [456, 469], "pr\u00fcfer": 457, "from_prufer_sequ": 457, "forest_str": 457, "triad_nam": 458, "003": 458, "012": 458, "021d": 458, "021u": 458, "021c": 458, "111d": 458, "111u": 458, "030t": 458, "030c": 458, "120d": 458, "120u": 458, "120c": 458, "triadic_censu": 458, "autonom": [459, 461], "elmokashfi": 459, "tier": 459, "mid": 459, "adv": 459, "bidirect": 459, "peer": 459, "commerci": 459, "agreement": 459, "kvalbein": 459, "dovroli": 459, "bgp": 459, "1250": 459, "1261": 459, "octob": 459, "reweight": 460, "mathematician": 461, "frank": 461, "incoming_graph_data": [462, 465], "default_label": [462, 465], "to_networkx_graph": 462, "110": 462, "protect": 462, "bracket": 462, "shortcut": 462, "nbrsdict": 462, "miscellan": 462, "__contains__": 462, "__getitem__": 462, "adj_dict": 462, "atlasview": 462, "__iter__": 462, "niter": 462, "__len__": 462, "nnode": 462, "u_of_edg": 462, "v_of_edg": 462, "ebunch_to_add": 462, "wn2898": 462, "node_for_ad": 462, "nodes_for_ad": 462, "hello": 462, "k3": 462, "attrdict": 462, "behav": 462, "idiom": 462, "foovalu": 462, "adj_it": 462, "nbrdict": 462, "adjlist_inner_dict_factori": 462, "neighbordict": 462, "adjlist_outer_dict_factori": 462, "adjlistdict": 462, "clear_edg": 462, "deepcopi": 462, "fresh": [462, 471], "__class__": 462, "degreeview": 462, "nd_view": 462, "edge_attr_dict_factori": 462, "neighborattrdict": 462, "edge_subgraph": 462, "edgeview": 462, "edgedataview": 462, "ddict": 462, "get_edge_data": 462, "edge_dict": 462, "safe": 462, "graph_attr_dict_factori": 462, "graph_cache_factori": 462, "keyerror": 462, "edge_ind": 462, "data_dictionari": 462, "is_multigraph": 462, "corespond": 462, "nbunch_it": 462, "exhaust": 462, "possibli": 462, "node_attr_dict_factori": 462, "nodeattrdict": 462, "node_dict_factori": 462, "nodedict": 462, "nodeview": 462, "nodedataview": 462, "nodedata": 462, "bar": 462, "nedg": 462, "Will": 462, "nodes_for_remov": 462, "set_edge_data": 462, "set_node_data": 462, "set_item": 462, "adjedgeattr": 462, "dd": 462, "nodeattr": 462, "netowrkx": 462, "to_undirected_class": 462, "itertool": 462, "mg": 462, "nd_iter": 462, "outedgeview": 462, "in_edg": 462, "outedgedataview": 462, "has_predecessor": 462, "has_successor": 462, "indegreeview": 462, "inedgeview": 462, "outdegreeview": 462, "pred": 462, "succ": 462, "_convert_arrow_to_dynam": [463, 465], "atla": 463, "triad": 463, "mycielski": 463, "sudoku": 463, "utf": [464, 475], "filenam": [464, 475], "rb": 464, "bz2": 464, "uncompress": 464, "whitespac": 464, "obsolet": 464, "write_edgelist": 464, "fh": 464, "textlin": 464, "parse_edgelist": 464, "read_adjlist": 464, "marker": 464, "v_0": 465, "v_1": 465, "add_label": 466, "talk": 468, "output_to_cli": [468, 485], "person_id": [468, 475], "deregist": 469, "256mi": 469, "4gi": 469, "5gi": 469, "__enter__": 469, "__exit__": 469, "exc_typ": 469, "exc_valu": 469, "exc_tb": 469, "unregist": 469, "preemptiv": 469, "burstabl": 469, "qo": 469, "preempt": 469, "k8s_vineyard_imag": 469, "fallback": 469, "512mi": 469, "etcd_addr": 469, "etcd01": 469, "etcd02": 469, "etcd03": 469, "4mi": 469, "k8s_coordinator_pod_node_selector": 469, "tinyurl": 469, "3nx6k7ph": 469, "k8s_engine_pod_node_selector": 469, "path1": 469, "path2": 469, "claimnam": 469, "dangling_timeout_second": 469, "heartbeat": 469, "dangl": 469, "config_fil": 469, "resource_nam": 469, "sigint": 469, "sigterm": 469, "signal": 469, "get_vineyard_object_mapping_t": 469, "with_cyph": 469, "recreat": 469, "restore_from_pvc": 469, "kubeconfig": 469, "run_fetch": 469, "lock": 469, "store_to_pvc": 469, "backup": [469, 475], "maxwel": 471, "binlog": 471, "buildgartfrag": 471, "etcd_endpoint": 471, "gartfrag": 471, "etcd_client": 471, "make_shar": 471, "mpi_comm_world": 471, "schema_kei": 471, "gart_schema_p": 471, "to_str": 471, "edge_config_str": 471, "as_str": 471, "gart_blob_m": 471, "_p": 471, "config_str": 471, "edge_config": 471, "inner_vertices_it": 471, "elabel": [471, 476], "edge_it": 471, "hive": 473, "ordered_by_sourc": 473, "ordered_by_dest": 473, "textual": 473, "unix": [473, 488], "ldbc_graphar": 473, "4096": 473, "ldbc_subgraph_graphar": 473, "ldbc_subgraph": 473, "ldbc__graphar": 473, "test_graphar": 473, "broader": 474, "ffi": 474, "agnost": 474, "grin_": 474, "partitioned_graph": 474, "edge_type_nam": 474, "boundari": 474, "sync_properti": 474, "grin_partitioned_graph": 474, "grin_partit": 474, "grin_graph": 474, "grin_get_local_graph_from_partit": 474, "grin_edge_typ": 474, "etyp": 474, "grin_get_edge_type_by_nam": 474, "grin_vertex_type_list": 474, "src_vtype": 474, "grin_get_src_types_from_edge_typ": 474, "dst_vtype": 474, "grin_get_dst_types_from_edge_typ": 474, "src_vtypes_num": 474, "grin_get_vertex_type_list_s": 474, "dst_vtypes_num": 474, "grin_vertex_typ": 474, "grin_get_vertex_type_from_list": 474, "grin_vertex_properti": 474, "dst_vp": 474, "grin_get_vertex_property_by_nam": 474, "grin_null_vertex_properti": 474, "grin_vertex_property_t": 474, "dst_vpt": 474, "grin_get_vertex_property_table_by_typ": 474, "grin_datatyp": 474, "dst_vp_dt": 474, "grin_get_vertex_property_data_typ": 474, "grin_vertex_list": 474, "__src_vl": 474, "grin_get_vertex_list": 474, "_src_vl": 474, "grin_select_type_for_vertex_list": 474, "src_vl": 474, "grin_select_master_for_vertex_list": 474, "src_vl_num": 474, "grin_get_vertex_list_s": 474, "grin_vertex": 474, "grin_get_vertex_from_list": 474, "ifdef": 474, "grin_trait_select_edge_type_for_adjacent_list": 474, "grin_adjacent_list": 474, "_adj_list": 474, "grin_get_adjacent_list": 474, "grin_direct": 474, "adj_list": 474, "grin_select_edge_type_for_adjacent_list": 474, "adj_lsit": 474, "endif": 474, "al_sz": 474, "grin_get_adjacent_list_s": 474, "ifndef": 474, "grin_edg": 474, "grin_get_edge_from_adjacent_list": 474, "grin_get_edge_typ": 474, "grin_equal_edge_typ": 474, "grin_get_neighbor_from_adjacent_list": 474, "grin_get_value_from_vertex_property_t": 474, "grin_vertex_ref": 474, "uref": 474, "grin_get_vertex_ref_for_vertex": 474, "recogn": [474, 475], "u_master_partit": 474, "grin_get_master_partition_from_vertex_ref": 474, "send_valu": 474, "fragment_group_id": [474, 476], "get_partitioned_graph_by_object_id": 474, "local_partit": 474, "grin_get_local_partition_list": 474, "pnum": 474, "grin_get_partition_list_s": 474, "grin_get_partition_from_list": 474, "disclaim": 474, "sacrif": 474, "boilerpl": 474, "ineffici": 474, "enorm": 474, "grin_assume_all_vertex_property_local_complet": 474, "grin_assume_master_vertex_property_local_complet": 474, "grin_assume_by_type_all_vertex_property_local_complet": 474, "grin_assume_by_type_master_vertex_property_local_complet": 474, "assumpt": 474, "wider": 474, "undefin": 474, "granular": 474, "grin_frag": 474, "storagespecif": 474, "vertexhandl": 474, "goe": 474, "grin_edge_list": 474, "grin_partition_list": 474, "grin_enable_": 474, "_list_arrai": 474, "vertexlist": 474, "grin_enable_vertex_list_arrai": 474, "vl": 474, "idx": 474, "sz": 474, "caller": 474, "_list_iter": 474, "grin_enable_vertex_list_iter": 474, "grin_vertex_list_iter": 474, "grin_get_vertex_list_begin": 474, "grin_get_next_vertex_list_it": 474, "vli": 474, "grin_is_vertex_list_end": 474, "grin_get_vertex_from_it": 474, "grin_get_vertex_type_by_nam": 474, "vtype": 474, "grin_vertex_property_list": 474, "grin_get_vertex_properties_by_nam": 474, "vprop": 474, "vpl": 474, "separatedli": 474, "with_vertex_label": 474, "with_edge_label": 474, "grin_serialize_vertex_ref": 474, "grin_deserialize_to_vertex_ref": 474, "grin_get_vertex_from_vertex_ref": 474, "vref": 474, "deseri": 474, "borrow": 474, "vertexcut": 474, "edgecut": 474, "judgement": 474, "columnar": 475, "gear": 475, "compromis": 475, "strict": 475, "multitud": 475, "exemplifi": 475, "said": 475, "grpc_port": 475, "grpc_endpoint": 475, "conn": 475, "add_vertex_label": 475, "v_label_nam": 475, "add_primary_kei": 475, "pk_name": 475, "prop_name_1": 475, "prop_name_2": 475, "add_edge_label": 475, "e_label_nam": 475, "prop_name_3": 475, "add_properti": 475, "xmln": 475, "xsi": 475, "w3": 475, "xmlschema": 475, "schemaloc": 475, "xsd": 475, "modelvers": 475, "gremlinexampl": 475, "codehau": 475, "mojo": 475, "classpath": 475, "mainclass": 475, "compliancelevel": 475, "killaft": 475, "credenti": 475, "valuemap": [475, 493], "javascript": 475, "data_load": 475, "load_tool": 475, "xzvf": 475, "alic": 475, "person_id_1": 475, "20210611151923": 475, "mapreduc": 475, "data_output": 475, "55555": 475, "propertiescolmap": 475, "srcpkcolmap": 475, "dstpkcolmap": 475, "mb": 475, "columnidx": 475, "_success": 475, "xxxxx": 475, "sst": 475, "00000": 475, "00001": 475, "00002": 475, "load_data": 475, "test_store_servic": 475, "insert_vertex": 475, "vertexrecordkei": 475, "insert_vertic": 475, "update_vertex_properti": 475, "vertex_pk": 475, "delete_vertic": 475, "insert_edg": 475, "edgerecordkei": 475, "update_edge_properti": 475, "edge_pk": 475, "remote_flush": 475, "snapshot_id": 475, "src_vertex_kei": 475, "dst_vertex_kei": 475, "realtimewrit": 475, "unus": 475, "current_timestamp": 475, "replay_record": 475, "grootclient": 475, "grootclientbuild": 475, "replayrecord": 475, "provis": 475, "lapp": 475, "reinstal": 475, "pv_name": 475, "pod_nam": [475, 483, 488], "logback": 475, "zk": 475, "storegcintervalm": 475, "try_catch_up_with_primari": 475, "otel": 475, "arrowfragmentgroup": 476, "spread": 476, "ipc": 476, "docket": 476, "string_oid": 476, "ipcclient": 476, "writeout": 476, "nb": 476, "fragmentloc": 476, "gettotalnodesnum": 476, "labeltyp": 476, "vlabel": 476, "vertex_data_t": 476, "edge_data_t": 476, "willing": 477, "implic": 477, "polymorph": 477, "instant": 477, "aka": 477, "pygrap": [477, 478], "frist": 477, "from_numpi": 477, "bind_sssp1": 477, "delai": 477, "screen": 477, "bind_sssp2": 477, "vertex_bal": 478, "vcut": 478, "ecut": 478, "repo_hom": 482, "flexbuild": 482, "graph_identifi": 482, "syoov": 483, "79b44f7b58": 483, "ctmqb": 483, "10m": 483, "9m53": 483, "9m46": 483, "6dd67c65fc": 483, "gn4mb": 483, "15334625083466732": 483, "33d": 483, "\u7684\u56fe\u5206\u6790\u5f15\u64ce\u7ee7\u627f\u4e86": 485, "\u8be5\u7cfb\u7edf\u4e8e": 485, "\u4e0a\u9996\u6b21\u63d0\u51fa\u5e76\u83b7\u5f97\u6700\u4f73\u8bba\u6587\u5956": 485, "\u4e0e\u4ee5\u5f80\u7684\u7cfb\u7edf\u7684\u4e0d\u540c": 485, "\u652f\u6301\u5c06\u4e32\u884c\u56fe\u7b97\u6cd5\u81ea\u52a8\u5e76\u884c\u5316": 485, "\u5728": [485, 486, 487, 488, 489, 492, 493, 494, 495], "\u4e2d": [485, 487, 488, 489, 495], "\u53ea\u9700\u8fdb\u884c\u5f88\u5c0f\u7684\u66f4\u6539\u5373\u53ef\u8f7b\u677e\u5730\u5c06\u4e32\u884c\u7b97\u6cd5\u5373\u63d2\u5373\u7528": 485, "\u4f7f\u5176\u5e76\u884c\u5316\u7684\u8fd0\u884c\u5728\u5206\u5e03\u5f0f\u73af\u5883": 485, "\u5e76\u9ad8\u6548\u5730\u5904\u7406\u5927\u89c4\u6a21\u56fe\u6570\u636e": 485, "\u9664\u4e86\u6613\u4e8e\u7f16\u7a0b\u5916": 485, "\u8fd8\u88ab\u8bbe\u8ba1\u4e3a\u9ad8\u6548\u4e14\u53ef\u62d3\u5c55\u7684\u7cfb\u7edf": 485, "\u53ef\u7075\u6d3b\u5e94\u5bf9\u73b0\u5b9e\u4e2d\u56fe\u5e94\u7528\u591a\u53d8\u7684\u89c4\u6a21": 485, "\u591a\u6837\u6027\u548c\u590d\u6742\u6027": 485, "\u56fe\u5206\u6790\u5f15\u64ce\u5185\u7f6e\u4e86\u8bb8\u591a\u5e38\u7528\u7684\u56fe\u5206\u6790\u7b97\u6cd5": 485, "\u5305\u62ec\u8fde\u901a\u6027\u5206\u6790\u7b97\u6cd5": 485, "\u8def\u5f84\u5206\u6790\u7b97\u6cd5": 485, "\u793e\u533a\u68c0\u6d4b\u548c\u4e2d\u5fc3\u5ea6\u8ba1\u7b97\u7b49\u7c7b\u578b": 485, "\u5185\u7f6e\u7b97\u6cd5\u53ef\u4ee5\u5728\u56fe\u4e0a\u8f7b\u677e\u8c03\u7528": 485, "\u521b\u5efa\u9ed8\u8ba4": 485, "\u5e76\u52a0\u8f7d\u5c5e\u6027\u56fe": 485, "\u5927\u591a\u6570\u5185\u7f6e\u7b97\u6cd5\u53ea\u652f\u6301\u5728\u7b80\u5355\u56fe\u4e0a\u8fdb\u884c\u8ba1\u7b97": 485, "\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5148\u901a\u8fc7\u9876\u70b9\u548c\u8fb9\u7684\u7c7b\u578b\u6765\u751f\u6210\u4e00\u4e2a\u7b80\u5355\u56fe": 485, "result_lpa": 485, "result_sssp": 485, "\u5185\u7f6e\u7b97\u6cd5\u7684\u5b8c\u6574\u5217\u8868\u5982\u4e0b\u6240\u793a": 485, "\u5177\u4f53\u67d0\u4e2a\u7b97\u6cd5\u662f\u5426\u652f\u6301\u5c5e\u6027\u56fe\u4e5f\u5728\u5176\u6587\u6863\u8fdb\u884c\u4e86\u63cf\u8ff0": 485, "\u7b97\u6cd5\u7684\u652f\u6301\u5217\u8868\u4f1a\u968f\u7740\u4e0d\u65ad\u589e\u52a0\u6301\u7eed\u66f4\u65b0\u4e2d": 485, "\u5f53\u5b8c\u6210\u4e00\u6b21\u56fe\u8ba1\u7b97": 485, "\u8ba1\u7b97\u7ed3\u679c\u4f1a\u88ab\u5305\u88c5\u6210": 485, "\u7c7b": [485, 495], "\u4fdd\u5b58\u5728\u5206\u5e03\u5f0f\u96c6\u7fa4\u7684\u5185\u5b58\u4e2d": 485, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u5c06\u7ed3\u679c\u4f20\u5230\u5ba2\u6237\u7aef\u8fdb\u884c\u5904\u7406": 485, "\u6216\u662f\u5199\u5165\u4e91\u4e2d\u67d0\u4f4d\u7f6e\u6216\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf": 485, "\u652f\u6301\u7528\u6237\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u6765\u83b7\u53d6\u7ed3\u679c\u6570\u636e": 485, "\u8f6c\u5316\u4e3a\u76f8\u5e94\u6570\u636e\u7c7b\u578b": 485, "\u6216\u5199\u5165": 485, "\u6216\u672c\u5730\u76ee\u5f55\u4e2d": 485, "pod\u4e2d\u7684\u672c\u5730\u76ee\u5f55": 485, "\u6216\u5199\u5165\u672c\u5730\u7684": 485, "lpa_result": 485, "\u6570\u636e\u7ed3\u6784": 485, "\u6b64\u5916": [485, 489], "\u5982": [485, 488, 491, 493], "\u5feb\u901f\u4e0a\u624b": [485, 491], "\u4e2d\u6240\u793a": 485, "\u7528\u6237\u53ef\u4ee5\u5c06\u8ba1\u7b97\u7ed3\u679c\u52a0\u56de\u5230\u8be5\u56fe\u6570\u636e\u4e2d\u4f5c\u4e3a\u9876\u70b9": 485, "\u7684\u65b0\u5c5e\u6027": 485, "\u5217": 485, "\u5c06\u7ed3\u679c\u4f5c\u4e3a\u65b0\u5217\u6dfb\u52a0\u56de\u5c5e\u6027\u56fe": 485, "\u5217\u540d\u4e3a": 485, "\u5e76\u751f\u6210\u4e00\u5f20\u65b0\u56fe": 485, "new_graph": [485, 490], "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u5668": 485, "\u6765\u5b9a\u4e49\u5c06\u8ba1\u7b97\u7ed3\u679c\u4e2d\u7684\u54ea\u4e9b\u90e8\u5206\u5199\u56de\u56fe\u6570\u636e": 485, "\u9009\u62e9\u5668\u6307\u5b9a\u4e86\u8ba1\u7b97\u7ed3\u679c\u4e2d\u7684\u54ea\u4e00\u90e8\u5206\u4f1a\u88ab\u5904\u7406": 485, "\u7c7b\u4f3c\u7684": 485, "\u56fe\u6570\u636e\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u88ab\u5904\u7406\u6570\u636e\u7684\u4e00\u90e8\u5206": 485, "\u4f8b\u5982\u9876\u70b9id": 485, "\u6211\u4eec\u4e3a\u9009\u62e9\u5668\u4fdd\u7559\u4e86\u4e09\u4e2a\u5173\u952e\u5b57": 485, "\u4ee3\u8868\u7ed3\u679c": 485, "\u5206\u522b\u4ee3\u8868\u9876\u70b9\u548c\u8fb9": 485, "\u4ee5\u4e0b\u662f\u7ed3\u679c\u5904\u7406\u4e2d\u9009\u62e9\u5668\u7684\u4e00\u4e9b\u793a\u4f8b": 485, "\u83b7\u53d6\u9876\u70b9\u4e0a\u7684\u7ed3\u679c": 485, "\u8f6c\u6362\u4e3a": [485, 494], "\u4f7f\u7528\u9876\u70b9\u7684": 485, "\u4f5c\u4e3a\u540d\u4e3a": 485, "\u7684\u5217": 485, "df_vd": 485, "\u4f7f\u7528\u7ed3\u679c\u5217\u4f5c\u4e3a\u540d\u4e3a": 485, "df_result": 485, "property0": 485, "label0": 485, "\u5bf9\u4e8e\u5c5e\u6027\u56fe\u7684\u7ed3\u679c": 485, "\u4f5c\u4e3av\u548ce\u7684\u6807\u7b7e\u9009\u62e9\u5668": 485, "\u5c06": [485, 494], "\u9876\u70b9\u7684": 485, "\u4f5c\u4e3a": [485, 486, 495], "\u4f7f\u7528\u5199\u5728\u5e26\u6709label0\u7684\u9876\u70b9\u4e0a\u7684property0\u4f5c\u4e3a": 485, "gs_data": 485, "\u53ef\u4ee5\u67e5\u770b": 485, "\u83b7\u53d6\u66f4\u591a\u7ec6\u8282": 485, "\u5982\u679c\u5185\u7f6e\u7b97\u6cd5\u65e0\u6cd5\u6ee1\u8db3\u9700\u6c42": 485, "\u7528\u6237\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u7b97\u6cd5": 485, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7": 485, "\u5728\u7eaf": 485, "\u6a21\u5f0f": [485, 493], "\u4e0b\u4f7f\u7528": 485, "\u7f16\u7a0b\u6a21\u578b\u7f16\u5199\u7b97\u6cd5": 485, "\u4e3a\u4e86\u5b9e\u73b0\u81ea\u5df1\u7684\u7b97\u6cd5": 485, "\u7528\u6237\u9700\u8981\u5b9e\u73b0\u6b64\u7c7b": 485, "\u5982\u4ee3\u7801\u6240\u793a": 485, "\u7528\u6237\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u4ee5": 485, "\u88c5\u9970\u7684\u7c7b": 485, "\u5e76\u63d0\u4f9b\u4e09\u4e2a\u4e32\u884c": 485, "\u56fe\u7b97\u6cd5\u51fd\u6570": 485, "\u51fd\u6570\u7528\u4e8e\u8bbe\u7f6e\u7b97\u6cd5\u521d\u59cb\u72b6\u6001": 485, "\u51fd\u6570\u5b9a\u4e49\u7b97\u6cd5\u7684\u5c40\u90e8\u8ba1\u7b97": 485, "\u51fd\u6570\u5b9a\u4e49\u5bf9\u5206\u533a\u6570\u636e\u7684\u589e\u91cf\u8ba1\u7b97": 485, "\u4e0e": 485, "\u76f8\u5173\u7684\u5b8c\u6574": 485, "\u53ef\u4ee5\u53c2\u8003": 485, "\u4ee5\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5": 485, "\u4e3a\u4f8b": [485, 489], "\u7528\u6237\u5728": 485, "\u6a21\u578b\u4e2d\u5b9a\u4e49\u7684": 485, "\u7b97\u6cd5\u53ef\u5982\u4e0b\u6240\u793a": 485, "\u521d\u59cb\u5316\u6bcf\u4e2a\u9876\u70b9\u7684\u8ddd\u79bb": 485, "\u4ececontext\u4e2d\u83b7\u53d6\u6e90\u9876\u70b9": 485, "\u5728\u6e90\u9876\u70b9\u6240\u5728\u5206\u533a\u4e2d": 485, "\u8fd0\u884cdijkstra\u7b97\u6cd5\u4f5c\u4e3a\u90e8\u5206\u8ba1\u7b97": 485, "\u4f7f\u7528\u8fb9\u4e0a\u7b2c\u4e09\u5217\u6570\u636e\u4f5c\u4e3a\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb": 485, "\u589e\u91cf\u8ba1\u7b97": 485, "\u66f4\u65b0\u6700\u77ed\u8ddd\u79bb": 485, "\u7528\u6237\u4ec5\u9700\u8981\u8bbe\u8ba1\u548c\u5b9e\u73b0\u5355\u5206\u533a\u7684\u4e32\u884c\u7b97\u6cd5": 485, "\u800c\u4e0d\u9700\u8981\u8003\u8651\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\u7684\u5206\u533a\u901a\u4fe1\u548c\u6d88\u606f\u4f20\u9012": 485, "\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b": [485, 495], "\u7ecf\u5178\u7684": 485, "\u7b97\u6cd5\u53ca\u5176\u589e\u91cf\u7248\u672c\u5c31\u53ef\u4ee5\u7528\u4e8e\u5728\u96c6\u7fa4\u4e0a\u7684\u5927\u89c4\u6a21\u56fe\u6570\u636e\u8ba1\u7b97": 485, "\u9664\u4e86\u57fa\u4e8e\u5b50\u56fe\u7684": 485, "\u6a21\u578b\u4e4b\u5916": 485, "\u4e5f\u652f\u6301\u4ee5\u9876\u70b9\u4e3a\u4e2d\u5fc3\u7684": 485, "\u7f16\u7a0b\u6a21\u578b": 485, "\u60a8\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u4ee5\u4e0b\u7b97\u6cd5\u7c7b\u6765\u5728": 485, "\u6a21\u578b\u4e2d\u5f00\u53d1\u7b97\u6cd5": 485, "\u6a21\u578b\u4e0d\u540c": 485, "\u7b97\u6cd5\u7c7b\u7684\u88c5\u9970\u5668\u4e3a": 485, "\u8be5\u7c7b\u65b9\u6cd5\u662f": 485, "\u5b9a\u4e49\u5728\u9876\u70b9\u4e0a\u7684": 485, "\u800c\u4e0d\u540c\u4e8e": 485, "\u6a21\u578b\u4e2d\u5b9a\u4e49\u5728\u56fe\u5206\u533a\u4e0a": 485, "\u8fd8\u662f\u4ee5": 485, "\u6a21\u578b\u4e0b\u7684\u7b97\u6cd5\u5982\u4e0b\u6240\u793a": 485, "\u88c5\u9970\u5668": 485, "\u5b9a\u4e49\u9876\u70b9\u6570\u636e\u548c\u6d88\u606f\u6570\u636e\u7684\u7c7b\u578b": 485, "\u652f\u6301\u7528\u6237\u5728\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u901a\u8fc7": 485, "\u4e0a\u7684\u63a5\u53e3\u6765\u4f7f\u7528\u5b9a\u4e49\u5728": 485, "\u4e2d\u7684": [485, 486, 488], "\u51fd\u6570": [485, 493], "\u4e0b\u5217\u4ee3\u7801": 485, "\u4f1a\u88ab\u7ffb\u8bd1\u6210\u5982\u4e0b\u7684": 485, "\u4ee3\u7801\u4ee5\u9ad8\u6548\u5730\u6267\u884c": 485, "\u7528\u6237\u9700\u8981\u5728\u5b9a\u4e49\u7b97\u6cd5\u540e\u8c03\u7528\u7b97\u6cd5": 485, "\u52a0\u8f7d\u81ea\u5df1\u7684\u7b97\u6cd5": 485, "\u5728\u56fe\u4e0a\u8fd0\u884c\u81ea\u5df1\u7684\u7b97\u6cd5": 485, "\u5f97\u5230\u8ba1\u7b97\u7ed3\u679c": 485, "\u8fd9\u91cc": [485, 486, 495], "\u662f\u4e0e": 485, "\u76f8\u5bf9\u5e94\u7684": 485, "\u5728\u5f00\u53d1\u548c\u6d4b\u8bd5\u4e4b\u540e": 485, "\u60a8\u53ef\u4ee5\u901a\u8fc7": 485, "\u65b9\u6cd5\u5c06\u7b97\u6cd5\u4fdd\u5b58\u6210": 485, "\u5305\u4ee5\u5907\u5c06\u6765\u4f7f\u7528": 485, "\u5728\u6b64\u4e4b\u540e": 485, "\u60a8\u53ef\u4ee5\u4ece": 485, "\u5305\u52a0\u8f7d\u81ea\u5b9a\u4e49\u7684\u7b97\u6cd5": 485, "\u4ecegar\u5305\u4e2d\u52a0\u8f7d\u81ea\u5df1\u7684\u7b97\u6cd5": 485, "\u652f\u6301\u7528\u6237\u7f16\u5199java\u7684pi": 485, "\u5e76\u4e14\u8fd0\u884c\u5728\u56fe\u5206\u6790\u5f15\u64ce\u4e0a": 485, "\u6211\u4eec\u9996\u5148\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u6f14\u793a\u5982\u679c\u5728graphscop": 485, "\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8fd0\u884c\u4e00\u4e2ajava\u7684\u56fe\u7b97\u6cd5": 485, "\u7136\u540e\u6211\u4eec\u5c06\u5c55\u793a\u5982\u679c\u5b9e\u73b0\u5e76\u8fd0\u884c\u81ea\u5b9a\u4e49\u7684java\u56fe\u7b97\u6cd5": 485, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7ecf\u5178\u56fe\u5206\u6790\u7b97\u6cd5\u7684\u793a\u4f8b\u5b9e\u73b0": 485, "\u901a\u8fc7\u4e0b\u9762\u5c55\u793a\u7684\u4f8b\u5b50": 485, "\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u5728graphscope\u7684\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8bd5\u7740\u8fd0\u884c\u4ed6\u4eec": 485, "\u9996\u5148\u4f60\u9700\u8981\u4ece\u4e0b\u8f7d\u6211\u4eec\u63d0\u4f9b\u7684\u793a\u4f8bapp\u7684\u5408\u96c6": 485, "\u65e0\u9700\u4efb\u4f55\u66f4\u6539\u4f60\u5c31\u53ef\u4ee5\u5728": 485, "graphscope\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8fd0\u884c\u8fd9\u4e9b\u793a\u4f8b\u7b97\u6cd5": 485, "\u7136\u540e\u4f60\u9700\u8981\u6253\u5f00graphscope\u7684python": 485, "\u5c1d\u8bd5\u8f7d\u56fe\u5e76\u4e14\u8fd0\u884c\u4e00\u4e2a\u7b80\u5355\u7684bfs\u7684\u7b97\u6cd5": 485, "dist_0": 485, "\u4e3a\u4e86\u7f16\u5199java\u5b9e\u73b0\u7684\u56fe\u7b97\u6cd5": 485, "\u7528\u6237\u9700\u8981\u501f\u52a9\u4e8e": 485, "\u8bf7\u53c2\u8003": [485, 493], "\u6765\u5c06": 485, "\u5b89\u88c5\u5230\u4f60\u7684\u672c\u5730\u73af\u5883\u4e0a": 485, "\u5b89\u88c5\u5b8c\u6210\u540e": 485, "\u4f60\u9700\u8981\u5c06": 485, "\u7684\u4f9d\u8d56\u6dfb\u52a0\u5230\u4f60\u7684maven\u9879\u76ee\u4f9d\u8d56\u4e2d": 485, "\u7528\u6237\u5e94\u5f53\u6ce8\u610f\u5728": 485, "\u7684\u4f9d\u8d56\u914d\u7f6e\u4e0a\u5e94\u5f53\u6dfb\u52a0": 485, "\u6765\u786e\u4fdd": 485, "\u6240\u6709\u5fc5\u8981\u7684\u4f9d\u8d56\u90fd\u88ab\u5305\u62ec\u5230": 485, "\u7528\u6237\u5728\u5f00\u53d1\u81ea\u5df1\u7b97\u6cd5\u7684\u8fc7\u7a0b\u4e2d": 485, "\u53ef\u80fd\u4f1a\u7528\u5230\u5176\u4ed6\u7684\u7b2c\u4e09\u65b9jar\u5305": 485, "\u4e3a\u4e86\u89e3\u51b3\u4f9d\u8d56jar\u5305\u7684\u7248\u672c\u95ee\u9898": 485, "\u7528\u6237\u9700\u8981\u4f7f\u7528\u786e\u4fdd\u81ea\u5df1\u751f\u6210\u7684jar\u5305\u5305\u542b\u6240\u6709\u4f9d\u8d56\u7684jar\u5305": 485, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528maven\u63d2\u4ef6": 485, "\u7528\u6237\u5728\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5\u65f6": 485, "\u7528\u6237\u9700\u8981\u6309\u7167": 485, "\u6765\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7b97\u6cd5": 485, "\u5e76\u4e14\u9700\u8981\u6839\u636e\u9700\u8981\u7684app\u7c7b\u578b\u6765\u5b9e\u73b0": 485, "\u4e2d\u76f8\u5e94\u7684\u63a5\u53e3\u5e76\u4e14\u5b9e\u73b0\u63a5\u53e3": 485, "\u5982\u679c\u7528\u6237\u671f\u671b\u7b97\u6cd5\u8fd0\u884c\u5728\u5c5e\u6027\u56fe\u4e0a": 485, "\u90a3\u4e48\u5b9a\u4e49\u7684app\u5e94\u8be5\u5b9e\u73b0\u63a5\u53e3": 485, "defaultpropertyappbas": 485, "\u6216": [485, 486, 487, 488, 491, 493], "parallelpropertyappbas": 485, "\u5982\u679c\u7528\u6237\u671f\u671b\u7b97\u6cd5\u8fd0\u884c\u5728\u7b80\u5355\u56fe\u4e0a": 485, "\u90a3\u4e48\u5b9a\u4e49\u7684app\u5e94\u8be5\u5b9e\u73b0\u501f\u53e3": 485, "defaultappbas": 485, "\u540c\u65f6\u7528\u6237\u9700\u8981\u5b9e\u73b0app\u76f8\u5e94\u7684": 485, "\u6765\u4fdd\u5b58\u8de8superstep\u7684\u6570\u636e": 485, "\u5176\u5e94\u8be5\u662f": 485, "defaultpropertycontextbas": 485, "parallelpropertycontextbas": 485, "defaultcontextbas": 485, "\u6216\u8005": [485, 487, 494, 495], "\u7684\u7684\u5b50\u7c7b": 485, "\u901a\u8fc7\u7ee7\u627f": 485, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u5230\u4e0d\u540c\u7c7b\u578b\u7684context\u6240\u62e5\u6709\u7684\u7279\u6027": 485, "\u901a\u8fc7\u8fd9\u4e24\u79cdcontext\u63d0\u4f9b\u7684\u501f\u53e3\u6240\u5b58\u50a8\u7684\u6570\u636e\u5728\u7a0b\u5e8f\u6267\u884c\u5b8c\u4e4b\u540e\u53ef\u4ee5\u88ab\u7528\u6237\u8bbf\u95ee": 485, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5728python": 485, "client\u4e2dquery\u8fd4\u56de\u7684context": 485, "\u5bf9\u8c61\u6765\u8bbf\u95ee\u8fd9\u4e9b\u6570\u636e": 485, "\u8fd9\u91cc\u6211\u4eec\u5c55\u793a\u4e00\u4e2a\u7b80\u5355\u7684app\u7684\u5b9e\u73b0": 485, "\u5b83\u6240\u505a\u7684\u4e8b\u60c5\u53ea\u662f\u5bf9\u4e00\u4e2a\u7b80\u5355\u56fe\u7684\u6240\u6709\u8fb9\u8fdb\u884c\u4e86\u904d\u5386": 485, "\u8be5app\u5bf9\u5e94\u7684context\u7684\u5b9e\u73b0": 485, "\u5728\u5b9e\u73b0\u4e86\u81ea\u5df1\u7684\u7b97\u6cd5\u4e4b\u540e": 485, "\u7528\u6237\u53ef\u80fd\u4f1a\u60f3\u5728\u63d0\u4ea4\u5230graphscope\u7684\u56fe\u5206\u6790\u5f15\u64ce\u8fd0\u884c\u524d": 485, "\u5148\u5728\u672c\u5730\u9a8c\u8bc1\u7b97\u6cd5\u5b9e\u73b0\u7684\u6b63\u786e\u6027": 485, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u811a\u672c\u6765\u6ee1\u8db3\u7528\u6237\u7684": 485, "\u8fd9\u4e2a\u9700\u6c42": 485, "\u4e3a\u4e86\u9a8c\u8bc1\u7b97\u6cd5\u5b9e\u73b0\u7684\u6b63\u786e\u6027": 485, "\u7528\u6237\u53ea\u9700\u8981\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4": 485, "graphscope_repo": 485, "app_class_nam": 485, "java_path": 485, "path_to_your_jar": 485, "param_str": 485, "params_str": 485, "\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u7684java": 485, "app\u7684\u7c7b\u7684\u5168\u540d": 485, "\u6307\u5411\u5305\u542b\u7528\u6237\u60f3\u8981\u8fd0\u884c\u7684\u7b97\u6cd5\u7684jar\u5305": 485, "\u53ef\u4ee5\u901a\u8fc7": 485, "\u6765\u5236\u5b9acontext\u521d\u59cb\u5316\u9700\u8981\u7684\u53c2\u6570": 485, "\u4f8b\u5982\u5bf9\u4e8ebfs\u7b97\u6cd5\u53ef\u4ee5\u4f7f\u7528": 485, "\u6765\u6807\u8bb0\u521d\u59cb\u8282\u70b9\u662f6": 485, "\u5e76\u884c\u7ebf\u7a0b\u6570\u4e3a1": 485, "\u53ef\u4ee5": 485, "\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u6765\u8fd0\u884ctravers": 485, "jar_path": 485, "\u5728\u672c\u5730\u9a8c\u8bc1\u81ea\u5b9a\u4e49\u7b97\u6cd5\u7684\u6b63\u786e\u6027\u4e4b\u540e": 485, "\u4f60\u53ef\u4ee5\u901a\u8fc7graphscope\u7684python": 485, "client\u6765\u63d0\u4ea4\u8fd0\u884cjar\u5305": 485, "\u4e00\u4e2ajar\u5305\u4e2d\u53ef\u4ee5\u5305\u542b\u4e0d\u540c\u7684app\u5b9e\u73b0": 485, "\u7528\u6237\u53ef\u4ee5\u591a\u6b21\u63d0\u4ea4\u76f8\u540c\u7684jar\u5305\u4f46\u662f\u8fd0\u884c\u4e0d\u540c": 485, "\u7684app": 485, "\u8bf7\u8010\u5fc3\u7b49\u5f85\u8ba1\u7b97\u5b8c\u6210": 485, "\u5f53\u8ba1\u7b97\u5b8c\u6210\u540e": 485, "\u4f60\u53ef\u4ee5\u901a\u8fc7": [485, 486, 488], "\u5bf9\u8c61\u6765\u83b7\u53d6\u8ba1\u7b97\u7ed3\u679c": 485, "\u76f8\u5173\u8bba\u6587": 485, "wenfei": 485, "jingbo": 485, "xu": 485, "wenyuan": 485, "yu": 485, "jingren": 485, "zhou": 485, "xiaojian": 485, "luo": 485, "qiang": 485, "yin": 485, "cao": 485, "ruiqi": 485, "tod": [485, 491], "yinghui": 485, "wu": 485, "jiaxin": 485, "jiang": 485, "43rd": 485, "zeyu": 485, "zheng": 485, "bohan": 485, "chao": 485, "tian": 485, "\u4ee5": [486, 489, 490, 492, 495], "\u955c\u50cf\u7684\u65b9\u5f0f\u5206\u53d1\u5f15\u64ce\u7b49\u7ec4\u4ef6": 486, "\u9ed8\u8ba4\u60c5\u51b5\u4e0b": [486, 488], "\u5982\u679c\u8fd0\u884c": 486, "\u7684\u96c6\u7fa4\u673a\u5668\u4e0a\u4e0d\u5b58\u5728\u8be5\u955c\u50cf": 486, "\u5219\u4f1a\u62c9\u53d6\u5bf9\u5e94\u7248\u672c\u7684\u6700\u65b0\u955c\u50cf": 486, "\u56e0\u6b64": [486, 487, 489], "\u8bf7\u786e\u4fdd\u60a8\u7684\u96c6\u7fa4\u53ef\u4ee5\u8bbf\u95ee\u516c\u5171\u955c\u50cf\u4ed3\u5e93": 486, "\u4f1a\u8bdd": [486, 489], "\u5ba2\u6237\u7aef": [486, 487, 491], "\u5b83\u5c01\u88c5": 486, "\u7ba1\u7406\u7740": 486, "\u5f15\u64ce\u7684\u5404\u79cd\u7ec4\u4ef6": 486, "\u5e76": 486, "\u8fde\u63a5": 486, "\u64cd\u4f5c\u7528\u6237\u5728": 486, "\u96c6\u7fa4\u4e0a\u7684": 486, "\u5f15\u64ce": 486, "\u5982\u4e0a\u8ff0\u4ee3\u7801\u6240\u793a": 486, "\u7528\u6237\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u901a\u8fc7\u4f1a\u8bdd\u6765\u62c9\u8d77\u4e00\u4e2a": 486, "\u5b9e\u4f8b": 486, "\u7528\u6237\u6709\u65f6\u9700\u8981\u4f7f\u7528\u5728\u672c\u673a\u78c1\u76d8\u4e0a\u7684\u6570\u636e": 486, "\u6211\u4eec\u63d0\u4f9b\u4e86\u9009\u9879\u4f9b\u7528\u6237\u5c06\u672c\u673a\u7684\u76ee\u5f55\u6302\u8f7d\u5230\u96c6\u7fa4\u4e0a": 486, "\u5047\u5b9a\u6211\u4eec\u8981\u5c06\u672c\u673a\u7684": 486, "\u7684\u8def\u5f84\u6302\u8f7d\u5230": 486, "\u8def\u5f84": [486, 495], "\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5982\u4e0b\u4e00\u4e2a\u5b57\u5178": 486, "\u7136\u540e": [486, 494], "\u5c06\u5176\u901a\u8fc7": 486, "\u7684\u53c2\u6570\u4f20\u7ed9\u4f1a\u8bdd\u7684\u6784\u9020\u51fd\u6570": 486, "\u6ce8\u610f\u8fd9\u91cc\u7684\u672c\u673a\u8def\u5f84\u662f\u76f8\u5bf9\u4e8e": 486, "\u8282\u70b9\u7684\u6982\u5ff5": 486, "\u5982\u679c\u4f60\u662f\u901a\u8fc7": 486, "\u521b\u5efa\u7684\u96c6\u7fa4": 486, "\u90a3\u4e48\u4f60\u9700\u8981\u5c06\u8fd9\u4e2a\u76ee\u5f55\u62f7\u8d1d\u5230": 486, "\u7684\u865a\u62df\u4e3b\u673a\u7684\u76f8\u5e94\u8def\u5f84\u4e0a": 486, "\u6216\u8005\u5728\u914d\u7f6e\u4e2d\u5c06\u8def\u5f84\u63d0\u524d\u6302\u8f7d\u5230\u865a\u62df\u4e3b\u673a\u4e0a\u53bb": 486, "\u67e5\u770b\u66f4\u591a\u7ec6\u8282": 486, "\u4e0a\u7684\u4e00\u4e2a": 486, "\u5b9e\u4f8b\u5305\u542b": 486, "\u4e00\u4e2a\u8fd0\u884c": 486, "\u7684": [486, 487, 488, 491, 496], "\u8d1f\u8d23\u5143\u4fe1\u606f\u7684\u540c\u6b65": 486, "\u8d1f\u8d23\u5bf9": 486, "\u5f15\u64ce\u5bb9\u5668\u7684\u7ba1\u7406": 486, "\u4ee5\u53ca\u4e00\u7ec4\u8fd0\u884c": 486, "\u5f15\u64ce\u5bb9\u5668\u7684": 486, "replicaset": 486, "\u5bf9\u8c61": 486, "\u540e\u7aef\u670d\u52a1\u7684\u5165\u53e3": 486, "\u901a\u8fc7": [486, 489], "\u63a5\u6536\u6765\u81ea": 486, "\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u548c\u547d\u4ee4": 486, "\u5e76\u7ba1\u7406\u7740\u56fe\u5206\u6790\u5f15\u64ce": 486, "\u56fe\u67e5\u8be2\u5f15\u64ce": 486, "\u56fe\u5b66\u4e60\u5f15\u64ce": [486, 491], "\u7684\u751f\u547d\u5468\u671f": 486, "\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u914d\u7f6e\u5f15\u64ce\u955c\u50cf\u5730\u5740\u7b49\u53c2\u6570": 486, "\u8bf7\u5728": 486, "\u4e2d\u53c2\u9605\u66f4\u591a\u7684\u8be6\u7ec6\u4fe1\u606f": 486, "\u83b7\u53d6\u5e76\u6dfb\u52a0\u4ed3\u5e93\u4fe1\u606f": 486, "\u5b89\u88c5": [486, 491], "release_nam": 486, "\u68c0\u6d4bgraphscope\u670d\u52a1\u53ef\u7528\u6027": 486, "\u53c2\u8003": 486, "\u8be5\u94fe\u63a5": 486, "\u4ee5\u901a\u8fc7python\u5ba2\u6237\u7aef\u8fde\u63a5\u5230\u9884\u542f\u52a8\u7684graphscope\u670d\u52a1": 486, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u5728aws\u6216\u963f\u91cc\u4e91\u4e0a\u521b\u5efa": 486, "\u96c6\u7fa4\u7684\u4ea4\u4e92\u5f0f\u811a\u672c": 486, "\u8fd9\u4e00\u811a\u672c\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u4f7f\u7528\u5df2\u6709\u7684\u96c6\u7fa4\u6216\u521b\u5efa\u65b0\u7684": 486, "\u96c6\u7fa4": [486, 488, 492], "\u7136\u540e\u8f93\u51fa\u96c6\u7fa4\u7684\u914d\u7f6e\u6587\u4ef6": 486, "\u7528\u6cd5\u5982\u4e0b": 486, "\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7": 486, "launch_clust": 486, "\u83b7\u5f97\u66f4\u8be6\u7ec6\u7684\u5e2e\u52a9\u4fe1\u606f": 486, "pyyaml": 486, "boto3": 486, "your_access_key_id": 486, "your_access_key_secret": 486, "region": 486, "your_region_nam": 486, "kube_config_path": 486, "alibabacloud_cs20151215": 486, "alibabacloud_ecs20140526": 486, "alibabacloud_vpc20160428": 486, "your_region_id": 486, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u5728\u672c\u5730\u5b89\u88c5graphscope\u76f8\u5173\u4f9d\u8d56\u7684\u811a\u672c": 486, "\u8be5\u811a\u672c\u53ef\u4ee5\u8fd0\u884c\u5728": 486, "\u5e73\u53f0\u4e0a": 486, "\u4e3b\u8981\u7684\u7528\u6cd5\u5982\u4e0b": 486, "\u83b7\u53d6\u66f4\u8be6\u7ec6\u7684\u5e2e\u52a9\u4fe1\u606f": 486, "\u5f00\u53d1\u76f8\u5173\u4f9d\u8d56": 486, "\u672c\u5730\u90e8\u7f72": 486, "graphscope_env": [486, 487], "\u7684\u80cc\u540e\u6709\u4e00\u7fa4\u6d3b\u8dc3\u7684\u5de5\u7a0b\u4eba\u5458\u548c\u7814\u7a76\u4eba\u5458\u56e2\u961f\u6765\u63a8\u8fdb\u65e5\u5e38\u7684\u5f00\u53d1\u548c\u7ef4\u62a4": 487, "\u6211\u4eec\u70ed\u5ff1\u6b22\u8fce\u6765\u81ea\u5f00\u6e90\u793e\u533a\u7684": 487, "\u4e3a\u6539\u5584\u8be5\u9879\u76ee\u6240\u505a\u7684\u4efb\u4f55\u8d21\u732e": 487, "\u9075\u5faa": 487, "\u7684\u5f00\u6e90\u534f\u8bae": 487, "\u9700\u8981\u4e00\u4e9b\u7b2c\u4e09\u65b9\u7684\u5de5\u5177\u548c\u4f9d\u8d56": 487, "\u4e3a\u4e86\u8ba9\u5f00\u53d1\u8005\u66f4\u5bb9\u6613\u4e0a\u624b": 487, "\u6211\u4eec\u63d0\u4f9b\u4e86\u5b89\u88c5\u4e86\u6240\u9700\u4f9d\u8d56\u7684": 487, "\u955c\u50cf": 487, "\u5f00\u53d1\u8005\u9700\u8981\u901a\u8fc7": 487, "\u7684\u547d\u4ee4\u4ece\u6211\u4eec\u7684\u5f00\u6e90\u4ee3\u7801\u5e93": 487, "\u4e2d\u83b7\u5f97\u6700\u65b0\u7248\u7684\u4ee3\u7801": 487, "\u5728\u6b64\u57fa\u7840\u4e0a\u505a\u5f00\u53d1\u6216\u4ee3\u7801\u7684\u66f4\u6539": 487, "\u7136\u540e\u5728\u4ee3\u7801\u7684\u6839\u76ee\u5f55": 487, "\u6267\u884c": 487, "10240m": 487, "minitest": 487, "unittest": 487, "\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u6784\u5efa\u547d\u4ee4\u5f00\u53d1\u5e76\u6d4b\u8bd5\u5176\u4e2d\u67d0\u4e00\u4e2a\u6a21\u5757": 487, "\u6bd4\u5982": [487, 495], "\u56fe\u5206\u6790\u5f15\u64ce": [487, 491], "\u6a21\u5757": 487, "\u7136\u540e\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u6784\u5efa": 487, "\u8be5\u547d\u4ee4\u4f1a\u5f00\u59cb": 487, "\u7684\u6784\u5efa\u8fc7\u7a0b": 487, "\u8be5\u8fc7\u7a0b\u5c06\u5728": 487, "\u7684\u5bb9\u5668\u4e2d\u6784\u5efa\u5f53\u524d\u6e90\u4ee3\u7801": 487, "\u5e76\u5c06\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u590d\u5236\u5230": 487, "\u8fd0\u884c\u65f6\u57fa\u7840\u955c\u50cf": 487, "\u751f\u6210\u7684\u955c\u50cf\u5c06\u88ab\u6807\u8bb0": 487, "\u4e3a": [487, 488, 489], "shortsha": 487, "\u5ba2\u6237\u7aef\u4e0d\u5305\u542b\u5728\u8be5\u955c\u50cf\u4e2d": 487, "\u6784\u5efa\u4e5f\u4e0e\u5f15\u64ce\u6709\u6240\u4e0d\u540c": 487, "\u5982\u679c\u5f00\u53d1\u8005\u6b63\u5728\u5f00\u53d1": 487, "\u5ba2\u6237\u7aef\u5e76\u4e14\u672a\u4fee\u6539\u5f15\u64ce\u76f8\u5173\u7684\u6587\u4ef6": 487, "\u90a3\u4e48": 487, "\u955c\u50cf\u662f\u4e0d\u9700\u8981\u91cd\u5efa\u7684": 487, "\u5f00\u53d1\u8005\u53ea\u9700\u8981\u5728\u672c\u5730\u91cd\u65b0\u5b89\u88c5": 487, "\u5ba2\u6237\u7aef\u5373\u53ef": 487, "\u6d4b\u8bd5\u65b0\u6784\u5efa\u7684\u955c\u50cf": 487, "\u7528\u6237\u53ef\u4ee5\u624b\u52a8\u6253\u5f00\u4e00\u4e2a\u4f1a\u8bdd": 487, "\u6307\u5b9a\u7528\u65b0\u7f16\u8bd1\u7684\u955c\u50cf": 487, "\u4e0b\u7684": 487, "\u5206\u53d1\u5305\u662f\u57fa\u4e8e": 487, "\u73af\u5883\u4e0b\u6784\u5efa\u7684": 487, "install_prefix": 487, "\u4e0b\u5206\u522b\u6784\u5efa": 487, "\u7531\u4e8e": 487, "\u4e0b\u7684\u6784\u5efa\u8fc7\u7a0b\u662f\u5728\u672c\u5730": 487, "\u975edocker": 487, "\u4e2d\u8fdb\u884c": 487, "\u56e0\u6b64\u9700\u8981\u672c\u5730\u4e8b\u5148\u5b89\u88c5": 487, "\u7684\u4f9d\u8d56": 487, "\u57fa\u4e8e\u5f53\u524d": 487, "\u73af\u5883\u4e0b\u7684": 487, "\u7248\u672c\u6784\u5efa": 487, "\u9700\u8981\u6ce8\u610f\u7684\u662f": [487, 489], "\u5982\u679c\u4f60\u9700\u8981\u8be5\u5206\u53d1\u5305\u80fd\u652f\u6301\u4e0d\u540c\u7684": 487, "\u7248\u672c": [487, 492], "\u4f60\u53ef\u80fd\u9700\u8981\u901a\u8fc7": 487, "conda": 487, "pyenv": 487, "\u5b89\u88c5\u591a\u4e2a": 487, "\u7684\u7248\u672c": 487, "\u98ce\u683c": 487, "\u5982\u679c\u4f60\u7684\u4ee3\u7801\u6ca1\u6709\u901a\u8fc7ci\u7684\u98ce\u683c\u68c0\u67e5": 487, "\u4f60\u53ef\u4ee5\u4f7f\u7528": 487, "\u683c\u5f0f\u5316\u4f60\u7684\u4ee3\u7801": 487, "\u6211\u4eec\u6536\u96c6\u4e86\u7528\u6237\u4f7f\u7528": 488, "\u8fc7\u7a0b\u4e2d\u7684\u5e38\u89c1\u95ee\u9898": 488, "\u5982\u679c\u5728\u4e0b\u9762\u7684\u5217\u8868\u4e2d\u4ecd\u7136\u65e0\u6cd5\u627e\u5230\u60a8\u9047\u5230\u7684\u95ee\u9898\u7684\u7b54\u6848": 488, "\u53ef\u901a\u8fc7\u63d0\u4ea4": 488, "\u6216\u8005\u5728": 488, "\u4e0e\u6211\u4eec\u8054\u7cfb": 488, "\u8fd0\u884c": 488, "\u7cfb\u7edf\u9700\u8981\u7684\u6700\u5c0f\u8d44\u6e90\u662f\u591a\u5c11": 488, "\u5728\u901a\u8fc7": 488, "\u5ba2\u6237\u7aef\u4f7f\u7528": 488, "\u8fc7\u7a0b\u4e2d": 488, "\u9700\u8981\u7684\u6700\u4f4e": 488, "\u7248\u672c\u662f3": 488, "\u6700\u4f4epip\u7248\u672c\u662f": 488, "\u7cfb\u7edf\u652f\u6301\u4ee5\u5355\u673a\u6216\u5206\u5e03\u5f0f\u7684\u65b9\u5f0f\u90e8\u7f72": 488, "\u5355\u673a\u60c5\u51b5\u4e0b": 488, "\u8d44\u6e90\u9700\u6c42": 488, "\u6838": 488, "\u5185\u5b58": 488, "\u5728\u652f\u6301\u4ee5\u4e0b\u73af\u5883\u4e2d\u8fd0\u884c": 488, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u90e8\u7f72": 488, "\u9700\u8981\u7528\u6237\u62e5\u6709\u4e00\u4e2a": 488, "\u7684\u73af\u5883\u4e0a\u6d4b\u8bd5\u901a\u8fc7": 488, "\u662f\u5426\u5f3a\u4f9d\u8d56": 488, "\u652f\u6301\u5728\u5355\u673a\u6a21\u5f0f\u5b89\u88c5\u8fd0\u884c": 488, "\u7684\u9884\u7f16\u8bd1\u5305\u4ee5": 488, "\u7684\u5f62\u5f0f\u5206\u53d1": 488, "\u53ef\u4ee5\u7528": 488, "\u5feb\u901f\u5b89\u88c5": 488, "\u5982\u4f55\u5982\u67e5\u770b": 488, "\u7684\u8fd0\u884c\u65f6\u4fe1\u606f": 488, "\u8fd0\u884c\u4e0d\u6253\u5370\u65e5\u5fd7\u4fe1\u606f": 488, "\u53c2\u6570\u5f00\u542f\u65e5\u5fd7\u8f93\u51fa": 488, "\u5982\u679c\u60a8\u7684graphscope\u8fd0\u884c\u5728k8s\u96c6\u7fa4\u4e0a": 488, "\u53ef\u4ee5\u4f7f\u7528": [488, 494], "\u6765\u67e5\u770b\u7cfb\u7edf\u7684\u5f53\u524d\u72b6\u6001": 488, "\u540c\u65f6\u5982\u679c\u4f60\u53ef\u4ee5\u8bbf\u95ee": 488, "\u7684\u78c1\u76d8": 488, "\u4e5f\u53ef\u5728": 488, "\u76ee\u5f55\u4e0b\u67e5\u770b\u8fd0\u884c\u65f6\u65e5\u5fd7": 488, "\u4e3a\u4ec0\u4e48\u5728\u4f7f\u7528": 488, "\u547d\u4ee4\u65f6": 488, "\u53d1\u73b0\u4e86\u4e00\u4e9b\u591a\u4f59\u7684": 488, "\u5bf9\u4e8e\u5176\u4e2d\u4e00\u4e9b\u5931\u8d25\u7684": 488, "\u53ea\u80fd\u901a\u8fc7\u624b\u52a8\u6267\u884c\u547d\u4ee4\u5982": 488, "\u8fdb\u884c\u5220\u9664": 488, "\u901a\u5e38\u60c5\u51b5\u4e0b": 488, "\u8be5\u95ee\u9898\u51fa\u73b0\u5728\u4f7f\u7528": 488, "\u90e8\u7f72": [488, 491], "\u65f6": [488, 489], "\u4f9d\u8d56\u4e00\u4e9b\u6743\u9650\u6765\u5220\u9664\u8fd0\u884c\u65f6\u7684\u8d44\u6e90": 488, "\u5982\u679c\u7528\u6237\u6ca1\u6709\u6b63\u786e\u8bbe\u7f6e": 488, "\u7b49\u6743\u9650": 488, "\u53ef\u80fd\u4e0d\u80fd\u6b63\u786e\u56de\u6536\u5206\u914d\u7684\u8d44\u6e90": 488, "\u8be6\u7ec6\u7ec6\u8282\u53ef\u4ee5\u67e5\u770b": 488, "\u662f\u56fe\u6570\u636e\u5e93\u5417": 488, "\u5e76\u4e0d\u662f\u4e00\u4e2a\u56fe\u6570\u636e\u5e93": 488, "\u4f46\u5176\u5305\u542b\u4e00\u4e2a\u6301\u4e45\u56fe\u5b58\u50a8\u7684\u7ec4\u4ef6": 488, "\u53ef\u4ee5\u88ab\u7528\u4f5c\u6570\u636e\u5e93": 488, "\u4e0a\u7684\u517c\u5bb9\u6027\u5982\u4f55": 488, "\u76ee\u524d": [488, 495], "graphscope\u652f\u6301gremlin\u8bed\u8a00\u4e2d\u7684\u5927\u90e8\u5206\u67e5\u8be2\u7b97\u5b50": 488, "\u53ef\u901a\u8fc7": 488, "\u8be5\u6587\u6863": 488, "\u67e5\u770b\u8be6\u7ec6\u7684\u652f\u6301\u4fe1\u606f": 488, "\u770b\u8d77\u6765\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5361\u4f4f\u4e86": 488, "\u5982\u679c": 488, "\u770b\u8d77\u6765\u50cf\u5361\u4f4f": 488, "\u53ef\u80fd\u7684\u539f\u56e0\u6709": 488, "\u5728\u4f1a\u8bdd\u7684\u62c9\u8d77\u9636\u6bb5": 488, "\u5982\u679c\u5f53\u524d\u7f51\u7edc\u4e0b\u8f7d\u955c\u50cf\u8fc7\u6162": 488, "\u6216\u5f53\u524d\u96c6\u7fa4\u8d44\u6e90\u65e0\u6cd5\u6ee1\u8db3\u8bf7\u6c42\u7684\u8d44\u6e90\u65f6": 488, "\u4f1a\u9020\u6210\u5361\u4f4f\u7684\u73b0\u8c61": 488, "\u8f7d\u56fe\u9636\u6bb5": 488, "\u53ef\u80fd\u4f1a\u7531\u4e8e\u6570\u636e\u91cf\u8fc7\u5927\u9020\u6210\u77ed\u6682\u7684\u5361\u4f4f\u73b0\u8c61": 488, "\u5728\u6267\u884c\u56fe\u7b97\u6cd5\u5206\u6790\u9636\u6bb5": 488, "\u6216\u8005\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u7b97\u6cd5": 488, "\u7f16\u8bd1\u6784\u5efa\u5e94\u7528\u7684\u5e93\u65f6\u4f1a\u82b1\u8d39\u4e00\u4e9b\u65f6\u95f4": 488, "\u4e3a\u4ec0\u4e48\u8f7d\u56fe\u65f6\u62a5\u627e\u4e0d\u5230\u6587\u4ef6\u7684\u9519\u8bef": 488, "\u8fd9\u901a\u5e38\u53d1\u751f\u5728\u4ee5\u96c6\u7fa4\u65b9\u5f0f\u90e8\u7f72\u8fd0\u884c": 488, "\u6570\u636e\u6587\u4ef6\u5fc5\u987b\u8981\u5bf9": 488, "\u53ef\u89c1": 488, "\u4f60\u4e5f\u8bb8\u9700\u8981\u6302\u8f7d\u78c1\u76d8\u6216\u8005\u4f7f\u7528\u4e91\u5b58\u50a8\u63d0\u4f9b\u5546\u7684\u670d\u52a1": 488, "\u5982\u679c\u4f60\u7684\u96c6\u7fa4\u662f\u4f7f\u7528": 488, "\u90e8\u7f72\u7684": 488, "\u4f60\u5e94\u8be5\u9700\u8981\u8bbe\u7f6e": 488, "\u6765\u628a\u672c\u673a\u76ee\u5f55\u6302\u8f7d\u5230": 488, "\u865a\u62df\u7684": 488, "\u6709\u4ec0\u4e48\u533a\u522b": 488, "\u5982\u4f55\u8bbe\u7f6e": 488, "\u5bb9\u5668\u5206\u914d\u7684\u5185\u5b58": 488, "\u5b83\u5b58\u50a8\u7531": 488, "\u7ba1\u7406\u7684\u539f\u59cb\u6570\u636e\u7684": 488, "\u7684\u5143\u4fe1\u606f": 488, "\u4f8b\u5982\u5f62\u72b6": 488, "\u540d\u79f0\u7b49": 488, "\u7531\u4e8e\u5143\u6570\u636e\u6bd4\u6570\u636e\u96c6\u5c0f\u5f97\u591a": 488, "\u56e0\u6b64\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u9ed8\u8ba4\u914d\u7f6e\u5c31\u8db3\u591f\u4e86": 488, "\u5b83\u76f8\u5f53\u4e8e": 488, "\u5b58\u50a8\u6570\u636e\u96c6\u7684\u5185\u5b58": 488, "\u6211\u4eec\u53d1\u73b0\u5c06\u5176\u8bbe\u7f6e\u4e3a\u6570\u636e\u96c6\u5728\u78c1\u76d8\u4e0a\u7684\u5927\u5c0f\u7684": 488, "\u500d\u901a\u5e38\u662f\u4e00\u4e2a\u5408\u7406\u7684\u503c": 488, "\u5bb9\u5668\u7684\u5185\u5b58\u5927\u5c0f": 488, "\u4e00\u822c\u5c06\u5176\u8bbe\u7f6e\u4e3a": 488, "\u7684\u540c\u6837\u5927\u5c0f": 488, "\u5bfc\u81f4\u5728": 488, "\u73af\u5883\u4e0b\u5b89\u88c5": 488, "\u5931\u8d25\u7684\u539f\u56e0\u53ef\u80fd\u6709\u54ea\u4e9b": 488, "\u7f16\u8bd1": 488, "\u5931\u8d25": 488, "\u6765\u5c1d\u8bd5\u4f7f\u7528\u7cfb\u7edf\u5b89\u88c5\u7684": 488, "\u8be6\u60c5\u53ef\u53c2\u8003": 488, "\u4f60\u53ef\u4ee5\u6839\u636e": 488, "\u6b64\u6559\u7a0b": 488, "\u6765\u6e90\u7801\u7f16\u8bd1": 488, "\u6216\u5c1d\u8bd5\u901a\u8fc7": 488, "\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898": 488, "\u4e0a\u5206\u914d": 488, "\u65f6\u9047\u5230\u4e86": 488, "\u95ee\u9898": 488, "\u5982\u4f55\u89e3\u51b3": 488, "\u901a\u5e38\u5f53\u4f7f\u7528": 488, "\u7684\u65b9\u5f0f\u5b89\u88c5": 488, "\u4f1a\u62a5": 488, "\u9519\u8bef": [488, 490], "\u6211\u4eec\u901a\u8fc7": 488, "\u6765\u67e5\u770b\u65e5\u5fd7": 488, "\u6b64\u65f6\u65e5\u5fd7\u663e\u793a": 488, "\u901a\u5e38\u6709\u4e24\u79cd\u89e3\u51b3\u65b9\u5f0f": 488, "\u5feb\u901f\u7684\u65b9\u5f0f\u662f\u5728\u6240\u6709\u76f8\u5173\u7684": 488, "\u76ee\u5f55\u4e0a\u4f7f\u7528": 488, "\u4f46\u4e0d\u5efa\u8bae\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528": 488, "\u4f18\u96c5\u7684\u65b9\u6cd5\u662f\u9996\u5148\u521b\u5efa": 488, "\u7528\u6237\u548c\u7528\u6237\u7ec4": 488, "\u7136\u540e\u5c06": 488, "\u4e0a\u7684\u8bbf\u95ee\u6743\u9650\u6388\u4e88\u76f8\u5173nfs\u76ee\u5f55": 488, "\u4e3a\u4ec0\u4e48\u5728": 488, "\u96c6\u7fa4\u4e0a\u62c9\u8d77": 488, "\u5b9e\u4f8b\u65f6": 488, "\u4ea7\u751f\u8d85\u65f6\u5f02\u5e38": 488, "\u5927\u591a\u6570\u60c5\u51b5\u4e0b": 488, "\u8d85\u65f6\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u5728": 488, "\u96c6\u7fa4\u62c9\u8d77": 488, "\u5b9e\u4f8b\u65f6\u9700\u8981\u4e0b\u8f7d\u5bf9\u5e94\u955c\u50cf": 488, "\u8fd9\u4e00\u6b65\u901a\u5e38\u9700\u8981\u51e0\u5206\u949f\u7684\u65f6\u95f4": 488, "\u9002\u5f53\u7684\u589e\u52a0\u8d85\u65f6\u7b49\u5f85\u65f6\u95f4\u6765\u89e3\u51b3\u8be5\u95ee\u9898": 488, "\u542f\u52a8graphscope\u65f6\u7531\u4e8e\u8fde\u63a5v6d": 488, "etcd\u7b49\u7ec4\u4ef6\u5931\u8d25\u800c\u5bfc\u81f4graphscope\u542f\u52a8\u5931\u8d25": 488, "\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u4f60\u6240\u4f7f\u7528\u7684\u673a\u5668": 488, "\u6216\u5bb9\u5668": 488, "\u6240\u5728\u7684\u4f01\u4e1a\u7f51\u7edc\u5185\u8981\u6c42\u76f8\u5e94\u7684\u4ee3\u7406\u8bbe\u7f6e\u65b9\u53ef\u6b63\u5e38\u4f7f\u7528\u7f51\u7edc": 488, "\u8fd9\u4e9b\u4ee3\u7406\u8bbe\u7f6e\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9519\u8bef\u7684\u5730\u5740\u89e3\u6790\u4ee5\u53ca\u7aef\u53e3\u5360\u7528": 488, "\u4e3a\u907f\u514d\u7c7b\u4f3c\u60c5\u51b5": 488, "\u53ef\u5728\u73af\u5883\u53d8\u91cf": 488, "\u4e2d\u52a0\u5165graphscope\u76f8\u5173\u7684\u5730\u5740": 488, "\u4ee5\u53ca": [488, 495], "\u8bf7\u6ce8\u610f": 488, "no_proxy\u7684\u524d\u540e\u7f00\u89c4\u5219": 488, "stackexchang": 488, "23452": 488, "\u5176\u4ed6\u95ee\u9898": 488, "\u60a8\u53ef\u4ee5\u63d0\u4ea4": 488, "\u63d0\u51fa\u4f60\u7684\u95ee\u9898": 488, "\u540c\u65f6": [488, 493], "\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528": 488, "\u505a\u4e3a\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": 489, "\u53ef\u4ee5\u5904\u7406\u56fe\u7684\u4ea4\u4e92\u5f0f\u67e5\u8be2": 489, "\u56fe\u5206\u6790\u548c\u56fe\u5b66\u4e60\u4efb\u52a1": 489, "\u5e76\u4e14\u5177\u6709\u6613\u4e8e\u4f7f\u7528": 489, "\u9ad8\u6027\u80fd\u548c\u826f\u597d\u7684\u53ef\u6269\u5c55\u6027\u7b49\u7279\u70b9": 489, "\u672c\u7ae0\u8282\u5c06\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u4ecb\u7ecd\u5982\u4f55\u57fa\u4e8e": 489, "\u4f7f\u7528": [489, 491, 494, 495, 496], "\u5e76\u5e2e\u52a9\u6570\u636e\u79d1\u5b66\u5bb6\u6765\u9ad8\u6548\u7684\u5206\u6790\u5927\u56fe": 489, "\u6570\u636e\u96c6": 489, "\u662f\u7531\u5fae\u8f6f\u5b66\u672f\u5173\u7cfb\u56fe": 489, "\u7684\u5b50\u96c6\u7ec4\u6210\u7684\u5f02\u6784\u56fe\u7f51\u7edc": 489, "\u8be5\u56fe\u4e2d\u5305\u542b4\u79cd\u7c7b\u578b\u7684\u5b9e\u4f53": 489, "\u5373\u8bba\u6587": 489, "\u4f5c\u8005": 489, "\u673a\u6784\u548c\u7814\u7a76\u9886\u57df": 489, "\u4ee5\u53ca\u8fde\u63a5\u4e24\u4e2a\u5b9e\u4f53\u7684\u56db\u79cd\u7c7b\u578b\u7684\u6709\u5411\u5173\u7cfb\u8fb9": 489, "\u6211\u4eec\u9700\u8981\u5904\u7406\u7684\u4efb\u52a1\u662f": 489, "\u7ed9\u51fa\u5f02\u6784\u7684": 489, "\u6570\u636e": 489, "\u5728\u8be5\u56fe\u4e0a\u9884\u6d4b\u6bcf\u7bc7\u8bba\u6587\u7684\u7c7b\u522b": 489, "\u8fd9\u662f\u4e00\u4e2a\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 489, "\u8be5\u4efb\u52a1\u53ef\u4ee5\u5f52\u7c7b\u5728\u5404\u4e2a\u9886\u57df": 489, "\u5404\u4e2a\u65b9\u5411\u6216\u7814\u7a76\u5c0f\u7ec4\u7684\u8bba\u6587": 489, "\u901a\u8fc7\u5bf9\u8bba\u6587\u5c5e\u6027\u548c\u5f15\u7528\u56fe\u4e0a\u7684\u7ed3\u6784\u4fe1\u606f\u5bf9\u8bba\u6587\u8fdb\u884c\u5206\u7c7b": 489, "\u5728\u8be5\u6570\u636e\u4e2d": 489, "\u6bcf\u4e2a\u8bba\u6587\u8282\u70b9\u5305\u542b\u4e86\u4e00\u4e2a\u4ece\u8bba\u6587\u6807\u9898": 489, "\u6458\u8981\u62bd\u53d6\u7684": 489, "\u7ef4": 489, "\u5411\u91cf\u4f5c\u4e3a\u8868\u5f81": 489, "\u8be5\u8868\u5f81\u662f\u7ecf\u8fc7": 489, "\u9884\u8bad\u7ec3\u63d0\u524d\u83b7\u53d6\u7684": 489, "\u800c\u7ed3\u6784\u4fe1\u606f\u662f\u5728\u4ee5\u4e0b\u8fc7\u7a0b\u4e2d\u5373\u65f6\u8ba1\u7b97\u7684": 489, "\u4e0a\u56fe\u8868\u793a\u4e86\u7528\u6237\u901a\u8fc7": 489, "\u5ba2\u6237\u7aef\u8c03\u7528": 489, "\u89e3\u51b3\u8be5\u95ee\u9898\u7684\u5de5\u4f5c\u6d41\u7a0b": 489, "\u6b65\u9aa4": 489, "\u5efa\u7acb\u4e00\u4e2a\u4f1a\u8bdd": 489, "\u521b\u5efa\u4e00\u4e2a\u5de5\u4f5c\u7a7a\u95f4": 489, "\u5b9a\u4e49\u548c\u8f7d\u5165\u56fe": 489, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u56fe": 489, "\u6267\u884c\u56fe\u7b97\u6cd5\u505a\u56fe\u5206\u6790": 489, "\u6267\u884c\u57fa\u4e8e\u56fe\u6570\u636e\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1": 489, "\u7684\u7b2c\u4e00\u6b65": 489, "\u6211\u4eec\u9700\u8981\u5728": 489, "\u4e2d\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 489, "\u5bf9\u4e8e": [489, 492], "\u521b\u5efa\u4f1a\u8bdd\u9700\u8981\u4f7f\u7528": 489, "\u670d\u52a1\u7c7b\u578b": 489, "\u9ed8\u8ba4\u662f": 489, "\u53e6\u5916": [489, 495], "\u6ce8\u610f": [489, 492], "\u662f": 489, "\u4e3b\u673a\u4e0a\u7684\u8def\u5f84": 489, "\u5f53\u5728": 489, "\u4e0a\u4f7f\u7528": 489, "\u9700\u8981\u9996\u5148\u5c06\u6b64\u8def\u5f84\u52a0\u5165\u5230": 489, "\u7684\u5171\u4eab\u76ee\u5f55\u4e2d": 489, "\u901a\u5e38\u4e3a": 489, "\u66f4\u8be6\u7ec6\u7684\u6307\u5f15\u8bf7\u53c2\u770b": 489, "\u7684\u5efa\u7acb\u8fc7\u7a0b\u4e2d": 489, "\u9996\u9009\u4f1a\u5728\u80cc\u540e\u5c1d\u8bd5\u62c9\u8d77\u4e00\u4e2a": 489, "\u4f5c\u4e3a\u540e\u7aef\u5f15\u64ce\u7684\u5165\u53e3": 489, "\u8be5": 489, "\u8d1f\u8d23\u7ba1\u7406\u8be5\u6b21\u4f1a\u8bdd\u7684": 489, "\u6240\u6709\u8d44\u6e90": 489, "\u4ee5\u53ca\u4ea4\u4e92\u5f0f\u67e5\u8be2": 489, "\u56fe\u5b66\u4e60\u5f15\u64ce\u7684\u751f\u547d\u5468\u671f": 489, "\u540e\u7eed\u62c9\u8d77\u7684\u5176\u4ed6\u6bcf\u4e2a": 489, "\u90fd\u6709\u4e00\u4e2a": 489, "\u5b9e\u4f8b\u4f5c\u4e3a\u5185\u5b58\u7ba1\u7406\u5c42": 489, "\u5206\u5e03\u5f0f\u7684\u7ba1\u7406\u56fe\u6570\u636e": 489, "\u8f7d\u56fe": [489, 490, 491], "\u4ee5\u5c5e\u6027\u56fe": 489, "\u5efa\u6a21\u56fe\u6570\u636e": [489, 495], "\u5c5e\u6027\u56fe\u4e2d": 489, "\u70b9\u548c\u8fb9\u90fd\u6709\u4e00\u4e2a\u6807\u7b7e": 489, "\u4e0d\u540c\u7684\u6807\u7b7e\u6709\u4e0d\u540c\u7684\u5c5e\u6027": 489, "\u4e0b\u56fe\u5c55\u793a\u4e86\u5c5e\u6027\u56fe\u7684\u6a21\u578b": 489, "\u8be5\u56fe\u5177\u6709\u56db\u79cd\u9876\u70b9": 489, "\u5206\u522b\u6807\u8bb0\u4e3a": 489, "\u8bba\u6587": 489, "\u673a\u6784": 489, "\u7814\u7a76\u9886\u57df": 489, "\u6709\u56db\u79cd\u8fde\u63a5\u5b83\u4eec\u7684\u8fb9": 489, "\u6bcf\u79cd\u8fb9\u90fd\u6709\u4e00\u4e2a\u6807\u7b7e": 489, "\u5e76\u4e14\u8fb9\u7684\u4e24\u7aef\u9876\u70b9\u7684\u6807\u7b7e\u4e5f\u662f\u786e\u5b9a\u7684": 489, "\u5f15\u7528": 489, "\u8fd9\u79cd\u6807\u7b7e\u7684\u8fb9\u8fde\u63a5\u4e24\u4e2a": 489, "\u9876\u70b9": 489, "\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f\u6807\u8bb0\u4e3a": 489, "\u64b0\u5199": 489, "\u7684\u8fb9": [489, 495], "\u5b83\u8981\u6c42\u8be5\u8d77\u59cb\u70b9\u7684\u6807\u8bb0\u4e3a": 489, "\u7ec8\u6b62\u70b9\u7684\u6807\u8bb0\u4e3a": 489, "\u6240\u6709\u7684\u9876\u70b9": 489, "\u548c\u8fb9\u90fd\u53ef\u4ee5\u5177\u6709\u5c5e\u6027": 489, "\u9876\u70b9\u5177\u6709\u8bf8\u5982\u53d1\u5e03\u5e74\u4efd": 489, "\u4e3b\u9898\u6807\u7b7e\u7b49\u5c5e\u6027": 489, "\u8981\u5c06\u6b64\u56fe\u52a0\u8f7d\u5230": 489, "\u53ef\u4ee5\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4e0e": 489, "\u6570\u636e\u6587\u4ef6": 489, "\u7ed3\u5408\u4f7f\u7528": 489, "\u8bf7\u4e0b\u8f7d\u6570\u636e\u5e76\u5c06\u5176\u89e3\u538b\u7f29\u5230\u672c\u5730\u7684\u6302\u8f7d\u76ee\u5f55": 489, "\u5728\u672c\u4f8b\u4e2d\u4e3a": 489, "author_affiliated_with_institut": 489, "paper_has_topic_field_of_studi": 489, "hastop": 489, "paper_cites_pap": 489, "author_writes_pap": 489, "\u4e5f\u53ef\u901a\u8fc7\u6211\u4eec\u63d0\u4f9b\u7684\u5185\u7f6e\u6570\u636e\u96c6\u51fd\u6570\u5e2e\u52a9\u5b8c\u6210\u8f7d\u56fe\u6d41\u7a0b": 489, "\u8fd9\u91cc\u7684": 489, "\u5df2\u7ecf\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u5b58\u50a8\u5728": 489, "\u4e2d\u7684\u56fe": 489, "\u56fe\u6570\u636e\u5206\u5e03\u5728\u8fd9\u4e2a\u4f1a\u8bdd\u80cc\u540e\u62c9\u8d77\u7684": 489, "\u66f4\u591a\u7ec6\u8282\u8bf7\u67e5\u770b": 489, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u5141\u8bb8\u7528\u6237\u4ee5": 489, "\u63a2\u7d22\u6027": 489, "\u65b9\u5f0f\u6765\u63a2\u7d22": 489, "\u67e5\u770b\u548c\u663e\u793a\u56fe\u6570\u636e": 489, "\u4ee5\u65b9\u4fbf\u7684\u5b9a\u4f4d\u548c\u6d1e\u5bdf\u7279\u5b9a\u7684\u6df1\u5165\u4fe1\u606f": 489, "\u91c7\u7528\u79f0\u4e3a": 489, "\u7684\u9ad8\u7ea7\u8bed\u8a00\u8fdb\u884c\u56fe\u904d\u5386": 489, "\u5e76\u63d0\u4f9b\u5927\u89c4\u6a21\u7684\u9ad8\u6548\u6267\u884c": 489, "\u5728\u6b64\u793a\u4f8b\u4e2d": 489, "\u6211\u4eec\u4f7f\u7528\u56fe\u904d\u5386\u6765\u67e5\u770b\u4e24\u4f4d\u7ed9\u5b9a\u4f5c\u8005\u5171\u540c\u64b0\u5199\u7684\u8bba\u6587\u6570\u91cf": 489, "\u4e3a\u4e86\u7b80\u5316\u67e5\u8be2": 489, "\u6211\u4eec\u5047\u8bbe\u4f5c\u8005\u53ef\u4ee5\u5206\u522b\u7531id": 489, "\u552f\u4e00\u6807\u8bc6": 489, "\u56fe\u5206\u6790\u662f\u5728\u771f\u5b9e\u573a\u666f\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u4e00\u7c7b\u56fe\u8ba1\u7b97": 489, "\u4e8b\u5b9e\u8bc1\u660e": 489, "\u8bb8\u591a\u7b97\u6cd5": 489, "\u4f8b\u5982\u793e\u533a\u68c0\u6d4b": 489, "\u8def\u5f84\u548c\u8fde\u63a5\u6027": 489, "\u96c6\u4e2d\u6027": 489, "\u5728\u5404\u79cd\u4e1a\u52a1\u4e2d\u90fd\u975e\u5e38\u6709\u6548": 489, "\u5185\u5efa\u4e86\u4e00\u7ec4\u9884\u7f6e\u5e38\u7528\u7b97\u6cd5": 489, "\u65b9\u4fbf\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u5206\u6790\u56fe\u6570\u636e": 489, "\u4e0b\u9762\u6211\u4eec\u9996\u5148\u901a\u8fc7\u5728\u7279\u5b9a\u5468\u671f\u5185\u4ece\u5168\u56fe\u4e2d\u63d0\u53d6\u8bba\u6587": 489, "\u80cc\u540e\u57fa\u4e8e": 489, "\u6765\u5bfc\u51fa\u4e00\u4e2a\u5b50\u56fe": 489, "\u7136\u540e\u8fd0\u884c": 489, "\u5206\u89e3\u548c\u4e09\u89d2\u5f62\u8ba1\u6570\u4ee5\u751f\u6210\u6bcf\u4e2a\u8bba\u6587\u8282\u70b9\u7684\u7ed3\u6784\u7279\u5f81": 489, "\u7531\u4e8e\u8bb8\u591a\u7b97\u6cd5\u53ef\u80fd\u4ec5\u9002\u7528\u4e8e\u540c\u6784\u56fe": 489, "\u53ea\u6709\u4e00\u7c7b\u70b9\u548c\u4e00\u7c7b\u8fb9\u800c\u4e0d\u533a\u5206\u6807\u7b7e": 489, "\u8981\u5728\u5c5e\u6027\u56fe\u4e0a\u4f7f\u7528\u8fd9\u4e9b\u7b97\u6cd5": 489, "\u6211\u4eec\u9996\u5148\u9700\u8981\u5c06\u5176\u6295\u5f71\u5230\u4e00\u4e2a\u7b80\u5355\u7684\u540c\u6784\u56fe\u4e2d": 489, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5728": 489, "\u4e2d\u7f16\u5199\u81ea\u5df1\u7684\u7b97\u6cd5": 489, "\u5f53\u524d": 489, "\u652f\u6301\u7528\u6237\u4ee5": 489, "\u6a21\u578b\u548c": 489, "\u6a21\u578b\u81ea\u5b9a\u4e49\u56fe\u7b97\u6cd5": 489, "\u7ed3\u5408\u4e86\u56fe\u7ed3\u6784\u548c\u673a\u5668\u5b66\u4e60\u7684\u4f18\u52bf": 489, "\u53ef\u4ee5\u5c06\u56fe\u4e2d\u7684\u7ed3\u6784\u4fe1\u606f\u548c\u5c5e\u6027\u4fe1\u606f\u538b\u7f29\u4e3a\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7684\u4f4e\u7ef4\u5d4c\u5165\u5411\u91cf": 489, "\u8fd9\u4e9b\u5d4c\u5165\u548c\u8868\u5f81\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8f93\u5165\u5230\u4e0b\u6e38\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u4e2d": 489, "\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d": 489, "\u6211\u4eec\u8bad\u7ec3\u4e86": 489, "\u6a21\u578b": 489, "\u5c06\u8282\u70b9": 489, "\u5206\u7c7b\u4e3a349\u4e2a\u7c7b\u522b": 489, "\u6bcf\u4e2a\u7c7b\u522b\u4ee3\u8868\u4e00\u4e2a\u51fa\u5904": 489, "\u4f8b\u5982\u9884\u5370\u672c\u548c\u4f1a\u8bae": 489, "\u4e3a\u6b64": 489, "\u63a5\u7740\u4e0a\u4e00\u6b65": 489, "\u9996\u5148\u9700\u8981\u542f\u52a8\u5b66\u4e60\u5f15\u64ce\u5e76\u6784\u5efa\u4e00\u4e2a\u5177\u6709\u7279\u5f81\u7684\u6570\u636e\u56fe": 489, "\u7136\u540e\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u8bad\u7ec3\u8fc7\u7a0b\u5e76\u6267\u884c": 489, "train_gcn": 489, "\u6700\u540e": [489, 490, 493], "\u5f53\u6211\u4eec\u5b8c\u6210\u6240\u6709\u7684\u8ba1\u7b97\u8fc7\u7a0b\u540e": 489, "\u5173\u95ed\u5f53\u524d\u7684\u4f1a\u8bdd": 489, "\u8be5\u6b65\u9aa4\u4f1a\u544a\u77e5\u80cc\u540e\u7684": 489, "\u548c\u5f15\u64ce": 489, "\u91ca\u653e\u5f53\u524d\u6240\u6709\u7684\u8d44\u6e90": 489, "\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e00\u7cfb\u5217\u53ef\u4ee5\u5728\u56fe\u4e0a\u8fdb\u884c\u65b0\u589e": 490, "\u6295\u5f71\u7684\u65b9\u6cd5": 490, "\u4ee5\u53ca\u5982\u4f55\u5c06\u4e00\u4e2a\u590d\u6742\u7684\u56fe\u8f6c\u6362\u4e3a\u53ef\u4ee5\u9002\u914d\u666e\u901a\u7b97\u6cd5\u5e94\u7528\u7684\u65b9\u6cd5": 490, "\u6211\u4eec\u5c55\u793a\u5982\u4f55\u5c06\u7b97\u6cd5\u5f97\u5230\u7684\u7ed3\u679c\u52a0\u56de\u5230\u56fe\u4e2d\u53bb": 490, "\u5177\u4f53\u800c\u8a00": 490, "\u56fe": 490, "\u63d0\u4f9b\u4e86\u4e24\u4e2a\u589e\u52a0\u6807\u7b7e\u7684\u51fd\u6570": 490, "\u548c\u4e00\u4e2a\u6295\u5f71\u7684\u51fd\u6570": 490, "\u6211\u4eec\u5df2\u7ecf\u5728": 490, "\u4e00\u8282\u89c1\u5230\u8fc7": 490, "\u8fd9\u4e24\u4e2a\u51fd\u6570": 490, "\u5f53\u65f6\u6211\u4eec\u7528\u5b83\u6765\u6784\u5efa\u4e00\u5f20\u56fe": 490, "\u8fdb\u4e00\u6b65\u7684": 490, "\u5f53\u56fe\u6784\u5efa\u597d\u5e76\u8f7d\u5165\u4e86": 490, "\u4e2d\u4e4b\u540e": 490, "\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u7528\u5176\u589e\u52a0\u66f4\u591a\u7684\u6807\u7b7e": 490, "\u5f53\u7136\u8fd9\u4e00\u6b65\u5e76\u4e0d\u4f1a\u5728\u539f\u56fe\u4e0a\u4fee\u6539": 490, "\u800c\u662f\u4f1a\u8fd4\u56de\u57fa\u4e8e\u539f\u56fe\u4e4b\u4e0a": 490, "\u589e\u52a0\u4e86\u65b0\u7684\u6807\u7b7e\u7684\u65b0\u56fe": 490, "\u5c5e\u6027\u56fe\u4e3a\u4f8b": 490, "\u6211\u4eec\u73b0\u5728\u8f7d\u5165\u5176\u4e2d\u4e00\u90e8\u5206\u6807\u7b7e": 490, "\u4f5c\u4e3a\u63a5\u4e0b\u6765\u4e00\u7cfb\u5217\u8f6c\u6362\u64cd\u4f5c\u7684\u8d77\u59cb\u56fe": 490, "pathlib": 490, "\u5230\u8fd9\u91cc": 490, "\u6211\u4eec\u5df2\u7ecf\u8f7d\u5165\u4e86\u4e00\u5f20\u56fe": 490, "\u63a5\u4e0b\u6765\u6211\u4eec\u5728\u8fd9\u5f20\u56fe\u4e0a\u518d\u6dfb\u52a0\u51e0\u4e2a\u6807\u7b7e": 490, "graph1": 490, "graph2": 490, "\u53ef\u4ee5\u770b\u5230\u6bcf\u6b21": 490, "\u90fd\u4f1a\u4ea7\u751f\u4e00\u5f20\u65b0\u7684\u56fe": 490, "\u5728\u5e95\u5c42": 490, "\u4ed6\u4eec\u5171\u6709\u7684\u90e8\u5206\u4f1a\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58": 490, "\u6240\u4ee5\u5e76\u4e0d\u4f1a\u5c06\u539f\u56fe\u7684\u6570\u636e\u590d\u5236\u4e00\u4efd": 490, "\u5728\u67d0\u4e9b\u573a\u666f\u4e0b": 490, "\u6211\u4eec\u9700\u8981\u5c06\u4ece\u4e00\u5f20\u590d\u6742\u7684\u56fe\u63d0\u53d6\u51fa\u4e00\u4e2a\u5b50\u56fe": 490, "\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u501f\u52a9": 490, "\u6765\u5b8c\u6210": 490, "\u5305\u542b\u4e24\u4e2a\u53c2\u6570": 490, "\u5176\u503c\u4e3a\u4e00\u4e2a\u5b57\u5178": 490, "\u5b57\u5178\u7684\u952e\u662f\u6807\u7b7e\u540d": 490, "\u503c\u662f\u8981\u53d6\u7684\u5c5e\u6027\u7684\u5217\u8868": 490, "\u503c\u53ef\u4ee5\u4e3a": 490, "\u4ee3\u8868\u9009\u62e9\u6240\u6709\u7684\u5c5e\u6027": 490, "\u7684\u8fd4\u56de\u503c\u4e5f\u662f\u4e00\u4e2a\u5c5e\u6027\u56fe": 490, "\u5e76\u4e14\u53ef\u4ee5\u88ab\u8fdb\u4e00\u6b65": 490, "\u4ee5\u4e0b\u662f\u51e0\u4e2a\u4f8b\u5b50": 490, "\u5305\u542b\u4e00\u4e2a\u70b9\u6807\u7b7e": 490, "\u548c\u4e00\u4e2a\u8fb9\u6807\u7b7e": 490, "\u4ee5\u53ca\u6240\u9009\u62e9\u7684\u5c5e\u6027": 490, "sub_graph2": 490, "\u73b0\u5728\u70b9\u4e0a\u6ca1\u6709\u5c5e\u6027": 490, "\u8fb9\u4e0a\u6709\u4e00\u4e2a\u5c5e\u6027": 490, "\u5f53\u6267\u884c\u4e00\u4e2a\u4ec5\u53ef\u4ee5\u8dd1\u5728\u7b80\u5355\u56fe\u4e0a\u7684\u7b97\u6cd5\u65f6": 490, "\u5176\u4f1a\u9ed8\u8ba4\u5c06\u5176\u53c2\u6570\u4e2d\u7684\u5c5e\u6027\u56fe\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 490, "\u5982\u679c\u4e0d\u80fd\u8fdb\u884c\u8fd9\u79cd\u8f6c\u6362": 490, "\u5373\u591a\u4e8e\u4e00\u4e2a\u70b9\u6807\u7b7e\u548c\u4e00\u4e2a\u8fb9\u6807\u7b7e": 490, "\u6216\u591a\u4e8e\u4e00\u4e2a\u5c5e\u6027": 490, "\u90a3\u4e48\u5c31\u4f1a\u62a5\u9519": 490, "\u8f6c\u6362\u4e0d\u5408\u6cd5": 490, "\u591a\u4e8e\u4e00\u4e2a\u70b9": 490, "\u8fb9\u6807\u7b7e": 490, "\u591a\u4e8e\u4e00\u4e2a\u5c5e\u6027": 490, "\u4e0a\u4e00\u6b65\u7b97\u6cd5\u7684\u8fd0\u884c\u7ed3\u679c\u53ef\u4ee5\u88ab\u52a0\u5165\u4e00\u5f20\u56fe\u4e2d": 490, "\u4f5c\u4e3a\u70b9\u7684\u4e00\u4e2a\u5c5e\u6027": 490, "\u4e0d\u4ec5\u53ef\u4ee5\u52a0\u5165\u8fd0\u7b97\u7ed3\u679c\u5230\u76f4\u63a5\u88ab\u67e5\u8be2\u7684\u56fe\u4e0a": 490, "\u8fd8\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u67e5\u8be2\u7ed3\u679c\u52a0\u5230\u88ab": 490, "\u800c\u5f97\u5230\u88ab\u67e5\u8be2\u7684\u56fe\u4e0a": 490, "\u53ea\u8981\u88ab\u52a0\u5165\u5c5e\u6027\u7684\u70b9\u6807\u7b7e\u76f8\u540c": 490, "\u662f\u963f\u91cc\u5df4\u5df4\u8fbe\u6469\u9662\u667a\u80fd\u8ba1\u7b97\u5b9e\u9a8c\u5ba4\u7814\u53d1\u5e76\u5f00\u6e90\u7684\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u5e73\u53f0": 491, "\u4f9d\u6258\u4e8e\u963f\u91cc\u6d77\u91cf\u6570\u636e\u548c\u4e30\u5bcc\u573a\u666f": 491, "\u4e0e\u8fbe\u6469\u9662\u7684\u9ad8\u6c34\u5e73\u7814\u7a76": 491, "\u81f4\u529b\u4e8e\u9488\u5bf9\u5b9e\u9645\u751f\u4ea7\u573a\u666f\u4e2d\u56fe\u8ba1\u7b97\u7684\u6311\u6218": 491, "\u63d0\u4f9b\u4e00\u7ad9\u5f0f\u9ad8\u6548\u7684\u89e3\u51b3\u65b9\u6848": 491, "\u63d0\u4f9b\u4e86": 491, "\u80fd\u5341\u5206\u65b9\u4fbf\u7684\u5bf9\u63a5\u4e0a\u4e0b\u6e38\u5de5\u4f5c\u6d41": 491, "\u5177\u6709\u4e00\u7ad9\u5f0f": 491, "\u5f00\u53d1\u4fbf\u6377": 491, "\u6027\u80fd\u6781\u81f4\u7b49\u7279\u70b9": 491, "\u5b83\u6574\u5408\u4e86\u667a\u80fd\u8ba1\u7b97\u5b9e\u9a8c\u5ba4\u591a\u4e2a\u91cd\u8981\u7684\u521b\u65b0\u6027\u6280\u672f": 491, "\u5305\u62ec": [491, 494], "\u652f\u6301\u4e86\u56fe\u5206\u6790": 491, "\u56fe\u7684\u4ea4\u4e92\u5f0f\u67e5\u8be2\u548c\u56fe\u5b66\u4e60": 491, "\u5176\u4e2d\u6838\u5fc3\u4f18\u52bf\u5305\u62ec\u5728\u4e1a\u754c\u9996\u6b21\u652f\u6301\u4e86": 491, "\u5206\u5e03\u5f0f\u7f16\u8bd1\u4f18\u5316": 491, "\u652f\u6301\u4e86\u7b97\u6cd5\u7684\u81ea\u52a8\u5e76\u884c\u5316": 491, "\u63d0\u4f9b\u4e86\u4f01\u4e1a\u7ea7\u573a\u666f\u4e0b\u7684\u6781\u81f4\u6027\u80fd\u7b49": 491, "\u5728\u963f\u91cc\u5df4\u5df4\u5185\u5916\u90e8\u5e94\u7528\u4e2d": 491, "\u5df2\u7ecf\u8bc1\u660e\u5728\u591a\u4e2a\u5173\u952e\u4e92\u8054\u7f51\u9886\u57df": 491, "\u5982\u98ce\u63a7": 491, "\u7535\u5546\u63a8\u8350": 491, "\u5e7f\u544a": 491, "\u7f51\u7edc\u5b89\u5168": [491, 494], "\u77e5\u8bc6\u56fe\u8c31\u7b49": 491, "\u5b9e\u73b0\u4e86\u91cd\u8981\u7684\u4e1a\u52a1\u65b0\u4ef7\u503c": 491, "\u6574\u5408\u4e86\u8fbe\u6469\u9662\u7684\u591a\u9879\u5b66\u672f\u7814\u7a76\u6210\u679c": 491, "\u5176\u4e2d\u7684\u6838\u5fc3\u6280\u672f\u66fe\u83b7\u5f97\u6570\u636e\u5e93\u9886\u57df\u9876\u7ea7\u5b66\u672f\u4f1a\u8bae": 491, "\u6700\u4f73\u8bba\u6587\u5956": 491, "vldb2017": 491, "\u6700\u4f73\u6f14\u793a\u5956": 491, "vldb2020": 491, "\u6700\u4f73\u8bba\u6587\u5956\u4e9a\u519b": 491, "\u4e16\u754c\u4eba\u5de5\u667a\u80fd\u521b\u65b0\u5927\u8d5bsail\u5956\u7b49": 491, "\u7684\u4ea4\u4e92\u67e5\u8be2\u5f15\u64ce\u7684\u8bba\u6587\u5df2\u88ab": 491, "2021\u5f55\u7528": 491, "\u8fd8\u6709\u5176\u5b83\u56f4\u7ed5": 491, "\u7684\u5341\u591a\u9879\u7814\u7a76\u6210\u679c\u53d1\u8868\u5728\u9886\u57df\u9876\u7ea7\u7684\u5b66\u672f\u4f1a\u8bae\u6216\u671f\u520a\u4e0a": 491, "kdd\u7b49": 491, "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": 491, "\u57fa\u4e8e": [491, 496], "\u793a\u4f8b": 491, "\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 491, "\u521b\u5efa\u4f1a\u8bdd": 491, "\u4ea4\u4e92\u5f0f\u67e5\u8be2": 491, "\u56fe\u5206\u6790": 491, "\u56fe\u795e\u7ecf\u7f51\u7edc": 491, "\u5173\u95ed\u4f1a\u8bdd": 491, "\u4f7f\u7528helm\u90e8\u7f72graphscop": 491, "\u5728aw": 491, "\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": 491, "\u672c\u5730\u90e8\u7f72graphscop": 491, "\u5165\u95e8\u6559\u7a0b": 491, "\u8bba\u6587\u5f15\u7528\u5173\u7cfb\u7f51\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [491, 496], "\u4f7f\u7528\u517c\u5bb9": [491, 496], "\u8fdb\u884c\u56fe\u64cd\u4f5c": [491, 496], "\u7528": [491, 493, 496], "\u50cf": [491, 496], "\u4e00\u6837\u8fdb\u884c\u56fe\u5206\u6790": [491, 496], "\u8f7d\u5165\u56fe\u6570\u636e": [491, 496], "\u5185\u7f6e\u7684\u56fe\u5206\u6790\u7b97\u6cd5": [491, 496], "\u7f16\u5199\u81ea\u5b9a\u4e49\u56fe\u5206\u6790\u7b97\u6cd5": [491, 496], "\u4f7f\u7528\u67e5\u8be2\u8bed\u8a00": [491, 496], "\u8fdb\u884c\u4ea4\u4e92\u5f0f\u67e5\u8be2": [491, 496], "\u8fdb\u884c\u65e0\u76d1\u7763\u56fe\u5b66\u4e60": [491, 496], "bipartitegraphsag": [491, 496], "\u7684\u4e8c\u90e8\u56fe\u65e0\u76d1\u7763\u5b66\u4e60": [491, 496], "\u8fdb\u884c\u6709\u76d1\u7763\u56fe\u5b66\u4e60": [491, 496], "\u73af\u5883\u518d\u63a2\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [491, 496], "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": 491, "\u624b\u52a8\u914d\u7f6e\u56fe": 491, "\u9ad8\u7ea7\u7528\u6cd5": 491, "\u4ece": [491, 493], "\u4e2d\u8f7d\u56fe": 491, "\u7684\u53d8\u79cd": 491, "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": 491, "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": 491, "\u6295\u5f71": 491, "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 491, "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": 491, "\u5185\u7f6e\u7b97\u6cd5": 491, "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": 491, "\u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": 491, "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528": 491, "\u4e2d\u7684\u51fd\u6570": 491, "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": 491, "\u8fd0\u884cjava\u7f16\u5199\u7684\u7b97\u6cd5": 491, "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": 491, "\u5229\u7528python": 491, "\u8fde\u63a5graphscop": 491, "\u5229\u7528java": 491, "\u5f00\u53d1\u63a7\u5236\u53f0": 491, "gremlin\u7f16\u7a0b\u5165\u95e8": 491, "gremlin\u517c\u5bb9\u6027": 491, "\u5bf9\u6bd4tinkerpop": 491, "\u56fe\u5b66\u4e60\u6a21\u578b": 491, "\u81ea\u5b9a\u4e49\u7b97\u6cd5": 491, "\u5e38\u89c1\u95ee\u9898": 491, "\u5f00\u53d1\u8005\u6307\u5357": 491, "\u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5": 491, "\u6784\u5efa": 491, "\u4ee3\u7801\u98ce\u683c": 491, "\u76ee\u524d\u652f\u6301\u7684\u5e73\u53f0\u5982\u4e0b": 492, "monterei": 492, "\u7a0b\u5e8f\u5305": 492, "\u7684\u5f62\u5f0f\u53d1\u5e03": 492, "\u53ef\u76f4\u63a5\u901a\u8fc7": 492, "\u9700\u8981\u6ee1\u8db3": 492, "\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u672c\u6587\u6863\u7684\u4ee5\u4e0b\u6b65\u9aa4\u90e8\u7f72\u4e00\u4e2a\u672c\u5730": 492, "\u5e76\u52a0\u8f7d\u9884\u7f16\u8bd1\u597d\u7684\u955c\u50cf": 492, "\u73af\u5883\u4e0b\u8fd0\u884c": 492, "\u9996\u5148\u9700\u8981\u9884\u5148\u5b89\u88c5\u4ee5\u4e0b\u4f9d\u8d56": 492, "\u7684\u7528\u6237": 492, "\u53ef\u901a\u8fc7\u5b98\u65b9\u6587\u6863\u6765\u5b89\u88c5\u4e0a\u8ff0\u4f9d\u8d56": 492, "\u5e76\u5728": 492, "\u4e2d\u5f00\u542f": 492, "\u529f\u80fd": 492, "\u53d1\u884c\u7248\u7528\u6237": 492, "\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528": 492, "\u90e8\u7f72\u4e00\u4e2a\u672c\u5730\u7684": 492, "\u7684\u5b89\u88c5\u548c\u90e8\u7f72\u53ef\u4ee5\u53c2\u8003\u5b98\u7f51\u7684": 492, "\u60a8\u4e5f\u53ef\u4ee5\u5728": 492, "\u4e0a\u5b89\u88c5": 492, "wsl2": 492, "\u6765\u6a21\u62df": 492, "\u73af\u5883": [492, 496], "\u63a5\u4e0b\u6765": [492, 493, 494], "\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7": 492, "graphscope\u7684\u4ea4\u4e92\u67e5\u8be2\u5f15\u64ce": 493, "\u7b80\u79f0gie": 493, "\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf": 493, "\u5b83\u4e3a\u4e0d\u540c\u7ecf\u9a8c\u7684\u7528\u6237\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6613\u7528\u7684\u4ea4\u4e92\u5f0f\u73af\u5883": 493, "\u652f\u6301\u6d77\u91cf\u590d\u6742\u56fe\u6570\u636e\u4e0a\u7684": 493, "\u5b9e\u65f6\u5206\u6790\u4e0e\u4ea4\u4e92\u63a2\u7d22": 493, "\u8be5\u5f15\u64ce\u652f\u6301": 493, "\u8bed\u8a00\u8868\u8fbe\u7684\u4ea4\u4e92\u56fe\u67e5\u8be2": 493, "\u5e76\u63d0\u4f9b\u4e86\u81ea\u52a8\u5316\u548c\u7528\u6237\u900f\u660e\u7684\u5206\u5e03\u5f0f\u5e76\u884c\u6267\u884c": 493, "\u662f\u57fa\u4e8egremlin\u8bed\u8a00\u5f00\u53d1\u4ea4\u4e92\u5f0f\u56fe\u5e94\u7528\u7684\u4e00\u4e2a\u5f00\u6e90\u6846\u67b6\u548c\u4e8b\u5b9e\u6807\u51c6": 493, "gie\u901a\u8fc7tinkerpop\u63d0\u4f9b\u7684": 493, "\u63a5\u53e3": [493, 494], "\u5b9e\u73b0\u4e86\u4e0etinkerpop\u751f\u6001\u65e0\u7f1d\u96c6\u6210": 493, "\u4ece\u800c\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528\u8bf8\u5982": 493, "\u7684\u5f00\u53d1\u5de5\u5177\u6216\u901a\u8fc7java\u548cpython\u7b49\u591a\u79cd\u8bed\u8a00\u63a5\u53e3\u7f16\u5199\u5e94\u7528\u903b\u8f91": 493, "\u5982\u4e0b\u6240\u793a": 493, "\u7528\u6237\u53ef\u4ee5\u5f88\u7b80\u5355\u7684\u901a\u8fc7python\u8fde\u4e0a\u4e00\u4e2a\u8f7d\u5165graphscope\u7cfb\u7edf\u7684\u56fe\u5e76\u53d1\u8d77gremlin\u67e5\u8be2": 493, "\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4ea4\u4e92\u4f1a\u8bdd": 493, "\u8f7d\u5165ldbc\u793a\u4f8b\u56fe\u6570\u636e": 493, "\u968f\u540e\u8fd4\u56de\u4e00\u4e2agremlin\u67e5\u8be2\u63d0\u4ea4\u5165\u53e3": 493, "\u4e0b\u9762\u4e24\u53e5gremlin\u793a\u4f8b\u67e5\u8be2\u5206\u522b\u8ba1\u7b97\u56fe\u4e2d\u9876\u70b9\u548c\u8fb9\u7684\u603b\u6570": 493, "\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684": 493, "\u5bf9\u8c61\u4e8b\u5b9e\u4e0a\u662fpython\u7c7b": 493, "\u7684\u4e00\u4e2a\u5b9e\u4f8b": 493, "\u800c\u8fd9\u4e00\u7c7b\u5c01\u88c5\u4e86\u7528python\u5b9e\u73b0\u7684\u5b8c\u6574gremlin\u5ba2\u6237\u7aef\u7c7b\u5e93": 493, "\u6bcf\u4e00\u4e2a\u8f7d\u5165graphscope\u7684\u56fe\u90fd\u5305\u542b\u4e00\u4e2agremlin\u67e5\u8be2\u63d0\u4ea4\u5165\u53e3": 493, "\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u6837\u83b7\u5f97\u5177\u4f53\u7684\u8bbf\u95ee\u5730\u5740": 493, "\u4e0a\u9762\u7684\u8bed\u53e5\u4f1a\u4ea7\u751f\u5982\u4e0b": 493, "\u683c\u5f0f": 493, "\u7684\u8f93\u51fa": 493, "\u6709\u4e86\u8fd9\u4e00url\u4fe1\u606f": 493, "\u7528\u6237\u4e5f\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528gremlin": 493, "python\u8bbf\u95ee\u56fe\u6570\u636e": 493, "\u5177\u4f53\u53ef\u4ee5\u53c2\u8003": 493, "\u5b98\u65b9\u6587\u6863": 493, "tinkerpop\u540c\u65f6\u652f\u6301java\u8bed\u8a00\u6309\u7c7b\u4f3c\u65b9\u5f0f\u8bbf\u95ee": 493, "\u8be6\u89c1gremlin": 493, "java\u7684": 493, "\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0egraphscope\u5b58\u50a8\u7684\u56fe\u6570\u636e\u8fdb\u884c\u4ea4\u4e92\u7684\u63a7\u5236\u53f0": 493, "\u4e5f\u53eb\u505arepl\u73af\u5883": 493, "\u4e0b\u9762\u63cf\u8ff0\u5982\u4f55\u5229\u7528\u4e0a\u6587\u83b7\u5f97\u7684url": 493, "\u5b89\u88c5\u548c\u914d\u7f6egremlin": 493, "console\u4ee5\u8fde\u63a5graphscope\u7684\u6b65\u9aa4": 493, "\u5b89\u88c5gremlin": 493, "console\u4f9d\u8d56\u7684java\u8fd0\u884c\u65f6\u73af\u5883": 493, "\u7248\u672c\u9700\u8981\u6ee1\u8db3": 493, "\u4e0b\u8f7d\u9002\u5f53\u7248\u672c\u7684gremlin": 493, "\u89e3\u538b\u7f29\u4e0b\u8f7d\u7684\u6587\u4ef6": 493, "\u8fdb\u5165\u89e3\u538b\u7f29\u7684\u76ee\u5f55": 493, "\u5b50\u76ee\u5f55\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a": 493, "\u7684\u6587\u672c\u6587\u4ef6\u4ee5\u914d\u7f6eurl": 493, "\u5177\u4f53\u5185\u5bb9\u5982\u4e0b\u6240\u793a": 493, "\u5176\u4e2d\u7684": 493, "\u9700\u8981\u5206\u522b\u66ff\u6362\u4e3a\u4ecegraphscope\u4f1a\u8bdd\u5f97\u5230\u7684url\u4e2d\u5bf9\u5e94\u7684\u4e3b\u673a\u540d": 493, "\u6216ip": 493, "\u548c\u7aef\u53e3": 493, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u542f\u52a8gremlin": 493, "\u63d0\u793a\u7b26\u4e0b": 493, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u8fde\u63a5\u5230\u5bf9\u5e94\u7684graphscope\u4f1a\u8bdd": 493, "\u7b2c\u4e8c\u6761\u547d\u4ee4\u5207\u6362\u5230\u8fdc\u7a0b\u6a21\u5f0f": 493, "\u4ece\u800c\u63a5\u4e0b\u6765\u8f93\u5165\u7684\u6240\u6709gremlin\u67e5\u8be2\u90fd\u88ab\u81ea\u52a8\u4f20\u8f93\u5230": 493, "\u8fdc\u7a0b": 493, "graphscope\u6267\u884c": 493, "\u73b0\u5728\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e9b\u7b80\u5355\u7684gremlin\u67e5\u8be2\u4e86": 493, "\u5f53\u4f60\u5b8c\u6210\u4ea4\u4e92": 493, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u53ef\u4ee5\u9000\u51fagremlin": 493, "gie\u4ee5\u5fe0\u5b9e\u4fdd\u7559gremlin\u7f16\u7a0b\u6a21\u578b\u4e3a\u8bbe\u8ba1\u76ee\u6807": 493, "\u4ece\u800c\u8ba9\u5df2\u6709\u7684\u5e94\u7528\u53ea\u9700\u6700\u5c0f\u5316\u7684\u4fee\u6539\u5c31\u53ef\u4ee5\u6269\u5c55\u5230\u5927\u89c4\u6a21\u8ba1\u7b97\u96c6\u7fa4": 493, "\u5728\u6b64\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2agremlin\u7684\u603b\u4f53\u4ecb\u7ecd": 493, "\u7279\u522b\u662f\u5176\u4e2d\u5305\u542b\u7684\u56fe\u6570\u636e\u6a21\u578b\u548c\u67e5\u8be2\u8bed\u8a00\u7b49\u5173\u952e\u6982\u5ff5": 493, "\u66f4\u8be6\u7ec6\u548c\u5b8c\u6574\u7684\u4ecb\u7ecd": 493, "gremlin\u5141\u8bb8\u7528\u6237\u5728\u5c5e\u6027\u56fe\u6a21\u578b\u4e0a\u5b9a\u4e49\u7279\u8bbe": 493, "hoc": 493, "\u904d\u5386\u67e5\u8be2": 493, "\u4e00\u4e2a\u5c5e\u6027\u56fe\u662f\u4e00\u4e2a\u6709\u5411\u56fe": 493, "\u5176\u4e2d\u7684\u9876\u70b9\u548c\u8fb9\u53ef\u4ee5\u62e5\u6709\u4e00\u7ec4\u5c5e\u6027": 493, "\u56fe\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61": 493, "\u70b9\u6216\u8fb9": 493, "\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6": 493, "\u548c\u4e00\u4e2a\u7c7b\u522b\u540d\u79f0": 493, "\u6307\u5b9a\u5176\u7c7b\u578b\u6216\u89d2\u8272": 493, "\u6bcf\u4e2a\u5c5e\u6027\u662f\u4e00\u4e2a\u5305\u542b\u5c5e\u6027\u540d\u548c\u5c5e\u6027\u503c\u7684": 493, "\u952e": 493, "\u503c": 493, "\u5bf9": 493, "\u5176\u6240\u5c5e\u5bf9\u8c61\u7684": 493, "\u52a0\u4e0a\u5c5e\u6027\u540d\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u5c5e\u6027\u503c": 493, "\u4e0a\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u5c5e\u6027\u56fe\u6a21\u578b\u793a\u4f8b": 493, "\u5b83\u5305\u542b": 493, "\u7528\u6237": 493, "\u5546\u54c1": 493, "\u5730\u5740": 493, "\u4e09\u7c7b\u70b9": 493, "\u5b83\u4eec\u901a\u8fc7": 493, "\u8d2d\u4e70": 493, "\u9012\u9001": 493, "belongs_to": 493, "\u5c5e\u4e8e": 493, "home_of": 493, "\u5bb6\u5ead\u5730\u5740": 493, "\u56db\u7c7b\u8fb9\u76f8\u4e92\u5173\u8054": 493, "\u56fe\u4e2d\u865a\u7ebf\u5c55\u793a\u7684\u4e00\u6761": 493, "\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684": 493, "\u8def\u5f841": 493, "\u4ee3\u8868\u4e86\u4e00\u4e2a\u7528\u6237": 493, "\u4e70\u5bb6": 493, "tom": 493, "\u8d2d\u4e70\u4e86\u4e00\u4e2a\u5356\u5bb6": 493, "jack": 493, "\u63d0\u4f9b\u7684\u6807\u4ef7": 493, "\u7684\u5546\u54c1": 493, "gift": 493, "\u4e00\u4e2agremlin\u67e5\u8be2\u6216\u56fe\u904d\u5386\u7684\u6267\u884c": 493, "\u53ef\u4ee5\u7528\u4e00\u7ec4": 493, "\u904d\u5386\u5668": 493, "\u6807\u8bc6": 493, "\u5b83\u4eec\u4f9d\u636egremlin\u67e5\u8be2\u63d0\u4f9b\u7684\u7528\u6237\u6307\u4ee4\u5728\u8f93\u5165\u56fe\u4e2d\u6e38\u8d70": 493, "\u6700\u7ec8\u6240\u6709\u505c\u6b62\u7684\u904d\u5386\u5668\u96c6\u5408": 493, "\u5305\u542b\u5b83\u4eec\u7684\u4f4d\u7f6e": 493, "\u4ee3\u8868\u4e86\u67e5\u8be2\u7684\u7ed3\u679c": 493, "\u4e00\u4e2a\u904d\u5386\u5668\u662fgremlin\u5f15\u64ce\u5904\u7406\u7684\u6700\u5c0f\u6570\u636e\u5355\u5143": 493, "\u6bcf\u4e2a\u904d\u5386\u5668\u90fd\u7ef4\u62a4\u5b83\u5bf9\u5e94\u7684\u56fe\u4e2d\u7684\u5f53\u524d\u4f4d\u7f6e": 493, "\u53ef\u4ee5\u662f\u88ab\u8bbf\u95ee\u7684\u70b9": 493, "\u8fb9\u6216\u5c5e\u6027": 493, "\u53ef\u9009\u7684\u5b83\u4e5f\u53ef\u4ee5\u5305\u542b\u8d70\u8fc7\u7684\u5b8c\u6574\u8def\u5f84\u5386\u53f2\u751a\u81f3\u5e94\u7528\u72b6\u6001": 493, "gremlin\u8bed\u8a00\u4e30\u5bcc\u7075\u6d3b\u7684\u8868\u8fbe\u80fd\u529b\u4e3b\u8981\u6765\u81ea\u4e8e\u5b83\u5bf9": 493, "\u5d4c\u5957\u904d\u5386": 493, "\u7684\u652f\u6301": 493, "\u5b83\u5141\u8bb8\u4e00\u4e2a": 493, "\u5b50": 493, "\u67e5\u8be2\u6216\u904d\u5386\u88ab\u5305\u542b\u5728\u53e6\u4e00\u4e2a\u64cd\u4f5c\u4e2d": 493, "\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u8c03\u7528\u7684\u51fd\u6570\u88ab\u5305\u88f9\u64cd\u4f5c\u7528\u4e8e\u5904\u7406\u5176\u6bcf\u4e00\u4e2a\u8f93\u5165": 493, "\u51fd\u6570\u7684\u58f0\u660e\u548c\u4f5c\u7528\u90fd\u7531\u5305\u88f9\u64cd\u4f5c\u7684\u8bed\u4e49\u51b3\u5b9a": 493, "\u8fc7\u6ee4": 493, "\u64cd\u4f5c\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u5d4c\u5957\u67e5\u8be2": 493, "\u4f5c\u4e3a\u8fc7\u6ee4\u6761\u4ef6\u8c13\u8bcd": 493, "\u800c": 493, "\u6620\u5c04": 493, "\u6392\u5e8f": 493, "\u64cd\u4f5c\u5404\u81ea\u53ef\u4ee5\u901a\u8fc7\u5d4c\u5957\u67e5\u8be2\u8bb2\u6bcf\u4e00\u4e2a\u8f93\u5165\u5355\u72ec\u6620\u5c04\u5230\u4ece\u5b83\u5f00\u59cb\u7684\u5b50\u904d\u5386\u5f97\u5230\u7684\u7ed3\u679c": 493, "\u6216\u4f9d\u636e\u7ed3\u679c\u503c\u4f5c\u4e3a\u6392\u5e8f\u4f9d\u636e": 493, "\u5d4c\u5957\u904d\u5386\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u5e94\u7528\u662f\u8868\u8fbe\u5faa\u73af": 493, "\u5728gremlin\u4e2d\u901a\u8fc7": 493, "\u5faa\u73af": 493, "\u64cd\u4f5c\u548c\u968f\u540e\u7684": 493, "\u7ec8\u6b62\u6761\u4ef6": 493, "\u8868\u8fbe": 493, "\u64cd\u4f5c\u5305\u542b\u4e00\u4e2a\u5d4c\u5957\u904d\u5386\u4f5c\u4e3a\u5faa\u73af\u4f53": 493, "\u6bcf\u4e00\u4e2a\u8f93\u5165\u90fd\u4f1a\u91cd\u590d\u9001\u5165\u8fd9\u4e00\u5b50\u67e5\u8be2": 493, "\u76f4\u5230\u7ec8\u6b62\u6761\u4ef6\u6ee1\u8db3": 493, "\u6761\u4ef6\u7ec8\u6b62": 493, "\u64cd\u4f5c\u7c7b\u4f3c": 493, "\u53ef\u4ee5\u8868\u8fbe\u4e00\u4e2a\u6761\u4ef6\u8c13\u8bcd": 493, "\u5b83\u88ab\u72ec\u7acb\u5e94\u7528\u4e8e\u5faa\u73af\u4f53\u7684\u6bcf\u4e00\u4e2a\u8f93\u51fa\u904d\u5386\u5668": 493, "\u6ee1\u8db3\u6761\u4ef6\u7684\u904d\u5386\u5668\u5c31\u4f1a\u79bb\u5f00\u5faa\u73af": 493, "\u53e6\u4e00\u4e2a\u5e38\u7528\u7684": 493, "\u8fed\u4ee3\u8f6e\u6b21\u7ec8\u6b62": 493, "\u64cd\u4f5c\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u6574\u578b\u5e38\u91cf": 493, "\u8868\u8fbe\u56fa\u5b9a\u8fed\u4ee3\u8f6e\u6b21\u540e\u7ec8\u6b62\u5faa\u73af": 493, "\u4e0b\u9762\u5c55\u793a\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684gremlin\u793a\u4f8b": 493, "\u5b83\u5c1d\u8bd5\u4ece\u4e00\u4e2a\u7ed9\u5b9a\u8d26\u6237": 493, "\u70b9\u5f00\u59cb\u627e\u5230\u957f\u5ea6\u4e3a": 493, "\u7684\u6709\u5411\u73af\u8def": 493, "\u9996\u5148": [493, 495], "\u8f93\u5165\u56fe\u64cd\u4f5c": 493, "\u5305\u542b\u4e00\u4e2a": 493, "\u8868\u8fbe\u7684\u7b80\u5355\u8fc7\u6ee4": 493, "\u8fd4\u56de\u56fe\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684": 493, "\u70b9": 493, "\u5373\u552f\u4e00\u6807\u8bc6\u4e3a": 493, "\u7684\u70b9": 493, "\u7d27\u968f\u5176\u540e\u7684": 493, "\u64cd\u4f5c\u662f\u4e00\u4e2a": 493, "\u4fee\u9970\u7b26": 493, "\u5b83\u4e0d\u6539\u53d8\u8f93\u5165\u904d\u5386\u5668\u96c6\u5408": 493, "\u4f46\u5bf9\u5176\u4e2d\u6bcf\u4e00\u4e2a\u904d\u5386\u5668\u7684\u5f53\u524d\u4f4d\u7f6e": 493, "\u6253\u4e0a\u4e00\u4e2a\u6709\u540d\u6807\u7b7e": 493, "\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u7684": 493, "\u4ece\u800c\u4eca\u540e\u53ef\u4ee5\u5f15\u7528": 493, "\u67e5\u8be2\u6cbf\u7740": 493, "\u7c7b\u578b\u7684\u51fa\u8fb9\u5faa\u73af\u6e38\u8d70": 493, "\u6b21": 493, "\u8f93\u51fahops\u5728": 493, "\u8303\u56f4\u5185\u7684\u90bb\u70b9": 493, "\u4e14\u6bcf\u4e00\u6b21\u90fd\u8fc7\u6ee4\u6216\u8df3\u8fc7\u8def\u5f84\u4e2d\u7684\u91cd\u590d\u70b9": 493, "\u901a\u8fc7\u5728": 493, "\u5185\u914d\u7f6e": 493, "\u9009\u9879\u5b9e\u73b0": 493, "\u64cd\u4f5c\u68c0\u67e5\u6b64\u65f6\u904d\u5386\u8def\u5f84\u7684\u4e0b\u4e00\u8df3\u662f\u5426\u53ef\u4ee5\u56de\u5230\u8d77\u70b9": 493, "\u6307\u4ee3": 493, "\u4ece\u800c\u5f62\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a": 493, "\u7684\u73af": 493, "\u5bf9\u4e8e\u68c0\u6d4b\u5230\u7684\u73af": 493, "\u67e5\u8be2\u8fd8\u901a\u8fc7": 493, "\u64cd\u4f5c\u5c55\u793a\u6bcf\u4e2a\u904d\u5386\u5668\u7684\u5b8c\u6210\u8def\u5f84\u4fe1\u606f": 493, "\u64cd\u4f5c\u7c7b\u4f3csql\u4e2d\u7684top": 493, "\u5b83\u8868\u8fbe\u4e86\u67e5\u8be2\u7ed3\u679c\u4ec5\u9700\u8981\u5305\u542b\u4e00\u4e2a\u8fd9\u6837\u7684\u8def\u5f84": 493, "\u5982\u679c\u6709\u7684\u8bdd": 493, "gie\u652f\u6301apach": 493, "tinkerpop\u5b9a\u4e49\u7684\u5c5e\u6027\u56fe\u6a21\u578b\u548cgremlin\u904d\u5386\u67e5\u8be2": 493, "\u4e14\u5b9e\u73b0\u4e86\u4e00\u4e2a\u4e0etinkerpop": 493, "3\u548c3": 493, "4\u7248\u672c\u517c\u5bb9\u7684": 493, "\u670d\u52a1\u63a5\u53e3": 493, "\u9664\u6b64\u4e4b\u5916": 493, "\u6211\u4eec\u6269\u5c55\u4e86\u4e00\u4e9b\u8bed\u6cd5\u7cd6\u6765\u8fdb\u4e00\u6b65\u5f15\u5165\u4e00\u4e9b\u7b80\u6d01\u660e\u4e86\u7684expression\u8868\u793a": 493, "\u4e0b\u9762\u6211\u4eec\u5217\u51fa\u5f53\u524d\u5b9e\u73b0\u548capach": 493, "tinkerpop\u89c4\u8303\u7684\u4e3b\u8981\u5dee\u4e00\u70b9": 493, "\u5176\u4e2d\u4e00\u4e9b\u5dee\u5f02\u4f1a\u6709\u673a\u4f1a\u6d88\u9664": 493, "\u53e6\u4e00\u4e9b\u662f\u76ee\u524dgraphscope\u5b9a\u4f4d\u7684\u573a\u666f\u5dee\u5f02\u9020\u6210\u7684\u4e0d\u540c\u8bbe\u8ba1\u9009\u62e9": 493, "\u76ee\u524d\u7684": 493, "\u6280\u672f\u9884\u89c8\u7248\u5229\u7528\u4e86": 493, "\u9879\u76ee\u63d0\u4f9b\u7684\u5206\u5e03\u5f0f\u5185\u5b58\u5b58\u50a8\u4f5c\u4e3a\u8f93\u5165\u56fe": 493, "\u5b83\u652f\u6301\u4e00\u6b21\u8f7d\u5165": 493, "\u4e0d\u53ef\u4fee\u6539": 493, "\u7684\u56fe\u6a21\u578b\u6570\u636e": 493, "\u548c\u56fe\u5206\u7247\u5b58\u50a8\u5728\u5206\u5e03\u5f0f\u96c6\u7fa4": 493, "\u5f53\u524d\u8bbe\u8ba1\u6709\u4e0b\u9762\u7684\u4e00\u4e9b\u9650\u5236": 493, "\u7ea6\u675f": 493, "\u6bcf\u4e2a\u56fe\u7684\u6570\u636e\u9700\u8981\u6ee1\u8db3\u4e8b\u5148\u5b9a\u4e49\u7684schema": 493, "\u5305\u62ec\u70b9": 493, "\u8fb9\u7684\u7c7b\u578b\u540d\u79f0": 493, "\u548c\u5c5e\u6027\u540d\u53ca\u503c\u7c7b\u578b": 493, "\u4e3b\u952e\u7ea6\u675f": 493, "\u6bcf\u4e2a\u9876\u70b9\u7c7b\u578b\u9700\u8981\u5305\u542b\u4e00\u4e2a\u7528\u6237\u53ef\u81ea\u5b9a\u4e49\u7684\u4e3b\u952e": 493, "\u540c\u65f6\u7cfb\u7edf\u4f1a\u4e3a\u6bcf\u4e2a\u70b9\u548c\u8fb9\u5bf9\u8c61": 493, "\u81ea\u52a8\u5206\u914d\u4ea7\u751f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u552f\u4e00\u6807\u8bc6": 493, "\u5bf9\u4e8e\u70b9\u6765\u8bf4": 493, "id\u7f16\u7801\u4e86\u7c7b\u578b": 493, "\u548c\u7528\u6237\u81ea\u5b9a\u4e49\u4e3b\u952e\u4fe1\u606f": 493, "\u6bcf\u4e2a\u70b9\u6216\u8fb9\u7684\u5c5e\u6027": 493, "\u53ef\u4ee5\u5305\u542b\u4e0b\u5217\u7c7b\u578b\u7684\u5c5e\u6027\u503c": 493, "\u56e0\u4e3a\u7cfb\u7edf\u7684\u5168\u5206\u5e03\u5f0f\u53ef\u6269\u5c55\u67b6\u6784": 493, "\u5f53\u524d\u5b9a\u4f4d\u7684\u573a\u666f\u548c\u5b9e\u73b0\u4e0d\u652f\u6301\u4e0b\u5217\u529f\u80fd": 493, "\u56fe\u4fee\u6539\u64cd\u4f5c": 493, "lambda\u548cgroovy\u8868\u8fbe\u5f0f\u6216\u81ea\u5b9a\u4e49\u51fd\u6570": 493, "\u7b49\u8868\u8fbe\u5f0f\u6216java\u8c03\u7528\u7b49\u7b49": 493, "\u5b9a\u5236gremlin\u56fe\u904d\u5386\u7b56\u7565": 493, "\u5373\u67e5\u8be2\u4f18\u5316\u7531graphscope\u7cfb\u7edf\u81ea\u52a8\u5b8c\u6210": 493, "\u4e8b\u52a1": 493, "\u4e8c\u7ea7\u7d22\u5f15\u76ee\u524d\u5c1a\u672a\u652f\u6301": 493, "\u7528\u6237\u5b9a\u4e49\u7684\u4e3b\u952e\u4f1a\u88ab\u81ea\u52a8\u7d22\u5f15": 493, "\u5f53\u524dgraphscope\u652f\u6301\u4e0b\u5217gremlin\u64cd\u4f5c": 493, "\u548c\u793a\u4f8b\u7528\u6cd5": 493, "\u8f93\u5165\u56fe": 493, "labelnam": 493, "labelname1": 493, "labelname2": 493, "\u901a\u8fc7expression\u5b9e\u73b0\u8fc7\u6ee4": 493, "\u8bed\u6cd5\u7cd6": 493, "\u4ee3\u8868head\u8282\u70b9\u7684age\u5c5e\u6027": 493, "\u4ee3\u8868": 493, "\u8282\u70b9\u7684age\u5c5e\u6027": 493, "head\u8282\u70b9\u7684a\u5c5e\u6027\u662f\u6574\u6570\u6570\u7ec4\u7c7b\u578b": 493, "\u901a\u8fc7expression\u5b9e\u73b0\u4f4d\u8fd0\u7b97": 493, "head\u8282\u70b9\u7684number\u5c5e\u6027\u662f\u6574\u578b": 493, "\u901a\u8fc7expression\u5b9e\u73b0\u7b97\u6570\u8fd0\u7b97": 493, "head\u8282\u70b9\u7684number\u548cage\u5c5e\u6027\u90fd\u662f\u6574\u578b": 493, "\u901a\u8fc7expression\u5b9e\u73b0\u6307\u6570\u8fd0\u7b97": 493, "dedup": 493, "aaa": 493, "otherv": 493, "flatmap": 493, "\u591a\u91cd\u6620\u5c04": 493, "bothv": 493, "\u627e\u5230\u6240\u6709\u4ece": 493, "\u5f00\u59cb\u901a\u8fc7": 493, "\u8fb9\u7c7b\u578b\u5411\u5916\u6269\u5c55": 493, "\u8df3\u7684\u6240\u6709\u7b80\u5355\u8def\u5f84": 493, "\u70b9\u4e0d\u91cd\u590d": 493, "\u5e76\u4e14\u53ea\u4fdd\u5b58path\u7684\u6700\u672b\u7aef\u70b9": 493, "\u8df3\u7684\u6240\u6709\u4efb\u610f\u8def\u5f84": 493, "\u70b9\u53ef\u91cd\u590d": 493, "\u8f93\u51fa\u6240\u6709\u5c5e\u6027": 493, "\u805a\u5408": 493, "groupbi": 493, "groupby\u591a\u4e2akei": 493, "\u5e76\u4e14\u4e3a\u6bcf\u4e2akey\u8bbe\u7f6e\u522b\u540d": 493, "groupby\u591a\u4e2avalu": 493, "\u5e76\u4e14\u4e3a\u6bcf\u4e2avalue\u8bbe\u7f6e\u522b\u540d": 493, "\u5373\u53d6\u524dk\u4e2a\u7ed3\u679c": 493, "graphscope\u6682\u65f6\u4e0d\u652f\u6301\u4e0b\u5217gremlin\u64cd\u4f5c": 493, "\u4f1a\u9010\u6b65\u652f\u6301": 493, "\u53ef\u4ee5\u901a\u8fc7path": 493, "expansion\u8bed\u6cd5\u7cd6\u5b9e\u73b0": 493, "\u57fa\u4e8e\u96c6\u5408\u7684local\u8ba1\u7b97": 493, "\u67e5\u8be2\u8ba1\u5212\u89e3\u91ca": 493, "\u67e5\u8be2\u6267\u884c\u6027\u80fd\u5206\u6790": 493, "\u81ea\u5b9a\u4e49\u72b6\u6001\u8ba1\u7b97": 493, "\u8ba1\u7b97\u5b50\u56fe": 493, "\u76ee\u524d\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5316\u7248\u672c": 493, "\u652f\u6301\u62bd\u53d6\u5b50\u56fe\u5199\u5165vineyard\u5b58\u50a8": 493, "cap": 493, "\u8bbf\u95ee\u81ea\u5b9a\u4e49\u72b6\u6001": 493, "\u4f8b\u5982pagerank\u548cshortestpath": 493, "\u8fd9\u90e8\u5206\u529f\u80fdgraphscope\u901a\u8fc7\u56fe\u5206\u6790\u5f15\u64ce\u548cnetworkx\u517c\u5bb9\u63a5\u53e3\u63d0\u4f9b": 493, "graphscope\u4e2d\u7684\u56fe\u5b66\u4e60\u5f15\u64ce": 494, "\u662f\u9762\u5411\u5927\u89c4\u6a21\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u7814\u53d1\u548c\u5e94\u7528\u800c\u8bbe\u8ba1\u7684\u4e00\u6b3e\u5206\u5e03\u5f0f\u6846\u67b6": 494, "\u5b83\u4ece\u5b9e\u9645\u95ee\u9898\u51fa\u53d1": 494, "\u63d0\u70bc\u548c\u62bd\u8c61\u4e86\u4e00\u5957\u9002\u5408\u4e8e\u5f53\u4e0b\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7684\u7f16\u7a0b\u8303\u5f0f": 494, "\u5e76\u5df2\u7ecf\u6210\u529f\u5e94\u7528\u5728\u963f\u91cc\u5df4\u5df4": 494, "\u5185\u90e8\u7684\u8bf8\u5982\u641c\u7d22\u63a8\u8350": 494, "\u77e5\u8bc6\u56fe\u8c31\u7b49\u4f17\u591a\u573a\u666f": 494, "gl\u6ce8\u91cd\u53ef\u79fb\u690d\u548c\u53ef\u6269\u5c55": 494, "\u5bf9\u4e8e\u5f00\u53d1\u8005\u66f4\u4e3a\u53cb\u597d": 494, "\u4e3a\u4e86\u5e94\u5bf9gnn\u5728\u5de5\u4e1a\u573a\u666f\u4e2d\u7684\u591a\u6837\u6027\u548c\u5feb\u901f\u53d1\u5c55\u7684\u9700\u6c42": 494, "\u57fa\u4e8egl": 494, "\u5f00\u53d1\u8005\u53ef\u4ee5\u5b9e\u73b0\u4e00\u79cdgnn\u7b97\u6cd5": 494, "\u6216\u8005\u9762\u5411\u5b9e\u9645\u573a\u666f\u5b9a\u5236\u5316\u4e00\u79cd\u56fe\u7b97\u5b50": 494, "\u4f8b\u5982\u56fe\u91c7\u6837": 494, "\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u5165\u95e8\u6559\u7a0b\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528": 494, "\u6765\u6784\u5efa\u7528\u6237\u81ea\u5df1\u7684cnn\u6a21\u578b": 494, "\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u5b9e\u73b0\u76ee\u524d\u4e3b\u8981\u6709\u4e24\u79cd\u65b9\u5f0f": 494, "\u7b2c\u4e00\u79cd\u662f\u76f4\u63a5\u4ee5\u5168\u56fe\u4e3a\u8ba1\u7b97\u5bf9\u8c61": 494, "\u539f\u59cb\u7684gcn": 494, "gat\u7b49\u7b97\u6cd5\u90fd\u662f\u8fd9\u79cd\u5b9e\u73b0\u601d\u8def": 494, "\u4e00\u822c\u4f1a\u76f4\u63a5\u7528\u90bb\u63a5\u77e9\u9635\u8fdb\u884c\u8ba1\u7b97": 494, "\u7136\u800c\u8fd9\u79cd\u65b9\u6cd5\u5728\u5927\u89c4\u6a21\u56fe\u4e0a\u4f1a\u6d88\u8017\u5927\u91cf\u5185\u5b58": 494, "\u5bfc\u81f4\u65e0\u6cd5\u9ad8\u6548\u8bad\u7ec3\u751a\u81f3\u65e0\u6cd5\u8bad\u7ec3": 494, "\u7b2c\u4e8c\u79cd\u601d\u8def\u662f\u5c06\u5168\u56fe\u5206\u6210\u82e5\u5e72\u5b50\u56fe": 494, "\u7528\u6df1\u5ea6\u5b66\u4e60\u91cc\u5e38\u7528\u7684\u6279\u6b21\u8bad\u7ec3\u65b9\u6cd5\u8fdb\u884c\u8bad\u7ec3": 494, "\u6bcf\u6b21\u8bad\u7ec3\u4e00\u4e2a\u5b50\u56fe": 494, "\u4ee3\u8868\u65b9\u6cd5\u662fgraphsag": 494, "graphsaint\u7b49": 494, "\u4e3b\u8981\u9762\u5411\u8d85\u5927\u89c4\u6a21\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u5f00\u53d1": 494, "\u5b83\u7531\u5e95\u5c42\u7684\u4e00\u4e2a\u56fe\u5f15\u64ce\u548c\u4e0a\u5c42\u7684": 494, "\u7b97\u6cd5\u6a21\u578b\u6784\u6210": 494, "\u56fe\u5f15\u64ce\u5206\u5e03\u5f0f\u5b58\u50a8\u56fe\u7684\u62d3\u6251\u548c\u5c5e\u6027\u4fe1\u606f\u5e76\u63d0\u4f9b\u9ad8\u6548\u7684\u56fe\u91c7\u6837\u67e5\u8be2": 494, "\u7b97\u6cd5\u6a21\u578b\u901a\u8fc7\u8c03\u7528\u56fe\u91c7\u6837\u548c\u67e5\u8be2\u63a5\u53e3\u83b7\u53d6\u5b50\u56fe\u5e76\u8fdb\u884c\u8ba1\u7b97": 494, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u7edf\u4e00\u7f16\u7a0b\u6846\u67b6": 494, "\u652f\u6301\u5e38\u89c1\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u5f00\u53d1": 494, "\u77e5\u8bc6\u56fe\u8c31\u6a21\u578b": 494, "\u56fe\u5d4c\u5165\u7b97\u6cd5\u7b49": 494, "\u5e76\u4e14\u548c\u4e3b\u6d41\u7684\u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5\u517c\u5bb9": 494, "\u5305\u62ectensorflow": 494, "\u548cpytorch": 494, "\u76ee\u524d\u6211\u4eec\u5b9e\u73b0\u4e86\u57fa\u4e8etensorflow\u7684\u6a21\u578b": 494, "\u57fa\u4e8epytorch\u7684\u6a21\u578b\u6b63\u5728\u5f00\u53d1\u4e2d": 494, "\u91c7\u7528\u91c7\u6837\u5b50\u56fe\u518d\u8ba1\u7b97\u7684\u65b9\u5f0f\u6784\u5efa\u548c\u8bad\u7ec3\u6a21\u578b": 494, "\u6211\u4eec\u9996\u5148\u4ecb\u7ecd\u4e00\u4e0b\u57fa\u672c\u7684\u6570\u636e\u6a21\u578b": 494, "\u662f\u56fe\u5b66\u4e60\u7b97\u6cd5\u7f16\u7a0b\u7684\u57fa\u672c\u6570\u636e\u5bf9\u8c61": 494, "\u5b83\u7531\u4e00\u4e2abatch\u7684\u79cd\u5b50\u70b9\u6216\u8005\u8fb9": 494, "\u79f0\u4e3a": 494, "\u4ee5\u53ca\u4ed6\u4eec\u7684": 494, "\u611f\u53d7\u91ce": 494, "\u591a\u8df3\u90bb\u5c45": 494, "\u7ec4\u6210": 494, "\u7531\u56fe\u91c7\u6837\u548c\u67e5\u8be2\u5230\u7684\u6570\u636e\u7ec4\u6210": 494, "\u6211\u4eec\u5b9e\u73b0": 494, "\u4e86\u5e38\u89c1\u7684\u90bb\u5c45\u91c7\u6837": 494, "\u56fe\u904d\u5386\u548c\u8d1f\u91c7\u6837\u65b9\u6cd5": 494, "\u91c7\u6837\u7684\u6570\u636e\u7ec4\u7ec7\u6210numpy\u683c\u5f0f\u7684": 494, "\u540e\u6839\u636e\u4e0d\u540c\u7684\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce\u8f6c\u6362\u6210\u5bf9\u5e94\u7684tensor\u683c\u5f0f": 494, "\u7136\u540e\u7528": 494, "\u7ba1\u7406": 494, "\u5230": 494, "\u7684\u8f6c\u6362": 494, "\u63d0\u4f9b\u8bad\u7ec3\u6240\u9700\u8981\u7684\u6570\u636e": 494, "\u6240\u6709\u7684\u56fe\u5b66\u4e60\u6a21\u578b\u53ef\u4ee5\u62bd\u8c61\u4e3a\u4f7f\u7528\u7f16\u7801\u5668\u5c06": 494, "\u7f16\u7801\u6210\u6700\u7ec8\u7684\u70b9": 494, "\u8fb9\u6216\u8005\u5b50\u56fe\u7684": 494, "\u5411\u91cf": 494, "\u9996\u5148\u5229\u7528\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801\u539f\u59cb\u7684\u70b9\u548c\u8fb9\u4e0a\u7684\u7279\u5f81": 494, "\u7136\u540e\u5c06\u7279\u5f81\u7f16\u7801\u5668\u7f16\u7801\u540e\u7684": 494, "\u539f\u59cb\u5411\u91cf\u7528\u4e0d\u540c\u7684\u56fe\u7f16\u7801\u5668\u8fdb\u884c\u7f16\u7801": 494, "\u5f97\u5230\u6700\u7ec8\u7684\u8f93\u51fa": 494, "\u5bf9\u4e8e\u5927\u591a\u6570gnn\u6a21\u578b": 494, "\u56fe\u7f16\u7801\u5668": 494, "\u63d0\u4f9b\u4e86\u5982\u4f55\u805a\u5408\u90bb\u5c45\u4fe1\u606f\u5230\u81ea\u8eab\u8282\u70b9\u6216\u8005\u8fb9\u7684\u62bd\u8c61": 494, "\u7528\u4e0d\u540c\u7684\u56fe\u5377\u79ef\u5c42\u5b9e\u73b0": 494, "\u57fa\u4e8e\u4e0a\u9762\u4ecb\u7ecd\u7684\u6570\u636e\u6a21\u578b\u548c\u7f16\u7801\u5668": 494, "\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5feb\u901f\u5730\u5b9e\u73b0\u4e0d\u540c\u7684\u56fe\u5b66\u4e60\u7b97\u6cd5": 494, "\u5728\u63a5\u4e0b\u6765\u4e00\u7ae0\u91cc": 494, "\u6211\u4eec\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u5f00\u53d1\u4e00\u4e2agnn\u6a21\u578b": 494, "\u8fd9\u7bc7\u6587\u6863\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u7528": 494, "\u63d0\u4f9b\u7684\u57fa\u672capi\u914d\u5408\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce": 494, "\u5982tensorflow": 494, "\u6765\u6784\u5efa\u56fe\u5b66\u4e60\u7b97\u6cd5": 494, "\u6211\u4eec\u4ee5\u56fe\u795e\u7ecf\u7f51\u7edc\u91cc\u6700\u6d41\u884c\u7684gcn\u6a21\u578b\u505a\u4e3a\u793a\u4f8b\u6765\u8bf4\u660e": 494, "\u901a\u5e38\u6765\u8bf4": 494, "\u5b9e\u73b0\u4e00\u4e2a\u7b97\u6cd5\u9700\u8981\u4e0b\u9762\u56db\u4e2a\u6b65\u9aa4": 494, "\u6307\u5b9a\u91c7\u6837\u6a21\u5f0f": 494, "\u7528\u56fe\u91c7\u6837": 494, "\u67e5\u8be2\u65b9\u6cd5\u91c7\u6837\u5b50\u56fe\u5e76\u7ec4\u7ec7\u6210": 494, "\u6211\u4eec\u62bd\u8c61\u4e864\u4e2a\u57fa\u672c\u7684\u51fd\u6570": 494, "\u7528\u6765\u904d\u5386\u56fe\u6570\u636e\u4ea7\u751f": 494, "\u4ee5\u8fd9\u4e9b": 494, "\u4e3a\u8f93\u5165\u4ea7\u751f": 494, "\u8bad\u7ec3\u7684\u6b63\u6837\u672c": 494, "\u5bf9\u4e8e\u65e0\u76d1\u7763\u5b66\u4e60": 494, "\u4ea7\u751f\u8d1f\u6837\u672c": 494, "gnns\u9700\u8981\u805a\u5408\u90bb\u5c45\u4fe1\u606f": 494, "\u6211\u4eec\u62bd\u8c61\u4e86": 494, "\u6765\u91c7\u6837\u90bb\u5c45": 494, "\u6700\u540e\u5c06": 494, "\u4ea7\u751f\u7684": 494, "\u4ee5\u53ca\u91c7\u6837\u51fa\u7684\u90bb\u5c45\u7ec4\u6210": 494, "\u6784\u5efa\u56fe\u6570\u636e\u6d41": 494, "\u7b97\u6cd5\u6a21\u578b\u57fa\u4e8e\u7c7b\u4f3ctensorflow\u7684\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce\u6784\u5efa": 494, "\u6240\u4ee5\u91c7\u6837\u51fa\u7684": 494, "\u9700\u8981\u5148\u8f6c\u6362\u6210tensor\u683c\u5f0f": 494, "\u624d\u80fd\u4f7f\u7528": 494, "\u6765\u5c01\u88c5\u8fd9\u4e00\u8f6c\u6362\u8fc7\u7a0b": 494, "\u53ef\u4ee5\u4ea7\u751f\u4e00\u4e2a\u8fed\u4ee3\u5668\u6765\u8fdb\u884c\u6279\u6b21\u8bad\u7ec3": 494, "\u5b9a\u4e49\u7f16\u7801\u5668": 494, "\u7f16\u7801\u5668\u548c\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801": 494, "\u5f97\u5230": 494, "\u540e": 494, "\u6211\u4eec\u9996\u5148\u5c06\u539f\u59cb\u7684\u70b9": 494, "\u8fb9\u7279\u5f81\u7528\u4e00\u4e9b\u5e38\u89c1\u7279\u5f81\u7f16\u7801\u5668\u7f16\u7801\u6210\u539f\u59cb\u5411\u91cf": 494, "\u505a\u4e3agnns\u6a21\u578b\u7684\u7279\u5f81\u8f93\u5165": 494, "\u7136\u540e\u7528\u56fe\u7f16\u7801\u5668\u5904\u7406": 494, "\u5c06\u90bb\u5c45\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u6c47\u805a\u5e76": 494, "\u548c\u81ea\u8eab\u7279\u5f81\u8fdb\u884c\u7ec4\u5408": 494, "\u5f97\u5230\u6700\u540e\u7684\u70b9\u6216\u8005\u8fb9\u7684\u5411\u91cf": 494, "\u7f16\u5199\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": 494, "\u9009\u62e9\u9002\u5f53\u7684\u635f\u5931\u51fd\u6570": 494, "\u5e76\u7f16\u5199\u8bad\u7ec3\u8fc7\u7a0b": 494, "\u5185\u7f6e\u4e86\u4e00\u4e9b\u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570\u548c\u4f18\u5316\u5668": 494, "\u5e76\u5bf9\u8bad\u7ec3\u8fc7\u7a0b\u8fdb\u884c\u4e86\u5c01\u88c5": 494, "\u540c\u65f6\u652f\u6301\u5355\u673a\u548c\u5206\u5e03\u5f0f\u8bad\u7ec3": 494, "\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u635f\u5931\u51fd\u6570": 494, "\u4f18\u5316\u5668\u548c\u8bad\u7ec3\u8fc7\u7a0b": 494, "\u4e0b\u9762\u6211\u4eec\u6309\u7167\u4e0a\u9762\u4ecb\u7ecd\u76844\u4e2a\u6b65\u9aa4\u6765\u4ecb\u7ecd\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2agcn\u6a21\u578b": 494, "\u6211\u4eec\u4f7f\u7528cora\u6570\u636e\u96c6\u4ee5\u70b9\u5206\u7c7b\u4efb\u52a1\u505a\u4e3a\u793a\u4f8b": 494, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u636e\u8f6c\u6362\u811a\u672c": 494, "\u6765": 494, "\u5c06\u539f\u59cbcora\u8f6c\u6362\u6210": 494, "\u9700\u8981\u7684\u683c\u5f0f": 494, "\u8fd0\u884c\u5b8c\u8fd9\u4e2a\u811a\u672c\u540e\u4f60\u53ef\u4ee5\u5f97\u5230\u4e0b\u97625\u4e2a\u6587\u4ef6": 494, "\u5206\u522b\u662f\u70b9\u8868": 494, "\u8fb9\u8868\u4ee5\u53ca\u7528\u6765\u533a\u5206\u8bad\u7ec3": 494, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u7684\u70b9\u8868": 494, "\u7136\u540e\u53ef\u4ee5\u7528\u4e0b\u9762\u4ee3\u7801\u6765\u6784\u5efa\u56fe": 494, "\u540e\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u5c06\u56fe\u52a0\u8f7d\u8fdb\u5185\u5b58": 494, "gcn\u6a21\u578b\u7ee7\u627f\u81ea\u57fa\u672c\u7684\u5b66\u4e60\u6a21\u578b\u7c7b": 494, "\u53ea\u9700\u8981\u91cd\u5199\u57fa\u7c7b\u7684\u91c7\u6837": 494, "\u6a21\u578b\u6784\u5efa\u7b49\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b8c\u6210gcn\u7684\u6784\u5efa": 494, "\u524d\u4e24\u4e2a\u51fd\u6570\u7528\u6765\u91c7\u6837\u79cd\u5b50\u8282\u70b9\u548c\u6b63\u6837\u672c": 494, "\u91c7\u6837\u90bb\u5c45\u5e76\u7ec4\u7ec7": 494, "\u56de\u4e00\u8df3\u90bb\u5c45": 494, "\u56e0\u6b64\u4e0a\u9762\u4ee3\u7801\u662f\u91c7\u6837\u4e8c\u8df3\u90bb\u5c45": 494, "\u8fd9\u91cc\u53ef\u4ee5\u9009\u62e9\u4e0d\u540c\u7684\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5": 494, "\u5bf9\u4e8e\u539f\u59cbgcn\u6765\u8bf4\u56e0\u4e3a\u8981\u83b7\u5f97\u6bcf\u4e2a\u70b9\u7684\u6240\u6709\u90bb\u5c45": 494, "\u56e0\u6b64\u9009\u62e9": 494, "\u91c7\u6837\u5b8c\u540e\u5c06\u7ed3\u679c\u7ec4\u7ec7": 494, "\u6210": 494, "\u8fd4\u56de": 494, "\u51fd\u6570\u91cc\u6211\u4eec\u4f7f\u7528\u5c01\u88c5\u7684": 494, "\u6765\u628a": 494, "\u8f6c\u6362\u6210\u5bf9\u5e94\u7684": 494, "\u5305\u542b\u4e00\u4e2a\u6570\u636e\u6d41\u8fed\u4ee3\u5668\u548c\u82e5\u5e72": 494, "\u4f60\u53ef\u4ee5\u4ece": 494, "\u83b7\u53d6\u548c\u524d\u9762": 494, "\u5bf9\u5e94\u7684": 494, "\u9996\u5148\u4f7f\u7528\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801\u539f\u59cb\u7279\u5f81": 494, "\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528": 494, "\u5373\u8fd4\u56de\u81ea\u8eab\u5373\u53ef": 494, "\u56e0\u4e3a": 494, "cora\u7684\u7279\u5f81\u5df2\u7ecf\u662f\u5904\u7406\u8fc7\u7684\u5411\u91cf\u683c\u5f0f\u4e86": 494, "\u5bf9\u4e8e\u65e2\u6709\u79bb\u6563\u7279\u5f81\u7531\u4e8e\u8fde\u7eed\u7279\u5f81\u7684\u60c5\u51b5": 494, "\u66f4\u591aencoder\u8bf7\u53c2\u8003": 494, "\u5c42\u6784\u5efa\u56fe\u7f16\u7801\u5668": 494, "gcn\u6bcf\u4e2a\u8282\u70b9\u91c7\u6837\u5168\u90e8\u90bb\u5c45": 494, "\u90bb\u5c45\u4ee5\u7a00\u758f\u683c\u5f0f\u7ec4\u7ec7": 494, "\u6240\u4ee5\u8fd9\u91cc\u4f7f\u7528": 494, "\u90bb\u5c45\u5bf9\u9f50\u7684\u6a21\u578b\u53ef\u4ee5\u53c2\u8003graphsage\u7684\u5b9e\u73b0": 494, "\u5bf9\u4e8ecora\u70b9\u5206\u7c7b\u6a21\u578b": 494, "\u6211\u4eec\u9009\u62e9\u5bf9\u5e94\u7684tensorflow\u91cc\u7684\u5206\u7c7b\u635f\u5931\u51fd\u6570\u5373\u53ef": 494, "\u7136\u540e\u5728": 494, "\u51fd\u6570\u91cc\u5c06\u7f16\u7801\u5668\u548c\u635f\u5931\u51fd\u6570\u7ec4\u7ec7\u8d77\u6765": 494, "\u6700\u7ec8\u8fd4\u56de\u4e00\u4e2a\u6570\u636e\u8fed\u4ee3\u5668\u548c\u635f\u5931\u51fd\u6570": 494, "\u63a5\u7740\u4f7f\u7528\u5c01\u88c5\u7684\u5355\u673a\u8bad\u7ec3\u8fc7\u7a0b": 494, "\u6765\u8fdb\u884c\u8bad\u7ec3": 494, "\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u4e00\u4e2agcn\u6a21\u578b\u7684\u7f16\u5199": 494, "\u5b8c\u6574\u4ee3\u7801\u8bf7\u53c2\u8003": 494, "\u76ee\u5f55": 494, "\u6211\u4eec\u5b9e\u73b0\u4e86gcn": 494, "gat\u7b49\u6a21\u578b": 494, "\u4f60\u53ef\u4ee5\u53c2\u8003\u76f8\u4f3c\u7684\u6a21\u578b\u4ee3\u7801\u505a\u4e3a\u5f00\u59cb": 494, "\u5c5e\u6027\u56fe": 495, "\u56fe\u4e0a\u7684\u70b9": 495, "\u8fb9\u90fd\u5e26\u6709\u6807\u7b7e": 495, "\u6bcf\u4e2a\u6807\u7b7e\u90fd\u53ef\u80fd\u5e26\u6709\u8bb8\u591a\u5c5e\u6027": 495, "\u5185\u7f6e\u4e86\u4e00\u7ec4\u6d41\u884c\u7684\u6570\u636e\u96c6": 495, "\u4ee5\u53ca\u8f7d\u5165\u4ed6\u4eec\u7684\u5de5\u5177\u51fd\u6570": 495, "\u5e2e\u52a9\u7528\u6237\u66f4\u5bb9\u6613\u7684\u4e0a\u624b": 495, "\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50": 495, "\u5728\u5355\u673a\u6a21\u5f0f\u4e0b": 495, "\u4f1a\u5c06\u6570\u636e\u6587\u4ef6\u4e0b\u8f7d\u5230": 495, "\u5e76\u4e14\u4f1a\u4fdd\u7559\u4ee5\u4f9b\u5c06\u6765\u4f7f\u7528": 495, "\u96c6\u7fa4\u6a21\u5f0f\u4e0b": 495, "\u5c06\u6570\u636e\u6587\u4ef6\u4e0b\u8f7d\u5230": 495, "\u7684\u672c\u5730\u5b58\u50a8\u6bd4\u8f83\u590d\u6742": 495, "\u6240\u4ee5\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6302\u8f7d\u4e86": 495, "\u7684\u6570\u636e\u96c6\u6876\u7684\u4e00\u4e2a\u5bb9\u5668": 495, "\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u91cc": 495, "\u6211\u4eec\u5c06\u8f7d\u5165\u548c\u4e0a\u9762\u540c\u6837\u7684\u4e00\u5f20\u56fe": 495, "\u53ea\u4e0d\u8fc7\u8fd9\u6b21": 495, "\u90e8\u7f72\u5728\u96c6\u7fa4\u4e2d": 495, "\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 495, "\u7136\u540e\u5c06\u6570\u636e\u96c6\u6876\u6302\u8f7d\u5230": 495, "\u6b64\u8def\u5f84\u76f8\u5bf9\u4e8e": 495, "\u7684\u672c\u5730\u8def\u5f84": 495, "\u7136\u540e\u6211\u4eec\u5c06\u4f1a\u8bdd\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165": 495, "\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570": 495, "\u662f\u6211\u4eec\u901a\u8fc7": 495, "\u7684\u53c2\u6570\u6307\u5b9a\u7684\u6302\u8f7d\u8def\u5f84": 495, "\u662f\u8fd9\u4e2a\u6570\u636e\u96c6\u6240\u5728\u7684\u6587\u4ef6\u5939\u7684\u540d\u5b57": 495, "\u4f60\u53ef\u4ee5\u5728": 495, "\u627e\u5230\u6240\u6709\u76ee\u524d\u652f\u6301\u7684\u6570\u636e\u96c6": 495, "\u6587\u4ef6\u4e2d\u5305\u62ec\u8be6\u7ec6\u7684\u4ecb\u7ecd\u548c\u7528\u6cd5": 495, "\u7136\u800c": 495, "\u66f4\u5e38\u89c1\u7684\u60c5\u51b5\u662f\u7528\u6237\u9700\u8981\u4f7f\u7528\u81ea\u5df1\u7684\u6570\u636e\u96c6": 495, "\u5e76\u505a\u4e00\u4e9b\u6570\u636e\u5206\u6790\u7684\u5de5\u4f5c": 495, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u51fd\u6570\u7528\u6765\u5b9a\u4e49\u4e00\u4e2a\u5c5e\u6027\u56fe\u7684\u6a21\u578b": 495, "\u5e76\u4ee5\u5c06\u5c5e\u6027\u56fe\u8f7d\u5165": 495, "\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 495, "\u7136\u540e\u5728\u6b64\u4f1a\u8bdd\u5185\u521b\u5efa\u56fe": 495, "\u6709\u51e0\u4e2a\u65b9\u6cd5\u6765\u914d\u7f6e": 495, "\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u589e\u91cf\u7684\u6784\u5efa\u4e00\u4e2a\u5c5e\u6027\u56fe": 495, "\u6211\u4eec\u5c06\u4f7f\u7528": 495, "\u91cc\u7684\u6587\u4ef6\u505a\u5b8c\u6b64\u7bc7\u6559\u7a0b\u7684\u793a\u4f8b": 495, "\u627e\u5230\u6e90\u6570\u636e": 495, "\u4f60\u53ef\u4ee5\u968f\u65f6\u4f7f\u7528": 495, "\u6765\u67e5\u770b\u56fe\u7684\u6a21\u578b": 495, "\u6211\u4eec\u53ef\u4ee5\u5411\u56fe\u5185\u6dfb\u52a0\u4e00\u4e2a\u70b9\u6807\u7b7e": 495, "\u76f8\u5173\u7684\u53c2\u6570\u542b\u4e49\u5982\u4e0b": 495, "\u4ee3\u8868\u6570\u636e\u6e90": 495, "\u6307\u793a": 495, "\u53ef\u4ee5\u5728\u54ea\u91cc\u627e\u5230\u6e90\u6570\u636e": 495, "\u53ef\u4ee5\u4e3a\u6587\u4ef6\u8def\u5f84": 495, "\u6570\u7ec4\u7b49": 495, "\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50": 495, "\u8fd9\u5c06\u4f1a\u4ece\u6587\u4ef6": 495, "\u8f7d\u5165\u6570\u636e": 495, "\u5e76\u4e14\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a": 495, "\u4f46\u662f\u6709\u4e0d\u540c\u7684\u8d77\u59cb\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u6807\u7b7e": 495, "\u70b9\u6807\u7b7e\u7684\u540d\u5b57": 495, "\u9ed8\u8ba4\u4e3a": 495, "\u4e00\u5f20\u56fe\u4e2d\u4e0d\u80fd\u542b\u6709\u540c\u540d\u7684\u6807\u7b7e": 495, "\u6240\u4ee5\u82e5\u6709\u4e24\u4e2a\u6216\u4ee5\u4e0a\u7684\u6807\u7b7e": 495, "\u7528\u6237\u5fc5\u987b\u6307\u5b9a\u6807\u7b7e\u540d\u5b57": 495, "\u603b\u662f\u7ed9\u6807\u7b7e\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u540d\u5b57\u4e5f\u6709\u597d\u5904": 495, "\u53ef\u4ee5\u4e3a\u4efb\u4f55\u6807\u8bc6\u7b26": 495, "\u4e3e\u4e2a\u4f8b\u5b50": 495, "\u7ed3\u679c\u4e0e\u4e0a\u4e00\u6b65\u7ed3\u679c\u9664\u4e86\u6807\u7b7e\u540d\u5b8c\u5168\u4e00\u81f4": 495, "\u4e00\u7ec4\u5c5e\u6027\u540d\u5b57": 495, "\u53ef\u9009\u9879": 495, "\u5c5e\u6027\u540d\u5e94\u5f53\u4e0e\u6570\u636e\u4e2d\u7684\u9996\u884c\u8868\u5934\u4e2d\u7684\u540d\u5b57\u76f8\u4e00\u81f4": 495, "\u5982\u679c\u7701\u7565\u6216\u4e3a": 495, "\u9664id\u5217\u4e4b\u5916\u7684\u6240\u6709\u5217\u90fd\u5c06\u4f1a\u4f5c\u4e3a\u5c5e\u6027\u8f7d\u5165": 495, "\u5982\u679c\u4e3a\u7a7a\u5217\u8868": 495, "\u90a3\u4e48\u5c06\u4e0d\u4f1a\u8f7d\u5165\u4efb\u4f55\u5c5e\u6027": 495, "\u5176\u4ed6\u60c5\u51b5\u4e0b": 495, "\u53ea\u4f1a\u8f7d\u5165\u6307\u5b9a\u4e86\u7684\u5217\u4f5c\u4e3a\u5c5e\u6027": 495, "\u6bd4\u5982\u8bf4": 495, "\u5217\u7684\u5217\u540d": 495, "\u6b64\u5217\u5c06\u5728\u8f7d\u5165\u8fb9\u65f6\u88ab\u7528\u505a\u8d77\u59cb\u70b9": 495, "\u6216\u76ee\u6807\u70b9": 495, "\u5176\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32": 495, "\u6b64\u65f6\u6307\u4ee3\u5217\u540d": 495, "\u6216\u8005\u53ef\u4ee5\u662f\u4e00\u4e2a\u6b63\u6574\u6570": 495, "\u4ee3\u8868\u7b2c\u51e0\u5217": 495, "\u4ece0\u5f00\u59cb": 495, "\u9ed8\u8ba4\u4e3a\u7b2c0\u5217": 495, "\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5411\u56fe\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u8fb9\u6807\u7b7e": 495, "\u4e0e\u6784\u5efa\u70b9\u6807\u7b7e\u4e00\u8282\u4e2d\u7684": 495, "\u7c7b\u4f3c": 495, "\u4e3a\u6307\u793a\u53bb\u54ea\u91cc\u8bfb\u6570\u636e\u7684\u8def\u5f84": 495, "\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50": 495, "\u8fd9\u5c06\u4f1a\u8f7d\u5165\u4e00\u4e2a\u6807\u7b7e\u540d\u4e3a": 495, "\u6e90\u8282\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u8282\u70b9\u6807\u7b7e\u90fd\u4e3a": 495, "\u7b2c\u4e00\u5217\u4f5c\u4e3a\u8d77\u70b9\u7684\u70b9id": 495, "\u7b2c\u4e8c\u5217\u4f5c\u4e3a\u7ec8\u70b9\u7684\u70b9id": 495, "\u5176\u4ed6\u5217\u90fd\u4f5c\u4e3a\u5c5e\u6027": 495, "\u8fb9\u7684\u6807\u7b7e\u540d": 495, "\u63a8\u8350\u603b\u662f\u4f7f\u7528\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u6807\u7b7e\u540d": 495, "\u4e00\u5217\u5c5e\u6027": 495, "\u610f\u4e49\u4e0e\u884c\u4e3a\u90fd\u548c\u70b9\u4e2d\u7684\u4e00\u81f4": 495, "\u8d77\u70b9\u7684\u6807\u7b7e\u540d\u4e0e\u7ec8\u70b9\u7684\u6807\u7b7e\u540d": 495, "\u6211\u4eec\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u5df2\u7ecf\u770b\u5230\u8fc7\u4e86": 495, "\u5728\u90a3\u91cc\u5c06\u5176\u8d4b\u503c\u4e3a": 495, "\u8fd9\u4e24\u8005\u53ef\u4ee5\u53d6\u4e0d\u540c\u7684\u503c": 495, "\u4e3e\u4f8b\u6765\u8bf4": 495, "\u8d77\u70b9\u7684": 495, "\u5217\u540d\u4e0e\u7ec8\u70b9\u7684": 495, "\u5217\u540d": 495, "\u9ed8\u8ba4\u5206\u522b\u4e3a": 495, "\u610f\u4e49\u548c\u8868\u73b0\u4e0e\u70b9\u4e2d\u7684": 495, "\u4e0d\u540c\u7684\u662f\u9700\u8981\u4e24\u5217": 495, "\u4e00\u5217\u4e3a\u8d77\u70b9": 495, "\u4e00\u5217\u4e3a\u7ec8\u70b9": 495, "\u4ee5\u4e0b\u662f\u4e2a\u4f8b\u5b50": 495, "\u8fd9\u662f\u4e00\u4e9b\u7528\u6765\u5904\u7406\u7279\u522b\u7b80\u5355\u6216\u7279\u522b\u590d\u6742\u7684\u9ad8\u7ea7\u4e00\u4e9b\u7684\u7528\u6cd5": 495, "\u5982\u679c\u56fe\u4e2d\u53ea\u5b58\u5728\u4e00\u4e2a\u70b9\u6807\u7b7e": 495, "\u90a3\u4e48\u53ef\u4ee5\u7701\u7565\u6307\u5b9a\u70b9\u6807\u7b7e": 495, "\u5c06\u4f1a\u63a8\u65ad\u8d77\u59cb\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u6807\u7b7e\u4e3a\u8fd9\u4e00\u4e2a\u70b9\u6807\u7b7e": 495, "\u5982\u679c\u7528\u6237\u7684": 495, "\u53d6\u503c\u4e3a\u56fe\u4e2d\u4e0d\u5b58\u5728\u7684\u70b9\u6807\u7b7e": 495, "\u4f1a\u4ece\u8fb9\u7684\u7aef\u70b9\u4e2d\u805a\u5408\u51fa\u70b9\u8868": 495, "\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b": 495, "\u4e00\u79cd\u8fb9\u7684\u6807\u7b7e\u53ef\u80fd\u8fde\u63a5\u4e86\u4e24\u79cd\u53ca\u4ee5\u4e0a\u7684\u70b9": 495, "\u5728\u4e0b\u9762\u7684\u5c5e\u6027\u56fe\u4e2d": 495, "\u6709\u4e00\u4e2a\u540d\u4e3a": 495, "\u7684\u8fb9\u6807\u7b7e": 495, "\u8fde\u63a5\u4e86\u4e24\u79cd\u70b9\u6807\u7b7e": 495, "\u53ef\u4ee5\u6dfb\u52a0\u4e24\u6b21\u540d\u4e3a": 495, "\u53ef\u4ee5\u4ece\u8f93\u5165\u6587\u4ef6\u4e2d\u63a8\u65ad\u70b9\u7684\u7c7b\u578b": 495, "\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u5de5\u4f5c\u7684\u5f88\u597d": 495, "\u7528\u6237\u6709\u65f6\u9700\u8981\u66f4\u591a\u7684\u81ea\u5b9a\u4e49\u80fd\u529b": 495, "\u4e3a\u4e86\u6ee1\u8db3\u6b64\u79cd\u9700\u6c42": 495, "\u53ef\u4ee5\u5728\u5c5e\u6027\u540d\u4e4b\u540e\u52a0\u5165\u4e00\u4e2a\u989d\u5916\u7c7b\u578b\u7684\u53c2\u6570": 495, "\u50cf\u8fd9\u6837": 495, "\u8fd9\u5c06\u4f1a\u5c06\u5c5e\u6027\u7684\u7c7b\u578b\u8f6c\u6362\u4e3a\u6307\u5b9a\u7684\u7c7b\u578b": 495, "\u6ce8\u610f\u5c5e\u6027\u540d\u5b57\u548c\u7c7b\u578b\u9700\u8981\u5728\u540c\u4e00\u4e2a\u5143\u7ec4\u4e2d": 495, "\u5728\u8fd9\u91cc": 495, "\u7684\u7c7b\u578b\u5c06\u4f1a\u662f": 495, "\u800c\u9ed8\u8ba4\u4e0d\u6307\u5b9a\u7684\u8bdd\u4e3a": 495, "\u5e38\u89c1\u7684\u4f7f\u7528\u573a\u666f\u662f\u6307\u5b9a": 495, "\u7b49\u7c7b\u578b": 495, "\u6709\u4e09\u4e2a\u914d\u7f6e\u5143\u4fe1\u606f\u7684\u53c2\u6570": 495, "\u5206\u522b\u4e3a": 495, "\u53ef\u4ee5\u4e3a": 495, "\u4f1a\u6709\u66f4\u5feb\u7684\u901f\u5ea6": 495, "\u548c\u4f7f\u7528\u66f4\u5c11\u7684\u5185\u5b58": 495, "\u5f53id\u4e0d\u80fd\u7528": 495, "\u8868\u793a\u65f6": 495, "\u624d\u5e94\u8be5\u4f7f\u7528": 495, "\u5982\u679c\u786e\u5b9a\u56fe\u70b9id\u8303\u56f4\u4e0d\u4f1a\u8d85\u8fc7": 495, "\u5efa\u8bae\u4f7f\u7528": 495, "\u6765\u964d\u4f4e\u5185\u5b58\u5f00\u9500": 495, "\u6307\u793a\u8f7d\u5165\u65e0\u5411\u56fe\u8fd8\u662f\u6709\u5411\u56fe": 495, "\u6307\u793a\u662f\u5426\u4e3a\u6bcf\u6761\u8fb9\u5206\u914d\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u7684id": 495, "\u6307\u793a\u662f\u5426\u662f\u5426\u5c06\u70b9\u539f\u59cbid\u4fdd\u7559\u4e3a\u5c5e\u6027": 495, "\u8ba9\u6211\u4eec\u5199\u4e00\u4e2a\u5b8c\u6574\u7684\u56fe\u7684\u5b9a\u4e49": 495, "\u8fd9\u91cc\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u8f7d\u5165": 495, "\u5c5e\u6027\u56fe\u7684": 495, "\u4f8b\u5b50": 495, "\u4e0a\u6587\u63d0\u5230\u7684\u6570\u636e\u6e90\u662f\u4e00\u4e2a": 495, "\u7684\u7c7b": 495, "\u5305\u542b\u6587\u4ef6\u8def\u5f84\u6216\u8005\u6570\u636e\u672c\u8eab": 495, "\u652f\u6301\u4ece": 495, "\u8fd9\u53ef\u4ee5\u4f7f\u7528\u6237\u4ec5\u901a\u8fc7": 495, "\u63a7\u5236\u53f0\u4fbf\u53ef\u4ee5\u521b\u5efa\u56fe": 495, "\u9664\u4e86": 495, "\u5916": 495, "\u5176\u4ed6\u5c5e\u6027": 495, "id\u5217": 495, "\u6807\u7b7e\u8bbe\u7f6e\u7b49\u90fd\u548c\u4e4b\u524d\u63d0\u5230\u7684\u4fdd\u6301\u4e00\u81f4": 495, "\u6ce8\u610f\u6bcf\u4e2a\u6570\u7ec4\u90fd\u4ee3\u8868\u4e00\u5217": 495, "\u6211\u4eec\u5c06\u5176\u4ee5": 495, "\u77e9\u9635\u7684\u65b9\u5f0f\u4f20\u5165": 495, "\u5f53": 495, "\u5305\u542b\u6587\u4ef6\u8def\u5f84\u65f6": 495, "\u5b83\u53ef\u80fd\u4ec5\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u4e32": 495, "\u6587\u4ef6\u8def\u5f84\u5e94\u9075\u5faa": 495, "\u6807\u51c6": 495, "\u5f53\u6536\u5230\u5305\u542b\u6587\u4ef6\u8def\u5f84\u7684\u8f7d\u56fe\u8bf7\u6c42\u65f6": 495, "\u5c06\u4f1a\u89e3\u6790": 495, "\u8c03\u7528\u76f8\u5e94\u7684\u8f7d\u56fe\u6a21\u5757": 495, "\u652f\u6301\u591a\u79cd\u6570\u636e\u6e90": 495, "\u672c\u5730": 495, "\u6570\u636e\u7531": 495, "\u8d1f\u8d23\u8f7d\u5165": 495, "\u89e3\u6790\u4e0d\u540c\u7684\u6570\u636e\u683c\u5f0f\u4ee5\u53ca\u53c2\u6570": 495, "\u4efb\u4f55\u989d\u5916\u7684\u5177\u4f53\u7684\u914d\u7f6e\u90fd\u53ef\u4ee5\u5728loader\u7684\u53ef\u53d8\u53c2\u6570\u5217\u8868\u4e2d\u4f20\u5165": 495, "\u8fd9\u4e9b\u53c2\u6570\u4f1a\u76f4\u63a5\u88ab\u4f20\u9012\u5230\u5bf9\u5e94\u7684\u5b58\u50a8\u7c7b\u4e2d": 495, "\u4e4b\u4e8e": 495, "\u6216\u8005\u662f": 495, "\u7528\u6237\u53ef\u4ee5\u65b9\u4fbf\u7684\u5b9e\u73b0\u81ea\u5df1\u7684driver\u6765\u652f\u6301\u66f4\u591a\u7684\u6570\u636e\u6e90": 495, "\u6bd4\u5982\u53c2\u7167": 495, "driver\u7684\u5b9e\u73b0\u65b9\u5f0f": 495, "\u7528\u6237\u9700\u8981\u7ee7\u627f": 495, "\u7c7b\u7528\u6765\u505ascheme\u5bf9\u5e94\u7684resolv": 495, "abstractbufferedfil": 495, "\u7528\u6237\u4ec5\u9700\u8981\u5b9e\u73b0": 495, "\u8fd9\u51e0\u4e2a\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b9e\u73b0\u57fa\u672c\u7684read": 495, "write\u529f\u80fd": 495, "\u6700\u540e\u901a\u8fc7": 495, "\u6ce8\u518c\u81ea\u5b9a\u4e49\u7684resolv": 495, "\u6211\u4eec\u4e3agraphscope\u7684\u7528\u6237\u51c6\u5907\u4e86\u4e00\u7cfb\u5217\u8be6\u5c3d\u7684\u5165\u95e8\u6559\u7a0b": 496, "\u4ece\u8fd9\u4e9b\u5165\u95e8\u6559\u7a0b\u4e2d\u4f60\u53ef\u4ee5\u4e86\u89e3\u5230\u5982\u4f55\u542f\u52a8\u4e00\u4e2agraphscope\u4f1a\u8bdd": 496, "\u5982\u4f55\u8f7d\u56fe": 496, "\u4ee5\u53ca\u5982\u4f55\u5206\u522b": 496, "\u4f7f\u7528graphscope\u4e2d\u7684ga": 496, "gle\u5f15\u64ce\u6765\u5b8c\u6210\u56fe\u5206\u6790\u4efb\u52a1": 496, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u548c\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7684\u8bad\u7ec3": 496, "\u6211\u4eec\u7528jupyt": 496, "notebook\u6765\u7ec4\u7ec7\u8fd9\u4e9b\u6559\u7a0b": 496, "\u7528\u6237\u53ef\u4ee5\u5728\u4efb\u4f55\u4e00\u4e2ajupyt": 496, "notebook\u670d\u52a1\u4e2d\u5c1d\u8bd5\u6267\u884c": 496, "\u6211\u4eec\u8fd8\u63d0\u4f9b\u4e86\u5df2\u7ecf\u51c6\u5907\u597d\u7684jupyt": 496, "lab": 496, "\u4ee5\u4fbf\u4e8e\u7528\u6237\u66f4\u5feb\u5730\u4e0a\u624bgraphscop": 496, "\u5165\u95e8\u6559\u7a0b\u5305\u62ec\u5982\u4e0b\u8fd9\u4e9b\u5185\u5bb9": 496}, "objects": {"": [[252, 0, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase"], [252, 1, 1, "_CPPv4N2gs7AppBase7AppBaseEv", "gs::AppBase::AppBase"], [252, 2, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase::CONTEXT_T"], [252, 2, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase::FRAG_T"], [252, 1, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval"], [252, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::context"], [252, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::graph"], [252, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::messages"], [252, 1, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval"], [252, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::context"], [252, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::graph"], [252, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::messages"], [252, 4, 1, "_CPPv4N2gs7AppBase13load_strategyE", "gs::AppBase::load_strategy"], [252, 5, 1, "_CPPv4N2gs7AppBase17message_manager_tE", "gs::AppBase::message_manager_t"], [252, 4, 1, "_CPPv4N2gs7AppBase16message_strategyE", "gs::AppBase::message_strategy"], [252, 4, 1, "_CPPv4N2gs7AppBase16need_split_edgesE", "gs::AppBase::need_split_edges"], [252, 1, 1, "_CPPv4N2gs7AppBaseD0Ev", "gs::AppBase::~AppBase"], [252, 0, 1, "_CPPv4N2gs8AppEntryE", "gs::AppEntry"], [252, 1, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry"], [252, 3, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry::id"], [252, 3, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry::lib_path"], [252, 1, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker"], [252, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::comm_spec"], [252, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::fragment"], [252, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::spec"], [252, 1, 1, "_CPPv4N2gs8AppEntry4InitEv", "gs::AppEntry::Init"], [252, 1, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query"], [252, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::context_key"], [252, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::frag_wrapper"], [252, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::query_args"], [252, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::worker_handler"], [252, 0, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt"], [252, 2, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt::FunctionType"], [252, 2, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt::index"], [252, 0, 1, "_CPPv4I0EN2gs7ArgsNumE", "gs::ArgsNum"], [252, 2, 1, "_CPPv4I0EN2gs7ArgsNumE", "gs::ArgsNum::FunctionType"], [252, 0, 1, "_CPPv4I0EN2gs12ArgsUnpackerE", "gs::ArgsUnpacker"], [252, 2, 1, "_CPPv4I0EN2gs12ArgsUnpackerE", "gs::ArgsUnpacker::T"], [252, 0, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader"], [252, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedELabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedELabel"], [252, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedELabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedELabel::frag_id"], [252, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedELabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedELabel::label_id"], [252, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedVLabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedVLabel"], [252, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedVLabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedVLabel::frag_id"], [252, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedVLabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedVLabel::label_id"], [252, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragment"], [252, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragment::frag_id"], [252, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragmentAsFragmentGroup"], [252, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragmentAsFragmentGroup::frag_id"], [252, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader"], [252, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader"], [252, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::client"], [252, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::client"], [252, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::comm_spec"], [252, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::comm_spec"], [252, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::compact_edges"], [252, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::directed"], [252, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::efiles"], [252, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::generate_eid"], [252, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::graph_info"], [252, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::retain_oid"], [252, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::use_perfect_hash"], [252, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::vfiles"], [252, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader15ExtendLabelDataEN8vineyard8ObjectIDEi", "gs::ArrowFragmentLoader::ExtendLabelData"], [252, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader15ExtendLabelDataEN8vineyard8ObjectIDEi", "gs::ArrowFragmentLoader::ExtendLabelData::extend_type"], [252, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader15ExtendLabelDataEN8vineyard8ObjectIDEi", "gs::ArrowFragmentLoader::ExtendLabelData::frag_id"], [252, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader14LoadEdgeTablesEv", "gs::ArrowFragmentLoader::LoadEdgeTables"], [252, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader12LoadFragmentEv", "gs::ArrowFragmentLoader::LoadFragment"], [252, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader27LoadFragmentAsFragmentGroupEv", "gs::ArrowFragmentLoader::LoadFragmentAsFragmentGroup"], [252, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader20LoadVertexEdgeTablesEv", "gs::ArrowFragmentLoader::LoadVertexEdgeTables"], [252, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader16LoadVertexTablesEv", "gs::ArrowFragmentLoader::LoadVertexTables"], [252, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::OID_T"], [252, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::VERTEX_MAP_T"], [252, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::VID_T"], [252, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader15initPartitionerEv", "gs::ArrowFragmentLoader::initPartitioner"], [252, 1, 1, "_CPPv4N2gs19ArrowFragmentLoaderD0Ev", "gs::ArrowFragmentLoader::~ArrowFragmentLoader"], [252, 0, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment"], [252, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::COMPACT"], [252, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedFragment::Construct"], [252, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedFragment::Construct::meta"], [252, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment6CreateEv", "gs::ArrowProjectedFragment::Create"], [252, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::EDATA_T"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t", "gs::ArrowProjectedFragment::GetData"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t", "gs::ArrowProjectedFragment::GetData::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10GetEdgeNumEv", "gs::ArrowProjectedFragment::GetEdgeNum"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t", "gs::ArrowProjectedFragment::GetFragId"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t", "gs::ArrowProjectedFragment::GetFragId::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t", "gs::ArrowProjectedFragment::GetId"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t", "gs::ArrowProjectedFragment::GetId::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12GetInEdgeNumEv", "gs::ArrowProjectedFragment::GetInEdgeNum"], [252, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList"], [252, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList"], [252, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList"], [252, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::COMPACT_"], [252, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::COMPACT_"], [252, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::COMPACT_"], [252, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::src_fid"], [252, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::v"], [252, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::v"], [252, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingEdgeNumEv", "gs::ArrowProjectedFragment::GetIncomingEdgeNum"], [252, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingInnerVertexAdjList"], [252, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingInnerVertexAdjList::COMPACT_"], [252, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingInnerVertexAdjList::v"], [252, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingOuterVertexAdjList"], [252, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingOuterVertexAdjList::COMPACT_"], [252, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingOuterVertexAdjList::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex::oid"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexGid"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexGid::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexId"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexId::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexInternalId"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexInternalId::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetInnerVerticesNumEv", "gs::ArrowProjectedFragment::GetInnerVerticesNum"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInternalId"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInternalId::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalInDegree"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalInDegree::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalOutDegree"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalOutDegree::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetOutEdgeNumEv", "gs::ArrowProjectedFragment::GetOutEdgeNum"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex::oid"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexGid"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexGid::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexId"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexId::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexInternalId"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexInternalId::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetOuterVerticesNumEv", "gs::ArrowProjectedFragment::GetOuterVerticesNum"], [252, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList"], [252, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList"], [252, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList"], [252, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::COMPACT_"], [252, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::COMPACT_"], [252, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::COMPACT_"], [252, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::dst_fid"], [252, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::v"], [252, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::v"], [252, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingEdgeNumEv", "gs::ArrowProjectedFragment::GetOutgoingEdgeNum"], [252, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingInnerVertexAdjList"], [252, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingInnerVertexAdjList::COMPACT_"], [252, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingInnerVertexAdjList::v"], [252, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingOuterVertexAdjList"], [252, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingOuterVertexAdjList::COMPACT_"], [252, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingOuterVertexAdjList::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetTotalVerticesNumEv", "gs::ArrowProjectedFragment::GetTotalVerticesNum"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex::oid"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex::v"], [252, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment12GetVertexMapEv", "gs::ArrowProjectedFragment::GetVertexMap"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12GetVertexMapEv", "gs::ArrowProjectedFragment::GetVertexMap"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetVerticesNumEv", "gs::ArrowProjectedFragment::GetVerticesNum"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t", "gs::ArrowProjectedFragment::Gid2Oid"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t", "gs::ArrowProjectedFragment::Gid2Oid::gid"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex::gid"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IEDests"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IEDests::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IOEDests"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IOEDests::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex::gid"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13InnerVerticesEv", "gs::ArrowProjectedFragment::InnerVertices"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsInnerVertex"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsInnerVertex::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsOuterVertex"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsOuterVertex::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t", "gs::ArrowProjectedFragment::MirrorVertices"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t", "gs::ArrowProjectedFragment::MirrorVertices::fid"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t", "gs::ArrowProjectedFragment::OEDests"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t", "gs::ArrowProjectedFragment::OEDests::v"], [252, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::OID_T"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t", "gs::ArrowProjectedFragment::Oid2Gid"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid::gid"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t", "gs::ArrowProjectedFragment::Oid2Gid::oid"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid::oid"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex::gid"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t", "gs::ArrowProjectedFragment::OuterVertices"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesEv", "gs::ArrowProjectedFragment::OuterVertices"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t", "gs::ArrowProjectedFragment::OuterVertices::fid"], [252, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp"], [252, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp::comm_spec"], [252, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp::conf"], [252, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project"], [252, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::e_label"], [252, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::e_prop"], [252, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::fragment"], [252, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::v_label"], [252, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::v_prop"], [252, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VDATA_T"], [252, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VERTEX_MAP_T"], [252, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VID_T"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t", "gs::ArrowProjectedFragment::Vertex2Gid"], [252, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t", "gs::ArrowProjectedFragment::Vertex2Gid::v"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8VerticesEv", "gs::ArrowProjectedFragment::Vertices"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10adj_list_tE", "gs::ArrowProjectedFragment::adj_list_t"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment18compact_adj_list_tE", "gs::ArrowProjectedFragment::compact_adj_list_t"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13compact_edgesEv", "gs::ArrowProjectedFragment::compact_edges"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment13compact_nbr_tE", "gs::ArrowProjectedFragment::compact_nbr_t"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16const_adj_list_tE", "gs::ArrowProjectedFragment::const_adj_list_t"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment24const_compact_adj_list_tE", "gs::ArrowProjectedFragment::const_compact_adj_list_t"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8directedEv", "gs::ArrowProjectedFragment::directed"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment7edata_tE", "gs::ArrowProjectedFragment::edata_t"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10edge_labelEv", "gs::ArrowProjectedFragment::edge_label"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12edge_prop_idEv", "gs::ArrowProjectedFragment::edge_prop_id"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment11eid_array_tE", "gs::ArrowProjectedFragment::eid_array_t"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5eid_tE", "gs::ArrowProjectedFragment::eid_t"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment3fidEv", "gs::ArrowProjectedFragment::fid"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment4fnumEv", "gs::ArrowProjectedFragment::fnum"], [252, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment18get_arrow_fragmentEv", "gs::ArrowProjectedFragment::get_arrow_fragment"], [252, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment24get_edata_array_accessorEv", "gs::ArrowProjectedFragment::get_edata_array_accessor"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24get_ie_offsets_begin_ptrEv", "gs::ArrowProjectedFragment::get_ie_offsets_begin_ptr"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment22get_ie_offsets_end_ptrEv", "gs::ArrowProjectedFragment::get_ie_offsets_end_ptr"], [252, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment16get_in_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv", "gs::ArrowProjectedFragment::get_in_edges_ptr"], [252, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment16get_in_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv", "gs::ArrowProjectedFragment::get_in_edges_ptr::COMPACT_"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24get_oe_offsets_begin_ptrEv", "gs::ArrowProjectedFragment::get_oe_offsets_begin_ptr"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment22get_oe_offsets_end_ptrEv", "gs::ArrowProjectedFragment::get_oe_offsets_end_ptr"], [252, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment17get_out_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv", "gs::ArrowProjectedFragment::get_out_edges_ptr"], [252, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment17get_out_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv", "gs::ArrowProjectedFragment::get_out_edges_ptr::COMPACT_"], [252, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment24get_vdata_array_accessorEv", "gs::ArrowProjectedFragment::get_vdata_array_accessor"], [252, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE", "gs::ArrowProjectedFragment::inner_vertex_array_t"], [252, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE", "gs::ArrowProjectedFragment::inner_vertex_array_t::DATA_T"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16inner_vertices_tE", "gs::ArrowProjectedFragment::inner_vertices_t"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14internal_oid_tE", "gs::ArrowProjectedFragment::internal_oid_t"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10label_id_tE", "gs::ArrowProjectedFragment::label_id_t"], [252, 4, 1, "_CPPv4N2gs22ArrowProjectedFragment13load_strategyE", "gs::ArrowProjectedFragment::load_strategy"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16local_vertex_mapEv", "gs::ArrowProjectedFragment::local_vertex_map"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5nbr_tE", "gs::ArrowProjectedFragment::nbr_t"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10nbr_unit_tE", "gs::ArrowProjectedFragment::nbr_unit_t"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5oid_tE", "gs::ArrowProjectedFragment::oid_t"], [252, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE", "gs::ArrowProjectedFragment::outer_vertex_array_t"], [252, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE", "gs::ArrowProjectedFragment::outer_vertex_array_t::DATA_T"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16outer_vertices_tE", "gs::ArrowProjectedFragment::outer_vertices_t"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment9prop_id_tE", "gs::ArrowProjectedFragment::prop_id_t"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16property_graph_tE", "gs::ArrowProjectedFragment::property_graph_t"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment21property_vertex_map_tE", "gs::ArrowProjectedFragment::property_vertex_map_t"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14sub_vertices_tE", "gs::ArrowProjectedFragment::sub_vertices_t"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16use_perfect_hashEv", "gs::ArrowProjectedFragment::use_perfect_hash"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment7vdata_tE", "gs::ArrowProjectedFragment::vdata_t"], [252, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE", "gs::ArrowProjectedFragment::vertex_array_t"], [252, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE", "gs::ArrowProjectedFragment::vertex_array_t::DATA_T"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12vertex_labelEv", "gs::ArrowProjectedFragment::vertex_label"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13vertex_map_idEv", "gs::ArrowProjectedFragment::vertex_map_id"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment12vertex_map_tE", "gs::ArrowProjectedFragment::vertex_map_t"], [252, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14vertex_prop_idEv", "gs::ArrowProjectedFragment::vertex_prop_id"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14vertex_range_tE", "gs::ArrowProjectedFragment::vertex_range_t"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment8vertex_tE", "gs::ArrowProjectedFragment::vertex_t"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10vertices_tE", "gs::ArrowProjectedFragment::vertices_t"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment11vid_array_tE", "gs::ArrowProjectedFragment::vid_array_t"], [252, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5vid_tE", "gs::ArrowProjectedFragment::vid_t"], [252, 1, 1, "_CPPv4N2gs22ArrowProjectedFragmentD0Ev", "gs::ArrowProjectedFragment::~ArrowProjectedFragment"], [252, 0, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap"], [252, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedVertexMap::Construct"], [252, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedVertexMap::Construct::meta"], [252, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap6CreateEv", "gs::ArrowProjectedVertexMap::Create"], [252, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetFidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetFidFromGid"], [252, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetFidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetFidFromGid::gid"], [252, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid"], [252, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid"], [252, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::fid"], [252, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::gid"], [252, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::gid"], [252, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::oid"], [252, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::oid"], [252, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap18GetInnerVertexSizeE5fid_t", "gs::ArrowProjectedVertexMap::GetInnerVertexSize"], [252, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap18GetInnerVertexSizeE5fid_t", "gs::ArrowProjectedVertexMap::GetInnerVertexSize::fid"], [252, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetLidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetLidFromGid"], [252, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetLidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetLidFromGid::gid"], [252, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap16GetOffsetFromLidE5vid_t", "gs::ArrowProjectedVertexMap::GetOffsetFromLid"], [252, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap16GetOffsetFromLidE5vid_t", "gs::ArrowProjectedVertexMap::GetOffsetFromLid::lid"], [252, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid"], [252, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid::gid"], [252, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid::oid"], [252, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap19GetTotalVerticesNumEv", "gs::ArrowProjectedVertexMap::GetTotalVerticesNum"], [252, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::OID_T"], [252, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap10Offset2LidERK5vid_t", "gs::ArrowProjectedVertexMap::Offset2Lid"], [252, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap10Offset2LidERK5vid_t", "gs::ArrowProjectedVertexMap::Offset2Lid::offset"], [252, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project"], [252, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project::v_label"], [252, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project::vm"], [252, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::VERTEX_MAP_T"], [252, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::VID_T"], [252, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap16use_perfect_hashEv", "gs::ArrowProjectedVertexMap::use_perfect_hash"], [252, 0, 1, "_CPPv4I00EN2gs17CtxWrapperBuilderE", "gs::CtxWrapperBuilder"], [252, 2, 1, "_CPPv4I00EN2gs17CtxWrapperBuilderE", "gs::CtxWrapperBuilder::CTX_T"], [252, 0, 1, "_CPPv4I0EN2gs21DefaultPropertyWorkerE", "gs::DefaultPropertyWorker"], [252, 2, 1, "_CPPv4I0EN2gs21DefaultPropertyWorkerE", "gs::DefaultPropertyWorker::APP_T"], [252, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker"], [252, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker::app"], [252, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker::graph"], [252, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker8FinalizeEv", "gs::DefaultPropertyWorker::Finalize"], [252, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker10GetContextEv", "gs::DefaultPropertyWorker::GetContext"], [252, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init"], [252, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init::comm_spec"], [252, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init::pe_spec"], [252, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE", "gs::DefaultPropertyWorker::Output"], [252, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE", "gs::DefaultPropertyWorker::Output::os"], [252, 1, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query"], [252, 2, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query::Args"], [252, 3, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query::args"], [252, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker9context_tE", "gs::DefaultPropertyWorker::context_t"], [252, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker10fragment_tE", "gs::DefaultPropertyWorker::fragment_t"], [252, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker17message_manager_tE", "gs::DefaultPropertyWorker::message_manager_t"], [252, 1, 1, "_CPPv4N2gs21DefaultPropertyWorkerD0Ev", "gs::DefaultPropertyWorker::~DefaultPropertyWorker"], [252, 0, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker"], [252, 0, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker"], [252, 2, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker::APP_T"], [252, 2, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker::APP_T"], [252, 1, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker"], [252, 1, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker"], [252, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::app"], [252, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::app"], [252, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::graph"], [252, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::graph"], [252, 1, 1, "_CPPv4N2gs13DefaultWorker8FinalizeEv", "gs::DefaultWorker::Finalize"], [252, 1, 1, "_CPPv4N2gs13DefaultWorker8FinalizeEv", "gs::DefaultWorker::Finalize"], [252, 1, 1, "_CPPv4N2gs13DefaultWorker10GetContextEv", "gs::DefaultWorker::GetContext"], [252, 1, 1, "_CPPv4N2gs13DefaultWorker10GetContextEv", "gs::DefaultWorker::GetContext"], [252, 1, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init"], [252, 1, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init"], [252, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::comm_spec"], [252, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::comm_spec"], [252, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::pe_spec"], [252, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::pe_spec"], [252, 1, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output"], [252, 1, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output"], [252, 3, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output::os"], [252, 3, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output::os"], [252, 1, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query"], [252, 1, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query"], [252, 2, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::Args"], [252, 2, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::Args"], [252, 3, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::args"], [252, 3, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::args"], [252, 5, 1, "_CPPv4N2gs13DefaultWorker9context_tE", "gs::DefaultWorker::context_t"], [252, 5, 1, "_CPPv4N2gs13DefaultWorker9context_tE", "gs::DefaultWorker::context_t"], [252, 5, 1, "_CPPv4N2gs13DefaultWorker10fragment_tE", "gs::DefaultWorker::fragment_t"], [252, 5, 1, "_CPPv4N2gs13DefaultWorker10fragment_tE", "gs::DefaultWorker::fragment_t"], [252, 5, 1, "_CPPv4N2gs13DefaultWorker17message_manager_tE", "gs::DefaultWorker::message_manager_t"], [252, 5, 1, "_CPPv4N2gs13DefaultWorker17message_manager_tE", "gs::DefaultWorker::message_manager_t"], [252, 1, 1, "_CPPv4N2gs13DefaultWorkerD0Ev", "gs::DefaultWorker::~DefaultWorker"], [252, 1, 1, "_CPPv4N2gs13DefaultWorkerD0Ev", "gs::DefaultWorker::~DefaultWorker"], [252, 0, 1, "_CPPv4N2gs14DispatchResultE", "gs::DispatchResult"], [252, 6, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicyE", "gs::DispatchResult::AggregatePolicy"], [252, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE", "gs::DispatchResult::AggregatePolicy::kConcat"], [252, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE", "gs::DispatchResult::AggregatePolicy::kMergeGraphDef"], [252, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE", "gs::DispatchResult::AggregatePolicy::kPickFirst"], [252, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE", "gs::DispatchResult::AggregatePolicy::kPickFirstNonEmpty"], [252, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE", "gs::DispatchResult::AggregatePolicy::kPickFirstNonEmptyGraphDef"], [252, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE", "gs::DispatchResult::AggregatePolicy::kRequireConsistent"], [252, 1, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult"], [252, 1, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEv", "gs::DispatchResult::DispatchResult"], [252, 3, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult::error_code"], [252, 3, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult::worker_id"], [252, 1, 1, "_CPPv4NK2gs14DispatchResult16aggregate_policyEv", "gs::DispatchResult::aggregate_policy"], [252, 1, 1, "_CPPv4NK2gs14DispatchResult4dataEv", "gs::DispatchResult::data"], [252, 1, 1, "_CPPv4NK2gs14DispatchResult10error_codeEv", "gs::DispatchResult::error_code"], [252, 1, 1, "_CPPv4N2gs14DispatchResult9graph_defEv", "gs::DispatchResult::graph_def"], [252, 1, 1, "_CPPv4NK2gs14DispatchResult9graph_defEv", "gs::DispatchResult::graph_def"], [252, 1, 1, "_CPPv4NK2gs14DispatchResult14has_large_dataEv", "gs::DispatchResult::has_large_data"], [252, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE", "gs::DispatchResult::kConcat"], [252, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE", "gs::DispatchResult::kMergeGraphDef"], [252, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE", "gs::DispatchResult::kPickFirst"], [252, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE", "gs::DispatchResult::kPickFirstNonEmpty"], [252, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE", "gs::DispatchResult::kPickFirstNonEmptyGraphDef"], [252, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE", "gs::DispatchResult::kRequireConsistent"], [252, 1, 1, "_CPPv4N2gs14DispatchResult7messageEv", "gs::DispatchResult::message"], [252, 1, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data"], [252, 1, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data"], [252, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::arc"], [252, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::data"], [252, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::large_data"], [252, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::large_data"], [252, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::policy"], [252, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::policy"], [252, 1, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error"], [252, 3, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error::error_code"], [252, 3, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error::message"], [252, 1, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def"], [252, 3, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def::graph_def"], [252, 3, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def::policy"], [252, 1, 1, "_CPPv4NK2gs14DispatchResult9worker_idEv", "gs::DispatchResult::worker_id"], [252, 0, 1, "_CPPv4N2gs10DispatcherE", "gs::Dispatcher"], [252, 1, 1, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::Dispatch"], [252, 3, 1, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::Dispatch::cmd"], [252, 1, 1, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE", "gs::Dispatcher::Dispatcher"], [252, 3, 1, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE", "gs::Dispatcher::Dispatcher::comm_spec"], [252, 1, 1, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::SetCommand"], [252, 3, 1, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::SetCommand::cmd"], [252, 1, 1, "_CPPv4N2gs10Dispatcher5StartEv", "gs::Dispatcher::Start"], [252, 1, 1, "_CPPv4N2gs10Dispatcher4StopEv", "gs::Dispatcher::Stop"], [252, 1, 1, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE", "gs::Dispatcher::Subscribe"], [252, 3, 1, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE", "gs::Dispatcher::Subscribe::subscriber"], [252, 0, 1, "_CPPv4N2gs12EngineConfigE", "gs::EngineConfig"], [252, 1, 1, "_CPPv4NK2gs12EngineConfig12ToJsonStringEv", "gs::EngineConfig::ToJsonString"], [252, 4, 1, "_CPPv4N2gs12EngineConfig15enable_java_sdkE", "gs::EngineConfig::enable_java_sdk"], [252, 4, 1, "_CPPv4N2gs12EngineConfig8networkxE", "gs::EngineConfig::networkx"], [252, 4, 1, "_CPPv4N2gs12EngineConfig21vineyard_rpc_endpointE", "gs::EngineConfig::vineyard_rpc_endpoint"], [252, 4, 1, "_CPPv4N2gs12EngineConfig15vineyard_socketE", "gs::EngineConfig::vineyard_socket"], [252, 0, 1, "_CPPv4I0EN2gs15FragmentWrapperE", "gs::FragmentWrapper"], [252, 2, 1, "_CPPv4I0EN2gs15FragmentWrapperE", "gs::FragmentWrapper::FRAG_T"], [252, 0, 1, "_CPPv4N2gs8GSObjectE", "gs::GSObject"], [252, 1, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject"], [252, 3, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject::id"], [252, 3, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject::type"], [252, 1, 1, "_CPPv4NK2gs8GSObject8ToStringEv", "gs::GSObject::ToString"], [252, 1, 1, "_CPPv4NK2gs8GSObject2idEv", "gs::GSObject::id"], [252, 1, 1, "_CPPv4NK2gs8GSObject4typeEv", "gs::GSObject::type"], [252, 1, 1, "_CPPv4N2gs8GSObjectD0Ev", "gs::GSObject::~GSObject"], [252, 0, 1, "_CPPv4N2gs11GrapeEngineE", "gs::GrapeEngine"], [252, 1, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE", "gs::GrapeEngine::GrapeEngine"], [252, 1, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine"], [252, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE", "gs::GrapeEngine::GrapeEngine::dag_file"], [252, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine::host"], [252, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine::port"], [252, 1, 1, "_CPPv4N2gs11GrapeEngine10RunDAGFileEv", "gs::GrapeEngine::RunDAGFile"], [252, 1, 1, "_CPPv4N2gs11GrapeEngine5StartEv", "gs::GrapeEngine::Start"], [252, 1, 1, "_CPPv4N2gs11GrapeEngine4StopEv", "gs::GrapeEngine::Stop"], [252, 0, 1, "_CPPv4N2gs13GrapeInstanceE", "gs::GrapeInstance"], [252, 1, 1, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE", "gs::GrapeInstance::GrapeInstance"], [252, 3, 1, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE", "gs::GrapeInstance::GrapeInstance::comm_spec"], [252, 1, 1, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE", "gs::GrapeInstance::Init"], [252, 3, 1, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE", "gs::GrapeInstance::Init::vineyard_socket"], [252, 1, 1, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE", "gs::GrapeInstance::OnReceive"], [252, 3, 1, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE", "gs::GrapeInstance::OnReceive::cmd"], [252, 0, 1, "_CPPv4N2gs13ObjectManagerE", "gs::ObjectManager"], [252, 1, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject"], [252, 1, 1, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE", "gs::ObjectManager::GetObject"], [252, 2, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject::T"], [252, 3, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject::id"], [252, 3, 1, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE", "gs::ObjectManager::GetObject::id"], [252, 1, 1, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE", "gs::ObjectManager::HasObject"], [252, 3, 1, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE", "gs::ObjectManager::HasObject::id"], [252, 1, 1, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE", "gs::ObjectManager::PutObject"], [252, 3, 1, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE", "gs::ObjectManager::PutObject::obj"], [252, 1, 1, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE", "gs::ObjectManager::RemoveObject"], [252, 3, 1, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE", "gs::ObjectManager::RemoveObject::id"], [252, 0, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker"], [252, 0, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker"], [252, 2, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker::APP_T"], [252, 2, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker::APP_T"], [252, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv", "gs::ParallelPropertyWorker::Finalize"], [252, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv", "gs::ParallelPropertyWorker::Finalize"], [252, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv", "gs::ParallelPropertyWorker::GetContext"], [252, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv", "gs::ParallelPropertyWorker::GetContext"], [252, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init"], [252, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init"], [252, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::comm_spec"], [252, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::comm_spec"], [252, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::pe_spec"], [252, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::pe_spec"], [252, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output"], [252, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output"], [252, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output::os"], [252, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output::os"], [252, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker"], [252, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker"], [252, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::app"], [252, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::app"], [252, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::graph"], [252, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::graph"], [252, 1, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query"], [252, 1, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query"], [252, 2, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::Args"], [252, 2, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::Args"], [252, 3, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::args"], [252, 3, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::args"], [252, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker9context_tE", "gs::ParallelPropertyWorker::context_t"], [252, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker9context_tE", "gs::ParallelPropertyWorker::context_t"], [252, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE", "gs::ParallelPropertyWorker::fragment_t"], [252, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE", "gs::ParallelPropertyWorker::fragment_t"], [252, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE", "gs::ParallelPropertyWorker::message_manager_t"], [252, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE", "gs::ParallelPropertyWorker::message_manager_t"], [252, 1, 1, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev", "gs::ParallelPropertyWorker::~ParallelPropertyWorker"], [252, 1, 1, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev", "gs::ParallelPropertyWorker::~ParallelPropertyWorker"], [252, 0, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase"], [252, 2, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase::CONTEXT_T"], [252, 2, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase::FRAG_T"], [252, 1, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval"], [252, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::context"], [252, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::graph"], [252, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::messages"], [252, 1, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval"], [252, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::context"], [252, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::graph"], [252, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::messages"], [252, 1, 1, "_CPPv4N2gs15PropertyAppBase15PropertyAppBaseEv", "gs::PropertyAppBase::PropertyAppBase"], [252, 4, 1, "_CPPv4N2gs15PropertyAppBase13load_strategyE", "gs::PropertyAppBase::load_strategy"], [252, 5, 1, "_CPPv4N2gs15PropertyAppBase17message_manager_tE", "gs::PropertyAppBase::message_manager_t"], [252, 4, 1, "_CPPv4N2gs15PropertyAppBase16message_strategyE", "gs::PropertyAppBase::message_strategy"], [252, 4, 1, "_CPPv4N2gs15PropertyAppBase16need_split_edgesE", "gs::PropertyAppBase::need_split_edges"], [252, 1, 1, "_CPPv4N2gs15PropertyAppBaseD0Ev", "gs::PropertyAppBase::~PropertyAppBase"], [252, 0, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase"], [252, 2, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase::CONTEXT_T"], [252, 2, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase::FRAG_T"], [252, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval"], [252, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval::context"], [252, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval::graph"], [252, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval"], [252, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval::context"], [252, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval::graph"], [252, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase19PropertyAutoAppBaseEv", "gs::PropertyAutoAppBase::PropertyAutoAppBase"], [252, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase13load_strategyE", "gs::PropertyAutoAppBase::load_strategy"], [252, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase16message_strategyE", "gs::PropertyAutoAppBase::message_strategy"], [252, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase16need_split_edgesE", "gs::PropertyAutoAppBase::need_split_edges"], [252, 1, 1, "_CPPv4N2gs19PropertyAutoAppBaseD0Ev", "gs::PropertyAutoAppBase::~PropertyAutoAppBase"], [252, 0, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker"], [252, 0, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker"], [252, 2, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker::APP_T"], [252, 2, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker::APP_T"], [252, 1, 1, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv", "gs::PropertyAutoWorker::Finalize"], [252, 1, 1, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv", "gs::PropertyAutoWorker::Finalize"], [252, 1, 1, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv", "gs::PropertyAutoWorker::GetContext"], [252, 1, 1, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv", "gs::PropertyAutoWorker::GetContext"], [252, 1, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init"], [252, 1, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init"], [252, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::comm_spec"], [252, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::comm_spec"], [252, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::pe_spec"], [252, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::pe_spec"], [252, 1, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output"], [252, 1, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output"], [252, 3, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output::os"], [252, 3, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output::os"], [252, 1, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker"], [252, 1, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker"], [252, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::app"], [252, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::app"], [252, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::graph"], [252, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::graph"], [252, 1, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query"], [252, 1, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query"], [252, 2, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::Args"], [252, 2, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::Args"], [252, 3, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::args"], [252, 3, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::args"], [252, 5, 1, "_CPPv4N2gs18PropertyAutoWorker9context_tE", "gs::PropertyAutoWorker::context_t"], [252, 5, 1, "_CPPv4N2gs18PropertyAutoWorker9context_tE", "gs::PropertyAutoWorker::context_t"], [252, 5, 1, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE", "gs::PropertyAutoWorker::fragment_t"], [252, 5, 1, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE", "gs::PropertyAutoWorker::fragment_t"], [252, 5, 1, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE", "gs::PropertyAutoWorker::message_manager_t"], [252, 5, 1, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE", "gs::PropertyAutoWorker::message_manager_t"], [252, 1, 1, "_CPPv4N2gs18PropertyAutoWorkerD0Ev", "gs::PropertyAutoWorker::~PropertyAutoWorker"], [252, 1, 1, "_CPPv4N2gs18PropertyAutoWorkerD0Ev", "gs::PropertyAutoWorker::~PropertyAutoWorker"], [252, 0, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext"], [252, 2, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext::DATA_T"], [252, 2, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext::FRAG_T"], [252, 1, 1, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t", "gs::TensorContext::TensorContext"], [252, 3, 1, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t", "gs::TensorContext::TensorContext::fragment"], [252, 1, 1, "_CPPv4N2gs13TensorContext6assignERK6data_t", "gs::TensorContext::assign"], [252, 1, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign"], [252, 3, 1, "_CPPv4N2gs13TensorContext6assignERK6data_t", "gs::TensorContext::assign::data"], [252, 3, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign::data"], [252, 3, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign::shape"], [252, 5, 1, "_CPPv4N2gs13TensorContext6data_tE", "gs::TensorContext::data_t"], [252, 1, 1, "_CPPv4N2gs13TensorContext8fragmentEv", "gs::TensorContext::fragment"], [252, 1, 1, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE", "gs::TensorContext::set_shape"], [252, 3, 1, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE", "gs::TensorContext::set_shape::shape"], [252, 1, 1, "_CPPv4NK2gs13TensorContext5shapeEv", "gs::TensorContext::shape"], [252, 1, 1, "_CPPv4N2gs13TensorContext6tensorEv", "gs::TensorContext::tensor"], [252, 0, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper"], [252, 2, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper::DATA_T"], [252, 2, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper::FRAG_T"], [252, 1, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper"], [252, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::ctx"], [252, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::frag_wrapper"], [252, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::id"], [252, 1, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays"], [252, 3, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays::comm_spec"], [252, 3, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays::selectors"], [252, 1, 1, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE", "gs::TensorContextWrapper::ToDataframe"], [252, 3, 1, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE", "gs::TensorContextWrapper::ToDataframe::comm_spec"], [252, 1, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray"], [252, 3, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray::axis"], [252, 3, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray::comm_spec"], [252, 1, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe"], [252, 3, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe::client"], [252, 3, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe::comm_spec"], [252, 1, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor"], [252, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::axis"], [252, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::client"], [252, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::comm_spec"], [252, 1, 1, "_CPPv4N2gs20TensorContextWrapper12context_typeEv", "gs::TensorContextWrapper::context_type"], [252, 1, 1, "_CPPv4N2gs20TensorContextWrapper16fragment_wrapperEv", "gs::TensorContextWrapper::fragment_wrapper"], [252, 0, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper"], [252, 2, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper::DATA_T"], [252, 2, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper::FRAG_T"], [252, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays"], [252, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays::comm_spec"], [252, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays::selectors"], [252, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe"], [252, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::comm_spec"], [252, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::range"], [252, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::selectors"], [252, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray"], [252, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::comm_spec"], [252, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::range"], [252, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::selector"], [252, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe"], [252, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::client"], [252, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::comm_spec"], [252, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::range"], [252, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::selectors"], [252, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor"], [252, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::client"], [252, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::comm_spec"], [252, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::range"], [252, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::selector"], [252, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper"], [252, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::ctx"], [252, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::frag_wrapper"], [252, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::id"], [252, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper12context_typeEv", "gs::VertexDataContextWrapper::context_type"], [252, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper16fragment_wrapperEv", "gs::VertexDataContextWrapper::fragment_wrapper"], [252, 0, 1, "_CPPv4I0EN2gs21VertexPropertyContextE", "gs::VertexPropertyContext"], [252, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContextE", "gs::VertexPropertyContext::FRAG_T"], [252, 1, 1, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t", "gs::VertexPropertyContext::VertexPropertyContext"], [252, 3, 1, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t", "gs::VertexPropertyContext::VertexPropertyContext::fragment"], [252, 1, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column"], [252, 3, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column::name"], [252, 3, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column::type"], [252, 1, 1, "_CPPv4N2gs21VertexPropertyContext8fragmentEv", "gs::VertexPropertyContext::fragment"], [252, 5, 1, "_CPPv4N2gs21VertexPropertyContext10fragment_tE", "gs::VertexPropertyContext::fragment_t"], [252, 1, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t", "gs::VertexPropertyContext::get_column"], [252, 1, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE", "gs::VertexPropertyContext::get_column"], [252, 3, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t", "gs::VertexPropertyContext::get_column::index"], [252, 3, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE", "gs::VertexPropertyContext::get_column::name"], [252, 1, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column"], [252, 1, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column"], [252, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column::DATA_T"], [252, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column::DATA_T"], [252, 3, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column::index"], [252, 3, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column::name"], [252, 5, 1, "_CPPv4N2gs21VertexPropertyContext5oid_tE", "gs::VertexPropertyContext::oid_t"], [252, 5, 1, "_CPPv4N2gs21VertexPropertyContext9prop_id_tE", "gs::VertexPropertyContext::prop_id_t"], [252, 1, 1, "_CPPv4N2gs21VertexPropertyContext14properties_mapEv", "gs::VertexPropertyContext::properties_map"], [252, 1, 1, "_CPPv4N2gs21VertexPropertyContext17vertex_propertiesEv", "gs::VertexPropertyContext::vertex_properties"], [252, 5, 1, "_CPPv4N2gs21VertexPropertyContext8vertex_tE", "gs::VertexPropertyContext::vertex_t"], [252, 0, 1, "_CPPv4N2gs3rpc16AnalyticalServerE", "gs::rpc::AnalyticalServer"], [252, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer"], [252, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::dispatcher"], [252, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::host"], [252, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::port"], [252, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer11StartServerEv", "gs::rpc::AnalyticalServer::StartServer"], [252, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer10StopServerEv", "gs::rpc::AnalyticalServer::StopServer"], [0, 8, 1, "", "all_pairs_shortest_path_length"], [0, 8, 1, "", "attribute_assortativity"], [0, 8, 1, "", "average_degree_connectivity"], [0, 8, 1, "", "betweenness_centrality"], [0, 8, 1, "", "bfs"], [0, 8, 1, "id0", "cdlp"], [0, 8, 1, "", "closeness_centrality"], [0, 8, 1, "id1", "clustering"], [0, 8, 1, "", "degree_assortativity_coefficient"], [0, 8, 1, "", "degree_centrality"], [0, 8, 1, "", "dfs"], [0, 8, 1, "", "eigenvector_centrality"], [0, 8, 1, "", "hits"], [0, 8, 1, "", "katz_centrality"], [0, 8, 1, "", "kkore"], [0, 8, 1, "", "kshell"], [0, 8, 1, "id2", "lcc"], [0, 8, 1, "", "lpa"], [0, 8, 1, "id3", "pagerank"], [0, 8, 1, "", "sampling_path"], [0, 8, 1, "", "sssp"], [0, 8, 1, "id4", "voterank"], [0, 8, 1, "id5", "wcc"]], "graphscope": [[469, 9, 1, "", "Session"], [259, 12, 1, "", "Vertex"], [253, 8, 1, "", "attribute_assortativity_coefficient"], [253, 8, 1, "", "average_degree_connectivity"], [253, 8, 1, "", "average_shortest_path_length"], [253, 8, 1, "", "avg_clustering"], [253, 8, 1, "", "bfs"], [253, 8, 1, "", "cdlp"], [253, 8, 1, "", "clustering"], [260, 8, 1, "", "declare"], [253, 8, 1, "", "degree_assortativity_coefficient"], [253, 8, 1, "", "degree_centrality"], [253, 8, 1, "", "eigenvector_centrality"], [303, 8, 1, "", "g"], [304, 8, 1, "", "get_default_session"], [305, 8, 1, "", "graphlearn"], [306, 8, 1, "", "gremlin"], [307, 8, 1, "", "has_default_session"], [253, 8, 1, "", "hits"], [253, 8, 1, "", "is_simple_path"], [253, 8, 1, "", "k_core"], [253, 8, 1, "", "k_shell"], [253, 8, 1, "", "katz_centrality"], [253, 8, 1, "", "louvain"], [253, 8, 1, "", "lpa"], [253, 8, 1, "", "lpa_u2i"], [253, 8, 1, "", "numeric_assortativity_coefficient"], [253, 8, 1, "", "pagerank"], [253, 8, 1, "", "pagerank_nx"], [308, 14, 1, "", "session"], [309, 8, 1, "", "set_option"], [253, 8, 1, "", "sssp"], [253, 8, 1, "", "triangles"], [253, 8, 1, "", "voterank"], [253, 8, 1, "", "wcc"]], "graphscope.Session": [[469, 10, 1, "", "__enter__"], [469, 10, 1, "", "__exit__"], [469, 10, 1, "", "__init__"], [469, 10, 1, "", "add_lib"], [469, 10, 1, "", "as_default"], [469, 10, 1, "", "close"], [469, 10, 1, "", "connected"], [469, 11, 1, "", "engine_config"], [469, 10, 1, "", "g"], [469, 10, 1, "", "get_config"], [469, 10, 1, "", "get_vineyard_object_mapping_table"], [469, 10, 1, "", "graphlearn"], [469, 11, 1, "", "info"], [469, 10, 1, "", "interactive"], [469, 10, 1, "", "load_from"], [469, 10, 1, "", "restore_from_pvc"], [469, 10, 1, "", "run_fetches"], [469, 10, 1, "", "store_to_pvc"]], "graphscope.analytical.app": [[253, 9, 1, "", "JavaApp"]], "graphscope.analytical.app.JavaApp": [[253, 10, 1, "", "__call__"], [253, 10, 1, "", "__init__"], [253, 10, 1, "", "is_compatible"], [253, 10, 1, "", "signature"]], "graphscope.framework.app": [[253, 9, 1, "", "App"], [253, 9, 1, "", "AppAssets"], [253, 9, 1, "", "AppDAGNode"], [261, 8, 1, "", "load_app"]], "graphscope.framework.app.App": [[253, 10, 1, "", "__del__"], [253, 10, 1, "", "__init__"], [253, 11, 1, "", "key"], [253, 11, 1, "", "signature"]], "graphscope.framework.app.AppAssets": [[253, 10, 1, "", "__init__"], [253, 11, 1, "", "algo"], [253, 11, 1, "", "context_type"], [253, 11, 1, "", "gar"], [253, 10, 1, "", "is_compatible"], [253, 11, 1, "", "signature"], [253, 11, 1, "", "type"]], "graphscope.framework.context": [[254, 9, 1, "", "BaseContextDAGNode"], [254, 9, 1, "", "Context"], [254, 9, 1, "", "DynamicVertexDataContext"], [254, 9, 1, "", "LabeledVertexDataContextDAGNode"], [254, 9, 1, "", "LabeledVertexPropertyContextDAGNode"], [254, 9, 1, "", "ResultDAGNode"], [254, 9, 1, "", "TensorContextDAGNode"], [254, 9, 1, "", "VertexDataContextDAGNode"], [254, 9, 1, "", "VertexPropertyContextDAGNode"]], "graphscope.framework.context.BaseContextDAGNode": [[254, 10, 1, "", "to_dataframe"], [254, 10, 1, "", "to_numpy"], [254, 10, 1, "", "to_vineyard_dataframe"], [254, 10, 1, "", "to_vineyard_tensor"]], "graphscope.framework": [[466, 13, 0, "-", "dag_utils"]], "graphscope.framework.dag_utils": [[262, 8, 1, "", "add_column"], [263, 8, 1, "", "add_labels_to_graph"], [264, 8, 1, "", "arrow_to_dynamic"], [265, 8, 1, "", "bind_app"], [266, 8, 1, "", "clear_edges"], [267, 8, 1, "", "clear_graph"], [268, 8, 1, "", "context_to_dataframe"], [269, 8, 1, "", "context_to_numpy"], [270, 8, 1, "", "copy_graph"], [271, 8, 1, "", "create_app"], [272, 8, 1, "", "create_graph"], [273, 8, 1, "", "create_graph_view"], [274, 8, 1, "", "create_loader"], [275, 8, 1, "", "create_subgraph"], [276, 8, 1, "", "create_unload_op"], [277, 8, 1, "", "dynamic_to_arrow"], [278, 8, 1, "", "get_context_data"], [279, 8, 1, "", "graph_to_dataframe"], [280, 8, 1, "", "graph_to_numpy"], [281, 8, 1, "", "gremlin_to_subgraph"], [282, 8, 1, "", "modify_edges"], [283, 8, 1, "", "modify_vertices"], [284, 8, 1, "", "output"], [285, 8, 1, "", "project_arrow_property_graph"], [286, 8, 1, "", "project_to_simple"], [287, 8, 1, "", "report_graph"], [288, 8, 1, "", "run_app"], [289, 8, 1, "", "to_data_sink"], [290, 8, 1, "", "to_directed"], [291, 8, 1, "", "to_undirected"], [292, 8, 1, "", "to_vineyard_dataframe"], [293, 8, 1, "", "to_vineyard_tensor"], [294, 8, 1, "", "unload_app"], [295, 8, 1, "", "unload_context"], [296, 8, 1, "", "unload_graph"]], "graphscope.framework.graph": [[324, 9, 1, "", "Graph"], [324, 9, 1, "", "GraphDAGNode"]], "graphscope.framework.graph.Graph": [[324, 10, 1, "", "__init__"], [324, 10, 1, "", "add_column"], [324, 10, 1, "", "add_edges"], [324, 10, 1, "", "add_vertices"], [324, 10, 1, "", "consolidate_columns"], [324, 10, 1, "", "detach"], [324, 11, 1, "", "key"], [324, 10, 1, "", "load_from"], [324, 10, 1, "", "loaded"], [324, 10, 1, "", "project"], [324, 10, 1, "", "save_to"], [324, 11, 1, "", "schema"], [324, 11, 1, "", "schema_path"], [324, 11, 1, "", "session_id"], [324, 10, 1, "", "to_dataframe"], [324, 10, 1, "", "to_directed"], [324, 10, 1, "", "to_numpy"], [324, 10, 1, "", "to_undirected"], [324, 11, 1, "", "vineyard_id"]], "graphscope.framework.graph.GraphDAGNode": [[324, 10, 1, "", "__init__"], [324, 10, 1, "", "add_column"], [324, 10, 1, "", "add_edges"], [324, 10, 1, "", "add_vertices"], [324, 10, 1, "", "consolidate_columns"], [324, 10, 1, "", "project"]], "graphscope.framework.graph_builder": [[324, 8, 1, "", "load_from"]], "graphscope.framework.loader": [[324, 9, 1, "", "Loader"]], "graphscope.framework.loader.Loader": [[324, 10, 1, "", "__init__"]], "graphscope.framework.operation": [[466, 9, 1, "", "Operation"]], "graphscope.framework.operation.Operation": [[297, 10, 1, "", "__init__"], [298, 10, 1, "", "as_op_def"], [299, 10, 1, "", "eval"], [300, 11, 1, "", "evaluated"], [301, 11, 1, "", "key"], [302, 11, 1, "", "signature"]], "graphscope.interactive.query": [[325, 9, 1, "", "InteractiveQuery"]], "graphscope.interactive.query.InteractiveQuery": [[325, 10, 1, "", "__init__"], [325, 10, 1, "", "close"], [325, 11, 1, "", "cypher_driver"], [325, 11, 1, "", "cypher_url"], [325, 10, 1, "", "execute"], [325, 11, 1, "", "graph_url"], [325, 11, 1, "", "gremlin_client"], [325, 11, 1, "", "gremlin_url"], [325, 11, 1, "", "object_id"], [325, 11, 1, "", "session"], [325, 11, 1, "", "session_id"], [325, 10, 1, "", "subgraph"], [325, 10, 1, "", "submit"], [325, 10, 1, "", "traversal_source"]], "graphscope.learning.graph": [[326, 9, 1, "", "Graph"]], "graphscope.learning.graph.Graph": [[326, 10, 1, "", "E"], [326, 10, 1, "", "V"], [326, 10, 1, "", "__init__"], [326, 10, 1, "", "get_handle"]], "graphscope.nx": [[462, 9, 1, "", "DiGraph"], [462, 9, 1, "", "Graph"], [464, 8, 1, "", "read_adjlist"], [464, 8, 1, "", "read_edgelist"]], "graphscope.nx.DiGraph": [[462, 10, 1, "", "__contains__"], [462, 10, 1, "", "__getitem__"], [462, 10, 1, "", "__init__"], [462, 10, 1, "", "__iter__"], [462, 10, 1, "", "__len__"], [462, 10, 1, "", "add_edge"], [462, 10, 1, "", "add_edges_from"], [462, 10, 1, "", "add_node"], [462, 10, 1, "", "add_nodes_from"], [462, 10, 1, "", "add_weighted_edges_from"], [462, 11, 1, "", "adj"], [462, 10, 1, "", "adjacency"], [462, 14, 1, "", "adjlist_inner_dict_factory"], [462, 14, 1, "", "adjlist_outer_dict_factory"], [462, 10, 1, "", "clear"], [462, 10, 1, "", "clear_edges"], [462, 10, 1, "", "copy"], [462, 11, 1, "", "degree"], [462, 14, 1, "", "edge_attr_dict_factory"], [462, 10, 1, "", "edge_subgraph"], [462, 11, 1, "", "edges"], [462, 10, 1, "", "get_edge_data"], [462, 14, 1, "", "graph_attr_dict_factory"], [462, 14, 1, "", "graph_cache_factory"], [462, 11, 1, "", "graph_type"], [462, 10, 1, "", "has_edge"], [462, 10, 1, "", "has_node"], [462, 10, 1, "", "has_predecessor"], [462, 10, 1, "", "has_successor"], [462, 11, 1, "", "in_degree"], [462, 11, 1, "", "in_edges"], [462, 10, 1, "", "is_directed"], [462, 10, 1, "", "is_multigraph"], [462, 11, 1, "", "key"], [462, 11, 1, "", "name"], [462, 10, 1, "", "nbunch_iter"], [462, 10, 1, "", "neighbors"], [462, 14, 1, "", "node_attr_dict_factory"], [462, 14, 1, "", "node_dict_factory"], [462, 11, 1, "", "nodes"], [462, 10, 1, "", "number_of_edges"], [462, 10, 1, "", "number_of_nodes"], [462, 11, 1, "", "op"], [462, 10, 1, "", "order"], [462, 11, 1, "", "out_degree"], [462, 11, 1, "", "out_edges"], [462, 11, 1, "", "pred"], [462, 10, 1, "", "predecessors"], [462, 10, 1, "", "remove_edge"], [462, 10, 1, "", "remove_edges_from"], [462, 10, 1, "", "remove_node"], [462, 10, 1, "", "remove_nodes_from"], [462, 10, 1, "", "reverse"], [462, 11, 1, "", "schema"], [462, 11, 1, "", "session"], [462, 11, 1, "", "session_id"], [462, 10, 1, "", "set_edge_data"], [462, 10, 1, "", "set_node_data"], [462, 11, 1, "", "signature"], [462, 10, 1, "", "size"], [462, 10, 1, "", "subgraph"], [462, 11, 1, "", "succ"], [462, 10, 1, "", "successors"], [462, 10, 1, "", "to_directed"], [462, 10, 1, "", "to_undirected"], [462, 10, 1, "", "to_undirected_class"], [462, 10, 1, "", "update"]], "graphscope.nx.Graph": [[462, 10, 1, "", "__contains__"], [462, 10, 1, "", "__getitem__"], [465, 8, 1, "", "__init__"], [462, 10, 1, "", "__iter__"], [462, 10, 1, "", "__len__"], [465, 8, 1, "", "_convert_arrow_to_dynamic"], [462, 10, 1, "", "add_edge"], [462, 10, 1, "", "add_edges_from"], [462, 10, 1, "", "add_node"], [462, 10, 1, "", "add_nodes_from"], [462, 10, 1, "", "add_weighted_edges_from"], [462, 11, 1, "", "adj"], [462, 10, 1, "", "adjacency"], [462, 14, 1, "", "adjlist_inner_dict_factory"], [462, 14, 1, "", "adjlist_outer_dict_factory"], [462, 10, 1, "", "clear"], [462, 10, 1, "", "clear_edges"], [462, 10, 1, "", "copy"], [462, 11, 1, "", "degree"], [462, 14, 1, "", "edge_attr_dict_factory"], [462, 10, 1, "", "edge_subgraph"], [462, 11, 1, "", "edges"], [462, 10, 1, "", "get_edge_data"], [462, 14, 1, "", "graph_attr_dict_factory"], [462, 14, 1, "", "graph_cache_factory"], [462, 11, 1, "", "graph_type"], [462, 10, 1, "", "has_edge"], [462, 10, 1, "", "has_node"], [462, 10, 1, "", "is_directed"], [462, 10, 1, "", "is_multigraph"], [462, 11, 1, "", "key"], [462, 11, 1, "", "name"], [462, 10, 1, "", "nbunch_iter"], [462, 10, 1, "", "neighbors"], [462, 14, 1, "", "node_attr_dict_factory"], [462, 14, 1, "", "node_dict_factory"], [462, 11, 1, "", "nodes"], [462, 10, 1, "", "number_of_edges"], [462, 10, 1, "", "number_of_nodes"], [462, 11, 1, "", "op"], [462, 10, 1, "", "order"], [462, 10, 1, "", "remove_edge"], [462, 10, 1, "", "remove_edges_from"], [462, 10, 1, "", "remove_node"], [462, 10, 1, "", "remove_nodes_from"], [462, 11, 1, "", "schema"], [462, 11, 1, "", "session"], [462, 11, 1, "", "session_id"], [462, 10, 1, "", "set_edge_data"], [462, 10, 1, "", "set_node_data"], [462, 11, 1, "", "signature"], [462, 10, 1, "", "size"], [462, 10, 1, "", "subgraph"], [462, 10, 1, "", "to_directed"], [462, 10, 1, "", "to_undirected"], [462, 10, 1, "", "to_undirected_class"], [462, 10, 1, "", "update"]], "graphscope.nx.builtin": [[327, 8, 1, "", "average_clustering"], [327, 8, 1, "", "average_shortest_path_length"], [327, 8, 1, "", "bfs_edges"], [327, 8, 1, "", "clustering"], [327, 8, 1, "", "degree_centrality"], [327, 8, 1, "", "eigenvector_centrality"], [327, 8, 1, "", "has_path"], [327, 8, 1, "", "hits"], [327, 8, 1, "", "in_degree_centrality"], [327, 8, 1, "", "k_core"], [327, 8, 1, "", "katz_centrality"], [327, 8, 1, "", "out_degree_centrality"], [327, 8, 1, "", "triangles"]], "graphscope.nx.classes": [[328, 13, 0, "-", "function"]], "graphscope.nx.classes.function": [[329, 8, 1, "", "add_cycle"], [330, 8, 1, "", "add_path"], [331, 8, 1, "", "add_star"], [332, 8, 1, "", "all_neighbors"], [333, 8, 1, "", "common_neighbors"], [334, 8, 1, "", "create_empty_copy"], [335, 8, 1, "", "degree"], [336, 8, 1, "", "degree_histogram"], [337, 8, 1, "", "density"], [338, 8, 1, "", "edge_subgraph"], [339, 8, 1, "", "edges"], [340, 8, 1, "", "freeze"], [341, 8, 1, "", "induced_subgraph"], [342, 8, 1, "", "info"], [343, 8, 1, "", "is_directed"], [344, 8, 1, "", "is_empty"], [345, 8, 1, "", "is_frozen"], [346, 8, 1, "", "is_negatively_weighted"], [347, 8, 1, "", "is_weighted"], [348, 8, 1, "", "neighbors"], [349, 8, 1, "", "nodes"], [350, 8, 1, "", "nodes_with_selfloops"], [351, 8, 1, "", "non_edges"], [352, 8, 1, "", "non_neighbors"], [353, 8, 1, "", "number_of_edges"], [354, 8, 1, "", "number_of_nodes"], [355, 8, 1, "", "number_of_selfloops"], [356, 8, 1, "", "selfloop_edges"], [357, 8, 1, "", "subgraph"], [358, 8, 1, "", "to_directed"], [359, 8, 1, "", "to_undirected"]], "graphscope.nx.generators": [[461, 13, 0, "-", "atlas"], [461, 13, 0, "-", "classic"], [461, 13, 0, "-", "community"], [461, 13, 0, "-", "degree_seq"], [461, 13, 0, "-", "directed"], [461, 13, 0, "-", "duplication"], [461, 13, 0, "-", "ego"], [461, 13, 0, "-", "expanders"], [461, 13, 0, "-", "geometric"], [461, 13, 0, "-", "harary_graph"], [461, 13, 0, "-", "intersection"], [461, 13, 0, "-", "joint_degree_seq"], [461, 13, 0, "-", "mycielski"], [461, 13, 0, "-", "nonisomorphic_trees"], [461, 13, 0, "-", "small"], [461, 13, 0, "-", "social"], [461, 13, 0, "-", "spectral_graph_forge"], [461, 13, 0, "-", "sudoku"], [461, 13, 0, "-", "trees"], [461, 13, 0, "-", "triads"]], "graphscope.nx.generators.atlas": [[360, 8, 1, "", "graph_atlas"], [361, 8, 1, "", "graph_atlas_g"]], "graphscope.nx.generators.classic": [[362, 8, 1, "", "balanced_tree"], [363, 8, 1, "", "barbell_graph"], [364, 8, 1, "", "binomial_tree"], [365, 8, 1, "", "circulant_graph"], [366, 8, 1, "", "circular_ladder_graph"], [367, 8, 1, "", "complete_graph"], [368, 8, 1, "", "complete_multipartite_graph"], [369, 8, 1, "", "cycle_graph"], [370, 8, 1, "", "dorogovtsev_goltsev_mendes_graph"], [371, 8, 1, "", "empty_graph"], [372, 8, 1, "", "full_rary_tree"], [373, 8, 1, "", "ladder_graph"], [374, 8, 1, "", "lollipop_graph"], [375, 8, 1, "", "null_graph"], [376, 8, 1, "", "path_graph"], [377, 8, 1, "", "star_graph"], [378, 8, 1, "", "trivial_graph"], [379, 8, 1, "", "turan_graph"], [380, 8, 1, "", "wheel_graph"]], "graphscope.nx.generators.community": [[381, 8, 1, "", "LFR_benchmark_graph"], [382, 8, 1, "", "caveman_graph"], [383, 8, 1, "", "connected_caveman_graph"], [384, 8, 1, "", "gaussian_random_partition_graph"], [385, 8, 1, "", "planted_partition_graph"], [386, 8, 1, "", "random_partition_graph"], [387, 8, 1, "", "relaxed_caveman_graph"], [388, 8, 1, "", "ring_of_cliques"], [389, 8, 1, "", "stochastic_block_model"], [390, 8, 1, "", "windmill_graph"]], "graphscope.nx.generators.degree_seq": [[391, 8, 1, "", "configuration_model"], [392, 8, 1, "", "degree_sequence_tree"], [393, 8, 1, "", "directed_configuration_model"], [394, 8, 1, "", "directed_havel_hakimi_graph"], [395, 8, 1, "", "expected_degree_graph"], [396, 8, 1, "", "havel_hakimi_graph"], [397, 8, 1, "", "random_degree_sequence_graph"]], "graphscope.nx.generators.directed": [[398, 8, 1, "", "gn_graph"], [399, 8, 1, "", "gnc_graph"], [400, 8, 1, "", "gnr_graph"], [401, 8, 1, "", "random_k_out_graph"], [402, 8, 1, "", "scale_free_graph"]], "graphscope.nx.generators.duplication": [[403, 8, 1, "", "duplication_divergence_graph"], [404, 8, 1, "", "partial_duplication_graph"]], "graphscope.nx.generators.ego": [[405, 8, 1, "", "ego_graph"]], "graphscope.nx.generators.expanders": [[406, 8, 1, "", "chordal_cycle_graph"], [407, 8, 1, "", "margulis_gabber_galil_graph"], [408, 8, 1, "", "paley_graph"]], "graphscope.nx.generators.geometric": [[409, 8, 1, "", "geographical_threshold_graph"], [410, 8, 1, "", "random_geometric_graph"], [411, 8, 1, "", "soft_random_geometric_graph"], [412, 8, 1, "", "thresholded_random_geometric_graph"], [413, 8, 1, "", "waxman_graph"]], "graphscope.nx.generators.harary_graph": [[414, 8, 1, "", "hkn_harary_graph"], [415, 8, 1, "", "hnm_harary_graph"]], "graphscope.nx.generators.intersection": [[416, 8, 1, "", "general_random_intersection_graph"], [417, 8, 1, "", "k_random_intersection_graph"], [418, 8, 1, "", "uniform_random_intersection_graph"]], "graphscope.nx.generators.joint_degree_seq": [[419, 8, 1, "", "directed_joint_degree_graph"], [420, 8, 1, "", "is_valid_directed_joint_degree"], [421, 8, 1, "", "is_valid_joint_degree"], [422, 8, 1, "", "joint_degree_graph"]], "graphscope.nx.generators.mycielski": [[423, 8, 1, "", "mycielski_graph"], [424, 8, 1, "", "mycielskian"]], "graphscope.nx.generators.nonisomorphic_trees": [[425, 8, 1, "", "nonisomorphic_trees"], [426, 8, 1, "", "number_of_nonisomorphic_trees"]], "graphscope.nx.generators.small": [[427, 8, 1, "", "LCF_graph"], [428, 8, 1, "", "bull_graph"], [429, 8, 1, "", "chvatal_graph"], [430, 8, 1, "", "cubical_graph"], [431, 8, 1, "", "desargues_graph"], [432, 8, 1, "", "diamond_graph"], [433, 8, 1, "", "dodecahedral_graph"], [434, 8, 1, "", "frucht_graph"], [435, 8, 1, "", "heawood_graph"], [436, 8, 1, "", "house_graph"], [437, 8, 1, "", "house_x_graph"], [438, 8, 1, "", "icosahedral_graph"], [439, 8, 1, "", "krackhardt_kite_graph"], [440, 8, 1, "", "make_small_graph"], [441, 8, 1, "", "moebius_kantor_graph"], [442, 8, 1, "", "octahedral_graph"], [443, 8, 1, "", "pappus_graph"], [444, 8, 1, "", "petersen_graph"], [445, 8, 1, "", "sedgewick_maze_graph"], [446, 8, 1, "", "tetrahedral_graph"], [447, 8, 1, "", "truncated_cube_graph"], [448, 8, 1, "", "truncated_tetrahedron_graph"], [449, 8, 1, "", "tutte_graph"]], "graphscope.nx.generators.social": [[450, 8, 1, "", "davis_southern_women_graph"], [451, 8, 1, "", "florentine_families_graph"], [452, 8, 1, "", "karate_club_graph"], [453, 8, 1, "", "les_miserables_graph"]], "graphscope.nx.generators.spectral_graph_forge": [[454, 8, 1, "", "spectral_graph_forge"]], "graphscope.nx.generators.sudoku": [[455, 8, 1, "", "sudoku_graph"]], "graphscope.nx.generators.trees": [[456, 8, 1, "", "prefix_tree"], [457, 8, 1, "", "random_tree"]], "graphscope.nx.generators.triads": [[458, 8, 1, "", "triad_graph"]], "networkx.generators": [[461, 13, 0, "-", "internet_as_graphs"], [461, 13, 0, "-", "stochastic"]], "networkx.generators.internet_as_graphs": [[459, 8, 1, "", "random_internet_as_graph"]], "networkx.generators.stochastic": [[460, 8, 1, "", "stochastic_graph"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:function", "2": "cpp:templateParam", "3": "cpp:functionParam", "4": "cpp:member", "5": "cpp:type", "6": "cpp:enum", "7": "cpp:enumerator", "8": "py:function", "9": "py:class", "10": "py:method", "11": "py:property", "12": "py:data", "13": "py:module", "14": "py:attribute"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "function", "C++ function"], "2": ["cpp", "templateParam", "C++ template parameter"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "member", "C++ member"], "5": ["cpp", "type", "C++ type"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "enumerator", "C++ enumerator"], "8": ["py", "function", "Python function"], "9": ["py", "class", "Python class"], "10": ["py", "method", "Python method"], "11": ["py", "property", "Python property"], "12": ["py", "data", "Python data"], "13": ["py", "module", "Python module"], "14": ["py", "attribute", "Python attribute"]}, "titleterms": {"built": [0, 6, 231, 241, 322, 475, 477], "algorithm": [0, 1, 2, 6, 9, 11, 15, 16, 17, 18, 19, 21, 22, 23, 34, 231, 310, 327, 477, 479], "all": [0, 31, 32, 36, 41], "pair": 0, "shortest": 0, "path": [0, 224, 226, 228], "length": 0, "attribut": [0, 20, 311, 328], "assort": 0, "averag": 0, "degre": [0, 335, 461], "connect": [0, 29, 30, 219, 227, 475, 482], "between": [0, 224, 471], "central": [0, 17], "breadth": 0, "first": [0, 215], "search": 0, "cdlp": 0, "close": [0, 482], "cluster": [0, 27, 30, 33, 41, 215, 237, 239], "coeffici": 0, "depth": 0, "eigenvector": 0, "hyperlink": 0, "induc": [0, 20], "topic": 0, "katz": 0, "k": 0, "core": 0, "shell": [0, 219], "label": [0, 226, 228, 241, 311, 474, 495], "propag": 0, "lcc": 0, "pagerank": 0, "sampl": [0, 44, 46, 226, 235, 247, 310, 314, 316, 319, 322], "singl": [0, 48, 212], "sourc": [0, 17, 31, 32, 46, 226, 257, 311, 317, 320, 321], "voterank": 0, "wcc": 0, "custom": [1, 23, 27, 44, 45, 48, 218, 475], "aggreg": [1, 224, 226, 228, 232], "local": [1, 7, 32, 36, 38, 41, 217, 218, 226, 233, 234, 238, 240, 474, 475], "vertex": [1, 10, 24, 46, 228, 241, 259, 468, 474, 495], "map": [1, 46, 208, 471], "support": [1, 11, 23, 46, 221, 226, 231], "deploy": [2, 27, 38, 48, 214, 215], "gae": [2, 34, 244, 479, 483], "prerequisit": [2, 16, 27, 29, 30, 32, 33, 201, 215, 475], "onli": [2, 37], "python": [2, 15, 18, 31, 35, 36, 197, 219, 227, 231, 251, 467, 475, 479, 487], "sdk": [2, 16, 34, 124, 197, 203, 227, 255], "helm": [2, 29, 48], "execut": [2, 34, 220, 242], "graph": [2, 9, 11, 13, 19, 20, 30, 33, 34, 45, 46, 47, 48, 202, 211, 212, 214, 220, 223, 224, 228, 231, 232, 235, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 310, 312, 313, 314, 315, 316, 318, 322, 324, 326, 328, 461, 462, 464, 465, 471, 473, 474, 475, 476, 477, 483], "analyt": [2, 3, 4, 7, 10, 13, 24, 31, 211, 214, 231, 242, 243, 245, 250, 252, 253, 483], "uninstal": [2, 29, 475], "design": [3, 9, 34, 216, 231, 232, 242, 320, 474], "engin": [3, 4, 7, 9, 10, 12, 24, 31, 36, 44, 214, 218, 231, 233, 234, 238, 239, 240, 242, 250, 252, 474, 483], "dev": [4, 32, 36, 41, 217, 233], "test": [4, 36, 37, 41, 197, 217, 233, 239, 240, 317], "setup": [4, 32], "understand": 4, "codebas": 4, "make": [4, 20], "modif": 4, "build": [4, 17, 32, 36, 41, 217, 233, 257, 310, 317, 475, 495], "faq": [5, 224], "program": [6, 12, 14, 34, 212, 320], "model": [6, 12, 14, 15, 16, 17, 24, 34, 47, 202, 232, 237, 238, 239, 240, 244, 247, 310, 318, 322, 474, 475], "flash": [6, 15, 244], "motiv": [6, 9, 216, 242, 474], "The": [6, 19, 30, 202, 206, 216, 473], "overview": [6, 9, 12, 198, 202, 206, 214, 318, 475], "api": [6, 9, 12, 19, 20, 43, 124, 197, 198, 220, 252, 255, 256, 311, 322, 463, 467, 491], "strong": 6, "express": [6, 226, 228], "implement": [6, 15, 17, 37, 320, 474], "architectur": [6, 12, 216, 471], "optim": [6, 13, 223, 224, 240], "get": [7, 17, 37, 124, 197, 199, 210, 218, 226, 234, 243, 317, 472], "start": [7, 45, 124, 197, 198, 199, 210, 217, 218, 228, 234, 243, 322, 472], "instal": [7, 27, 29, 30, 31, 32, 36, 37, 124, 197, 201, 214, 218, 233, 234, 317, 475, 482], "run": [7, 15, 16, 17, 18, 21, 22, 23, 37, 41, 199, 212, 218, 226, 234, 239, 317], "graphscop": [7, 10, 15, 16, 17, 19, 20, 22, 23, 26, 27, 28, 29, 30, 31, 32, 36, 41, 49, 50, 51, 203, 207, 212, 214, 218, 234, 242, 245, 247, 248, 249, 252, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 471, 473, 483, 487, 491, 492], "what": [7, 14, 218, 224, 234, 245, 247, 248], "": [7, 218, 224, 234, 252], "next": [7, 218, 234, 248], "guid": [8, 35, 36, 49, 225, 236, 475, 479, 480], "exampl": [8, 17, 22, 23, 52, 53, 54, 55, 90, 91, 100, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 225, 226, 236, 479, 480], "ingress": [9, 244], "increment": [9, 12], "messag": [9, 232], "driven": 9, "differenti": 9, "flexibl": [9, 34], "memoiz": 9, "distribut": [9, 212, 312, 320], "runtim": [9, 34, 320], "kei": [10, 202, 220, 224, 231, 301], "concept": [10, 474], "loadstrategi": 10, "onlyout": 10, "onlyin": 10, "bothinout": 10, "partitionstrategi": 10, "edg": [10, 20, 46, 228, 241, 328, 339, 464, 474, 495], "cut": [10, 474], "vertic": [10, 228, 241, 495], "outervertex": 10, "innervertex": 10, "innervertexwithoutgoingedg": 10, "innervertexwithincomingedg": 10, "messagemanag": 10, "messagestrategi": 10, "alongoutgoingedgetooutervertex": 10, "alongincomingedgetooutervertex": 10, "alongedgetooutervertex": 10, "synconoutervertexastarget": 10, "synconoutervertexassourc": 10, "synconoutervertex": 10, "networkx": [11, 19, 20, 459, 460, 463], "compat": [11, 224], "convert": 11, "nx": [11, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "oper": [11, 20, 28, 221, 228, 297, 298, 299, 300, 301, 302, 320, 466], "storag": [12, 33, 34, 214, 242, 471, 474], "layer": [12, 242], "grape": [12, 17, 244, 257], "ffi": 12, "comput": [12, 212, 214, 242, 474], "applic": [12, 15, 22, 23, 228, 242, 477], "perform": [13, 19, 34, 224, 231, 250], "tune": 13, "memori": [13, 241, 476], "footprint": 13, "properti": [13, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 202, 221, 224, 226, 228, 241, 473, 474, 495], "data": [13, 45, 46, 47, 48, 124, 197, 212, 215, 221, 224, 241, 311, 318, 321, 322, 473, 475], "structur": [13, 124, 197, 221, 257, 328], "usag": [13, 197, 206, 224, 241], "estim": [13, 470], "pie": [14, 16, 17, 18, 244, 255, 485], "i": [14, 226, 245, 247, 248], "workflow": [14, 231, 471], "tutori": [15, 16, 17, 18, 19, 20, 21, 22, 23, 228, 230, 237, 238, 239, 240, 251], "develop": [15, 16, 17, 18, 22, 23, 36, 49, 198, 214, 310, 322, 475, 479], "your": [15, 16, 17, 18, 22, 37, 44, 215, 238, 240, 241, 310, 320, 479], "c": [15, 16, 35, 50, 479], "defin": [15, 16, 238, 239, 240, 320, 471], "A": [15, 202, 214, 223], "function": [15, 18, 239, 240, 253, 255, 310, 324, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 469], "integr": [15, 37, 212, 321], "client": [15, 27, 30, 36, 239, 312, 482], "step": [16, 45, 226, 228, 247], "1": [16, 45, 208, 220, 311, 312, 314, 322], "context": [16, 252, 254, 468], "class": [16, 320, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359], "2": [16, 45, 208, 220, 311, 312, 322, 475], "3": [16, 45, 208, 220, 311, 312, 322, 475], "packag": [16, 31, 32, 239, 317], "4": [16, 208, 220, 311, 322], "gar": 16, "file": [16, 27, 31, 46, 321, 473], "github": [16, 17, 25, 37], "templat": [16, 17], "java": [17, 35, 39, 124, 227, 230, 258, 475, 479], "jar": 17, "own": [17, 18, 22, 215, 241, 310, 320], "prepar": [17, 27, 30, 41, 199, 322], "jdk": [17, 257], "from": [17, 19, 20, 31, 32, 33, 46, 214, 220, 228, 241, 257, 317, 471, 475], "maven": [17, 124], "repositori": 17, "submit": [17, 22, 23, 37, 40], "javasdk": 17, "write": [18, 239, 475], "pregel": [18, 24, 255, 485], "us": [18, 20, 27, 32, 45, 215, 220, 224, 231, 248, 317, 320, 322, 468, 471, 475, 476], "math": [18, 485], "h": [18, 485], "how": [19, 37, 39, 40, 41, 213, 224, 233, 310, 320, 322, 483], "doe": 19, "analysi": [19, 242], "displai": 19, "speed": 19, "up": [19, 27, 30, 33], "over": 19, "creat": [20, 33, 37, 45, 50, 237, 240], "an": [20, 220, 320], "empti": 20, "ad": [20, 241], "node": [20, 48, 232, 237, 238, 239, 240, 328, 349, 475], "examin": 20, "element": 20, "remov": [20, 215], "constructor": 20, "access": 20, "neighbor": [20, 240, 348], "deepcopi": 20, "subgraph": [20, 224, 226, 232, 235, 247, 357], "edge_subgraph": [20, 338], "copi": [20, 31], "direct": [20, 398, 399, 400, 401, 402, 461], "analyz": 20, "object": [20, 253, 254, 312, 324, 466, 469], "transform": [20, 465], "builtin": [21, 253, 327, 466], "giraph": 22, "try": [22, 45, 322], "some": [22, 228], "app": [22, 23, 252, 253, 261], "graphx": 23, "deploi": [23, 26, 27, 28, 29, 30, 48, 215, 475], "along": 23, "spark": 23, "includ": 23, "depend": [23, 31, 32, 317], "toward": 23, "centric": [24, 232], "ga": 24, "simul": 24, "contact": 25, "u": 25, "slack": [25, 37], "discuss": [25, 37], "cloud": [26, 231, 311], "k8": [27, 237, 239, 483], "kubernet": [27, 30, 33, 38, 41, 237, 487, 492], "launch": [27, 238, 239, 240], "default": 27, "paramet": [27, 52, 53, 54, 55, 90, 91, 95, 100, 116, 125, 126, 127, 128, 163, 164, 169, 173, 189, 239, 241], "frequent": [27, 209], "imag": [27, 32, 41, 317, 475], "uri": 27, "specifi": [27, 241], "number": 27, "worker": [27, 252], "provid": 27, "kubeconfig": 27, "other": [27, 45, 124, 215, 241, 321, 475], "than": 27, "mount": 27, "volum": 27, "inspect": 27, "clean": [27, 30, 33], "coordin": [28, 36, 42, 43], "configur": [28, 29, 44, 46, 48, 215, 218, 239, 323, 475], "releas": [29, 37], "offlin": [29, 31, 475], "exist": 30, "vineyard": [30, 217, 244, 476], "lifecycl": 30, "load": [30, 46, 220, 228, 237, 238, 239, 240, 241, 471, 473, 475, 476], "dataset": [30, 220, 241, 475], "anoth": 30, "session": [30, 237, 308, 469], "environ": [31, 32, 36, 41, 217, 220, 233], "wheel": [31, 317, 487], "download": [31, 220], "destin": 31, "extract": [31, 228], "them": [31, 241], "locat": 31, "basic": [31, 228, 311], "gcc": 31, "g": [31, 303], "third": 31, "parti": 31, "stabl": 32, "version": 32, "preview": 32, "linux": [32, 487], "maco": [32, 487], "persist": [33, 475], "pv": 33, "pvc": 33, "store": [33, 50, 51, 200, 204, 217, 475], "retor": 33, "framework": [34, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "multi": [34, 468], "languag": [34, 202, 316], "high": [34, 231, 242, 475], "librari": [34, 231, 317], "code": [35, 37, 198, 320, 481], "style": [35, 37, 463, 474], "rust": 35, "script": [35, 239, 482], "linter": 35, "checker": 35, "contain": [36, 233], "dep": [36, 233], "target": [36, 41, 241], "compon": 36, "individu": 36, "contribut": 37, "conduct": 37, "commun": [37, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 461], "report": [37, 213], "bug": [37, 213], "request": [37, 40, 52, 53, 54, 55, 90, 91, 100, 116, 125, 126, 127, 128, 163, 164, 173, 189, 198], "featur": [37, 202, 231, 473, 475], "improv": 37, "document": [37, 124, 197, 198], "chang": [37, 482], "pre": 37, "commit": [37, 475], "minor": 37, "fix": 37, "fork": 37, "branch": [37, 226], "suit": 37, "format": [37, 311, 473, 475], "right": 37, "keep": 37, "pull": [37, 40], "updat": [37, 482], "merg": 37, "pr": 37, "maintain": 37, "ship": 37, "review": 37, "continu": 37, "debug": 38, "find": [38, 483], "log": [38, 471, 475, 483], "command": [38, 198, 206, 482], "techniqu": [38, 241], "instrument": 39, "automat": 39, "rest": [43, 198], "servic": [44, 45, 124, 197, 198, 199, 206, 215, 217, 475], "avail": [44, 475], "new": [45, 320], "import": [45, 46, 239, 475], "column": 46, "csv": 46, "odp": 46, "tabl": [46, 208, 214, 311], "modern": 46, "breakdown": 46, "entiti": 47, "primit": 47, "type": [47, 52, 53, 54, 55, 90, 91, 100, 116, 125, 126, 127, 128, 163, 164, 173, 189, 221, 223, 241, 249, 255, 311, 462, 473], "string": 47, "tempor": 47, "arrai": [47, 474], "docker": [48, 233, 317, 487], "quickstart": 48, "multipl": [48, 224, 228, 241], "valu": [48, 224, 226, 228], "yaml": 48, "interact": [49, 50, 51, 199, 201, 203, 207, 211, 214, 218, 243, 246, 250, 325, 483], "procedur": [50, 51, 200, 204, 206], "turn": 51, "cypher": [51, 199, 200, 202, 219, 221, 231, 246], "queri": [51, 199, 202, 204, 211, 216, 220, 224, 228, 242, 243, 313, 325, 475], "craft": 51, "compil": [51, 198, 200, 204, 317, 320], "enabl": [51, 198, 204], "invok": 51, "adminservicegraphmanagementapi": [52, 125], "createdataloadingjob": 52, "return": [52, 53, 54, 55, 90, 91, 100, 116, 125, 126, 127, 128, 163, 164, 173, 189], "author": [52, 53, 54, 55, 90, 91, 100, 116, 124, 125, 126, 127, 128, 163, 164, 173, 189, 197], "http": [52, 53, 54, 55, 90, 91, 100, 116, 125, 126, 127, 128, 163, 164, 173, 189, 198], "header": [52, 53, 54, 55, 90, 91, 100, 116, 125, 126, 127, 128, 163, 164, 173, 189], "respons": [52, 53, 54, 55, 90, 91, 100, 116, 125, 126, 127, 128, 163, 164, 173, 189, 198], "detail": [52, 53, 54, 55, 90, 91, 100, 116, 125, 126, 127, 128, 163, 164, 173, 189, 198, 206, 474], "creategraph": [52, 198], "deletegraph": [52, 198], "getgraph": 52, "getgraphstatist": [52, 198], "getschema": 52, "listgraph": [52, 198], "adminservicejobmanagementapi": [53, 126], "deletejobbyid": 53, "getjobbyid": [53, 198], "listjob": 53, "adminserviceproceduremanagementapi": [54, 127], "createprocedur": [54, 198], "deleteprocedur": [54, 198], "getprocedur": [54, 198], "listprocedur": 54, "updateprocedur": [54, 198], "adminserviceservicemanagementapi": [55, 128], "getservicestatu": 55, "restartservic": [55, 198], "startservic": [55, 198], "stopservic": [55, 198], "baseedgetyp": [56, 129], "baseedgetypevertextypepairrelationsinn": [57, 130], "enum": [57, 58, 67, 82, 84, 87, 93, 96, 102, 103, 107], "relationenum": 57, "baseedgetypevertextypepairrelationsinnerxcsrparam": [58, 131], "edgestoragestrategyenum": 58, "basepropertymeta": [59, 132], "basevertextyp": [60, 133], "basevertextypexcsrparam": [61, 134], "columnmap": [62, 135], "createedgetyp": [63, 136], "creategraphrequest": [64, 137], "creategraphrespons": [65, 138], "creategraphschemarequest": [66, 139], "createprocedurerequest": [67, 140], "typeenum": [67, 87, 107], "createprocedurerespons": [68, 141], "createpropertymeta": [69, 142], "createvertextyp": [70, 143], "datetyp": [71, 144], "edgedata": [72, 145], "edgemap": [73, 146], "edgemappingdestinationvertexmappingsinn": [74, 147], "edgemappingsourcevertexmappingsinn": [75, 148], "edgemappingsourcevertexmappingsinnercolumn": [76, 149], "edgemappingtypetriplet": [77, 150], "edgerequest": [78, 151], "edgestatist": [79, 152], "fixedchar": [80, 153], "fixedcharchar": [81, 154], "gsdatatyp": [82, 155], "primitivetypeenum": [82, 96], "getedgetyp": [83, 156], "getgraphrespons": [84, 157], "storetypeenum": 84, "getgraphschemarespons": [85, 158], "getgraphstatisticsrespons": [86, 159], "getprocedurerespons": [87, 160], "getpropertymeta": [88, 161], "getvertextyp": [89, 162], "graphserviceedgemanagementapi": [90, 163], "addedg": 90, "deleteedg": 90, "getedg": 90, "updateedg": 90, "graphservicevertexmanagementapi": [91, 164], "addvertex": 91, "deletevertex": 91, "getvertex": 91, "updatevertex": 91, "jobrespons": [92, 165], "jobstatu": [93, 166], "statusenum": 93, "longtext": [94, 167], "primitivetyp": [96, 170], "propertyarrai": [98, 171], "queryrequest": [99, 172], "queryserviceapi": [100, 173], "proccal": 100, "proccallcurr": 100, "schemamap": [101, 174], "schemamappingloadingconfig": [102, 175], "importoptionenum": 102, "schemamappingloadingconfigdatasourc": [103, 176], "schemeenum": 103, "schemamappingloadingconfigformat": [104, 177], "servicestatu": [105, 178, 198], "startservicerequest": [106, 179], "storedproceduremeta": [107, 180], "stringtyp": [108, 181], "stringtypestr": [109, 182], "temporaltyp": [110, 183], "temporaltypetempor": [111, 184], "timestamptyp": [112, 185], "typedvalu": [113, 186], "updateprocedurerequest": [114, 187], "uploadfilerespons": [115, 188], "utilsapi": [116, 189], "uploadfil": 116, "varchar": [117, 190], "varcharvarchar": [118, 191], "vertexdata": [119, 192], "vertexmap": [120, 193], "vertexrequest": [121, 194], "vertexstatist": [122, 195], "vertextypepairstatist": [123, 196], "refer": [124, 197, 214, 252, 256, 258, 467, 474], "requir": [124, 197], "user": [124, 230, 251, 311, 479, 480], "gs_interact": [125, 126, 127, 128, 163, 164, 173, 189], "create_dataloading_job": 125, "create_graph": [125, 272], "delete_graph": 125, "get_graph": 125, "get_graph_statist": 125, "get_schema": 125, "list_graph": 125, "delete_job_by_id": 126, "get_job_by_id": 126, "list_job": 126, "create_procedur": 127, "delete_procedur": 127, "get_procedur": 127, "list_procedur": 127, "update_procedur": 127, "get_service_statu": 128, "restart_servic": 128, "start_servic": 128, "stop_servic": 128, "add_edg": 163, "delete_edg": 163, "get_edg": 163, "update_edg": 163, "add_vertex": 164, "delete_vertex": 164, "get_vertex": 164, "update_vertex": 164, "modelproperti": 168, "proc_cal": 173, "proc_call_curr": 173, "upload_fil": 189, "pip": [197, 317], "setuptool": 197, "For": [197, 222, 229, 474], "introduct": [198, 208, 226, 314], "graphmanag": 198, "categori": 198, "descript": 198, "curl": 198, "expect": 198, "statu": [198, 199], "getgraphschema": 198, "getgraphmeta": 198, "importgraph": 198, "proceduremanag": 198, "listallprocedur": 198, "servicemanag": 198, "systemmetr": 198, "nodemetr": 198, "jobmanag": 198, "getalljob": 198, "canceljobbyid": 198, "adminservic": 198, "error": [198, 481], "manag": 199, "initi": 199, "stop": [199, 214, 243], "restart": [199, 475], "check": 199, "destroi": [199, 475], "gremlin": [199, 200, 202, 224, 226, 227, 228, 231, 246, 306, 493], "glossari": [200, 244], "solid": 202, "foundat": 202, "limit": [202, 226, 228, 248, 475], "disabl": 204, "view": [204, 475], "tool": [205, 206], "administr": 206, "root": 206, "databas": [206, 249], "arrowfrag": 208, "0": [208, 220], "\u672f\u8bed": 208, "\u8f7d\u56fe": [208, 495], "\u521d\u59cb\u5316partition": 208, "\u6784\u5efa\u539f\u59cbarrow": 208, "shuffl": 208, "vtabl": 208, "\u6784\u5efavertex": 208, "basicarrowvertexmapbuild": 208, "5": [208, 220, 311], "\u6784\u5efafragment\u51c6\u5907": 208, "\u5904\u7406edg": 208, "basicevfragmentload": 208, "fragmentbuilder\u6570\u636e\u521d\u59cb\u5316": 208, "basicarrowfragmentbuild": 208, "6": 208, "fragment\u6784\u5efa": 208, "\u8bbf\u95eefragment": 208, "\u8bbf\u95ee\u9876\u70b9": 208, "\u8bbf\u95ee\u5185\u90e8\u70b9": 208, "\u8303\u56f4\u5916\u90e8\u70b9": 208, "\u8bbf\u95ee\u5168\u90e8\u70b9": 208, "\u8bbf\u95ee\u9876\u70b9\u6570\u636e": 208, "\u8bbf\u95ee\u8fb9": 208, "\u8bbf\u95ee\u51fa\u8fb9": 208, "\u8bbf\u95ee\u5165\u8fb9": 208, "\u8bbf\u95ee\u8fb9\u4e0a\u7684\u6570\u636e": 208, "ask": 209, "question": [209, 220], "gle": [210, 232, 480, 483], "workload": [211, 245, 246, 247, 249, 471], "learn": [211, 214, 232, 233, 234, 238, 240, 242, 243, 247, 249, 310, 318, 326, 483], "scientist": 212, "challeng": [212, 245, 247], "handl": [212, 249], "solut": 212, "machin": [212, 238, 240], "pydata": 212, "ecosystem": [212, 222, 229], "One": [214, 243, 468], "larg": [214, 241, 245, 247], "scale": [214, 478], "system": [214, 249, 321, 323], "alibaba": [214, 311], "flex": [214, 256], "troubleshoot": [214, 475], "util": [214, 482], "indic": 214, "standalon": 215, "gie": [215, 216, 217, 218, 219, 220, 222, 223, 224, 227, 229, 244, 483], "process": [216, 238, 239, 243, 249, 310, 475], "manual": [217, 241], "instanc": [218, 475], "via": [219, 227], "driver": 219, "llm": 220, "assist": 220, "set": [220, 239], "endpoint": 220, "gener": [220, 223, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461], "sentenc": 220, "construct": [221, 322], "claus": 221, "neo4j": [222, 246], "tinkerpop": [222, 224, 229, 246, 493], "rule": 223, "base": [223, 232], "rbo": 223, "filtermatchrul": 223, "degreefusionrul": 223, "notmatchtoantijoinrul": 223, "fieldtrimrul": 223, "cost": 223, "cbo": 223, "infer": [223, 231], "constraint": 224, "differ": [224, 468], "inner": 224, "id": [224, 226, 228, 474], "expand": [224, 226, 406, 407, 408, 461], "filter": [224, 226, 228], "like": 224, "sql": 224, "group": [224, 226, 228], "appropri": 224, "index": 224, "standard": [226, 473], "v": 226, "e": 226, "out": [226, 228, 322], "inE": [226, 228], "both": [226, 228], "outv": [226, 228], "inv": [226, 228], "otherv": [226, 228], "bothv": [226, 228], "hasid": [226, 228], "haslabel": 226, "ha": 226, "hasnot": 226, "where": [226, 228], "travers": [226, 228, 231, 235, 246, 315], "predic": 226, "dedup": [226, 228], "project": [226, 228, 257], "constant": [226, 228], "valuemap": [226, 228], "elementmap": 226, "select": [226, 228], "count": 226, "fold": [226, 228], "sum": [226, 228], "min": [226, 228], "max": [226, 228], "mean": [226, 228], "groupcount": [226, 228], "h3": 226, "order": [226, 228, 474], "statist": 226, "coin": 226, "union": 226, "match": [226, 228, 246], "ident": 226, "unfold": 226, "syntact": [226, 228], "sugar": [226, 228], "pathexpand": 226, "endv": 226, "properit": 226, "To": 226, "Will": 226, "Not": 226, "repeat": 226, "sideeffect": 226, "consol": [227, 493], "ldbc": 228, "retriev": [228, 474], "appli": [228, 247], "real": 228, "expans": 228, "mani": 228, "point": 228, "after": 228, "pattern": [228, 246], "relat": [228, 241, 471], "syntax": 228, "complex": 228, "bi2": 228, "bi3": 228, "bi4": 228, "left": 228, "part": 228, "bi11": 228, "bi14": 228, "apach": [229, 493], "eas": 231, "interfac": [231, 320, 321, 474], "extens": 231, "gnn": [231, 237, 247, 322, 489], "train": [231, 237, 238, 239, 240, 247, 310], "nativ": 231, "across": 231, "orchestr": 231, "paradigm": [232, 247], "egograph": 232, "pass": 232, "pipelin": 232, "neighborhood": 235, "neg": [235, 319], "gsl": [235, 316], "classif": [237, 238, 239, 240], "neural": [237, 247], "network": [237, 247, 461], "egographsag": 238, "pyg": [239, 240], "server": [239, 312, 482], "pod": 239, "loader": [239, 241, 324, 495], "main": 239, "evalu": [240, 300], "loaderfor": 240, "valid": 240, "graphsag": 240, "advanc": 241, "deduc": 241, "when": 241, "ambigu": 241, "put": [241, 311], "togeth": [241, 311], "panda": [241, 495], "numpi": [241, 495], "variant": 241, "tip": 241, "reduc": 241, "consumpt": 241, "unifi": [242, 474], "platform": 242, "disaggreg": 242, "divers": 242, "bi": 242, "qp": 242, "task": 243, "quick": [243, 322], "gart": [244, 471], "grin": [244, 474], "graphar": [244, 473], "groot": [244, 475, 483], "gum": 244, "maxgraph": 244, "deprec": 244, "v6d": 244, "gaia": 244, "pegasu": 244, "can": [245, 247], "do": [245, 247], "typic": 247, "introduc": 248, "why": 248, "ar": 248, "case": 248, "posit": 249, "compar": 249, "variou": 249, "benchmark": 250, "result": [250, 468], "gpu": 250, "reproduc": 250, "fragment": 252, "appasset": 253, "javaapp": 253, "cython": 255, "about": 257, "javadoc": 258, "declar": 260, "load_app": 261, "dag_util": [262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296], "add_column": 262, "add_labels_to_graph": 263, "arrow_to_dynam": 264, "bind_app": 265, "clear_edg": 266, "clear_graph": 267, "context_to_datafram": 268, "context_to_numpi": 269, "copy_graph": 270, "create_app": 271, "create_graph_view": 273, "create_load": 274, "create_subgraph": 275, "create_unload_op": 276, "dynamic_to_arrow": 277, "get_context_data": 278, "graph_to_datafram": 279, "graph_to_numpi": 280, "gremlin_to_subgraph": 281, "modify_edg": 282, "modify_vertic": 283, "output": 284, "project_arrow_property_graph": 285, "project_to_simpl": 286, "report_graph": 287, "run_app": 288, "to_data_sink": 289, "to_direct": [290, 358], "to_undirect": [291, 359], "to_vineyard_datafram": 292, "to_vineyard_tensor": 293, "unload_app": 294, "unload_context": 295, "unload_graph": 296, "__init__": 297, "as_op_def": 298, "eval": 299, "signatur": 302, "get_default_sess": 304, "graphlearn": 305, "has_default_sess": 307, "set_opt": 309, "encod": [310, 318], "loss": 310, "weight": 311, "maxcomput": 311, "describ": 312, "topologi": 312, "stand": 312, "alon": 312, "mode": [312, 482], "tensorflow": 317, "git": 317, "clone": 320, "regist": [320, 321], "bytestreamaccessfil": 321, "structuredaccessfil": 321, "writablefil": 321, "scheme": 321, "gl": 322, "self": 328, "loop": 328, "freez": [328, 340], "add_cycl": 329, "add_path": 330, "add_star": 331, "all_neighbor": 332, "common_neighbor": 333, "create_empty_copi": 334, "degree_histogram": 336, "densiti": 337, "induced_subgraph": 341, "info": 342, "is_direct": 343, "is_empti": 344, "is_frozen": 345, "is_negatively_weight": 346, "is_weight": 347, "nodes_with_selfloop": 350, "non_edg": 351, "non_neighbor": 352, "number_of_edg": 353, "number_of_nod": 354, "number_of_selfloop": 355, "selfloop_edg": 356, "atla": [360, 361, 461], "graph_atla": 360, "graph_atlas_g": 361, "classic": [362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 461], "balanced_tre": 362, "barbell_graph": 363, "binomial_tre": 364, "circulant_graph": 365, "circular_ladder_graph": 366, "complete_graph": 367, "complete_multipartite_graph": 368, "cycle_graph": 369, "dorogovtsev_goltsev_mendes_graph": 370, "empty_graph": 371, "full_rary_tre": 372, "ladder_graph": 373, "lollipop_graph": 374, "null_graph": 375, "path_graph": 376, "star_graph": 377, "trivial_graph": 378, "turan_graph": 379, "wheel_graph": 380, "lfr_benchmark_graph": 381, "caveman_graph": 382, "connected_caveman_graph": 383, "gaussian_random_partition_graph": 384, "planted_partition_graph": 385, "random_partition_graph": 386, "relaxed_caveman_graph": 387, "ring_of_cliqu": 388, "stochastic_block_model": 389, "windmill_graph": 390, "degree_seq": [391, 392, 393, 394, 395, 396, 397], "configuration_model": 391, "degree_sequence_tre": 392, "directed_configuration_model": 393, "directed_havel_hakimi_graph": 394, "expected_degree_graph": 395, "havel_hakimi_graph": 396, "random_degree_sequence_graph": 397, "gn_graph": 398, "gnc_graph": 399, "gnr_graph": 400, "random_k_out_graph": 401, "scale_free_graph": 402, "duplic": [403, 404, 461], "duplication_divergence_graph": 403, "partial_duplication_graph": 404, "ego": [405, 461], "ego_graph": 405, "chordal_cycle_graph": 406, "margulis_gabber_galil_graph": 407, "paley_graph": 408, "geometr": [409, 410, 411, 412, 413, 461], "geographical_threshold_graph": 409, "random_geometric_graph": 410, "soft_random_geometric_graph": 411, "thresholded_random_geometric_graph": 412, "waxman_graph": 413, "harary_graph": [414, 415], "hkn_harary_graph": 414, "hnm_harary_graph": 415, "intersect": [416, 417, 418, 461], "general_random_intersection_graph": 416, "k_random_intersection_graph": 417, "uniform_random_intersection_graph": 418, "joint_degree_seq": [419, 420, 421, 422], "directed_joint_degree_graph": 419, "is_valid_directed_joint_degre": 420, "is_valid_joint_degre": 421, "joint_degree_graph": 422, "mycielski": [423, 424, 461], "mycielski_graph": 423, "mycielskian": 424, "nonisomorphic_tre": [425, 426], "number_of_nonisomorphic_tre": 426, "small": [427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 461], "lcf_graph": 427, "bull_graph": 428, "chvatal_graph": 429, "cubical_graph": 430, "desargues_graph": 431, "diamond_graph": 432, "dodecahedral_graph": 433, "frucht_graph": 434, "heawood_graph": 435, "house_graph": 436, "house_x_graph": 437, "icosahedral_graph": 438, "krackhardt_kite_graph": 439, "make_small_graph": 440, "moebius_kantor_graph": 441, "octahedral_graph": 442, "pappus_graph": 443, "petersen_graph": 444, "sedgewick_maze_graph": 445, "tetrahedral_graph": 446, "truncated_cube_graph": 447, "truncated_tetrahedron_graph": 448, "tutte_graph": 449, "social": [450, 451, 452, 453, 461], "davis_southern_women_graph": 450, "florentine_families_graph": 451, "karate_club_graph": 452, "les_miserables_graph": 453, "spectral_graph_forg": 454, "sudoku": [455, 461], "sudoku_graph": 455, "tree": [456, 457, 461], "prefix_tre": 456, "random_tre": 457, "triad": [458, 461], "triad_graph": 458, "internet_as_graph": 459, "random_internet_as_graph": 459, "stochast": [460, 461], "stochastic_graph": 460, "diverg": 461, "sequenc": 461, "AS": 461, "spectral": 461, "non": 461, "isomorph": 461, "joint": 461, "harari": 461, "digraph": 462, "read": 464, "list": [464, 474], "adjac": 464, "selector": 468, "tensorcontext": 468, "vertexdatacontext": 468, "labeledvertexdatacontext": 468, "vertexpropertycontext": 468, "labeledvertexpropertycontext": 468, "method": 468, "dimension": 468, "rang": 468, "resourc": 470, "bridg": 471, "gap": 471, "oltp": 471, "inform": 473, "save": 473, "predefin": 474, "macro": 474, "partit": [474, 475, 478], "strategi": 474, "guidelin": 474, "handler": 474, "iter": 474, "master": 474, "mirror": 474, "complet": 474, "natur": 474, "trait": 474, "known": 475, "artifacthub": 475, "directori": 475, "common": 475, "modifi": 475, "j": 475, "realtim": 475, "secondari": 475, "trace": 475, "In": 476, "immut": 476, "bind": 477, "repartit": 478, "fennel": 478, "xtrapulp": 478, "hybrid": 478, "line": 482, "gsctl": 482, "scope": 482, "monitor": 484, "\u56fe\u5206\u6790\u5f15\u64ce": 485, "\u5185\u7f6e\u7b97\u6cd5": 485, "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": 485, "\u4f7f\u7528": 485, "\u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": 485, "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528": 485, "\u4e2d\u7684\u51fd\u6570": 485, "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": 485, "\u8fd0\u884cjava\u7f16\u5199\u7684\u7b97\u6cd5": 485, "\u8fd0\u884c\u793a\u4f8b\u7684java\u7b97\u6cd5": 485, "\u4f7f\u7528java\u7f16\u5199\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5": 485, "\u90e8\u7f72": 486, "\u4f7f\u7528helm\u90e8\u7f72graphscop": 486, "\u5728aw": 486, "\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": 486, "\u672c\u5730\u90e8\u7f72graphscop": 486, "\u5f00\u53d1\u8005\u6307\u5357": 487, "\u57fa\u4e8e": [487, 492], "\u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5": 487, "\u6784\u5efa": 487, "\u4ee3\u7801\u98ce\u683c": 487, "\u5e38\u89c1\u95ee\u9898": 488, "\u5feb\u901f\u4e0a\u624b": 489, "\u793a\u4f8b": 489, "\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 489, "\u521b\u5efa\u4f1a\u8bdd": 489, "\u4ea4\u4e92\u5f0f\u67e5\u8be2": 489, "\u56fe\u5206\u6790": 489, "\u56fe\u795e\u7ecf\u7f51\u7edc": 489, "\u5173\u95ed\u4f1a\u8bdd": 489, "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": 490, "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": 490, "\u6295\u5f71": 490, "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 490, "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": 490, "\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": 491, "\u76ee\u5f55": [491, 496], "\u53c2\u8003": 491, "\u7d22\u5f15": 491, "\u5b89\u88c5": 492, "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": 492, "\u5ba2\u6237\u7aef": 492, "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": 493, "\u5229\u7528python": 493, "\u8fde\u63a5graphscop": 493, "\u5229\u7528java": 493, "\u5f00\u53d1\u63a7\u5236\u53f0": 493, "gremlin\u7f16\u7a0b\u5165\u95e8": 493, "101": 493, "\u56fe\u6570\u636e\u6a21\u578b": 493, "\u67e5\u8be2\u8bed\u8a00": 493, "\u4e00\u4e2a\u4f8b\u5b50": 493, "gremlin\u517c\u5bb9\u6027": 493, "\u5bf9\u6bd4tinkerpop": 493, "\u5c5e\u6027\u56fe\u6a21\u578b\u7ea6\u675f": 493, "\u5c1a\u4e0d\u652f\u6301\u7684\u529f\u80fd\u7279\u6027": 493, "\u652f\u6301\u7684gremlin\u64cd\u4f5c": 493, "\u5df2\u77e5\u9650\u5236": 493, "\u56fe\u5b66\u4e60\u5f15\u64ce": 494, "\u56fe\u5b66\u4e60\u6a21\u578b": 494, "\u6570\u636e\u6a21\u578b": 494, "\u7f16\u7801\u5668": 494, "\u81ea\u5b9a\u4e49\u7b97\u6cd5": 494, "\u91c7\u6837": 494, "\u56fe\u6570\u636e\u6d41": 494, "\u6a21\u578b": 494, "\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": 494, "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": 495, "\u624b\u52a8\u914d\u7f6e\u56fe": 495, "vid_field": 495, "src_label": 495, "dst_label": 495, "src_field": 495, "dst_field": 495, "\u9ad8\u7ea7\u7528\u6cd5": 495, "\u6ca1\u6709\u6b67\u4e49\u65f6": 495, "\u81ea\u52a8\u63a8\u65ad\u70b9\u6807\u7b7e": 495, "\u4ece\u8fb9\u4e2d\u63a8\u65ad\u70b9": 495, "\u591a\u79cd\u8fb9\u5173\u7cfb": 495, "\u6307\u5b9a\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b": 495, "\u56fe\u7684\u5176\u4ed6\u53c2\u6570": 495, "\u5b8c\u6574\u7684\u793a\u4f8b": 495, "\u4ece": 495, "\u6216": 495, "\u4e2d\u8f7d\u56fe": 495, "\u7684\u53d8\u79cd": 495, "\u5165\u95e8\u6559\u7a0b": 496}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"Built-in Algorithms": [[0, "built-in-algorithms"], [6, "built-in-algorithms"]], "All Pairs Shortest Path Length": [[0, "all-pairs-shortest-path-length"]], "Attribute Assortativity": [[0, "attribute-assortativity"]], "Average Degree Connectivity": [[0, "average-degree-connectivity"]], "Betweenness Centrality": [[0, "betweenness-centrality"]], "Breadth-First Search": [[0, "breadth-first-search"]], "CDLP": [[0, "cdlp"]], "Closeness Centrality": [[0, "closeness-centrality"]], "Clustering": [[0, "clustering"]], "Degree Assortativity Coefficient": [[0, "degree-assortativity-coefficient"]], "Degree Centrality": [[0, "degree-centrality"]], "Depth-First Search": [[0, "depth-first-search"]], "Eigenvector Centrality": [[0, "eigenvector-centrality"]], "Hyperlink-Induced Topic Search": [[0, "hyperlink-induced-topic-search"]], "Katz Centrality": [[0, "katz-centrality"]], "K-Core": [[0, "k-core"]], "K-Shell": [[0, "k-shell"]], "Label Propagation Algorithm": [[0, "label-propagation-algorithm"]], "LCC": [[0, "lcc"]], "PageRank": [[0, "pagerank"]], "Sampling Path": [[0, "sampling-path"]], "Single-Source Shortest Paths": [[0, "single-source-shortest-paths"]], "VoteRank": [[0, "voterank"]], "WCC": [[0, "wcc"]], "Customized Algorithms": [[1, "customized-algorithms"]], "Aggregators": [[1, "aggregators"]], "Local Vertex Map support": [[1, "local-vertex-map-support"]], "Deployment for GAE": [[2, "deployment-for-gae"]], "Prerequisites": [[2, "prerequisites"], [27, "prerequisites"], [29, "prerequisites"], [30, "prerequisites"], [32, "prerequisites"], [33, "prerequisites"], [201, "prerequisites"], [215, "prerequisites"], [475, "prerequisites"]], "Deployment GAE only": [[2, "deployment-gae-only"]], "Deployment with Python SDK": [[2, "deployment-with-python-sdk"]], "Deployment with Helm": [[2, "deployment-with-helm"]], "Execute graph analytical algorithms": [[2, "execute-graph-analytical-algorithms"]], "Uninstall deployment": [[2, "uninstall-deployment"]], "Design of Analytical Engine": [[3, "design-of-analytical-engine"], [3, null]], "Dev and Test": [[4, "dev-and-test"], [217, "dev-and-test"], [233, "dev-and-test"]], "Setup": [[4, "setup"]], "Understanding the Codebase": [[4, "understanding-the-codebase"]], "Making Modifications": [[4, "making-modifications"]], "Building Analytical Engine": [[4, "building-analytical-engine"]], "Testing": [[4, "testing"]], "FAQs": [[5, "faqs"]], "Programming Model: FLASH": [[6, "programming-model-flash"]], "Motivation": [[6, "motivation"], [9, "motivation"], [242, "motivation"]], "The FLASH Programming Model": [[6, "the-flash-programming-model"]], "Overview": [[6, "overview"], [9, "overview"], [202, "overview"], [206, "overview"], [214, null], [318, "overview"], [475, "overview"]], "FLASH API": [[6, "flash-api"]], "Strong Expressiveness": [[6, "strong-expressiveness"]], "Implementation": [[6, "implementation"]], "Architecture": [[6, "architecture"], [12, "architecture"]], "Optimizations": [[6, "optimizations"]], "Getting Started": [[7, "getting-started"], [124, "getting-started"], [197, "getting-started"], [199, "getting-started"], [218, "getting-started"], [234, "getting-started"], [243, "getting-started"], [472, "getting-started"]], "Installation": [[7, "installation"], [29, "installation"], [124, "installation"], [201, "installation"], [218, "installation"], [234, "installation"], [475, "installation"]], "Running GraphScope Analytical Engine on Local": [[7, "running-graphscope-analytical-engine-on-local"]], "What\u2019s the Next": [[7, "whats-the-next"], [218, "whats-the-next"], [234, "whats-the-next"]], "Guide and Examples": [[8, "guide-and-examples"], [225, "guide-and-examples"], [236, "guide-and-examples"]], "Ingress: Incrementalize Graph Algorithms": [[9, "ingress-incrementalize-graph-algorithms"]], "Design of Ingress": [[9, "design-of-ingress"]], "Message-driven Differentiation": [[9, "message-driven-differentiation"]], "Flexible Memoization": [[9, "flexible-memoization"]], "Ingress API": [[9, "ingress-api"]], "Distributed Runtime Engine": [[9, "distributed-runtime-engine"]], "Key Concepts": [[10, "key-concepts"]], "LoadStrategy": [[10, "loadstrategy"]], "OnlyOut": [[10, "onlyout"]], "OnlyIn": [[10, "onlyin"]], "BothInOut": [[10, "bothinout"]], "PartitionStrategy": [[10, "partitionstrategy"]], "Edge Cut": [[10, "edge-cut"]], "Vertex Cut": [[10, "vertex-cut"]], "Vertices on GraphScope analytical engine": [[10, "vertices-on-graphscope-analytical-engine"]], "OuterVertex": [[10, "outervertex"]], "InnerVertex": [[10, "innervertex"]], "InnerVertexWithOutgoingEdge": [[10, "innervertexwithoutgoingedge"]], "InnerVertexWithIncomingEdge": [[10, "innervertexwithincomingedge"]], "MessageManager and MessageStrategy": [[10, "messagemanager-and-messagestrategy"]], "AlongOutgoingEdgeToOuterVertex": [[10, "alongoutgoingedgetooutervertex"]], "AlongIncomingEdgeToOuterVertex": [[10, "alongincomingedgetooutervertex"]], "AlongEdgeToOuterVertex": [[10, "alongedgetooutervertex"]], "SyncOnOuterVertexAsTarget": [[10, "synconoutervertexastarget"]], "SyncOnOuterVertexAsSource": [[10, "synconoutervertexassource"]], "SyncOnOuterVertex": [[10, "synconoutervertex"]], "NetworkX Compatibility": [[11, "networkx-compatibility"]], "Convert a Graph to a nx.Graph": [[11, "convert-a-graph-to-a-nx-graph"]], "Supported Graph Operations": [[11, "supported-graph-operations"]], "Supported Algorithms": [[11, "supported-algorithms"]], "Overview and Architecture": [[12, "overview-and-architecture"]], "Storage Layer": [[12, "storage-layer"]], "Engine Layer": [[12, "engine-layer"]], "GRAPE Engine": [[12, "grape-engine"]], "Programming Model APIs": [[12, "programming-model-apis"]], "FFIs": [[12, "ffis"]], "Incremental Computation Engine": [[12, "incremental-computation-engine"]], "Application Layer": [[12, "application-layer"]], "Performance Tuning": [[13, "performance-tuning"]], "Memory Footprint of Property Graphs": [[13, "memory-footprint-of-property-graphs"]], "Property graph data structure": [[13, "property-graph-data-structure"]], "Memory usage estimation": [[13, "memory-usage-estimation"]], "Optimizing Memory Usage": [[13, "optimizing-memory-usage"]], "Optimizing Performance of Graph Analytics": [[13, "optimizing-performance-of-graph-analytics"]], "Programming Model: PIE": [[14, "programming-model-pie"]], "What is the PIE Model?": [[14, "what-is-the-pie-model"]], "Workflow of PIE": [[14, "workflow-of-pie"]], "Tutorial: Develop Your Algorithms in C++ with FLASH Model": [[15, "tutorial-develop-your-algorithms-in-c-with-flash-model"]], "Developing Algorithms with FLASH Model": [[15, "developing-algorithms-with-flash-model"]], "Defining A FLASH Application": [[15, "defining-a-flash-application"]], "Implementing the Run Function": [[15, "implementing-the-run-function"]], "Integrating with the Python Client of GraphScope": [[15, "integrating-with-the-python-client-of-graphscope"]], "Running the FLASH Algorithms": [[15, "running-the-flash-algorithms"]], "Tutorial: Develop your Algorithm in C++ with PIE Model": [[16, "tutorial-develop-your-algorithm-in-c-with-pie-model"]], "Prerequisites:": [[16, "prerequisites"]], "Step 1: Define the context class": [[16, "step-1-define-the-context-class"]], "Step 2: Define the Algorithm class": [[16, "step-2-define-the-algorithm-class"]], "Step 3: Package the Algorithm": [[16, "step-3-package-the-algorithm"]], "Step 4: Run the .gar file on GraphScope": [[16, "step-4-run-the-gar-file-on-graphscope"]], "GraphScope C++ SDK with GitHub Template": [[16, "graphscope-c-sdk-with-github-template"]], "Tutorial: Develop your Algorithm in Java with PIE Model": [[17, "tutorial-develop-your-algorithm-in-java-with-pie-model"]], "Run example algorithms with example jar": [[17, "run-example-algorithms-with-example-jar"]], "Implement your own algorithms in Java.": [[17, "implement-your-own-algorithms-in-java"]], "Prepare GRAPE-jdk": [[17, "prepare-grape-jdk"]], "Get from Maven Central Repository": [[17, "get-from-maven-central-repository"]], "Build from source": [[17, "build-from-source"], [317, "build-from-source"]], "Implement your algorithm": [[17, "implement-your-algorithm"]], "Submit to GraphScope": [[17, "submit-to-graphscope"]], "GraphScope JavaSDK with GitHub Template": [[17, "graphscope-javasdk-with-github-template"]], "Tutorial: Develop algorithms in Python": [[18, "tutorial-develop-algorithms-in-python"]], "Writing Your Own Algorithms in PIE": [[18, "writing-your-own-algorithms-in-pie"]], "Writing Algorithms in Pregel": [[18, "writing-algorithms-in-pregel"]], "Using math.h Functions in Algorithms": [[18, "using-math-h-functions-in-algorithms"]], "Run Your Own Algorithms": [[18, "run-your-own-algorithms"]], "Tutorial: Graph Algorithms with NetworkX APIs": [[19, "tutorial-graph-algorithms-with-networkx-apis"]], "How does Networkx Perform Graph Analysis?": [[19, "how-does-networkx-perform-graph-analysis"]], "How to Perform Graph Analysis with NetworkX APIs from GraphScope": [[19, "how-to-perform-graph-analysis-with-networkx-apis-from-graphscope"]], "Graph Analysis": [[19, "graph-analysis"]], "Graph Display": [[19, "graph-display"]], "The Performance Speed-up of GraphScope over NetworkX": [[19, "the-performance-speed-up-of-graphscope-over-networkx"]], "Tutorial: Graph Operations with NetworkX APIs": [[20, "tutorial-graph-operations-with-networkx-apis"]], "Creating an Empty Graph": [[20, "creating-an-empty-graph"]], "Adding Nodes": [[20, "adding-nodes"]], "Adding Edges": [[20, "adding-edges"], [241, "adding-edges"]], "Examining Elements of a Graph": [[20, "examining-elements-of-a-graph"]], "Removing Elements from a Graph": [[20, "removing-elements-from-a-graph"]], "Using Graph Constructors": [[20, "using-graph-constructors"]], "Accessing Edges and Neighbors": [[20, "accessing-edges-and-neighbors"]], "Adding Attributes to Graphs, Nodes and Edges": [[20, "adding-attributes-to-graphs-nodes-and-edges"]], "Graph Attributes": [[20, "graph-attributes"]], "Node Attributes": [[20, "node-attributes"]], "Edge Attributes": [[20, "edge-attributes"]], "Induce deepcopy subgraph and edge_subgraph": [[20, "induce-deepcopy-subgraph-and-edge-subgraph"]], "Making Copies": [[20, "making-copies"]], "Directed Graphs": [[20, "directed-graphs"]], "Analyzing Graphs": [[20, "analyzing-graphs"]], "Create graph from GraphScope Graph Object": [[20, "create-graph-from-graphscope-graph-object"]], "Transform to GraphScope Graph Object": [[20, "transform-to-graphscope-graph-object"]], "Tutorial: Running Builtin Algorithms": [[21, "tutorial-running-builtin-algorithms"]], "Tutorial: Run Giraph Applications on GraphScope": [[22, "tutorial-run-giraph-applications-on-graphscope"]], "Try some example giraph apps": [[22, "try-some-example-giraph-apps"]], "Run your own Giraph apps.": [[22, "run-your-own-giraph-apps"]], "Develop Giraph algorithm": [[22, "develop-giraph-algorithm"]], "Submit to GraphScope.": [[22, "submit-to-graphscope"]], "Tutorial: Run GraphX Applications on GraphScope": [[23, "tutorial-run-graphx-applications-on-graphscope"]], "Deploy GraphScope along with Spark": [[23, "deploy-graphscope-along-with-spark"]], "Run example GraphX apps": [[23, "run-example-graphx-apps"]], "Submit to Spark": [[23, "submit-to-spark"]], "Run customized GraphX apps": [[23, "run-customized-graphx-apps"]], "Include dependency": [[23, "include-dependency"]], "Develop customized GraphX algorithm towards GraphScope.": [[23, "develop-customized-graphx-algorithm-towards-graphscope"]], "Run customized GraphX algorithms on Spark with GraphScope support": [[23, "run-customized-graphx-algorithms-on-spark-with-graphscope-support"]], "Vertex-Centric Model": [[24, "vertex-centric-model"]], "Pregel Model": [[24, "pregel-model"]], "GAS Model": [[24, "gas-model"]], "Simulation of Pregel Model in Analytical Engine": [[24, "simulation-of-pregel-model-in-analytical-engine"]], "Contact Us": [[25, "contact-us"]], "Slack": [[25, "slack"], [37, "slack"]], "Discussion on GitHub": [[25, "discussion-on-github"]], "Deploy GraphScope on Clouds": [[26, "deploy-graphscope-on-clouds"]], "Deploy on K8s Cluster": [[27, "deploy-on-k8s-cluster"]], "Install GraphScope Client": [[27, "install-graphscope-client"], [30, "install-graphscope-client"]], "Prepare a Kubernetes cluster": [[27, "prepare-a-kubernetes-cluster"], [30, "prepare-a-kubernetes-cluster"], [41, "prepare-a-kubernetes-cluster"]], "Deploying GraphScope": [[27, "deploying-graphscope"]], "Launch with default parameters": [[27, "launch-with-default-parameters"]], "Frequently used parameters": [[27, "frequently-used-parameters"]], "Customize image URI": [[27, "customize-image-uri"]], "Specify the number of workers": [[27, "specify-the-number-of-workers"]], "Provide a kubeconfig file other than default": [[27, "provide-a-kubeconfig-file-other-than-default"]], "Mount volumes": [[27, "mount-volumes"]], "Inspect the deployment": [[27, "inspect-the-deployment"]], "Cleaning Up": [[27, "cleaning-up"]], "Deploy GraphScope Operator": [[28, "deploy-graphscope-operator"]], "Coordinator configuration": [[28, "coordinator-configuration"]], "Deploy GraphScope with helm": [[29, "deploy-graphscope-with-helm"]], "Connect to GraphScope": [[29, "connect-to-graphscope"]], "Uninstall the release": [[29, "uninstall-the-release"]], "Configuration": [[29, "configuration"]], "Offline Installation": [[29, "offline-installation"]], "Deploy with Existing Vineyard Cluster": [[30, "deploy-with-existing-vineyard-cluster"]], "Deploy a Vineyard Cluster": [[30, "deploy-a-vineyard-cluster"]], "The lifecycle of a vineyard cluster": [[30, "the-lifecycle-of-a-vineyard-cluster"]], "Load the dataset to the Kubernetes cluster": [[30, "load-the-dataset-to-the-kubernetes-cluster"]], "Load a graph to the existing vineyard cluster": [[30, "load-a-graph-to-the-existing-vineyard-cluster"]], "Connect to the existing vineyard cluster with another GraphScope session": [[30, "connect-to-the-existing-vineyard-cluster-with-another-graphscope-session"]], "Cleaning up": [[30, "cleaning-up"]], "Install GraphScope in offline environment": [[31, "install-graphscope-in-offline-environment"]], "Install from wheels": [[31, "install-from-wheels"]], "Install from source": [[31, "install-from-source"], [32, "install-from-source"]], "Download dependencies and GraphScope": [[31, "download-dependencies-and-graphscope"]], "Copy all files to the destination environment and extract them to a location": [[31, "copy-all-files-to-the-destination-environment-and-extract-them-to-a-location"]], "Install basic packages and gcc-g++,\u00a0python": [[31, "install-basic-packages-and-gcc-g-python"]], "Install third-party dependencies and GraphScope Analytical Engine": [[31, "install-third-party-dependencies-and-graphscope-analytical-engine"]], "Install GraphScope on Local": [[32, "install-graphscope-on-local"]], "Install from packages": [[32, "install-from-packages"]], "Install stable version of GraphScope": [[32, "install-stable-version-of-graphscope"]], "Install preview version of GraphScope": [[32, "install-preview-version-of-graphscope"]], "Setup build environment for Linux and macOS": [[32, "setup-build-environment-for-linux-and-macos"]], "Use dev image with all dependencies installed": [[32, "use-dev-image-with-all-dependencies-installed"]], "Build and install": [[32, "build-and-install"]], "Persistent storage of graphs on the Kubernetes cluster": [[33, "persistent-storage-of-graphs-on-the-kubernetes-cluster"]], "Create a pv and pvc": [[33, "create-a-pv-and-pvc"]], "Store graphs to the pvc": [[33, "store-graphs-to-the-pvc"]], "Retore graphs from the pvc": [[33, "retore-graphs-from-the-pvc"]], "Clean up": [[33, "clean-up"]], "Design of GAE": [[34, "design-of-gae"]], "Graph Storage": [[34, "graph-storage"]], "Execution Framework": [[34, "execution-framework"]], "Flexible programming models": [[34, "flexible-programming-models"]], "Multi-language SDKs": [[34, "multi-language-sdks"]], "High-performance runtime": [[34, "high-performance-runtime"]], "Algorithm Library": [[34, "algorithm-library"]], "Code Style Guide": [[35, "code-style-guide"]], "C++ Style": [[35, "c-style"]], "Python Style": [[35, "python-style"]], "Rust Style": [[35, "rust-style"]], "Java Style": [[35, "java-style"]], "Script Style": [[35, "script-style"]], "Style Linter and Checker": [[35, "style-linter-and-checker"]], "Development Guide": [[36, "development-guide"]], "Dev Environment": [[36, "dev-environment"], [41, "dev-environment"], [217, "dev-environment"], [233, "dev-environment"]], "Develop with dev containers.": [[36, "develop-with-dev-containers"]], "Install deps on local": [[36, "install-deps-on-local"], [233, "install-deps-on-local"]], "Build All Targets for GraphScope": [[36, "build-all-targets-for-graphscope"], [41, "build-all-targets-for-graphscope"]], "Build Components Individually": [[36, "build-components-individually"]], "Build and Test Engines": [[36, "build-and-test-engines"]], "Build Coordinator": [[36, "build-coordinator"]], "Build Python Client": [[36, "build-python-client"]], "How to Contribute": [[37, "how-to-contribute"]], "Code of Conduct": [[37, "code-of-conduct"]], "Community": [[37, "community"], [461, "module-graphscope.nx.generators.community"]], "GitHub Discussion": [[37, "github-discussion"]], "Reporting Bugs": [[37, "reporting-bugs"]], "Requesting Features": [[37, "requesting-features"]], "Improving Documentation": [[37, "improving-documentation"]], "Contributing Code and Documentation Changes": [[37, "contributing-code-and-documentation-changes"]], "Install pre-commit": [[37, "install-pre-commit"]], "Minor Fixes": [[37, "minor-fixes"]], "Fork and Create a Branch": [[37, "fork-and-create-a-branch"]], "Get the Test Suite Running": [[37, "get-the-test-suite-running"]], "Implement Your Fix or Feature": [[37, "implement-your-fix-or-feature"]], "Get the Code Format and Style Right": [[37, "get-the-code-format-and-style-right"]], "Submitting Your Changes": [[37, "submitting-your-changes"]], "Discussing and Keeping Your Pull Request Updated": [[37, "discussing-and-keeping-your-pull-request-updated"]], "Merging a PR (maintainers only)": [[37, "merging-a-pr-maintainers-only"]], "Shipping a Release (maintainers only)": [[37, "shipping-a-release-maintainers-only"]], "How to Review Pull Requests": [[37, "how-to-review-pull-requests"]], "Continuous integration testing": [[37, "continuous-integration-testing"]], "Debugging on local deployment": [[38, "debugging-on-local-deployment"]], "Find the logs": [[38, "find-the-logs"], [38, "id1"]], "Debugging on Kubernetes deployment": [[38, "debugging-on-kubernetes-deployment"]], "Commands for Debugging": [[38, "commands-for-debugging"]], "Debugging Techniques": [[38, "debugging-techniques"]], "How to instrument": [[39, "how-to-instrument"]], "Java": [[39, "java"], [475, "java"], [475, "id2"]], "Automatic instrument": [[39, "automatic-instrument"]], "How to Submit Pull-requests": [[40, "how-to-submit-pull-requests"]], "How to Test": [[41, "how-to-test"], [233, "how-to-test"]], "Test GraphScope on local": [[41, "test-graphscope-on-local"]], "Run tests": [[41, "run-tests"], [41, "id1"]], "Test GraphScope on Kubernetes cluster": [[41, "test-graphscope-on-kubernetes-cluster"]], "Build images": [[41, "build-images"]], "Coordinator": [[42, "coordinator"]], "Coordinator RESTFul API": [[43, "coordinator-restful-api"]], "Engine Configuration": [[44, "engine-configuration"]], "Customizing Your Service Configuration": [[44, "customizing-your-service-configuration"]], "Sample Configuration": [[44, "sample-configuration"]], "Available Configurations": [[44, "available-configurations"]], "Service configurations": [[44, "service-configurations"]], "Using Custom Graph": [[45, "using-custom-graph"]], "Step 1: Create a New Graph": [[45, "step-1-create-a-new-graph"]], "Step 2: Import Graph Data": [[45, "step-2-import-graph-data"]], "Step 3: Start the Service with the New Graph": [[45, "step-3-start-the-service-with-the-new-graph"]], "Try other graphs": [[45, "try-other-graphs"]], "Data Import Configuration": [[46, "data-import-configuration"]], "Supported data source": [[46, "supported-data-source"]], "Column mapping": [[46, "column-mapping"]], "Import from CSV": [[46, "import-from-csv"]], "Import from ODPS Table": [[46, "import-from-odps-table"]], "Sample Configuration for loading \u201cModern\u201d Graph from csv files": [[46, "sample-configuration-for-loading-modern-graph-from-csv-files"]], "Sample configuration for loading \u201cModern Graph\u201d from odps tables": [[46, "sample-configuration-for-loading-modern-graph-from-odps-tables"]], "Configuration Breakdown": [[46, "configuration-breakdown"]], "Loading Configurations": [[46, "loading-configurations"]], "Vertex Mappings": [[46, "vertex-mappings"]], "Edge Mappings": [[46, "edge-mappings"]], "Data Model": [[47, "data-model"]], "Graph Data": [[47, "graph-data"]], "Entity Data": [[47, "entity-data"]], "Primitive Types": [[47, "primitive-types"]], "String Types": [[47, "string-types"]], "Temporal types": [[47, "temporal-types"]], "Array Types": [[47, "array-types"]], "Deployment": [[48, "deployment"]], "Deploy with docker": [[48, "deploy-with-docker"]], "Deploy with helm": [[48, "deploy-with-helm"]], "QuickStart": [[48, "quickstart"]], "Customizing Configuration": [[48, "customizing-configuration"]], "Customize Graph Data.": [[48, "customize-graph-data"]], "Single Node": [[48, "single-node"]], "Multiple nodes": [[48, "multiple-nodes"]], "Customize Values.yaml": [[48, "customize-values-yaml"]], "GraphScope Interactive Development guide": [[49, "graphscope-interactive-development-guide"]], "Create c++ Stored Procedures on GraphScope Interactive": [[50, "create-c-stored-procedures-on-graphscope-interactive"]], "Turning Cypher Queries into Stored Procedures with GraphScope Interactive": [[51, "turning-cypher-queries-into-stored-procedures-with-graphscope-interactive"]], "Crafting a Cypher Stored Procedure": [[51, "crafting-a-cypher-stored-procedure"]], "Compiling and Enabling the Stored Procedure": [[51, "compiling-and-enabling-the-stored-procedure"]], "Invoking the Cypher Stored Procedure": [[51, "invoking-the-cypher-stored-procedure"]], "AdminServiceGraphManagementApi": [[52, "adminservicegraphmanagementapi"]], "createDataloadingJob": [[52, "createdataloadingjob"]], "Example": [[52, "example"], [52, "id1"], [52, "id7"], [52, "id13"], [52, "id19"], [52, "id25"], [52, "id31"], [53, "example"], [53, "id1"], [53, "id7"], [54, "example"], [54, "id1"], [54, "id7"], [54, "id13"], [54, "id19"], [55, "example"], [55, "id1"], [55, "id7"], [55, "id13"], [90, "example"], [90, "id1"], [90, "id7"], [90, "id13"], [91, "example"], [91, "id1"], [91, "id7"], [91, "id13"], [100, "example"], [100, "id1"], [116, "example"], [125, "example"], [125, "id1"], [125, "id7"], [125, "id13"], [125, "id19"], [125, "id25"], [125, "id31"], [126, "example"], [126, "id1"], [126, "id7"], [127, "example"], [127, "id1"], [127, "id7"], [127, "id13"], [127, "id19"], [128, "example"], [128, "id1"], [128, "id7"], [128, "id13"], [129, "example"], [130, "example"], [131, "example"], [132, "example"], [133, "example"], [134, "example"], [135, "example"], [136, "example"], [137, "example"], [138, "example"], [139, "example"], [140, "example"], [141, "example"], [142, "example"], [143, "example"], [144, "example"], [145, "example"], [146, "example"], [147, "example"], [148, "example"], [149, "example"], [150, "example"], [151, "example"], [152, "example"], [153, "example"], [154, "example"], [155, "example"], [156, "example"], [157, "example"], [158, "example"], [159, "example"], [160, "example"], [161, "example"], [162, "example"], [163, "example"], [163, "id1"], [163, "id7"], [163, "id13"], [164, "example"], [164, "id1"], [164, "id7"], [164, "id13"], [165, "example"], [166, "example"], [167, "example"], [168, "example"], [169, "example"], [170, "example"], [171, "example"], [172, "example"], [173, "example"], [173, "id1"], [174, "example"], [175, "example"], [176, "example"], [177, "example"], [178, "example"], [179, "example"], [180, "example"], [181, "example"], [182, "example"], [183, "example"], [184, "example"], [185, "example"], [186, "example"], [187, "example"], [188, "example"], [189, "example"], [190, "example"], [191, "example"], [192, "example"], [193, "example"], [194, "example"], [195, "example"], [196, "example"]], "Parameters": [[52, "parameters"], [52, "id2"], [52, "id8"], [52, "id14"], [52, "id20"], [52, "id26"], [52, "id32"], [53, "parameters"], [53, "id2"], [53, "id8"], [54, "parameters"], [54, "id2"], [54, "id8"], [54, "id14"], [54, "id20"], [55, "parameters"], [55, "id2"], [55, "id8"], [55, "id14"], [90, "parameters"], [90, "id2"], [90, "id8"], [90, "id14"], [91, "parameters"], [91, "id2"], [91, "id8"], [91, "id14"], [100, "parameters"], [100, "id2"], [116, "parameters"], [125, "parameters"], [125, "id2"], [125, "id8"], [125, "id14"], [125, "id20"], [125, "id26"], [125, "id32"], [126, "parameters"], [126, "id2"], [126, "id8"], [127, "parameters"], [127, "id2"], [127, "id8"], [127, "id14"], [127, "id20"], [128, "parameters"], [128, "id2"], [128, "id8"], [128, "id14"], [163, "parameters"], [163, "id2"], [163, "id8"], [163, "id14"], [164, "parameters"], [164, "id2"], [164, "id8"], [164, "id14"], [173, "parameters"], [173, "id2"], [189, "parameters"]], "Return type": [[52, "return-type"], [52, "id3"], [52, "id9"], [52, "id15"], [52, "id21"], [52, "id27"], [52, "id33"], [53, "return-type"], [53, "id3"], [53, "id9"], [54, "return-type"], [54, "id3"], [54, "id9"], [54, "id15"], [54, "id21"], [55, "return-type"], [55, "id3"], [55, "id9"], [55, "id15"], [90, "return-type"], [90, "id3"], [90, "id9"], [90, "id15"], [91, "return-type"], [91, "id3"], [91, "id9"], [91, "id15"], [100, "return-type"], [100, "id3"], [116, "return-type"], [125, "return-type"], [125, "id3"], [125, "id9"], [125, "id15"], [125, "id21"], [125, "id27"], [125, "id33"], [126, "return-type"], [126, "id3"], [126, "id9"], [127, "return-type"], [127, "id3"], [127, "id9"], [127, "id15"], [127, "id21"], [128, "return-type"], [128, "id3"], [128, "id9"], [128, "id15"], [163, "return-type"], [163, "id3"], [163, "id9"], [163, "id15"], [164, "return-type"], [164, "id3"], [164, "id9"], [164, "id15"], [173, "return-type"], [173, "id3"], [189, "return-type"]], "Authorization": [[52, "authorization"], [52, "id4"], [52, "id10"], [52, "id16"], [52, "id22"], [52, "id28"], [52, "id34"], [53, "authorization"], [53, "id4"], [53, "id10"], [54, "authorization"], [54, "id4"], [54, "id10"], [54, "id16"], [54, "id22"], [55, "authorization"], [55, "id4"], [55, "id10"], [55, "id16"], [90, "authorization"], [90, "id4"], [90, "id10"], [90, "id16"], [91, "authorization"], [91, "id4"], [91, "id10"], [91, "id16"], [100, "authorization"], [100, "id4"], [116, "authorization"], [125, "authorization"], [125, "id4"], [125, "id10"], [125, "id16"], [125, "id22"], [125, "id28"], [125, "id34"], [126, "authorization"], [126, "id4"], [126, "id10"], [127, "authorization"], [127, "id4"], [127, "id10"], [127, "id16"], [127, "id22"], [128, "authorization"], [128, "id4"], [128, "id10"], [128, "id16"], [163, "authorization"], [163, "id4"], [163, "id10"], [163, "id16"], [164, "authorization"], [164, "id4"], [164, "id10"], [164, "id16"], [173, "authorization"], [173, "id4"], [189, "authorization"]], "HTTP request headers": [[52, "http-request-headers"], [52, "id5"], [52, "id11"], [52, "id17"], [52, "id23"], [52, "id29"], [52, "id35"], [53, "http-request-headers"], [53, "id5"], [53, "id11"], [54, "http-request-headers"], [54, "id5"], [54, "id11"], [54, "id17"], [54, "id23"], [55, "http-request-headers"], [55, "id5"], [55, "id11"], [55, "id17"], [90, "http-request-headers"], [90, "id5"], [90, "id11"], [90, "id17"], [91, "http-request-headers"], [91, "id5"], [91, "id11"], [91, "id17"], [100, "http-request-headers"], [100, "id5"], [116, "http-request-headers"], [125, "http-request-headers"], [125, "id5"], [125, "id11"], [125, "id17"], [125, "id23"], [125, "id29"], [125, "id35"], [126, "http-request-headers"], [126, "id5"], [126, "id11"], [127, "http-request-headers"], [127, "id5"], [127, "id11"], [127, "id17"], [127, "id23"], [128, "http-request-headers"], [128, "id5"], [128, "id11"], [128, "id17"], [163, "http-request-headers"], [163, "id5"], [163, "id11"], [163, "id17"], [164, "http-request-headers"], [164, "id5"], [164, "id11"], [164, "id17"], [173, "http-request-headers"], [173, "id5"], [189, "http-request-headers"]], "HTTP response details": [[52, "http-response-details"], [52, "id6"], [52, "id12"], [52, "id18"], [52, "id24"], [52, "id30"], [52, "id36"], [53, "http-response-details"], [53, "id6"], [53, "id12"], [54, "http-response-details"], [54, "id6"], [54, "id12"], [54, "id18"], [54, "id24"], [55, "http-response-details"], [55, "id6"], [55, "id12"], [55, "id18"], [90, "http-response-details"], [90, "id6"], [90, "id12"], [90, "id18"], [91, "http-response-details"], [91, "id6"], [91, "id12"], [91, "id18"], [100, "http-response-details"], [100, "id6"], [116, "http-response-details"], [125, "http-response-details"], [125, "id6"], [125, "id12"], [125, "id18"], [125, "id24"], [125, "id30"], [125, "id36"], [126, "http-response-details"], [126, "id6"], [126, "id12"], [127, "http-response-details"], [127, "id6"], [127, "id12"], [127, "id18"], [127, "id24"], [128, "http-response-details"], [128, "id6"], [128, "id12"], [128, "id18"], [163, "http-response-details"], [163, "id6"], [163, "id12"], [163, "id18"], [164, "http-response-details"], [164, "id6"], [164, "id12"], [164, "id18"], [173, "http-response-details"], [173, "id6"], [189, "http-response-details"]], "createGraph": [[52, "creategraph"]], "deleteGraph": [[52, "deletegraph"]], "getGraph": [[52, "getgraph"]], "getGraphStatistic": [[52, "getgraphstatistic"]], "getSchema": [[52, "getschema"]], "listGraphs": [[52, "listgraphs"]], "AdminServiceJobManagementApi": [[53, "adminservicejobmanagementapi"]], "deleteJobById": [[53, "deletejobbyid"]], "getJobById": [[53, "getjobbyid"]], "listJobs": [[53, "listjobs"]], "AdminServiceProcedureManagementApi": [[54, "adminserviceproceduremanagementapi"]], "createProcedure": [[54, "createprocedure"]], "deleteProcedure": [[54, "deleteprocedure"]], "getProcedure": [[54, "getprocedure"]], "listProcedures": [[54, "listprocedures"]], "updateProcedure": [[54, "updateprocedure"]], "AdminServiceServiceManagementApi": [[55, "adminserviceservicemanagementapi"]], "getServiceStatus": [[55, "getservicestatus"]], "restartService": [[55, "restartservice"]], "startService": [[55, "startservice"]], "stopService": [[55, "stopservice"]], "BaseEdgeType": [[56, "baseedgetype"], [129, "baseedgetype"]], "Properties": [[56, "properties"], [57, "properties"], [58, "properties"], [59, "properties"], [60, "properties"], [61, "properties"], [62, "properties"], [63, "properties"], [64, "properties"], [65, "properties"], [66, "properties"], [67, "properties"], [68, "properties"], [69, "properties"], [70, "properties"], [71, "properties"], [72, "properties"], [73, "properties"], [74, "properties"], [75, "properties"], [76, "properties"], [77, "properties"], [78, "properties"], [79, "properties"], [80, "properties"], [81, "properties"], [82, "properties"], [83, "properties"], [84, "properties"], [85, "properties"], [86, "properties"], [87, "properties"], [88, "properties"], [89, "properties"], [92, "properties"], [93, "properties"], [94, "properties"], [95, "properties"], [96, "properties"], [97, "properties"], [98, "properties"], [99, "properties"], [101, "properties"], [102, "properties"], [103, "properties"], [104, "properties"], [105, "properties"], [106, "properties"], [107, "properties"], [108, "properties"], [109, "properties"], [110, "properties"], [111, "properties"], [112, "properties"], [113, "properties"], [114, "properties"], [115, "properties"], [117, "properties"], [118, "properties"], [119, "properties"], [120, "properties"], [121, "properties"], [122, "properties"], [123, "properties"], [129, "properties"], [130, "properties"], [131, "properties"], [132, "properties"], [133, "properties"], [134, "properties"], [135, "properties"], [136, "properties"], [137, "properties"], [138, "properties"], [139, "properties"], [140, "properties"], [141, "properties"], [142, "properties"], [143, "properties"], [144, "properties"], [145, "properties"], [146, "properties"], [147, "properties"], [148, "properties"], [149, "properties"], [150, "properties"], [151, "properties"], [152, "properties"], [153, "properties"], [154, "properties"], [155, "properties"], [156, "properties"], [157, "properties"], [158, "properties"], [159, "properties"], [160, "properties"], [161, "properties"], [162, "properties"], [165, "properties"], [166, "properties"], [167, "properties"], [168, "properties"], [169, "properties"], [170, "properties"], [171, "properties"], [172, "properties"], [174, "properties"], [175, "properties"], [176, "properties"], [177, "properties"], [178, "properties"], [179, "properties"], [180, "properties"], [181, "properties"], [182, "properties"], [183, "properties"], [184, "properties"], [185, "properties"], [186, "properties"], [187, "properties"], [188, "properties"], [190, "properties"], [191, "properties"], [192, "properties"], [193, "properties"], [194, "properties"], [195, "properties"], [196, "properties"]], "BaseEdgeTypeVertexTypePairRelationsInner": [[57, "baseedgetypevertextypepairrelationsinner"], [130, "baseedgetypevertextypepairrelationsinner"]], "Enum: RelationEnum": [[57, "enum-relationenum"]], "BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams": [[58, "baseedgetypevertextypepairrelationsinnerxcsrparams"], [131, "baseedgetypevertextypepairrelationsinnerxcsrparams"]], "Enum: EdgeStorageStrategyEnum": [[58, "enum-edgestoragestrategyenum"]], "BasePropertyMeta": [[59, "basepropertymeta"], [132, "basepropertymeta"]], "BaseVertexType": [[60, "basevertextype"], [133, "basevertextype"]], "BaseVertexTypeXCsrParams": [[61, "basevertextypexcsrparams"], [134, "basevertextypexcsrparams"]], "ColumnMapping": [[62, "columnmapping"], [135, "columnmapping"]], "CreateEdgeType": [[63, "createedgetype"], [136, "createedgetype"]], "CreateGraphRequest": [[64, "creategraphrequest"], [137, "creategraphrequest"]], "CreateGraphResponse": [[65, "creategraphresponse"], [138, "creategraphresponse"]], "CreateGraphSchemaRequest": [[66, "creategraphschemarequest"], [139, "creategraphschemarequest"]], "CreateProcedureRequest": [[67, "createprocedurerequest"], [140, "createprocedurerequest"]], "Enum: TypeEnum": [[67, "enum-typeenum"], [87, "enum-typeenum"], [107, "enum-typeenum"]], "CreateProcedureResponse": [[68, "createprocedureresponse"], [141, "createprocedureresponse"]], "CreatePropertyMeta": [[69, "createpropertymeta"], [142, "createpropertymeta"]], "CreateVertexType": [[70, "createvertextype"], [143, "createvertextype"]], "DateType": [[71, "datetype"], [144, "datetype"]], "EdgeData": [[72, "edgedata"], [145, "edgedata"]], "EdgeMapping": [[73, "edgemapping"], [146, "edgemapping"]], "EdgeMappingDestinationVertexMappingsInner": [[74, "edgemappingdestinationvertexmappingsinner"], [147, "edgemappingdestinationvertexmappingsinner"]], "EdgeMappingSourceVertexMappingsInner": [[75, "edgemappingsourcevertexmappingsinner"], [148, "edgemappingsourcevertexmappingsinner"]], "EdgeMappingSourceVertexMappingsInnerColumn": [[76, "edgemappingsourcevertexmappingsinnercolumn"], [149, "edgemappingsourcevertexmappingsinnercolumn"]], "EdgeMappingTypeTriplet": [[77, "edgemappingtypetriplet"], [150, "edgemappingtypetriplet"]], "EdgeRequest": [[78, "edgerequest"], [151, "edgerequest"]], "EdgeStatistics": [[79, "edgestatistics"], [152, "edgestatistics"]], "FixedChar": [[80, "fixedchar"], [153, "fixedchar"]], "FixedCharChar": [[81, "fixedcharchar"], [154, "fixedcharchar"]], "GSDataType": [[82, "gsdatatype"], [155, "gsdatatype"]], "Enum: PrimitiveTypeEnum": [[82, "enum-primitivetypeenum"], [96, "enum-primitivetypeenum"]], "GetEdgeType": [[83, "getedgetype"], [156, "getedgetype"]], "GetGraphResponse": [[84, "getgraphresponse"], [157, "getgraphresponse"]], "Enum: StoreTypeEnum": [[84, "enum-storetypeenum"]], "GetGraphSchemaResponse": [[85, "getgraphschemaresponse"], [158, "getgraphschemaresponse"]], "GetGraphStatisticsResponse": [[86, "getgraphstatisticsresponse"], [159, "getgraphstatisticsresponse"]], "GetProcedureResponse": [[87, "getprocedureresponse"], [160, "getprocedureresponse"]], "GetPropertyMeta": [[88, "getpropertymeta"], [161, "getpropertymeta"]], "GetVertexType": [[89, "getvertextype"], [162, "getvertextype"]], "GraphServiceEdgeManagementApi": [[90, "graphserviceedgemanagementapi"]], "addEdge": [[90, "addedge"]], "deleteEdge": [[90, "deleteedge"]], "getEdge": [[90, "getedge"]], "updateEdge": [[90, "updateedge"]], "GraphServiceVertexManagementApi": [[91, "graphservicevertexmanagementapi"]], "addVertex": [[91, "addvertex"]], "deleteVertex": [[91, "deletevertex"]], "getVertex": [[91, "getvertex"]], "updateVertex": [[91, "updatevertex"]], "JobResponse": [[92, "jobresponse"], [165, "jobresponse"]], "JobStatus": [[93, "jobstatus"], [166, "jobstatus"]], "Enum: StatusEnum": [[93, "enum-statusenum"]], "LongText": [[94, "longtext"], [167, "longtext"]], "Parameter": [[95, "parameter"], [169, "parameter"]], "PrimitiveType": [[96, "primitivetype"], [170, "primitivetype"]], "Property": [[97, "property"], [474, "property"]], "PropertyArray": [[98, "propertyarray"], [171, "propertyarray"]], "QueryRequest": [[99, "queryrequest"], [172, "queryrequest"]], "QueryServiceApi": [[100, "queryserviceapi"]], "procCall": [[100, "proccall"]], "procCallCurrent": [[100, "proccallcurrent"]], "SchemaMapping": [[101, "schemamapping"], [174, "schemamapping"]], "SchemaMappingLoadingConfig": [[102, "schemamappingloadingconfig"], [175, "schemamappingloadingconfig"]], "Enum: ImportOptionEnum": [[102, "enum-importoptionenum"]], "SchemaMappingLoadingConfigDataSource": [[103, "schemamappingloadingconfigdatasource"], [176, "schemamappingloadingconfigdatasource"]], "Enum: SchemeEnum": [[103, "enum-schemeenum"]], "SchemaMappingLoadingConfigFormat": [[104, "schemamappingloadingconfigformat"], [177, "schemamappingloadingconfigformat"]], "ServiceStatus": [[105, "servicestatus"], [178, "servicestatus"], [198, "servicestatus"]], "StartServiceRequest": [[106, "startservicerequest"], [179, "startservicerequest"]], "StoredProcedureMeta": [[107, "storedproceduremeta"], [180, "storedproceduremeta"]], "StringType": [[108, "stringtype"], [181, "stringtype"]], "StringTypeString": [[109, "stringtypestring"], [182, "stringtypestring"]], "TemporalType": [[110, "temporaltype"], [183, "temporaltype"]], "TemporalTypeTemporal": [[111, "temporaltypetemporal"], [184, "temporaltypetemporal"]], "TimeStampType": [[112, "timestamptype"], [185, "timestamptype"]], "TypedValue": [[113, "typedvalue"], [186, "typedvalue"]], "UpdateProcedureRequest": [[114, "updateprocedurerequest"], [187, "updateprocedurerequest"]], "UploadFileResponse": [[115, "uploadfileresponse"], [188, "uploadfileresponse"]], "UtilsApi": [[116, "utilsapi"]], "uploadFile": [[116, "uploadfile"]], "VarChar": [[117, "varchar"], [190, "varchar"]], "VarCharVarChar": [[118, "varcharvarchar"], [191, "varcharvarchar"]], "VertexData": [[119, "vertexdata"], [192, "vertexdata"]], "VertexMapping": [[120, "vertexmapping"], [193, "vertexmapping"]], "VertexRequest": [[121, "vertexrequest"], [194, "vertexrequest"]], "VertexStatistics": [[122, "vertexstatistics"], [195, "vertexstatistics"]], "VertexTypePairStatistics": [[123, "vertextypepairstatistics"], [196, "vertextypepairstatistics"]], "Java SDK Reference": [[124, "java-sdk-reference"]], "Requirements": [[124, "requirements"]], "Maven users": [[124, "maven-users"]], "Others": [[124, "others"]], "Documentation for Service APIs": [[124, "documentation-for-service-apis"], [197, "documentation-for-service-apis"]], "Documentation for Data Structures": [[124, "documentation-for-data-structures"], [197, "documentation-for-data-structures"]], "Documentation for Authorization": [[124, "documentation-for-authorization"]], "gs_interactive.AdminServiceGraphManagementApi": [[125, "gs-interactive-adminservicegraphmanagementapi"]], "create_dataloading_job": [[125, "create-dataloading-job"]], "create_graph": [[125, "create-graph"]], "delete_graph": [[125, "delete-graph"]], "get_graph": [[125, "get-graph"]], "get_graph_statistic": [[125, "get-graph-statistic"]], "get_schema": [[125, "get-schema"]], "list_graphs": [[125, "list-graphs"]], "gs_interactive.AdminServiceJobManagementApi": [[126, "gs-interactive-adminservicejobmanagementapi"]], "delete_job_by_id": [[126, "delete-job-by-id"]], "get_job_by_id": [[126, "get-job-by-id"]], "list_jobs": [[126, "list-jobs"]], "gs_interactive.AdminServiceProcedureManagementApi": [[127, "gs-interactive-adminserviceproceduremanagementapi"]], "create_procedure": [[127, "create-procedure"]], "delete_procedure": [[127, "delete-procedure"]], "get_procedure": [[127, "get-procedure"]], "list_procedures": [[127, "list-procedures"]], "update_procedure": [[127, "update-procedure"]], "gs_interactive.AdminServiceServiceManagementApi": [[128, "gs-interactive-adminserviceservicemanagementapi"]], "get_service_status": [[128, "get-service-status"]], "restart_service": [[128, "restart-service"]], "start_service": [[128, "start-service"]], "stop_service": [[128, "stop-service"]], "gs_interactive.GraphServiceEdgeManagementApi": [[163, "gs-interactive-graphserviceedgemanagementapi"]], "add_edge": [[163, "add-edge"]], "delete_edge": [[163, "delete-edge"]], "get_edge": [[163, "get-edge"]], "update_edge": [[163, "update-edge"]], "gs_interactive.GraphServiceVertexManagementApi": [[164, "gs-interactive-graphservicevertexmanagementapi"]], "add_vertex": [[164, "add-vertex"]], "delete_vertex": [[164, "delete-vertex"]], "get_vertex": [[164, "get-vertex"]], "update_vertex": [[164, "update-vertex"]], "ModelProperty": [[168, "modelproperty"]], "gs_interactive.QueryServiceApi": [[173, "gs-interactive-queryserviceapi"]], "proc_call": [[173, "proc-call"]], "proc_call_current": [[173, "proc-call-current"]], "gs_interactive.UtilsApi": [[189, "gs-interactive-utilsapi"]], "upload_file": [[189, "upload-file"]], "Python SDK Reference": [[197, "python-sdk-reference"]], "Requirements.": [[197, "requirements"]], "Installation & Usage": [[197, "installation-usage"]], "pip install": [[197, "pip-install"]], "Setuptools": [[197, "setuptools"]], "Tests": [[197, "tests"]], "Documentation For Authorization": [[197, "documentation-for-authorization"]], "RESTful API Documentation": [[198, "restful-api-documentation"]], "Introduction": [[198, "introduction"], [226, "introduction"]], "API Overview": [[198, "api-overview"]], "Detailed API Documentation": [[198, "detailed-api-documentation"]], "ListGraphs API (GraphManagement Category)": [[198, "listgraphs-api-graphmanagement-category"]], "Description": [[198, "description"], [198, "id1"], [198, "id6"], [198, "id11"], [198, "id16"], [198, "id21"], [198, "id26"], [198, "id31"], [198, "id36"], [198, "id41"], [198, "id46"], [198, "id51"], [198, "id56"], [198, "id61"], [198, "id66"], [198, "id71"], [198, "id75"], [198, "id80"], [198, "id85"], [198, "id90"]], "HTTP Request": [[198, "http-request"], [198, "id2"], [198, "id7"], [198, "id12"], [198, "id17"], [198, "id22"], [198, "id27"], [198, "id32"], [198, "id37"], [198, "id42"], [198, "id47"], [198, "id52"], [198, "id57"], [198, "id62"], [198, "id67"], [198, "id72"], [198, "id76"], [198, "id81"], [198, "id86"], [198, "id91"]], "Curl Command Example": [[198, "curl-command-example"], [198, "id3"], [198, "id8"], [198, "id13"], [198, "id18"], [198, "id23"], [198, "id28"], [198, "id33"], [198, "id38"], [198, "id43"], [198, "id48"], [198, "id53"], [198, "id58"], [198, "id63"], [198, "id68"], [198, "id77"], [198, "id82"], [198, "id87"], [198, "id92"]], "Expected Response": [[198, "expected-response"], [198, "id4"], [198, "id9"], [198, "id14"], [198, "id19"], [198, "id24"], [198, "id29"], [198, "id34"], [198, "id39"], [198, "id44"], [198, "id49"], [198, "id54"], [198, "id59"], [198, "id64"], [198, "id69"], [198, "id73"], [198, "id78"], [198, "id83"], [198, "id88"], [198, "id93"]], "Status Codes": [[198, "status-codes"], [198, "id5"], [198, "id10"], [198, "id15"], [198, "id20"], [198, "id25"], [198, "id30"], [198, "id35"], [198, "id40"], [198, "id45"], [198, "id50"], [198, "id55"], [198, "id60"], [198, "id65"], [198, "id70"], [198, "id74"], [198, "id79"], [198, "id84"], [198, "id89"], [198, "id94"]], "GetGraphStatistics API (GraphManagement Category)": [[198, "getgraphstatistics-api-graphmanagement-category"]], "CreateGraph (GraphManagement Category)": [[198, "creategraph-graphmanagement-category"]], "DeleteGraph  (GraphManagement Category)": [[198, "deletegraph-graphmanagement-category"]], "GetGraphSchema  (GraphManagement Category)": [[198, "getgraphschema-graphmanagement-category"]], "GetGraphMeta  (GraphManagement Category)": [[198, "getgraphmeta-graphmanagement-category"]], "ImportGraph  (GraphManagement Category)": [[198, "importgraph-graphmanagement-category"]], "CreateProcedure (ProcedureManagement Category)": [[198, "createprocedure-proceduremanagement-category"]], "ListAllProcedure  (ProcedureManagement Category)": [[198, "listallprocedure-proceduremanagement-category"]], "GetProcedure (ProcedureManagement Category)": [[198, "getprocedure-proceduremanagement-category"]], "UpdateProcedure (ProcedureManagement Category)": [[198, "updateprocedure-proceduremanagement-category"]], "DeleteProcedure (ProcedureManagement Category)": [[198, "deleteprocedure-proceduremanagement-category"]], "StartService (ServiceManagement Category)": [[198, "startservice-servicemanagement-category"]], "RestartService (ServiceManagement Category)": [[198, "restartservice-servicemanagement-category"]], "StopService (ServiceManagement Category)": [[198, "stopservice-servicemanagement-category"]], "SystemMetrics (NodeMetrics Category)": [[198, "systemmetrics-nodemetrics-category"]], "GetJobById (JobManagement Category)": [[198, "getjobbyid-jobmanagement-category"]], "GetAllJobs (JobManagement category)": [[198, "getalljobs-jobmanagement-category"]], "CancelJobById (JobManagement category)": [[198, "canceljobbyid-jobmanagement-category"]], "Enable AdminService in development": [[198, "enable-adminservice-in-development"]], "Start Compiler Service": [[198, "start-compiler-service"]], "Http error code": [[198, "http-error-code"]], "Preparation": [[199, "preparation"]], "Manage Interactive Service": [[199, "manage-interactive-service"]], "Initialize the Service": [[199, "initialize-the-service"]], "Start the Service": [[199, "start-the-service"]], "Stop the Service": [[199, "stop-the-service"]], "Restart the Service": [[199, "restart-the-service"]], "Check Service Status": [[199, "check-service-status"]], "Destroy the Service": [[199, "destroy-the-service"]], "Running Cypher Queries": [[199, "running-cypher-queries"]], "Running Gremlin Queries": [[199, "running-gremlin-queries"]], "Glossary": [[200, "glossary"], [244, "glossary"]], "Stored Procedure.": [[200, "stored-procedure"]], "Cypher.": [[200, "cypher"]], "Gremlin": [[200, "gremlin"]], "Compile.": [[200, "compile"]], "Install Interactive": [[201, "install-interactive"]], "A Solid Foundation": [[202, "a-solid-foundation"]], "Key Features": [[202, "key-features"], [231, "key-features"]], "Property Graph Model and Graph Queries": [[202, "property-graph-model-and-graph-queries"]], "The Cypher Query Language": [[202, "the-cypher-query-language"]], "The Gremlin Query Language": [[202, "the-gremlin-query-language"]], "Limitations": [[202, "limitations"], [226, "limitations"]], "GraphScope Interactive SDK": [[203, "graphscope-interactive-sdk"]], "Stored Procedures": [[204, "stored-procedures"]], "Compiling a Stored Procedure": [[204, "compiling-a-stored-procedure"]], "Enabling Stored Procedures": [[204, "enabling-stored-procedures"]], "Disabling Stored Procedures": [[204, "disabling-stored-procedures"]], "Viewing Enabled Stored Procedures": [[204, "viewing-enabled-stored-procedures"]], "Querying Stored Procedures": [[204, "querying-stored-procedures"]], "Tools": [[205, "tools"]], "The Administrative tool": [[206, "the-administrative-tool"]], "Detailed Usage": [[206, "detailed-usage"]], "Root Commands": [[206, "root-commands"]], "Service Commands": [[206, "service-commands"]], "Database Commands": [[206, "database-commands"]], "Procedure Commands": [[206, "procedure-commands"]], "GraphScope Interactive": [[207, "graphscope-interactive"]], "Introduction to ArrowFragment": [[208, "introduction-to-arrowfragment"]], "0. \u672f\u8bed": [[208, "id1"]], "1. \u8f7d\u56fe": [[208, "id2"]], "1.1 \u521d\u59cb\u5316partitioner": [[208, "partitioner"]], "1.2 \u6784\u5efa\u539f\u59cbarrow table": [[208, "arrow-table"]], "1.3. Shuffle vtable": [[208, "shuffle-vtable"]], "1.4. \u6784\u5efaVertex map(BasicArrowVertexMapBuilder)": [[208, "vertex-map-basicarrowvertexmapbuilder"]], "1.5. \u6784\u5efaFragment\u51c6\u5907": [[208, "fragment"]], "1.5.1. \u5904\u7406edge table(BasicEVFragmentLoader)": [[208, "edge-table-basicevfragmentloader"]], "1.5.2 FragmentBuilder\u6570\u636e\u521d\u59cb\u5316 (BasicArrowFragmentBuilder)": [[208, "fragmentbuilder-basicarrowfragmentbuilder"]], "1.6 Fragment\u6784\u5efa": [[208, "id3"]], "2. \u8bbf\u95eeFragment": [[208, "id4"]], "2.1 \u8bbf\u95ee\u9876\u70b9": [[208, "id5"]], "2.1.1 \u8bbf\u95ee\u5185\u90e8\u70b9": [[208, "id6"]], "2.1.2 \u8303\u56f4\u5916\u90e8\u70b9": [[208, "id7"]], "2.1.3 \u8bbf\u95ee\u5168\u90e8\u70b9": [[208, "id8"]], "2.1.4 \u8bbf\u95ee\u9876\u70b9\u6570\u636e": [[208, "id9"]], "2.2 \u8bbf\u95ee\u8fb9": [[208, "id10"]], "2.2.1 \u8bbf\u95ee\u51fa\u8fb9": [[208, "id11"]], "2.2.2 \u8bbf\u95ee\u5165\u8fb9": [[208, "id12"]], "2.2.3 \u8bbf\u95ee\u8fb9\u4e0a\u7684\u6570\u636e": [[208, "id13"]], "Frequently Asked Questions": [[209, "frequently-asked-questions"]], "Getting Started for GLE": [[210, "getting-started-for-gle"]], "Graph Workloads": [[211, "graph-workloads"]], "Graph Analytics": [[211, "graph-analytics"]], "Graph Interactive Query": [[211, "graph-interactive-query"]], "Graph Learning": [[211, "graph-learning"], [326, "graph-learning"]], "GraphScope for Data Scientists": [[212, "graphscope-for-data-scientists"]], "Challenges of Handling Graph Computation": [[212, "challenges-of-handling-graph-computation"]], "Solutions of GraphScope": [[212, "solutions-of-graphscope"]], "Program as Single Machine and Run as Distributed": [[212, "program-as-single-machine-and-run-as-distributed"]], "Integration with PyData Ecosystem": [[212, "integration-with-pydata-ecosystem"]], "How to Report Bugs": [[213, "how-to-report-bugs"]], "GraphScope: A One-Stop Large-Scale Graph Computing System from Alibaba": [[214, "graphscope-a-one-stop-large-scale-graph-computing-system-from-alibaba"]], "Installation & Deployment": [[214, null]], "GraphScope Flex": [[214, null]], "Graph Analytical Engine": [[214, null], [250, "graph-analytical-engine"]], "Graph Interactive Engine": [[214, null], [250, "graph-interactive-engine"]], "Graph Learning Engine": [[214, null]], "Storage Engine": [[214, null]], "Troubleshooting & Utilities": [[214, null]], "Development": [[214, null]], "Reference": [[214, null], [474, "reference"]], "Indices and tables": [[214, "indices-and-tables"]], "Standalone Deployment for GIE": [[215, "standalone-deployment-for-gie"]], "Deploy Your First GIE Service": [[215, "deploy-your-first-gie-service"]], "Remove the GIE Service": [[215, "remove-the-gie-service"]], "Using Your Own Data": [[215, "using-your-own-data"]], "Deploy on a Cluster": [[215, "deploy-on-a-cluster"]], "Other Useful Configurations": [[215, "other-useful-configurations"]], "Design of GIE": [[216, "design-of-gie"]], "The Motivations": [[216, "the-motivations"]], "The Architecture": [[216, "the-architecture"]], "Query Processing": [[216, "query-processing"]], "Build GIE with Vineyard Store on Local": [[217, "build-gie-with-vineyard-store-on-local"]], "Test GIE with Vineyard Store on Local": [[217, "test-gie-with-vineyard-store-on-local"]], "Manually Start the GIE Services": [[217, "manually-start-the-gie-services"]], "Running GraphScope Interactive Engine on Local": [[218, "running-graphscope-interactive-engine-on-local"]], "Customize Configurations for GIE instance": [[218, "customize-configurations-for-gie-instance"]], "GIE for Cypher": [[219, "gie-for-cypher"]], "Connecting via Python Driver": [[219, "connecting-via-python-driver"]], "Connecting via Cypher-Shell": [[219, "connecting-via-cypher-shell"]], "Using LLM as an Assistant in GIE": [[220, "using-llm-as-an-assistant-in-gie"]], "0. Environment": [[220, "environment"]], "1. Download Datasets": [[220, "download-datasets"]], "2. Load the Graph": [[220, "load-the-graph"]], "3. Set Endpoint and API Key": [[220, "set-endpoint-and-api-key"]], "4. Generate Graph Query Sentence from Questions": [[220, "generate-graph-query-sentence-from-questions"]], "5. Execute Generated Query Sentence with GIE": [[220, "execute-generated-query-sentence-with-gie"]], "Cypher Support": [[221, "cypher-support"]], "Data Types": [[221, "data-types"], [473, "data-types"]], "Property Types": [[221, "property-types"]], "Structural types": [[221, "structural-types"]], "Constructed Types": [[221, "constructed-types"]], "Operators": [[221, "operators"]], "Clause": [[221, "clause"]], "Neo4j Ecosystem": [[222, "neo4j-ecosystem"]], "GIE For Tinkerpop Ecosystem": [[222, null], [229, null]], "A Generic Graph Optimizer for GIE": [[223, "a-generic-graph-optimizer-for-gie"]], "Rule-based Optimizer (RBO)": [[223, "rule-based-optimizer-rbo"]], "FilterMatchRule": [[223, "filtermatchrule"]], "DegreeFusionRule": [[223, "degreefusionrule"]], "NotMatchToAntiJoinRule": [[223, "notmatchtoantijoinrule"]], "FieldTrimRule": [[223, "fieldtrimrule"]], "Cost-based Optimizer (CBO)": [[223, "cost-based-optimizer-cbo"]], "Graph Type Inference": [[223, "graph-type-inference"]], "FAQs for GIE Gremlin Usage": [[224, "faqs-for-gie-gremlin-usage"]], "Compatibility with TinkerPop": [[224, "compatibility-with-tinkerpop"]], "Property Graph Constraints": [[224, "property-graph-constraints"]], "What\u2019s the difference between Inner ID and Property ID ?": [[224, "whats-the-difference-between-inner-id-and-property-id"]], "How to use path expand in GIE Gremlin ?": [[224, "how-to-use-path-expand-in-gie-gremlin"]], "How to filter data in GIE Gremlin like SQL ?": [[224, "how-to-filter-data-in-gie-gremlin-like-sql"]], "How to aggregate data in GIE Gremlin like SQL?": [[224, "how-to-aggregate-data-in-gie-gremlin-like-sql"]], "group by multiple keys": [[224, "group-by-multiple-keys"]], "group by multiple values:": [[224, "group-by-multiple-values"]], "How to optimize Gremlin queries for performance in GIE?": [[224, "how-to-optimize-gremlin-queries-for-performance-in-gie"]], "Use appropriate indexing": [[224, "use-appropriate-indexing"]], "How to use subgraph in GIE Gremlin ?": [[224, "how-to-use-subgraph-in-gie-gremlin"]], "Supported Gremlin Steps": [[226, "supported-gremlin-steps"]], "Standard Steps": [[226, "standard-steps"]], "Source": [[226, "source"]], "V()": [[226, "v"]], "E()": [[226, "e"]], "Expand": [[226, "expand"]], "outE()": [[226, "oute"]], "inE()": [[226, "ine"]], "bothE()": [[226, "bothe"]], "out()": [[226, "out"], [226, "id7"]], "in()": [[226, "in"], [226, "id8"]], "both()": [[226, "both"], [226, "id9"]], "outV()": [[226, "outv"]], "inV()": [[226, "inv"]], "otherV()": [[226, "otherv"]], "bothV()": [[226, "bothv"]], "Filter": [[226, "filter"]], "hasId()": [[226, "hasid"], [228, "hasid"]], "hasLabel()": [[226, "haslabel"]], "has()": [[226, "has"]], "hasNot()": [[226, "hasnot"]], "is()": [[226, "is"]], "where(traversal)": [[226, "where-traversal"]], "where(predicate)": [[226, "where-predicate"]], "not(traversal)": [[226, "not-traversal"]], "dedup()": [[226, "dedup"], [228, "dedup"]], "Project": [[226, "project"]], "id()": [[226, "id"]], "label()": [[226, "label"]], "constant()": [[226, "constant"], [228, "constant"]], "valueMap()": [[226, "valuemap"], [228, "valuemap"]], "values()": [[226, "values"]], "elementMap()": [[226, "elementmap"]], "select()": [[226, "select"], [228, "select"]], "Aggregate": [[226, "aggregate"]], "count()": [[226, "count"]], "fold()": [[226, "fold"], [228, "fold"]], "sum()": [[226, "sum"]], "min()": [[226, "min"]], "max()": [[226, "max"]], "mean()": [[226, "mean"]], "group()": [[226, "group"], [228, "group"]], "groupCount()": [[226, "groupcount"], [228, "groupcount"]], "<h3 id=\"gremlin-order\">Order</h3>": [[226, "order"]], "order()": [[226, "id1"]], "Statistics": [[226, "statistics"]], "limit()": [[226, "limit"]], "coin()": [[226, "coin"]], "sample()": [[226, "sample"]], "Union": [[226, "union"]], "union()": [[226, "id2"]], "Match": [[226, "match"]], "match()": [[226, "id3"]], "Subgraph": [[226, "subgraph"]], "subgraph()": [[226, "id4"]], "Identity": [[226, "identity"]], "identity()": [[226, "id5"]], "Unfold": [[226, "unfold"]], "unfold()": [[226, "id6"], [226, "id10"]], "Syntactic Sugars": [[226, "syntactic-sugars"]], "PathExpand": [[226, "pathexpand"]], "endV()": [[226, "endv"]], "Getting Properites": [[226, "getting-properites"]], "Expression": [[226, "expression"]], "Running Examples": [[226, "running-examples"]], "Aggregate (Group)": [[226, "aggregate-group"]], "To be Supported": [[226, "to-be-supported"]], "path()": [[226, "path"]], "local()": [[226, "local"]], "Will Not be Supported": [[226, "will-not-be-supported"]], "repeat()": [[226, "repeat"]], "properties()": [[226, "properties"]], "sideEffect": [[226, "sideeffect"]], "branch": [[226, "branch"]], "GIE for Gremlin": [[227, "gie-for-gremlin"]], "Connecting via Python SDK": [[227, "connecting-via-python-sdk"]], "Connecting via Java SDK": [[227, "connecting-via-java-sdk"]], "Connecting via Gremlin-Console": [[227, "connecting-via-gremlin-console"]], "Tutorial: LDBC Gremlin": [[228, "tutorial-ldbc-gremlin"]], "Load the LDBC Graph": [[228, "load-the-ldbc-graph"]], "Basic Vertex/Edge Query": [[228, "basic-vertex-edge-query"]], "Retrieve Vertices and Edges": [[228, "retrieve-vertices-and-edges"]], "Apply Some Filters": [[228, "apply-some-filters"]], "Extract Property Values": [[228, "extract-property-values"]], "Real Applications": [[228, "real-applications"], [228, "id1"]], "Basic Traversal Query": [[228, "basic-traversal-query"]], "Expansion": [[228, "expansion"]], "out(), in() and both()": [[228, "out-in-and-both"]], "outE(), inE() and bothE()": [[228, "oute-ine-and-bothe"]], "outV(), inV(), bothV() and otherV()": [[228, "outv-inv-bothv-and-otherv"]], "Multiple Expansion Steps": [[228, "multiple-expansion-steps"]], "Expansion from many starting points": [[228, "expansion-from-many-starting-points"]], "Filter & Expansion": [[228, "filter-expansion"]], "Apply filters after expansion": [[228, "apply-filters-after-expansion"]], "Expansion as filters": [[228, "expansion-as-filters"]], "Path Expansion (Syntactic Sugar)": [[228, "path-expansion-syntactic-sugar"]], "Pattern Match": [[228, "pattern-match"]], "Relational Operations": [[228, "relational-operations"]], "Filter Steps": [[228, "filter-steps"]], "where()": [[228, "where"]], "Project Steps": [[228, "project-steps"]], "id() and label()": [[228, "id-and-label"]], "Aggregate Steps": [[228, "aggregate-steps"]], "sum(), min(), max() and  mean()": [[228, "sum-min-max-and-mean"]], "Order Step": [[228, "order-step"]], "Limit Step": [[228, "limit-step"]], "Expression(Syntax Sugar)": [[228, "expression-syntax-sugar"]], "Complex Queries": [[228, "complex-queries"]], "LDBC BI2": [[228, "ldbc-bi2"]], "LDBC BI3": [[228, "ldbc-bi3"]], "LDBC BI4(Left Part)": [[228, "ldbc-bi4-left-part"]], "LDBC BI11": [[228, "ldbc-bi11"]], "LDBC BI14": [[228, "ldbc-bi14"]], "Apache TinkerPop Ecosystem": [[229, "apache-tinkerpop-ecosystem"]], "Tutorials for Java Users": [[230, "tutorials-for-java-users"]], "Ease-of-use: Python Interface": [[231, "ease-of-use-python-interface"]], "Graph Traversal Support, in Gremlin and Cypher": [[231, "graph-traversal-support-in-gremlin-and-cypher"]], "High Performant Built-in Algorithms": [[231, "high-performant-built-in-algorithms"]], "Extensible Algorithm Library for Graph Analytics": [[231, "extensible-algorithm-library-for-graph-analytics"]], "GNN Training & Inference": [[231, "gnn-training-inference"]], "Cloud Native Design": [[231, "cloud-native-design"]], "Across-Engine Workflow Orchestration": [[231, "across-engine-workflow-orchestration"]], "Design of GLE": [[232, "design-of-gle"]], "Model Paradigms": [[232, "model-paradigms"]], "EgoGraph-based node-centric aggregation": [[232, "egograph-based-node-centric-aggregation"]], "SubGraph-based graph message passing": [[232, "subgraph-based-graph-message-passing"]], "Pipeline for Learning": [[232, "pipeline-for-learning"]], "Dev on docker container": [[233, "dev-on-docker-container"]], "Build Learning Engine": [[233, "build-learning-engine"]], "Running GraphScope Learning Engine on Local": [[234, "running-graphscope-learning-engine-on-local"]], "Graph Sampling": [[235, "graph-sampling"], [314, "graph-sampling"]], "Graph Traversal": [[235, "graph-traversal"], [246, "graph-traversal"], [315, "graph-traversal"]], "Neighborhood Sampling": [[235, "neighborhood-sampling"]], "Subgraph Sampling": [[235, "subgraph-sampling"], [247, "subgraph-sampling"]], "Negative Sampling": [[235, "negative-sampling"], [319, "negative-sampling"]], "GSL": [[235, "gsl"]], "Tutorial: Training a Node Classification Model on K8s Cluster": [[237, "tutorial-training-a-node-classification-model-on-k8s-cluster"]], "Create a session on kubernetes and load graph": [[237, "create-a-session-on-kubernetes-and-load-graph"]], "Graph neural networks (GNNs)": [[237, "graph-neural-networks-gnns"]], "Tutorial: Training a Node Classification Model on Your Local Machine": [[238, "tutorial-training-a-node-classification-model-on-your-local-machine"]], "Load Graph": [[238, "load-graph"], [240, "load-graph"]], "Define the Training Process for the EgoGraphSAGE Model": [[238, "define-the-training-process-for-the-egographsage-model"]], "Launch the Learning Engine": [[238, "launch-the-learning-engine"], [240, "launch-the-learning-engine"]], "Train the Model": [[238, "train-the-model"]], "Tutorial: Training a Node Classification Model (PyG) on a K8S Cluster": [[239, "tutorial-training-a-node-classification-model-pyg-on-a-k8s-cluster"]], "Set parameters & load graph": [[239, "set-parameters-load-graph"]], "Launch the Server Engine": [[239, "launch-the-server-engine"]], "Configure the parameters for client pods": [[239, "configure-the-parameters-for-client-pods"]], "Write training and testing script": [[239, "write-training-and-testing-script"]], "Import packages": [[239, "import-packages"]], "Define test function": [[239, "define-test-function"]], "Define the loader and training process": [[239, "define-the-loader-and-training-process"]], "main function": [[239, "main-function"]], "Run the script": [[239, "run-the-script"]], "Tutorial: Training a Node Classification Model (PyG) on Your Local Machine": [[240, "tutorial-training-a-node-classification-model-pyg-on-your-local-machine"]], "Define the evaluation function": [[240, "define-the-evaluation-function"]], "Create neighbor loaderfor training, testing and validation": [[240, "create-neighbor-loaderfor-training-testing-and-validation"]], "Define the PyG GraphSage Model and optimizer": [[240, "define-the-pyg-graphsage-model-and-optimizer"]], "Train and test": [[240, "train-and-test"]], "Loading Graphs": [[241, "loading-graphs"]], "Load Built-in Datasets": [[241, "load-built-in-datasets"]], "Loading Your Own Datasets": [[241, "loading-your-own-datasets"]], "Adding Vertices": [[241, "adding-vertices"]], "Advanced Usages": [[241, "advanced-usages"]], "Deduce vertex labels when not ambiguous": [[241, "deduce-vertex-labels-when-not-ambiguous"]], "Deduce vertex from edges": [[241, "deduce-vertex-from-edges"]], "Multiple relations": [[241, "multiple-relations"]], "Specify data types of properties manually": [[241, "specify-data-types-of-properties-manually"]], "Other parameters of graph": [[241, "other-parameters-of-graph"]], "Putting them Together": [[241, "putting-them-together"]], "Loading From Pandas or Numpy": [[241, "loading-from-pandas-or-numpy"]], "From Pandas": [[241, "from-pandas"]], "From Numpy": [[241, "from-numpy"]], "Loader Variants": [[241, "loader-variants"]], "Techniques targeting at large graph": [[241, "techniques-targeting-at-large-graph"]], "Tips for reduce memory consumption of graphs": [[241, "tips-for-reduce-memory-consumption-of-graphs"]], "Design of GraphScope": [[242, "design-of-graphscope"]], "Unified Graph Computing Platform": [[242, "unified-graph-computing-platform"]], "Application layer": [[242, "application-layer"]], "Execution engine layer": [[242, "execution-engine-layer"]], "Storage layer": [[242, "storage-layer"]], "Disaggregated Design for Diverse Graph Applications": [[242, "disaggregated-design-for-diverse-graph-applications"]], "GraphScope for BI analysis": [[242, "graphscope-for-bi-analysis"]], "GraphScope for high QPS queries": [[242, "graphscope-for-high-qps-queries"]], "GraphScope for graph analytics": [[242, "graphscope-for-graph-analytics"]], "GraphScope for learning": [[242, "graphscope-for-learning"]], "One-stop Graph Processing": [[243, "one-stop-graph-processing"]], "Graph Analytical Task Quick Start": [[243, "graph-analytical-task-quick-start"]], "Graph Interactive Query Quick Start": [[243, "graph-interactive-query-quick-start"]], "Graph Learning Quick Start": [[243, "graph-learning-quick-start"]], "FLASH": [[244, "flash"]], "GRAPE": [[244, "grape"]], "GAE": [[244, "gae"]], "GART": [[244, "gart"]], "GRIN": [[244, "grin"]], "GraphAr": [[244, "graphar"]], "Groot": [[244, "groot"]], "GUM": [[244, "gum"]], "MaxGraph (deprecated)": [[244, "maxgraph-deprecated"]], "Vineyard, or v6d": [[244, "vineyard-or-v6d"]], "GIE": [[244, "gie"]], "GAIA": [[244, "gaia"]], "Pegasus": [[244, "pegasus"]], "Ingress": [[244, "ingress"]], "PIE-model": [[244, "pie-model"]], "Graph Analytics Workloads": [[245, "graph-analytics-workloads"]], "What is Graph Analytics": [[245, "what-is-graph-analytics"]], "Challenges of Graph Analytics on Large Graphs": [[245, "challenges-of-graph-analytics-on-large-graphs"]], "What can GraphScope Do": [[245, "what-can-graphscope-do"], [247, "what-can-graphscope-do"]], "Graph Interactive Workloads": [[246, "graph-interactive-workloads"]], "Tinkerpop and Gremlin": [[246, "tinkerpop-and-gremlin"]], "Pattern Matching": [[246, "pattern-matching"], [246, "id1"]], "Neo4j and Cypher": [[246, "neo4j-and-cypher"]], "Graph Learning Workloads": [[247, "graph-learning-workloads"]], "What is Graph Neural Network": [[247, "what-is-graph-neural-network"]], "Typical GNN Models": [[247, "typical-gnn-models"]], "Paradigm of Model Training": [[247, "paradigm-of-model-training"]], "Steps of Model Training": [[247, "steps-of-model-training"]], "Challenges of Applying GNNs on Large Graphs": [[247, "challenges-of-applying-gnns-on-large-graphs"]], "Introducing GraphScope": [[248, "introducing-graphscope"]], "What is GraphScope": [[248, "what-is-graphscope"]], "Why use GraphScope": [[248, "why-use-graphscope"]], "What are the Use Cases": [[248, "what-are-the-use-cases"]], "What are the Limitations": [[248, "what-are-the-limitations"]], "What are the Next": [[248, "what-are-the-next"]], "Positioning of GraphScope": [[249, "positioning-of-graphscope"]], "Compare with Graph Processing Systems": [[249, "compare-with-graph-processing-systems"]], "Compare with Graph Databases": [[249, "compare-with-graph-databases"]], "Compare with Graph Learning Systems": [[249, "compare-with-graph-learning-systems"]], "Handling Various Types of Graph Workloads": [[249, "handling-various-types-of-graph-workloads"]], "Performance and Benchmark": [[250, "performance-and-benchmark"]], "Results": [[250, "results"]], "Performance on GPUs": [[250, "performance-on-gpus"]], "Reproducing the results": [[250, "reproducing-the-results"]], "Tutorials for Python Users": [[251, "tutorials-for-python-users"]], "Analytical Engine API Reference": [[252, "analytical-engine-api-reference"]], "Analytical Engine": [[252, "analytical-engine"]], "Fragments in GraphScope": [[252, "fragments-in-graphscope"]], "Analytical Apps": [[252, "analytical-apps"]], "Analytical Workers": [[252, "analytical-workers"]], "App\u2019s Context": [[252, "app-s-context"]], "Analytical App": [[253, "analytical-app"]], "AppAssets": [[253, "appassets"]], "JavaApp": [[253, "javaapp"]], "App object": [[253, "app-object"]], "Functions": [[253, "functions"], [255, "functions"], [328, "functions"]], "BuiltIn apps": [[253, "builtin-apps"]], "Context": [[254, "context"]], "Context object": [[254, "context-object"]], "Cython SDK API": [[255, "cython-sdk-api"]], "Pregel": [[255, "pregel"]], "PIE": [[255, "pie"]], "GraphScope types": [[255, "graphscope-types"]], "Flex API Reference": [[256, "flex-api-reference"]], "About Grape JDK": [[257, "about-grape-jdk"]], "Project Structure": [[257, "project-structure"]], "Building from source": [[257, "building-from-source"]], "Java Reference (javadoc)": [[258, "java-reference-javadoc"]], "graphscope.Vertex": [[259, "graphscope-vertex"]], "graphscope.declare": [[260, "graphscope-declare"]], "graphscope.framework.app.load_app": [[261, "graphscope-framework-app-load-app"]], "graphscope.framework.dag_utils.add_column": [[262, "graphscope-framework-dag-utils-add-column"]], "graphscope.framework.dag_utils.add_labels_to_graph": [[263, "graphscope-framework-dag-utils-add-labels-to-graph"]], "graphscope.framework.dag_utils.arrow_to_dynamic": [[264, "graphscope-framework-dag-utils-arrow-to-dynamic"]], "graphscope.framework.dag_utils.bind_app": [[265, "graphscope-framework-dag-utils-bind-app"]], "graphscope.framework.dag_utils.clear_edges": [[266, "graphscope-framework-dag-utils-clear-edges"]], "graphscope.framework.dag_utils.clear_graph": [[267, "graphscope-framework-dag-utils-clear-graph"]], "graphscope.framework.dag_utils.context_to_dataframe": [[268, "graphscope-framework-dag-utils-context-to-dataframe"]], "graphscope.framework.dag_utils.context_to_numpy": [[269, "graphscope-framework-dag-utils-context-to-numpy"]], "graphscope.framework.dag_utils.copy_graph": [[270, "graphscope-framework-dag-utils-copy-graph"]], "graphscope.framework.dag_utils.create_app": [[271, "graphscope-framework-dag-utils-create-app"]], "graphscope.framework.dag_utils.create_graph": [[272, "graphscope-framework-dag-utils-create-graph"]], "graphscope.framework.dag_utils.create_graph_view": [[273, "graphscope-framework-dag-utils-create-graph-view"]], "graphscope.framework.dag_utils.create_loader": [[274, "graphscope-framework-dag-utils-create-loader"]], "graphscope.framework.dag_utils.create_subgraph": [[275, "graphscope-framework-dag-utils-create-subgraph"]], "graphscope.framework.dag_utils.create_unload_op": [[276, "graphscope-framework-dag-utils-create-unload-op"]], "graphscope.framework.dag_utils.dynamic_to_arrow": [[277, "graphscope-framework-dag-utils-dynamic-to-arrow"]], "graphscope.framework.dag_utils.get_context_data": [[278, "graphscope-framework-dag-utils-get-context-data"]], "graphscope.framework.dag_utils.graph_to_dataframe": [[279, "graphscope-framework-dag-utils-graph-to-dataframe"]], "graphscope.framework.dag_utils.graph_to_numpy": [[280, "graphscope-framework-dag-utils-graph-to-numpy"]], "graphscope.framework.dag_utils.gremlin_to_subgraph": [[281, "graphscope-framework-dag-utils-gremlin-to-subgraph"]], "graphscope.framework.dag_utils.modify_edges": [[282, "graphscope-framework-dag-utils-modify-edges"]], "graphscope.framework.dag_utils.modify_vertices": [[283, "graphscope-framework-dag-utils-modify-vertices"]], "graphscope.framework.dag_utils.output": [[284, "graphscope-framework-dag-utils-output"]], "graphscope.framework.dag_utils.project_arrow_property_graph": [[285, "graphscope-framework-dag-utils-project-arrow-property-graph"]], "graphscope.framework.dag_utils.project_to_simple": [[286, "graphscope-framework-dag-utils-project-to-simple"]], "graphscope.framework.dag_utils.report_graph": [[287, "graphscope-framework-dag-utils-report-graph"]], "graphscope.framework.dag_utils.run_app": [[288, "graphscope-framework-dag-utils-run-app"]], "graphscope.framework.dag_utils.to_data_sink": [[289, "graphscope-framework-dag-utils-to-data-sink"]], "graphscope.framework.dag_utils.to_directed": [[290, "graphscope-framework-dag-utils-to-directed"]], "graphscope.framework.dag_utils.to_undirected": [[291, "graphscope-framework-dag-utils-to-undirected"]], "graphscope.framework.dag_utils.to_vineyard_dataframe": [[292, "graphscope-framework-dag-utils-to-vineyard-dataframe"]], "graphscope.framework.dag_utils.to_vineyard_tensor": [[293, "graphscope-framework-dag-utils-to-vineyard-tensor"]], "graphscope.framework.dag_utils.unload_app": [[294, "graphscope-framework-dag-utils-unload-app"]], "graphscope.framework.dag_utils.unload_context": [[295, "graphscope-framework-dag-utils-unload-context"]], "graphscope.framework.dag_utils.unload_graph": [[296, "graphscope-framework-dag-utils-unload-graph"]], "graphscope.framework.operation.Operation.__init__": [[297, "graphscope-framework-operation-operation-init"]], "graphscope.framework.operation.Operation.as_op_def": [[298, "graphscope-framework-operation-operation-as-op-def"]], "graphscope.framework.operation.Operation.eval": [[299, "graphscope-framework-operation-operation-eval"]], "graphscope.framework.operation.Operation.evaluated": [[300, "graphscope-framework-operation-operation-evaluated"]], "graphscope.framework.operation.Operation.key": [[301, "graphscope-framework-operation-operation-key"]], "graphscope.framework.operation.Operation.signature": [[302, "graphscope-framework-operation-operation-signature"]], "graphscope.g": [[303, "graphscope-g"]], "graphscope.get_default_session": [[304, "graphscope-get-default-session"]], "graphscope.graphlearn": [[305, "graphscope-graphlearn"]], "graphscope.gremlin": [[306, "graphscope-gremlin"]], "graphscope.has_default_session": [[307, "graphscope-has-default-session"]], "graphscope.session": [[308, "graphscope-session"]], "graphscope.set_option": [[309, "graphscope-set-option"]], "Developing Your Own Model": [[310, "developing-your-own-model"]], "How to Build a Graph Learning Algorithm": [[310, "how-to-build-a-graph-learning-algorithm"]], "Sampling": [[310, "sampling"]], "Encoder": [[310, "encoder"], [318, "encoder"]], "Loss Function and Training Process": [[310, "loss-function-and-training-process"]], "Data Source": [[311, "data-source"]], "1 Data format": [[311, "data-format"]], "1.1 Basic format": [[311, "basic-format"]], "1.2 Attribute format\uff08ATTRIBUTED\uff09": [[311, "attribute-format-attributed"]], "1.3 Weight format\uff08WEIGHTED\uff09": [[311, "weight-format-weighted"]], "1.4 Label format\uff08LABELED\uff09": [[311, "label-format-labeled"]], "1.5 Putting together": [[311, "putting-together"]], "2 Data source type": [[311, "data-source-type"]], "2.2 Alibaba Cloud MaxCompute data table": [[311, "alibaba-cloud-maxcompute-data-table"]], "3 User API": [[311, "user-api"]], "Graph Object": [[312, "graph-object"]], "2 Describe the Topology": [[312, "describe-the-topology"]], "3.1 Stand-alone Mode": [[312, "stand-alone-mode"]], "3.2 Distributed Mode \u2013 Client/Server Mode": [[312, "distributed-mode-client-server-mode"]], "Graph Query": [[313, "graph-query"]], "1 Introduction": [[314, "introduction"]], "Graph Sampling Language\uff08GSL)": [[316, "graph-sampling-language-gsl"]], "Install from pip": [[317, "install-from-pip"]], "Get wheel package": [[317, "get-wheel-package"]], "Install using pip": [[317, "install-using-pip"]], "Install TensorFlow": [[317, "install-tensorflow"]], "Install git": [[317, "install-git"]], "Install dependent libraries": [[317, "install-dependent-libraries"]], "Compile": [[317, "compile"], [320, "compile"]], "Install": [[317, "install"]], "Run test": [[317, "run-test"]], "Docker image": [[317, "docker-image"]], "Graph Learning Model": [[318, "graph-learning-model"]], "Data model": [[318, "data-model"]], "Defining Your Own Operator": [[320, "defining-your-own-operator"]], "Programming Interface": [[320, "programming-interface"]], "Distributed Runtime Design": [[320, "distributed-runtime-design"]], "Implement a New Operator": [[320, "implement-a-new-operator"]], "Clone source code": [[320, "clone-source-code"]], "Implement your operator class": [[320, "implement-your-operator-class"]], "Register Operator": [[320, "register-operator"]], "How to Use an Operator": [[320, "how-to-use-an-operator"]], "Integrating Other Data Sources": [[321, "integrating-other-data-sources"]], "File System Interface": [[321, "file-system-interface"]], "ByteStreamAccessFile": [[321, "bytestreamaccessfile"]], "StructuredAccessFile": [[321, "structuredaccessfile"]], "WritableFile": [[321, "writablefile"]], "Register with Scheme": [[321, "register-with-scheme"]], "Quick Start": [[322, "quick-start"]], "1 Trying out the built-in models": [[322, "trying-out-the-built-in-models"]], "2 How to use the GL APIs": [[322, "how-to-use-the-gl-apis"]], "3 Developing a GNN model": [[322, "developing-a-gnn-model"]], "3.1 Data Preparation": [[322, "data-preparation"]], "3.2 Graph Construction": [[322, "graph-construction"]], "3.3 Graph Sampling": [[322, "graph-sampling"]], "3.4 GNN Model": [[322, "gnn-model"]], "System configuration": [[323, "system-configuration"]], "Graph": [[324, "graph"], [328, "graph"], [462, "graph"]], "Graph object": [[324, "graph-object"]], "Loader object": [[324, "loader-object"]], "Graph Functions": [[324, "graph-functions"]], "Interactive Query": [[325, "interactive-query"]], "Builtin algorithms": [[327, "builtin-algorithms"]], "Nodes": [[328, "nodes"]], "Edges": [[328, "edges"]], "Self loops": [[328, "self-loops"]], "Attributes": [[328, "attributes"]], "Freezing graph structure": [[328, "freezing-graph-structure"]], "graphscope.nx.classes.function.add_cycle": [[329, "graphscope-nx-classes-function-add-cycle"]], "graphscope.nx.classes.function.add_path": [[330, "graphscope-nx-classes-function-add-path"]], "graphscope.nx.classes.function.add_star": [[331, "graphscope-nx-classes-function-add-star"]], "graphscope.nx.classes.function.all_neighbors": [[332, "graphscope-nx-classes-function-all-neighbors"]], "graphscope.nx.classes.function.common_neighbors": [[333, "graphscope-nx-classes-function-common-neighbors"]], "graphscope.nx.classes.function.create_empty_copy": [[334, "graphscope-nx-classes-function-create-empty-copy"]], "graphscope.nx.classes.function.degree": [[335, "graphscope-nx-classes-function-degree"]], "graphscope.nx.classes.function.degree_histogram": [[336, "graphscope-nx-classes-function-degree-histogram"]], "graphscope.nx.classes.function.density": [[337, "graphscope-nx-classes-function-density"]], "graphscope.nx.classes.function.edge_subgraph": [[338, "graphscope-nx-classes-function-edge-subgraph"]], "graphscope.nx.classes.function.edges": [[339, "graphscope-nx-classes-function-edges"]], "graphscope.nx.classes.function.freeze": [[340, "graphscope-nx-classes-function-freeze"]], "graphscope.nx.classes.function.induced_subgraph": [[341, "graphscope-nx-classes-function-induced-subgraph"]], "graphscope.nx.classes.function.info": [[342, "graphscope-nx-classes-function-info"]], "graphscope.nx.classes.function.is_directed": [[343, "graphscope-nx-classes-function-is-directed"]], "graphscope.nx.classes.function.is_empty": [[344, "graphscope-nx-classes-function-is-empty"]], "graphscope.nx.classes.function.is_frozen": [[345, "graphscope-nx-classes-function-is-frozen"]], "graphscope.nx.classes.function.is_negatively_weighted": [[346, "graphscope-nx-classes-function-is-negatively-weighted"]], "graphscope.nx.classes.function.is_weighted": [[347, "graphscope-nx-classes-function-is-weighted"]], "graphscope.nx.classes.function.neighbors": [[348, "graphscope-nx-classes-function-neighbors"]], "graphscope.nx.classes.function.nodes": [[349, "graphscope-nx-classes-function-nodes"]], "graphscope.nx.classes.function.nodes_with_selfloops": [[350, "graphscope-nx-classes-function-nodes-with-selfloops"]], "graphscope.nx.classes.function.non_edges": [[351, "graphscope-nx-classes-function-non-edges"]], "graphscope.nx.classes.function.non_neighbors": [[352, "graphscope-nx-classes-function-non-neighbors"]], "graphscope.nx.classes.function.number_of_edges": [[353, "graphscope-nx-classes-function-number-of-edges"]], "graphscope.nx.classes.function.number_of_nodes": [[354, "graphscope-nx-classes-function-number-of-nodes"]], "graphscope.nx.classes.function.number_of_selfloops": [[355, "graphscope-nx-classes-function-number-of-selfloops"]], "graphscope.nx.classes.function.selfloop_edges": [[356, "graphscope-nx-classes-function-selfloop-edges"]], "graphscope.nx.classes.function.subgraph": [[357, "graphscope-nx-classes-function-subgraph"]], "graphscope.nx.classes.function.to_directed": [[358, "graphscope-nx-classes-function-to-directed"]], "graphscope.nx.classes.function.to_undirected": [[359, "graphscope-nx-classes-function-to-undirected"]], "graphscope.nx.generators.atlas.graph_atlas": [[360, "graphscope-nx-generators-atlas-graph-atlas"]], "graphscope.nx.generators.atlas.graph_atlas_g": [[361, "graphscope-nx-generators-atlas-graph-atlas-g"]], "graphscope.nx.generators.classic.balanced_tree": [[362, "graphscope-nx-generators-classic-balanced-tree"]], "graphscope.nx.generators.classic.barbell_graph": [[363, "graphscope-nx-generators-classic-barbell-graph"]], "graphscope.nx.generators.classic.binomial_tree": [[364, "graphscope-nx-generators-classic-binomial-tree"]], "graphscope.nx.generators.classic.circulant_graph": [[365, "graphscope-nx-generators-classic-circulant-graph"]], "graphscope.nx.generators.classic.circular_ladder_graph": [[366, "graphscope-nx-generators-classic-circular-ladder-graph"]], "graphscope.nx.generators.classic.complete_graph": [[367, "graphscope-nx-generators-classic-complete-graph"]], "graphscope.nx.generators.classic.complete_multipartite_graph": [[368, "graphscope-nx-generators-classic-complete-multipartite-graph"]], "graphscope.nx.generators.classic.cycle_graph": [[369, "graphscope-nx-generators-classic-cycle-graph"]], "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph": [[370, "graphscope-nx-generators-classic-dorogovtsev-goltsev-mendes-graph"]], "graphscope.nx.generators.classic.empty_graph": [[371, "graphscope-nx-generators-classic-empty-graph"]], "graphscope.nx.generators.classic.full_rary_tree": [[372, "graphscope-nx-generators-classic-full-rary-tree"]], "graphscope.nx.generators.classic.ladder_graph": [[373, "graphscope-nx-generators-classic-ladder-graph"]], "graphscope.nx.generators.classic.lollipop_graph": [[374, "graphscope-nx-generators-classic-lollipop-graph"]], "graphscope.nx.generators.classic.null_graph": [[375, "graphscope-nx-generators-classic-null-graph"]], "graphscope.nx.generators.classic.path_graph": [[376, "graphscope-nx-generators-classic-path-graph"]], "graphscope.nx.generators.classic.star_graph": [[377, "graphscope-nx-generators-classic-star-graph"]], "graphscope.nx.generators.classic.trivial_graph": [[378, "graphscope-nx-generators-classic-trivial-graph"]], "graphscope.nx.generators.classic.turan_graph": [[379, "graphscope-nx-generators-classic-turan-graph"]], "graphscope.nx.generators.classic.wheel_graph": [[380, "graphscope-nx-generators-classic-wheel-graph"]], "graphscope.nx.generators.community.LFR_benchmark_graph": [[381, "graphscope-nx-generators-community-lfr-benchmark-graph"]], "graphscope.nx.generators.community.caveman_graph": [[382, "graphscope-nx-generators-community-caveman-graph"]], "graphscope.nx.generators.community.connected_caveman_graph": [[383, "graphscope-nx-generators-community-connected-caveman-graph"]], "graphscope.nx.generators.community.gaussian_random_partition_graph": [[384, "graphscope-nx-generators-community-gaussian-random-partition-graph"]], "graphscope.nx.generators.community.planted_partition_graph": [[385, "graphscope-nx-generators-community-planted-partition-graph"]], "graphscope.nx.generators.community.random_partition_graph": [[386, "graphscope-nx-generators-community-random-partition-graph"]], "graphscope.nx.generators.community.relaxed_caveman_graph": [[387, "graphscope-nx-generators-community-relaxed-caveman-graph"]], "graphscope.nx.generators.community.ring_of_cliques": [[388, "graphscope-nx-generators-community-ring-of-cliques"]], "graphscope.nx.generators.community.stochastic_block_model": [[389, "graphscope-nx-generators-community-stochastic-block-model"]], "graphscope.nx.generators.community.windmill_graph": [[390, "graphscope-nx-generators-community-windmill-graph"]], "graphscope.nx.generators.degree_seq.configuration_model": [[391, "graphscope-nx-generators-degree-seq-configuration-model"]], "graphscope.nx.generators.degree_seq.degree_sequence_tree": [[392, "graphscope-nx-generators-degree-seq-degree-sequence-tree"]], "graphscope.nx.generators.degree_seq.directed_configuration_model": [[393, "graphscope-nx-generators-degree-seq-directed-configuration-model"]], "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph": [[394, "graphscope-nx-generators-degree-seq-directed-havel-hakimi-graph"]], "graphscope.nx.generators.degree_seq.expected_degree_graph": [[395, "graphscope-nx-generators-degree-seq-expected-degree-graph"]], "graphscope.nx.generators.degree_seq.havel_hakimi_graph": [[396, "graphscope-nx-generators-degree-seq-havel-hakimi-graph"]], "graphscope.nx.generators.degree_seq.random_degree_sequence_graph": [[397, "graphscope-nx-generators-degree-seq-random-degree-sequence-graph"]], "graphscope.nx.generators.directed.gn_graph": [[398, "graphscope-nx-generators-directed-gn-graph"]], "graphscope.nx.generators.directed.gnc_graph": [[399, "graphscope-nx-generators-directed-gnc-graph"]], "graphscope.nx.generators.directed.gnr_graph": [[400, "graphscope-nx-generators-directed-gnr-graph"]], "graphscope.nx.generators.directed.random_k_out_graph": [[401, "graphscope-nx-generators-directed-random-k-out-graph"]], "graphscope.nx.generators.directed.scale_free_graph": [[402, "graphscope-nx-generators-directed-scale-free-graph"]], "graphscope.nx.generators.duplication.duplication_divergence_graph": [[403, "graphscope-nx-generators-duplication-duplication-divergence-graph"]], "graphscope.nx.generators.duplication.partial_duplication_graph": [[404, "graphscope-nx-generators-duplication-partial-duplication-graph"]], "graphscope.nx.generators.ego.ego_graph": [[405, "graphscope-nx-generators-ego-ego-graph"]], "graphscope.nx.generators.expanders.chordal_cycle_graph": [[406, "graphscope-nx-generators-expanders-chordal-cycle-graph"]], "graphscope.nx.generators.expanders.margulis_gabber_galil_graph": [[407, "graphscope-nx-generators-expanders-margulis-gabber-galil-graph"]], "graphscope.nx.generators.expanders.paley_graph": [[408, "graphscope-nx-generators-expanders-paley-graph"]], "graphscope.nx.generators.geometric.geographical_threshold_graph": [[409, "graphscope-nx-generators-geometric-geographical-threshold-graph"]], "graphscope.nx.generators.geometric.random_geometric_graph": [[410, "graphscope-nx-generators-geometric-random-geometric-graph"]], "graphscope.nx.generators.geometric.soft_random_geometric_graph": [[411, "graphscope-nx-generators-geometric-soft-random-geometric-graph"]], "graphscope.nx.generators.geometric.thresholded_random_geometric_graph": [[412, "graphscope-nx-generators-geometric-thresholded-random-geometric-graph"]], "graphscope.nx.generators.geometric.waxman_graph": [[413, "graphscope-nx-generators-geometric-waxman-graph"]], "graphscope.nx.generators.harary_graph.hkn_harary_graph": [[414, "graphscope-nx-generators-harary-graph-hkn-harary-graph"]], "graphscope.nx.generators.harary_graph.hnm_harary_graph": [[415, "graphscope-nx-generators-harary-graph-hnm-harary-graph"]], "graphscope.nx.generators.intersection.general_random_intersection_graph": [[416, "graphscope-nx-generators-intersection-general-random-intersection-graph"]], "graphscope.nx.generators.intersection.k_random_intersection_graph": [[417, "graphscope-nx-generators-intersection-k-random-intersection-graph"]], "graphscope.nx.generators.intersection.uniform_random_intersection_graph": [[418, "graphscope-nx-generators-intersection-uniform-random-intersection-graph"]], "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph": [[419, "graphscope-nx-generators-joint-degree-seq-directed-joint-degree-graph"]], "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree": [[420, "graphscope-nx-generators-joint-degree-seq-is-valid-directed-joint-degree"]], "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree": [[421, "graphscope-nx-generators-joint-degree-seq-is-valid-joint-degree"]], "graphscope.nx.generators.joint_degree_seq.joint_degree_graph": [[422, "graphscope-nx-generators-joint-degree-seq-joint-degree-graph"]], "graphscope.nx.generators.mycielski.mycielski_graph": [[423, "graphscope-nx-generators-mycielski-mycielski-graph"]], "graphscope.nx.generators.mycielski.mycielskian": [[424, "graphscope-nx-generators-mycielski-mycielskian"]], "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees": [[425, "graphscope-nx-generators-nonisomorphic-trees-nonisomorphic-trees"]], "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees": [[426, "graphscope-nx-generators-nonisomorphic-trees-number-of-nonisomorphic-trees"]], "graphscope.nx.generators.small.LCF_graph": [[427, "graphscope-nx-generators-small-lcf-graph"]], "graphscope.nx.generators.small.bull_graph": [[428, "graphscope-nx-generators-small-bull-graph"]], "graphscope.nx.generators.small.chvatal_graph": [[429, "graphscope-nx-generators-small-chvatal-graph"]], "graphscope.nx.generators.small.cubical_graph": [[430, "graphscope-nx-generators-small-cubical-graph"]], "graphscope.nx.generators.small.desargues_graph": [[431, "graphscope-nx-generators-small-desargues-graph"]], "graphscope.nx.generators.small.diamond_graph": [[432, "graphscope-nx-generators-small-diamond-graph"]], "graphscope.nx.generators.small.dodecahedral_graph": [[433, "graphscope-nx-generators-small-dodecahedral-graph"]], "graphscope.nx.generators.small.frucht_graph": [[434, "graphscope-nx-generators-small-frucht-graph"]], "graphscope.nx.generators.small.heawood_graph": [[435, "graphscope-nx-generators-small-heawood-graph"]], "graphscope.nx.generators.small.house_graph": [[436, "graphscope-nx-generators-small-house-graph"]], "graphscope.nx.generators.small.house_x_graph": [[437, "graphscope-nx-generators-small-house-x-graph"]], "graphscope.nx.generators.small.icosahedral_graph": [[438, "graphscope-nx-generators-small-icosahedral-graph"]], "graphscope.nx.generators.small.krackhardt_kite_graph": [[439, "graphscope-nx-generators-small-krackhardt-kite-graph"]], "graphscope.nx.generators.small.make_small_graph": [[440, "graphscope-nx-generators-small-make-small-graph"]], "graphscope.nx.generators.small.moebius_kantor_graph": [[441, "graphscope-nx-generators-small-moebius-kantor-graph"]], "graphscope.nx.generators.small.octahedral_graph": [[442, "graphscope-nx-generators-small-octahedral-graph"]], "graphscope.nx.generators.small.pappus_graph": [[443, "graphscope-nx-generators-small-pappus-graph"]], "graphscope.nx.generators.small.petersen_graph": [[444, "graphscope-nx-generators-small-petersen-graph"]], "graphscope.nx.generators.small.sedgewick_maze_graph": [[445, "graphscope-nx-generators-small-sedgewick-maze-graph"]], "graphscope.nx.generators.small.tetrahedral_graph": [[446, "graphscope-nx-generators-small-tetrahedral-graph"]], "graphscope.nx.generators.small.truncated_cube_graph": [[447, "graphscope-nx-generators-small-truncated-cube-graph"]], "graphscope.nx.generators.small.truncated_tetrahedron_graph": [[448, "graphscope-nx-generators-small-truncated-tetrahedron-graph"]], "graphscope.nx.generators.small.tutte_graph": [[449, "graphscope-nx-generators-small-tutte-graph"]], "graphscope.nx.generators.social.davis_southern_women_graph": [[450, "graphscope-nx-generators-social-davis-southern-women-graph"]], "graphscope.nx.generators.social.florentine_families_graph": [[451, "graphscope-nx-generators-social-florentine-families-graph"]], "graphscope.nx.generators.social.karate_club_graph": [[452, "graphscope-nx-generators-social-karate-club-graph"]], "graphscope.nx.generators.social.les_miserables_graph": [[453, "graphscope-nx-generators-social-les-miserables-graph"]], "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge": [[454, "graphscope-nx-generators-spectral-graph-forge-spectral-graph-forge"]], "graphscope.nx.generators.sudoku.sudoku_graph": [[455, "graphscope-nx-generators-sudoku-sudoku-graph"]], "graphscope.nx.generators.trees.prefix_tree": [[456, "graphscope-nx-generators-trees-prefix-tree"]], "graphscope.nx.generators.trees.random_tree": [[457, "graphscope-nx-generators-trees-random-tree"]], "graphscope.nx.generators.triads.triad_graph": [[458, "graphscope-nx-generators-triads-triad-graph"]], "networkx.generators.internet_as_graphs.random_internet_as_graph": [[459, "networkx-generators-internet-as-graphs-random-internet-as-graph"]], "networkx.generators.stochastic.stochastic_graph": [[460, "networkx-generators-stochastic-stochastic-graph"]], "Graph generators": [[461, "graph-generators"]], "Atlas": [[461, "module-graphscope.nx.generators.atlas"]], "Classic": [[461, "module-graphscope.nx.generators.classic"]], "Expanders": [[461, "module-graphscope.nx.generators.expanders"]], "Small": [[461, "module-graphscope.nx.generators.small"]], "Duplication Divergence": [[461, "module-graphscope.nx.generators.duplication"]], "Degree Sequence": [[461, "module-graphscope.nx.generators.degree_seq"]], "Directed": [[461, "module-graphscope.nx.generators.directed"]], "Geometric": [[461, "module-graphscope.nx.generators.geometric"]], "Ego Graph": [[461, "module-graphscope.nx.generators.ego"]], "Stochastic": [[461, "module-networkx.generators.stochastic"]], "AS graph": [[461, "module-networkx.generators.internet_as_graphs"]], "Intersection": [[461, "module-graphscope.nx.generators.intersection"]], "Social Networks": [[461, "module-graphscope.nx.generators.social"]], "Spectral": [[461, "module-graphscope.nx.generators.spectral_graph_forge"]], "Trees": [[461, "module-graphscope.nx.generators.trees"]], "Non Isomorphic Trees": [[461, "module-graphscope.nx.generators.nonisomorphic_trees"]], "Triads": [[461, "module-graphscope.nx.generators.triads"]], "Joint Degree Sequence": [[461, "module-graphscope.nx.generators.joint_degree_seq"]], "Mycielski": [[461, "module-graphscope.nx.generators.mycielski"]], "Harary Graph": [[461, "module-graphscope.nx.generators.harary_graph"]], "Sudoku": [[461, "module-graphscope.nx.generators.sudoku"]], "Graph types": [[462, "graph-types"]], "DiGraph": [[462, "digraph"]], "NetworkX-style API": [[463, "networkx-style-api"]], "Reading graphs": [[464, "reading-graphs"]], "Edge List": [[464, "edge-list"]], "Adjacency List": [[464, "adjacency-list"]], "Graph Transformation": [[465, "graph-transformation"]], "Operation": [[466, "operation"]], "Operation object": [[466, "operation-object"]], "BuiltIn operations": [[466, "module-graphscope.framework.dag_utils"]], "Python API Reference": [[467, "python-api-reference"]], "Selector": [[468, "selector"]], "Selectors in different context": [[468, "selectors-in-different-context"]], "TensorContext": [[468, "tensorcontext"]], "VertexDataContext": [[468, "vertexdatacontext"]], "LabeledVertexDataContext": [[468, "labeledvertexdatacontext"]], "VertexPropertyContext": [[468, "vertexpropertycontext"]], "LabeledVertexPropertyContext": [[468, "labeledvertexpropertycontext"]], "Methods that use selectors": [[468, "methods-that-use-selectors"]], "One-dimensional results": [[468, "one-dimensional-results"]], "Multi-dimensional results": [[468, "multi-dimensional-results"]], "Vertex Range": [[468, "vertex-range"]], "Session": [[469, "session"]], "Session object": [[469, "session-object"]], "Session Functions": [[469, "session-functions"]], "Resources Estimator": [[470, "resources-estimator"]], "GART: Bridging the Gap between Relational OLTP and Graph Workloads": [[471, "gart-bridging-the-gap-between-relational-oltp-and-graph-workloads"]], "Architecture and Workflow": [[471, "architecture-and-workflow"]], "Defining Graph Mapping in GART": [[471, "defining-graph-mapping-in-gart"]], "Loading Logs to GART Storage": [[471, "loading-logs-to-gart-storage"]], "Using Loaded Graphs from GraphScope": [[471, "using-loaded-graphs-from-graphscope"]], "GraphAr: Standard Graph Data File Format": [[473, "graphar-standard-graph-data-file-format"]], "The GraphAr File Format": [[473, "the-graphar-file-format"]], "Features": [[473, "features"]], "File Format": [[473, "file-format"]], "Information files": [[473, "information-files"]], "Data files": [[473, "data-files"]], "Property Data Types": [[473, "property-data-types"]], "GraphAr in GraphScope": [[473, "graphar-in-graphscope"]], "Saving Graph Data in GraphAr": [[473, "saving-graph-data-in-graphar"]], "Loading GraphAr Data into GraphScope": [[473, "loading-graphar-data-into-graphscope"]], "GRIN: Graph Retrieval INterface": [[474, "grin-graph-retrieval-interface"]], "Motivations": [[474, "motivations"]], "Unified Graph Retrieval": [[474, "unified-graph-retrieval"]], "GRIN Concepts": [[474, "grin-concepts"]], "Predefined Macros": [[474, "predefined-macros"]], "Partition Strategy": [[474, "partition-strategy"]], "Edge-cut Partition Strategy": [[474, "edge-cut-partition-strategy"]], "Vertex-cut Partition Strategy": [[474, "vertex-cut-partition-strategy"]], "Property Graph Model": [[474, "property-graph-model"]], "Implementation Guideline": [[474, "implementation-guideline"]], "For computing engine": [[474, "for-computing-engine"]], "For storage engine": [[474, "for-storage-engine"]], "Design Details": [[474, "design-details"]], "Handler": [[474, "handler"]], "Edge": [[474, "edge"]], "List": [[474, "list"]], "Array-style Retrieval": [[474, "array-style-retrieval"]], "List Iterator": [[474, "list-iterator"]], "Label": [[474, "label"], [495, "label"]], "Order": [[474, "order"]], "Master and Mirror": [[474, "master-and-mirror"]], "Local Complete": [[474, "local-complete"]], "Natural ID Trait": [[474, "natural-id-trait"]], "Groot: Persistent Graph Store": [[475, "groot-persistent-graph-store"]], "Known Limitation": [[475, "known-limitation"]], "Deploy Groot": [[475, "deploy-groot"]], "Install from ArtifactHub": [[475, "install-from-artifacthub"]], "Installing from a local directory": [[475, "installing-from-a-local-directory"]], "Common Configurations": [[475, "common-configurations"]], "Connecting to Groot": [[475, "connecting-to-groot"]], "Connection": [[475, "connection"]], "Building and Modifying Graph Models": [[475, "building-and-modifying-graph-models"]], "Using Built-in Datasets": [[475, "using-built-in-datasets"]], "Customizing Models and Datasets": [[475, "customizing-models-and-datasets"]], "Querying Data": [[475, "querying-data"]], "Python": [[475, "python"], [475, "id1"]], "Node.js": [[475, "node-js"]], "Data Import": [[475, "data-import"]], "Offline Import": [[475, "offline-import"]], "Prerequisite": [[475, "prerequisite"]], "Data Format": [[475, "data-format"]], "Loading Process": [[475, "loading-process"]], "Build: Building a partitioned graph": [[475, "build-building-a-partitioned-graph"]], "2. Loading graph partitions": [[475, "loading-graph-partitions"]], "3. Commit to store service": [[475, "commit-to-store-service"]], "Realtime Write": [[475, "realtime-write"]], "Other features": [[475, "other-features"]], "Uninstalling and Restarting": [[475, "uninstalling-and-restarting"]], "Uninstall Groot": [[475, "uninstall-groot"]], "Restart Groot": [[475, "restart-groot"]], "Destroy Groot": [[475, "destroy-groot"]], "Developing Guide": [[475, "developing-guide"]], "Build image": [[475, "build-image"]], "Persistence": [[475, "persistence"]], "Troubleshooting": [[475, "troubleshooting"]], "Viewing logs": [[475, "viewing-logs"]], "Configuring logs": [[475, "configuring-logs"]], "Secondary Instance": [[475, "secondary-instance"]], "Traces": [[475, "traces"]], "Write High-availability": [[475, "write-high-availability"]], "In-memory immutable graphs on Vineyard": [[476, "in-memory-immutable-graphs-on-vineyard"]], "Graphs in Vineyard": [[476, "graphs-in-vineyard"]], "Loading Graphs to Vineyard": [[476, "loading-graphs-to-vineyard"]], "Using Loaded Graphs": [[476, "using-loaded-graphs"]], "Applications and algorithms": [[477, "applications-and-algorithms"]], "Bind application to graph": [[477, "bind-application-to-graph"]], "Built-in algorithms": [[477, "built-in-algorithms"]], "Scaling and repartitioning": [[478, "scaling-and-repartitioning"]], "Fennel": [[478, "fennel"]], "XtraPuLP": [[478, "xtrapulp"]], "Hybrid partitioning": [[478, "hybrid-partitioning"]], "User Guide and Examples of GAE": [[479, "user-guide-and-examples-of-gae"]], "Developing Your Algorithms with Python": [[479, "developing-your-algorithms-with-python"]], "Developing Your Algorithms with C++": [[479, "developing-your-algorithms-with-c"]], "Developing Your Algorithms with Java": [[479, "developing-your-algorithms-with-java"]], "User Guide and Examples of GLE": [[480, "user-guide-and-examples-of-gle"]], "Error Codes": [[481, "error-codes"]], "Command-line Utility gsctl": [[482, "command-line-utility-gsctl"]], "Install/Update gsctl": [[482, "install-update-gsctl"]], "Commands": [[482, "commands"]], "Utility Scripts": [[482, "utility-scripts"]], "Client/Server Mode": [[482, "client-server-mode"]], "Change scope": [[482, "change-scope"]], "Close the connection": [[482, "close-the-connection"]], "How to Find logs": [[483, "how-to-find-logs"]], "Find logs in k8s": [[483, "find-logs-in-k8s"]], "Find logs for GraphScope Analytical Engine (GAE)": [[483, "find-logs-for-graphscope-analytical-engine-gae"]], "Find logs for Graph Interactive Engine (GIE)": [[483, "find-logs-for-graph-interactive-engine-gie"]], "Find logs for Graph Learning Engine (GLE)": [[483, "find-logs-for-graph-learning-engine-gle"]], "Find logs for Groot": [[483, "find-logs-for-groot"]], "Monitoring": [[484, "monitoring"]], "\u56fe\u5206\u6790\u5f15\u64ce": [[485, "id1"]], "\u5185\u7f6e\u7b97\u6cd5": [[485, "id2"]], "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": [[485, "id3"]], "\u4f7f\u7528 PIE \u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[485, "pie"]], "\u4f7f\u7528 Pregel \u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[485, "pregel"]], "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528 math.h \u4e2d\u7684\u51fd\u6570": [[485, "math-h"]], "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[485, "id5"]], "\u8fd0\u884cJava\u7f16\u5199\u7684\u7b97\u6cd5": [[485, "java"]], "\u8fd0\u884c\u793a\u4f8b\u7684Java\u7b97\u6cd5": [[485, "id6"]], "\u4f7f\u7528Java\u7f16\u5199\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5": [[485, "id7"]], "\u90e8\u7f72": [[486, "id1"]], "\u4f7f\u7528Helm\u90e8\u7f72GraphScope": [[486, "helmgraphscope"]], "\u5728AWS/\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": [[486, "aws"]], "\u672c\u5730\u90e8\u7f72GraphScope": [[486, "graphscope"]], "\u5f00\u53d1\u8005\u6307\u5357": [[487, "id1"]], "\u57fa\u4e8e Docker \u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5 GraphScope": [[487, "docker-graphscope"]], "\u57fa\u4e8e Kubernetes \u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5 GraphScope": [[487, "kubernetes-graphscope"]], "\u6784\u5efa Python Wheels": [[487, "python-wheels"]], "Linux": [[487, "linux"]], "macOS": [[487, "macos"]], "\u4ee3\u7801\u98ce\u683c": [[487, "id3"]], "\u5e38\u89c1\u95ee\u9898": [[488, "id1"]], "\u5feb\u901f\u4e0a\u624b": [[489, "id1"]], "\u793a\u4f8b: \u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [[489, "id3"]], "\u521b\u5efa\u4f1a\u8bdd": [[489, "id4"]], "\u4ea4\u4e92\u5f0f\u67e5\u8be2": [[489, "id6"]], "\u56fe\u5206\u6790": [[489, "id7"]], "\u56fe\u795e\u7ecf\u7f51\u7edc (GNNs)": [[489, "gnns"]], "\u5173\u95ed\u4f1a\u8bdd": [[489, "id8"]], "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": [[490, "graph-transformation"]], "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": [[490, "id2"]], "\u6295\u5f71": [[490, "id3"]], "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": [[490, "id4"]], "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": [[490, "id5"]], "GraphScope: \u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": [[491, "graphscope"]], "\u76ee\u5f55": [[491, null], [496, null]], "API \u53c2\u8003": [[491, null]], "\u7d22\u5f15": [[491, "id1"]], "\u5b89\u88c5": [[492, "id1"]], "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": [[492, "id2"]], "\u57fa\u4e8e Kubernetes \u5b89\u88c5 GraphScope \u5ba2\u6237\u7aef": [[492, "kubernetes-graphscope"]], "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": [[493, "id1"]], "Apache TinkerPop": [[493, "apache-tinkerpop"]], "\u5229\u7528Python\uff08Gremlin\uff09\u8fde\u63a5GraphScope": [[493, "python-gremlin-graphscope"]], "\u5229\u7528Java\uff08Gremlin\uff09\u8fde\u63a5GraphScope": [[493, "java-gremlin-graphscope"]], "Gremlin Console\uff08\u5f00\u53d1\u63a7\u5236\u53f0\uff09": [[493, "id5"]], "Gremlin\u7f16\u7a0b\u5165\u95e8\u2013101": [[493, "gremlin-101"]], "\u56fe\u6570\u636e\u6a21\u578b": [[493, "id8"]], "\u67e5\u8be2\u8bed\u8a00": [[493, "id9"]], "\u4e00\u4e2a\u4f8b\u5b50": [[493, "id10"]], "Gremlin\u517c\u5bb9\u6027\uff08\u5bf9\u6bd4TinkerPop\uff09": [[493, "gremlin-tinkerpop"]], "\u5c5e\u6027\u56fe\u6a21\u578b\u7ea6\u675f": [[493, "id11"]], "\u5c1a\u4e0d\u652f\u6301\u7684\u529f\u80fd\u7279\u6027": [[493, "id12"]], "\u652f\u6301\u7684Gremlin\u64cd\u4f5c": [[493, "id13"]], "\u5df2\u77e5\u9650\u5236": [[493, "id14"]], "\u56fe\u5b66\u4e60\u5f15\u64ce": [[494, "id1"]], "\u56fe\u5b66\u4e60\u6a21\u578b": [[494, "id2"]], "\u6570\u636e\u6a21\u578b": [[494, "id3"]], "\u7f16\u7801\u5668": [[494, "id4"]], "\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[494, "id5"]], "\u91c7\u6837": [[494, "id6"]], "\u56fe\u6570\u636e\u6d41": [[494, "id7"]], "\u6a21\u578b": [[494, "id8"]], "\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": [[494, "id9"]], "\u8f7d\u56fe": [[495, "loading-graphs"]], "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": [[495, "id3"]], "\u624b\u52a8\u914d\u7f6e\u56fe": [[495, "id4"]], "Build Vertex": [[495, "build-vertex"]], "vertices": [[495, "vertices"]], "properties": [[495, "properties"], [495, "id7"]], "vid_field": [[495, "vid-field"]], "Build Edge": [[495, "build-edge"]], "edges": [[495, "edges"]], "label": [[495, "id6"]], "src_label and dst_label": [[495, "src-label-and-dst-label"]], "src_field and dst_field": [[495, "src-field-and-dst-field"]], "\u9ad8\u7ea7\u7528\u6cd5": [[495, "id8"]], "\u6ca1\u6709\u6b67\u4e49\u65f6\uff0c\u81ea\u52a8\u63a8\u65ad\u70b9\u6807\u7b7e": [[495, "id9"]], "\u4ece\u8fb9\u4e2d\u63a8\u65ad\u70b9": [[495, "id10"]], "\u591a\u79cd\u8fb9\u5173\u7cfb": [[495, "id11"]], "\u6307\u5b9a\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b": [[495, "id12"]], "\u56fe\u7684\u5176\u4ed6\u53c2\u6570": [[495, "id13"]], "\u5b8c\u6574\u7684\u793a\u4f8b": [[495, "id14"]], "\u4ece Pandas \u6216 Numpy \u4e2d\u8f7d\u56fe": [[495, "pandas-numpy"]], "\u4ece Pandas \u4e2d\u8f7d\u56fe": [[495, "pandas"]], "\u4ece Numpy \u4e2d\u8f7d\u56fe": [[495, "numpy"]], "Loader \u7684\u53d8\u79cd": [[495, "loader"]], "\u5165\u95e8\u6559\u7a0b": [[496, "id1"]]}, "indexentries": {"all_pairs_shortest_path_length()": [[0, "all_pairs_shortest_path_length"]], "attribute_assortativity()": [[0, "attribute_assortativity"]], "average_degree_connectivity()": [[0, "average_degree_connectivity"]], "betweenness_centrality()": [[0, "betweenness_centrality"]], "bfs()": [[0, "bfs"]], "built-in function": [[0, "all_pairs_shortest_path_length"], [0, "attribute_assortativity"], [0, "average_degree_connectivity"], [0, "betweenness_centrality"], [0, "bfs"], [0, "closeness_centrality"], [0, "degree_assortativity_coefficient"], [0, "degree_centrality"], [0, "dfs"], [0, "eigenvector_centrality"], [0, "hits"], [0, "id0"], [0, "id1"], [0, "id2"], [0, "id3"], [0, "id4"], [0, "id5"], [0, "katz_centrality"], [0, "kkore"], [0, "kshell"], [0, "lpa"], [0, "sampling_path"], [0, "sssp"]], "cdlp()": [[0, "id0"]], "closeness_centrality()": [[0, "closeness_centrality"]], "clustering()": [[0, "id1"]], "degree_assortativity_coefficient()": [[0, "degree_assortativity_coefficient"]], "degree_centrality()": [[0, "degree_centrality"]], "dfs()": [[0, "dfs"]], "eigenvector_centrality()": [[0, "eigenvector_centrality"]], "hits()": [[0, "hits"]], "katz_centrality()": [[0, "katz_centrality"]], "kkore()": [[0, "kkore"]], "kshell()": [[0, "kshell"]], "lcc()": [[0, "id2"]], "lpa()": [[0, "lpa"]], "pagerank()": [[0, "id3"]], "sampling_path()": [[0, "sampling_path"]], "sssp()": [[0, "sssp"]], "voterank()": [[0, "id4"]], "wcc()": [[0, "id5"]], "gs::appbase (c++ class)": [[252, "_CPPv4I00EN2gs7AppBaseE"]], "gs::appbase::appbase (c++ function)": [[252, "_CPPv4N2gs7AppBase7AppBaseEv"]], "gs::appbase::inceval (c++ function)": [[252, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::appbase::peval (c++ function)": [[252, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::appbase::load_strategy (c++ member)": [[252, "_CPPv4N2gs7AppBase13load_strategyE"]], "gs::appbase::message_manager_t (c++ type)": [[252, "_CPPv4N2gs7AppBase17message_manager_tE"]], "gs::appbase::message_strategy (c++ member)": [[252, "_CPPv4N2gs7AppBase16message_strategyE"]], "gs::appbase::need_split_edges (c++ member)": [[252, "_CPPv4N2gs7AppBase16need_split_edgesE"]], "gs::appbase::~appbase (c++ function)": [[252, "_CPPv4N2gs7AppBaseD0Ev"]], "gs::appentry (c++ class)": [[252, "_CPPv4N2gs8AppEntryE"]], "gs::appentry::appentry (c++ function)": [[252, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE"]], "gs::appentry::createworker (c++ function)": [[252, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::appentry::init (c++ function)": [[252, "_CPPv4N2gs8AppEntry4InitEv"]], "gs::appentry::query (c++ function)": [[252, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE"]], "gs::argtypeat (c++ struct)": [[252, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE"]], "gs::argsnum (c++ struct)": [[252, "_CPPv4I0EN2gs7ArgsNumE"]], "gs::argsunpacker (c++ struct)": [[252, "_CPPv4I0EN2gs12ArgsUnpackerE"]], "gs::arrowfragmentloader (c++ class)": [[252, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE"]], "gs::arrowfragmentloader::adddatatoexistedelabel (c++ function)": [[252, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedELabelEN8vineyard8ObjectIDE10label_id_t"]], "gs::arrowfragmentloader::adddatatoexistedvlabel (c++ function)": [[252, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedVLabelEN8vineyard8ObjectIDE10label_id_t"]], "gs::arrowfragmentloader::addlabelstofragment (c++ function)": [[252, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE"]], "gs::arrowfragmentloader::addlabelstofragmentasfragmentgroup (c++ function)": [[252, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE"]], "gs::arrowfragmentloader::arrowfragmentloader (c++ function)": [[252, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE"], [252, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb"]], "gs::arrowfragmentloader::extendlabeldata (c++ function)": [[252, "_CPPv4N2gs19ArrowFragmentLoader15ExtendLabelDataEN8vineyard8ObjectIDEi"]], "gs::arrowfragmentloader::loadedgetables (c++ function)": [[252, "_CPPv4N2gs19ArrowFragmentLoader14LoadEdgeTablesEv"]], "gs::arrowfragmentloader::loadfragment (c++ function)": [[252, "_CPPv4N2gs19ArrowFragmentLoader12LoadFragmentEv"]], "gs::arrowfragmentloader::loadfragmentasfragmentgroup (c++ function)": [[252, "_CPPv4N2gs19ArrowFragmentLoader27LoadFragmentAsFragmentGroupEv"]], "gs::arrowfragmentloader::loadvertexedgetables (c++ function)": [[252, "_CPPv4N2gs19ArrowFragmentLoader20LoadVertexEdgeTablesEv"]], "gs::arrowfragmentloader::loadvertextables (c++ function)": [[252, "_CPPv4N2gs19ArrowFragmentLoader16LoadVertexTablesEv"]], "gs::arrowfragmentloader::initpartitioner (c++ function)": [[252, "_CPPv4N2gs19ArrowFragmentLoader15initPartitionerEv"]], "gs::arrowfragmentloader::~arrowfragmentloader (c++ function)": [[252, "_CPPv4N2gs19ArrowFragmentLoaderD0Ev"]], "gs::arrowprojectedfragment (c++ class)": [[252, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE"]], "gs::arrowprojectedfragment::construct (c++ function)": [[252, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE"]], "gs::arrowprojectedfragment::create (c++ function)": [[252, "_CPPv4N2gs22ArrowProjectedFragment6CreateEv"]], "gs::arrowprojectedfragment::getdata (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t"]], "gs::arrowprojectedfragment::getedgenum (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment10GetEdgeNumEv"]], "gs::arrowprojectedfragment::getfragid (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t"]], "gs::arrowprojectedfragment::getid (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinedgenum (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment12GetInEdgeNumEv"]], "gs::arrowprojectedfragment::getincomingadjlist (c++ function)": [[252, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t"], [252, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"], [252, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t"]], "gs::arrowprojectedfragment::getincomingedgenum (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingEdgeNumEv"]], "gs::arrowprojectedfragment::getincominginnervertexadjlist (c++ function)": [[252, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"]], "gs::arrowprojectedfragment::getincomingoutervertexadjlist (c++ function)": [[252, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertex (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexgid (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexid (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexinternalid (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinnerverticesnum (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment19GetInnerVerticesNumEv"]], "gs::arrowprojectedfragment::getinternalid (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getlocalindegree (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t"]], "gs::arrowprojectedfragment::getlocaloutdegree (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t"]], "gs::arrowprojectedfragment::getoutedgenum (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment13GetOutEdgeNumEv"]], "gs::arrowprojectedfragment::getoutervertex (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexgid (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexid (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexinternalid (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getouterverticesnum (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment19GetOuterVerticesNumEv"]], "gs::arrowprojectedfragment::getoutgoingadjlist (c++ function)": [[252, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t"], [252, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"], [252, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t"]], "gs::arrowprojectedfragment::getoutgoingedgenum (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingEdgeNumEv"]], "gs::arrowprojectedfragment::getoutgoinginnervertexadjlist (c++ function)": [[252, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"]], "gs::arrowprojectedfragment::getoutgoingoutervertexadjlist (c++ function)": [[252, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"]], "gs::arrowprojectedfragment::gettotalverticesnum (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment19GetTotalVerticesNumEv"]], "gs::arrowprojectedfragment::getvertex (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getvertexmap (c++ function)": [[252, "_CPPv4N2gs22ArrowProjectedFragment12GetVertexMapEv"], [252, "_CPPv4NK2gs22ArrowProjectedFragment12GetVertexMapEv"]], "gs::arrowprojectedfragment::getverticesnum (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment14GetVerticesNumEv"]], "gs::arrowprojectedfragment::gid2oid (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t"]], "gs::arrowprojectedfragment::gid2vertex (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::iedests (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::ioedests (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::innervertexgid2vertex (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::innervertices (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment13InnerVerticesEv"]], "gs::arrowprojectedfragment::isinnervertex (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t"]], "gs::arrowprojectedfragment::isoutervertex (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t"]], "gs::arrowprojectedfragment::mirrorvertices (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t"]], "gs::arrowprojectedfragment::oedests (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::oid2gid (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t"], [252, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t"]], "gs::arrowprojectedfragment::outervertexgid2vertex (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::outervertices (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t"], [252, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesEv"]], "gs::arrowprojectedfragment::preparetorunapp (c++ function)": [[252, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE"]], "gs::arrowprojectedfragment::project (c++ function)": [[252, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t"]], "gs::arrowprojectedfragment::vertex2gid (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t"]], "gs::arrowprojectedfragment::vertices (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment8VerticesEv"]], "gs::arrowprojectedfragment::adj_list_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment10adj_list_tE"]], "gs::arrowprojectedfragment::compact_adj_list_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment18compact_adj_list_tE"]], "gs::arrowprojectedfragment::compact_edges (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment13compact_edgesEv"]], "gs::arrowprojectedfragment::compact_nbr_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment13compact_nbr_tE"]], "gs::arrowprojectedfragment::const_adj_list_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment16const_adj_list_tE"]], "gs::arrowprojectedfragment::const_compact_adj_list_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment24const_compact_adj_list_tE"]], "gs::arrowprojectedfragment::directed (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment8directedEv"]], "gs::arrowprojectedfragment::edata_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment7edata_tE"]], "gs::arrowprojectedfragment::edge_label (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment10edge_labelEv"]], "gs::arrowprojectedfragment::edge_prop_id (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment12edge_prop_idEv"]], "gs::arrowprojectedfragment::eid_array_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment11eid_array_tE"]], "gs::arrowprojectedfragment::eid_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment5eid_tE"]], "gs::arrowprojectedfragment::fid (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment3fidEv"]], "gs::arrowprojectedfragment::fnum (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment4fnumEv"]], "gs::arrowprojectedfragment::get_arrow_fragment (c++ function)": [[252, "_CPPv4N2gs22ArrowProjectedFragment18get_arrow_fragmentEv"]], "gs::arrowprojectedfragment::get_edata_array_accessor (c++ function)": [[252, "_CPPv4N2gs22ArrowProjectedFragment24get_edata_array_accessorEv"]], "gs::arrowprojectedfragment::get_ie_offsets_begin_ptr (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment24get_ie_offsets_begin_ptrEv"]], "gs::arrowprojectedfragment::get_ie_offsets_end_ptr (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment22get_ie_offsets_end_ptrEv"]], "gs::arrowprojectedfragment::get_in_edges_ptr (c++ function)": [[252, "_CPPv4I_bENK2gs22ArrowProjectedFragment16get_in_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv"]], "gs::arrowprojectedfragment::get_oe_offsets_begin_ptr (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment24get_oe_offsets_begin_ptrEv"]], "gs::arrowprojectedfragment::get_oe_offsets_end_ptr (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment22get_oe_offsets_end_ptrEv"]], "gs::arrowprojectedfragment::get_out_edges_ptr (c++ function)": [[252, "_CPPv4I_bENK2gs22ArrowProjectedFragment17get_out_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv"]], "gs::arrowprojectedfragment::get_vdata_array_accessor (c++ function)": [[252, "_CPPv4N2gs22ArrowProjectedFragment24get_vdata_array_accessorEv"]], "gs::arrowprojectedfragment::inner_vertex_array_t (c++ type)": [[252, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE"]], "gs::arrowprojectedfragment::inner_vertices_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment16inner_vertices_tE"]], "gs::arrowprojectedfragment::internal_oid_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment14internal_oid_tE"]], "gs::arrowprojectedfragment::label_id_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment10label_id_tE"]], "gs::arrowprojectedfragment::load_strategy (c++ member)": [[252, "_CPPv4N2gs22ArrowProjectedFragment13load_strategyE"]], "gs::arrowprojectedfragment::local_vertex_map (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment16local_vertex_mapEv"]], "gs::arrowprojectedfragment::nbr_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment5nbr_tE"]], "gs::arrowprojectedfragment::nbr_unit_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment10nbr_unit_tE"]], "gs::arrowprojectedfragment::oid_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment5oid_tE"]], "gs::arrowprojectedfragment::outer_vertex_array_t (c++ type)": [[252, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE"]], "gs::arrowprojectedfragment::outer_vertices_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment16outer_vertices_tE"]], "gs::arrowprojectedfragment::prop_id_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment9prop_id_tE"]], "gs::arrowprojectedfragment::property_graph_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment16property_graph_tE"]], "gs::arrowprojectedfragment::property_vertex_map_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment21property_vertex_map_tE"]], "gs::arrowprojectedfragment::sub_vertices_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment14sub_vertices_tE"]], "gs::arrowprojectedfragment::use_perfect_hash (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment16use_perfect_hashEv"]], "gs::arrowprojectedfragment::vdata_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment7vdata_tE"]], "gs::arrowprojectedfragment::vertex_array_t (c++ type)": [[252, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE"]], "gs::arrowprojectedfragment::vertex_label (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment12vertex_labelEv"]], "gs::arrowprojectedfragment::vertex_map_id (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment13vertex_map_idEv"]], "gs::arrowprojectedfragment::vertex_map_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment12vertex_map_tE"]], "gs::arrowprojectedfragment::vertex_prop_id (c++ function)": [[252, "_CPPv4NK2gs22ArrowProjectedFragment14vertex_prop_idEv"]], "gs::arrowprojectedfragment::vertex_range_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment14vertex_range_tE"]], "gs::arrowprojectedfragment::vertex_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment8vertex_tE"]], "gs::arrowprojectedfragment::vertices_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment10vertices_tE"]], "gs::arrowprojectedfragment::vid_array_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment11vid_array_tE"]], "gs::arrowprojectedfragment::vid_t (c++ type)": [[252, "_CPPv4N2gs22ArrowProjectedFragment5vid_tE"]], "gs::arrowprojectedfragment::~arrowprojectedfragment (c++ function)": [[252, "_CPPv4N2gs22ArrowProjectedFragmentD0Ev"]], "gs::arrowprojectedvertexmap (c++ class)": [[252, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE"]], "gs::arrowprojectedvertexmap::construct (c++ function)": [[252, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE"]], "gs::arrowprojectedvertexmap::create (c++ function)": [[252, "_CPPv4N2gs23ArrowProjectedVertexMap6CreateEv"]], "gs::arrowprojectedvertexmap::getfidfromgid (c++ function)": [[252, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetFidFromGidE5vid_t"]], "gs::arrowprojectedvertexmap::getgid (c++ function)": [[252, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t"], [252, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t"]], "gs::arrowprojectedvertexmap::getinnervertexsize (c++ function)": [[252, "_CPPv4NK2gs23ArrowProjectedVertexMap18GetInnerVertexSizeE5fid_t"]], "gs::arrowprojectedvertexmap::getlidfromgid (c++ function)": [[252, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetLidFromGidE5vid_t"]], "gs::arrowprojectedvertexmap::getoffsetfromlid (c++ function)": [[252, "_CPPv4N2gs23ArrowProjectedVertexMap16GetOffsetFromLidE5vid_t"]], "gs::arrowprojectedvertexmap::getoid (c++ function)": [[252, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t"]], "gs::arrowprojectedvertexmap::gettotalverticesnum (c++ function)": [[252, "_CPPv4NK2gs23ArrowProjectedVertexMap19GetTotalVerticesNumEv"]], "gs::arrowprojectedvertexmap::offset2lid (c++ function)": [[252, "_CPPv4N2gs23ArrowProjectedVertexMap10Offset2LidERK5vid_t"]], "gs::arrowprojectedvertexmap::project (c++ function)": [[252, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t"]], "gs::arrowprojectedvertexmap::use_perfect_hash (c++ function)": [[252, "_CPPv4NK2gs23ArrowProjectedVertexMap16use_perfect_hashEv"]], "gs::ctxwrapperbuilder (c++ struct)": [[252, "_CPPv4I00EN2gs17CtxWrapperBuilderE"]], "gs::defaultpropertyworker (c++ class)": [[252, "_CPPv4I0EN2gs21DefaultPropertyWorkerE"]], "gs::defaultpropertyworker::defaultpropertyworker (c++ function)": [[252, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::defaultpropertyworker::finalize (c++ function)": [[252, "_CPPv4N2gs21DefaultPropertyWorker8FinalizeEv"]], "gs::defaultpropertyworker::getcontext (c++ function)": [[252, "_CPPv4N2gs21DefaultPropertyWorker10GetContextEv"]], "gs::defaultpropertyworker::init (c++ function)": [[252, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::defaultpropertyworker::output (c++ function)": [[252, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE"]], "gs::defaultpropertyworker::query (c++ function)": [[252, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args"]], "gs::defaultpropertyworker::context_t (c++ type)": [[252, "_CPPv4N2gs21DefaultPropertyWorker9context_tE"]], "gs::defaultpropertyworker::fragment_t (c++ type)": [[252, "_CPPv4N2gs21DefaultPropertyWorker10fragment_tE"]], "gs::defaultpropertyworker::message_manager_t (c++ type)": [[252, "_CPPv4N2gs21DefaultPropertyWorker17message_manager_tE"]], "gs::defaultpropertyworker::~defaultpropertyworker (c++ function)": [[252, "_CPPv4N2gs21DefaultPropertyWorkerD0Ev"]], "gs::defaultworker (c++ class)": [[252, "_CPPv4I0EN2gs13DefaultWorkerE"]], "gs::defaultworker::defaultworker (c++ function)": [[252, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::defaultworker::finalize (c++ function)": [[252, "_CPPv4N2gs13DefaultWorker8FinalizeEv"]], "gs::defaultworker::getcontext (c++ function)": [[252, "_CPPv4N2gs13DefaultWorker10GetContextEv"]], "gs::defaultworker::init (c++ function)": [[252, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::defaultworker::output (c++ function)": [[252, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE"]], "gs::defaultworker::query (c++ function)": [[252, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args"]], "gs::defaultworker::context_t (c++ type)": [[252, "_CPPv4N2gs13DefaultWorker9context_tE"]], "gs::defaultworker::fragment_t (c++ type)": [[252, "_CPPv4N2gs13DefaultWorker10fragment_tE"]], "gs::defaultworker::message_manager_t (c++ type)": [[252, "_CPPv4N2gs13DefaultWorker17message_manager_tE"]], "gs::defaultworker::~defaultworker (c++ function)": [[252, "_CPPv4N2gs13DefaultWorkerD0Ev"]], "gs::dispatchresult (c++ class)": [[252, "_CPPv4N2gs14DispatchResultE"]], "gs::dispatchresult::aggregatepolicy (c++ enum)": [[252, "_CPPv4N2gs14DispatchResult15AggregatePolicyE"]], "gs::dispatchresult::aggregatepolicy::kconcat (c++ enumerator)": [[252, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE"]], "gs::dispatchresult::aggregatepolicy::kmergegraphdef (c++ enumerator)": [[252, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE"]], "gs::dispatchresult::aggregatepolicy::kpickfirst (c++ enumerator)": [[252, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE"]], "gs::dispatchresult::aggregatepolicy::kpickfirstnonempty (c++ enumerator)": [[252, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE"]], "gs::dispatchresult::aggregatepolicy::kpickfirstnonemptygraphdef (c++ enumerator)": [[252, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE"]], "gs::dispatchresult::aggregatepolicy::krequireconsistent (c++ enumerator)": [[252, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE"]], "gs::dispatchresult::dispatchresult (c++ function)": [[252, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE"], [252, "_CPPv4N2gs14DispatchResult14DispatchResultEv"]], "gs::dispatchresult::aggregate_policy (c++ function)": [[252, "_CPPv4NK2gs14DispatchResult16aggregate_policyEv"]], "gs::dispatchresult::data (c++ function)": [[252, "_CPPv4NK2gs14DispatchResult4dataEv"]], "gs::dispatchresult::error_code (c++ function)": [[252, "_CPPv4NK2gs14DispatchResult10error_codeEv"]], "gs::dispatchresult::graph_def (c++ function)": [[252, "_CPPv4N2gs14DispatchResult9graph_defEv"], [252, "_CPPv4NK2gs14DispatchResult9graph_defEv"]], "gs::dispatchresult::has_large_data (c++ function)": [[252, "_CPPv4NK2gs14DispatchResult14has_large_dataEv"]], "gs::dispatchresult::message (c++ function)": [[252, "_CPPv4N2gs14DispatchResult7messageEv"]], "gs::dispatchresult::set_data (c++ function)": [[252, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb"], [252, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb"]], "gs::dispatchresult::set_error (c++ function)": [[252, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE"]], "gs::dispatchresult::set_graph_def (c++ function)": [[252, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy"]], "gs::dispatchresult::worker_id (c++ function)": [[252, "_CPPv4NK2gs14DispatchResult9worker_idEv"]], "gs::dispatcher (c++ class)": [[252, "_CPPv4N2gs10DispatcherE"]], "gs::dispatcher::dispatch (c++ function)": [[252, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE"]], "gs::dispatcher::dispatcher (c++ function)": [[252, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE"]], "gs::dispatcher::setcommand (c++ function)": [[252, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE"]], "gs::dispatcher::start (c++ function)": [[252, "_CPPv4N2gs10Dispatcher5StartEv"]], "gs::dispatcher::stop (c++ function)": [[252, "_CPPv4N2gs10Dispatcher4StopEv"]], "gs::dispatcher::subscribe (c++ function)": [[252, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE"]], "gs::engineconfig (c++ struct)": [[252, "_CPPv4N2gs12EngineConfigE"]], "gs::engineconfig::tojsonstring (c++ function)": [[252, "_CPPv4NK2gs12EngineConfig12ToJsonStringEv"]], "gs::engineconfig::enable_java_sdk (c++ member)": [[252, "_CPPv4N2gs12EngineConfig15enable_java_sdkE"]], "gs::engineconfig::networkx (c++ member)": [[252, "_CPPv4N2gs12EngineConfig8networkxE"]], "gs::engineconfig::vineyard_rpc_endpoint (c++ member)": [[252, "_CPPv4N2gs12EngineConfig21vineyard_rpc_endpointE"]], "gs::engineconfig::vineyard_socket (c++ member)": [[252, "_CPPv4N2gs12EngineConfig15vineyard_socketE"]], "gs::fragmentwrapper (c++ class)": [[252, "_CPPv4I0EN2gs15FragmentWrapperE"]], "gs::gsobject (c++ class)": [[252, "_CPPv4N2gs8GSObjectE"]], "gs::gsobject::gsobject (c++ function)": [[252, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType"]], "gs::gsobject::tostring (c++ function)": [[252, "_CPPv4NK2gs8GSObject8ToStringEv"]], "gs::gsobject::id (c++ function)": [[252, "_CPPv4NK2gs8GSObject2idEv"]], "gs::gsobject::type (c++ function)": [[252, "_CPPv4NK2gs8GSObject4typeEv"]], "gs::gsobject::~gsobject (c++ function)": [[252, "_CPPv4N2gs8GSObjectD0Ev"]], "gs::grapeengine (c++ class)": [[252, "_CPPv4N2gs11GrapeEngineE"]], "gs::grapeengine::grapeengine (c++ function)": [[252, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE"], [252, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi"]], "gs::grapeengine::rundagfile (c++ function)": [[252, "_CPPv4N2gs11GrapeEngine10RunDAGFileEv"]], "gs::grapeengine::start (c++ function)": [[252, "_CPPv4N2gs11GrapeEngine5StartEv"]], "gs::grapeengine::stop (c++ function)": [[252, "_CPPv4N2gs11GrapeEngine4StopEv"]], "gs::grapeinstance (c++ class)": [[252, "_CPPv4N2gs13GrapeInstanceE"]], "gs::grapeinstance::grapeinstance (c++ function)": [[252, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE"]], "gs::grapeinstance::init (c++ function)": [[252, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE"]], "gs::grapeinstance::onreceive (c++ function)": [[252, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE"]], "gs::objectmanager (c++ class)": [[252, "_CPPv4N2gs13ObjectManagerE"]], "gs::objectmanager::getobject (c++ function)": [[252, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE"], [252, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE"]], "gs::objectmanager::hasobject (c++ function)": [[252, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE"]], "gs::objectmanager::putobject (c++ function)": [[252, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE"]], "gs::objectmanager::removeobject (c++ function)": [[252, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE"]], "gs::parallelpropertyworker (c++ class)": [[252, "_CPPv4I0EN2gs22ParallelPropertyWorkerE"]], "gs::parallelpropertyworker::finalize (c++ function)": [[252, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv"]], "gs::parallelpropertyworker::getcontext (c++ function)": [[252, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv"]], "gs::parallelpropertyworker::init (c++ function)": [[252, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::parallelpropertyworker::output (c++ function)": [[252, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE"]], "gs::parallelpropertyworker::parallelpropertyworker (c++ function)": [[252, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::parallelpropertyworker::query (c++ function)": [[252, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args"]], "gs::parallelpropertyworker::context_t (c++ type)": [[252, "_CPPv4N2gs22ParallelPropertyWorker9context_tE"]], "gs::parallelpropertyworker::fragment_t (c++ type)": [[252, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE"]], "gs::parallelpropertyworker::message_manager_t (c++ type)": [[252, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE"]], "gs::parallelpropertyworker::~parallelpropertyworker (c++ function)": [[252, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev"]], "gs::propertyappbase (c++ class)": [[252, "_CPPv4I00EN2gs15PropertyAppBaseE"]], "gs::propertyappbase::inceval (c++ function)": [[252, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::propertyappbase::peval (c++ function)": [[252, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::propertyappbase::propertyappbase (c++ function)": [[252, "_CPPv4N2gs15PropertyAppBase15PropertyAppBaseEv"]], "gs::propertyappbase::load_strategy (c++ member)": [[252, "_CPPv4N2gs15PropertyAppBase13load_strategyE"]], "gs::propertyappbase::message_manager_t (c++ type)": [[252, "_CPPv4N2gs15PropertyAppBase17message_manager_tE"]], "gs::propertyappbase::message_strategy (c++ member)": [[252, "_CPPv4N2gs15PropertyAppBase16message_strategyE"]], "gs::propertyappbase::need_split_edges (c++ member)": [[252, "_CPPv4N2gs15PropertyAppBase16need_split_edgesE"]], "gs::propertyappbase::~propertyappbase (c++ function)": [[252, "_CPPv4N2gs15PropertyAppBaseD0Ev"]], "gs::propertyautoappbase (c++ class)": [[252, "_CPPv4I00EN2gs19PropertyAutoAppBaseE"]], "gs::propertyautoappbase::inceval (c++ function)": [[252, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T"]], "gs::propertyautoappbase::peval (c++ function)": [[252, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T"]], "gs::propertyautoappbase::propertyautoappbase (c++ function)": [[252, "_CPPv4N2gs19PropertyAutoAppBase19PropertyAutoAppBaseEv"]], "gs::propertyautoappbase::load_strategy (c++ member)": [[252, "_CPPv4N2gs19PropertyAutoAppBase13load_strategyE"]], "gs::propertyautoappbase::message_strategy (c++ member)": [[252, "_CPPv4N2gs19PropertyAutoAppBase16message_strategyE"]], "gs::propertyautoappbase::need_split_edges (c++ member)": [[252, "_CPPv4N2gs19PropertyAutoAppBase16need_split_edgesE"]], "gs::propertyautoappbase::~propertyautoappbase (c++ function)": [[252, "_CPPv4N2gs19PropertyAutoAppBaseD0Ev"]], "gs::propertyautoworker (c++ class)": [[252, "_CPPv4I0EN2gs18PropertyAutoWorkerE"]], "gs::propertyautoworker::finalize (c++ function)": [[252, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv"]], "gs::propertyautoworker::getcontext (c++ function)": [[252, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv"]], "gs::propertyautoworker::init (c++ function)": [[252, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::propertyautoworker::output (c++ function)": [[252, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE"]], "gs::propertyautoworker::propertyautoworker (c++ function)": [[252, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::propertyautoworker::query (c++ function)": [[252, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args"]], "gs::propertyautoworker::context_t (c++ type)": [[252, "_CPPv4N2gs18PropertyAutoWorker9context_tE"]], "gs::propertyautoworker::fragment_t (c++ type)": [[252, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE"]], "gs::propertyautoworker::message_manager_t (c++ type)": [[252, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE"]], "gs::propertyautoworker::~propertyautoworker (c++ function)": [[252, "_CPPv4N2gs18PropertyAutoWorkerD0Ev"]], "gs::tensorcontext (c++ class)": [[252, "_CPPv4I00EN2gs13TensorContextE"]], "gs::tensorcontext::tensorcontext (c++ function)": [[252, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t"]], "gs::tensorcontext::assign (c++ function)": [[252, "_CPPv4N2gs13TensorContext6assignERK6data_t"], [252, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE"]], "gs::tensorcontext::data_t (c++ type)": [[252, "_CPPv4N2gs13TensorContext6data_tE"]], "gs::tensorcontext::fragment (c++ function)": [[252, "_CPPv4N2gs13TensorContext8fragmentEv"]], "gs::tensorcontext::set_shape (c++ function)": [[252, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE"]], "gs::tensorcontext::shape (c++ function)": [[252, "_CPPv4NK2gs13TensorContext5shapeEv"]], "gs::tensorcontext::tensor (c++ function)": [[252, "_CPPv4N2gs13TensorContext6tensorEv"]], "gs::tensorcontextwrapper (c++ class)": [[252, "_CPPv4I000EN2gs20TensorContextWrapperE"]], "gs::tensorcontextwrapper::tensorcontextwrapper (c++ function)": [[252, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE"]], "gs::tensorcontextwrapper::toarrowarrays (c++ function)": [[252, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE"]], "gs::tensorcontextwrapper::todataframe (c++ function)": [[252, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE"]], "gs::tensorcontextwrapper::tondarray (c++ function)": [[252, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t"]], "gs::tensorcontextwrapper::tovineyarddataframe (c++ function)": [[252, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE"]], "gs::tensorcontextwrapper::tovineyardtensor (c++ function)": [[252, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t"]], "gs::tensorcontextwrapper::context_type (c++ function)": [[252, "_CPPv4N2gs20TensorContextWrapper12context_typeEv"]], "gs::tensorcontextwrapper::fragment_wrapper (c++ function)": [[252, "_CPPv4N2gs20TensorContextWrapper16fragment_wrapperEv"]], "gs::vertexdatacontextwrapper (c++ class)": [[252, "_CPPv4I00EN2gs24VertexDataContextWrapperE"]], "gs::vertexdatacontextwrapper::toarrowarrays (c++ function)": [[252, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE"]], "gs::vertexdatacontextwrapper::todataframe (c++ function)": [[252, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tondarray (c++ function)": [[252, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tovineyarddataframe (c++ function)": [[252, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tovineyardtensor (c++ function)": [[252, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::vertexdatacontextwrapper (c++ function)": [[252, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE"]], "gs::vertexdatacontextwrapper::context_type (c++ function)": [[252, "_CPPv4N2gs24VertexDataContextWrapper12context_typeEv"]], "gs::vertexdatacontextwrapper::fragment_wrapper (c++ function)": [[252, "_CPPv4N2gs24VertexDataContextWrapper16fragment_wrapperEv"]], "gs::vertexpropertycontext (c++ class)": [[252, "_CPPv4I0EN2gs21VertexPropertyContextE"]], "gs::vertexpropertycontext::vertexpropertycontext (c++ function)": [[252, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t"]], "gs::vertexpropertycontext::add_column (c++ function)": [[252, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType"]], "gs::vertexpropertycontext::fragment (c++ function)": [[252, "_CPPv4N2gs21VertexPropertyContext8fragmentEv"]], "gs::vertexpropertycontext::fragment_t (c++ type)": [[252, "_CPPv4N2gs21VertexPropertyContext10fragment_tE"]], "gs::vertexpropertycontext::get_column (c++ function)": [[252, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t"], [252, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE"]], "gs::vertexpropertycontext::get_typed_column (c++ function)": [[252, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t"], [252, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE"]], "gs::vertexpropertycontext::oid_t (c++ type)": [[252, "_CPPv4N2gs21VertexPropertyContext5oid_tE"]], "gs::vertexpropertycontext::prop_id_t (c++ type)": [[252, "_CPPv4N2gs21VertexPropertyContext9prop_id_tE"]], "gs::vertexpropertycontext::properties_map (c++ function)": [[252, "_CPPv4N2gs21VertexPropertyContext14properties_mapEv"]], "gs::vertexpropertycontext::vertex_properties (c++ function)": [[252, "_CPPv4N2gs21VertexPropertyContext17vertex_propertiesEv"]], "gs::vertexpropertycontext::vertex_t (c++ type)": [[252, "_CPPv4N2gs21VertexPropertyContext8vertex_tE"]], "gs::rpc::analyticalserver (c++ class)": [[252, "_CPPv4N2gs3rpc16AnalyticalServerE"]], "gs::rpc::analyticalserver::analyticalserver (c++ function)": [[252, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi"]], "gs::rpc::analyticalserver::startserver (c++ function)": [[252, "_CPPv4N2gs3rpc16AnalyticalServer11StartServerEv"]], "gs::rpc::analyticalserver::stopserver (c++ function)": [[252, "_CPPv4N2gs3rpc16AnalyticalServer10StopServerEv"]], "app (class in graphscope.framework.app)": [[253, "graphscope.framework.app.App"]], "appassets (class in graphscope.framework.app)": [[253, "graphscope.framework.app.AppAssets"]], "appdagnode (class in graphscope.framework.app)": [[253, "graphscope.framework.app.AppDAGNode"]], "javaapp (class in graphscope.analytical.app)": [[253, "graphscope.analytical.app.JavaApp"]], "__call__() (graphscope.analytical.app.javaapp method)": [[253, "graphscope.analytical.app.JavaApp.__call__"]], "__del__() (graphscope.framework.app.app method)": [[253, "graphscope.framework.app.App.__del__"]], "__init__() (graphscope.analytical.app.javaapp method)": [[253, "graphscope.analytical.app.JavaApp.__init__"]], "__init__() (graphscope.framework.app.app method)": [[253, "graphscope.framework.app.App.__init__"]], "__init__() (graphscope.framework.app.appassets method)": [[253, "graphscope.framework.app.AppAssets.__init__"]], "algo (graphscope.framework.app.appassets property)": [[253, "graphscope.framework.app.AppAssets.algo"]], "attribute_assortativity_coefficient() (in module graphscope)": [[253, "graphscope.attribute_assortativity_coefficient"]], "average_degree_connectivity() (in module graphscope)": [[253, "graphscope.average_degree_connectivity"]], "average_shortest_path_length() (in module graphscope)": [[253, "graphscope.average_shortest_path_length"]], "avg_clustering() (in module graphscope)": [[253, "graphscope.avg_clustering"]], "bfs() (in module graphscope)": [[253, "graphscope.bfs"]], "cdlp() (in module graphscope)": [[253, "graphscope.cdlp"]], "clustering() (in module graphscope)": [[253, "graphscope.clustering"]], "context_type (graphscope.framework.app.appassets property)": [[253, "graphscope.framework.app.AppAssets.context_type"]], "degree_assortativity_coefficient() (in module graphscope)": [[253, "graphscope.degree_assortativity_coefficient"]], "degree_centrality() (in module graphscope)": [[253, "graphscope.degree_centrality"]], "eigenvector_centrality() (in module graphscope)": [[253, "graphscope.eigenvector_centrality"]], "gar (graphscope.framework.app.appassets property)": [[253, "graphscope.framework.app.AppAssets.gar"]], "hits() (in module graphscope)": [[253, "graphscope.hits"]], "is_compatible() (graphscope.analytical.app.javaapp method)": [[253, "graphscope.analytical.app.JavaApp.is_compatible"]], "is_compatible() (graphscope.framework.app.appassets method)": [[253, "graphscope.framework.app.AppAssets.is_compatible"]], "is_simple_path() (in module graphscope)": [[253, "graphscope.is_simple_path"]], "k_core() (in module graphscope)": [[253, "graphscope.k_core"]], "k_shell() (in module graphscope)": [[253, "graphscope.k_shell"]], "katz_centrality() (in module graphscope)": [[253, "graphscope.katz_centrality"]], "key (graphscope.framework.app.app property)": [[253, "graphscope.framework.app.App.key"]], "louvain() (in module graphscope)": [[253, "graphscope.louvain"]], "lpa() (in module graphscope)": [[253, "graphscope.lpa"]], "lpa_u2i() (in module graphscope)": [[253, "graphscope.lpa_u2i"]], "numeric_assortativity_coefficient() (in module graphscope)": [[253, "graphscope.numeric_assortativity_coefficient"]], "pagerank() (in module graphscope)": [[253, "graphscope.pagerank"]], "pagerank_nx() (in module graphscope)": [[253, "graphscope.pagerank_nx"]], "signature (graphscope.framework.app.app property)": [[253, "graphscope.framework.app.App.signature"]], "signature (graphscope.framework.app.appassets property)": [[253, "graphscope.framework.app.AppAssets.signature"]], "signature() (graphscope.analytical.app.javaapp method)": [[253, "graphscope.analytical.app.JavaApp.signature"]], "sssp() (in module graphscope)": [[253, "graphscope.sssp"]], "triangles() (in module graphscope)": [[253, "graphscope.triangles"]], "type (graphscope.framework.app.appassets property)": [[253, "graphscope.framework.app.AppAssets.type"]], "voterank() (in module graphscope)": [[253, "graphscope.voterank"]], "wcc() (in module graphscope)": [[253, "graphscope.wcc"]], "basecontextdagnode (class in graphscope.framework.context)": [[254, "graphscope.framework.context.BaseContextDAGNode"]], "context (class in graphscope.framework.context)": [[254, "graphscope.framework.context.Context"]], "dynamicvertexdatacontext (class in graphscope.framework.context)": [[254, "graphscope.framework.context.DynamicVertexDataContext"]], "labeledvertexdatacontextdagnode (class in graphscope.framework.context)": [[254, "graphscope.framework.context.LabeledVertexDataContextDAGNode"]], "labeledvertexpropertycontextdagnode (class in graphscope.framework.context)": [[254, "graphscope.framework.context.LabeledVertexPropertyContextDAGNode"]], "resultdagnode (class in graphscope.framework.context)": [[254, "graphscope.framework.context.ResultDAGNode"]], "tensorcontextdagnode (class in graphscope.framework.context)": [[254, "graphscope.framework.context.TensorContextDAGNode"]], "vertexdatacontextdagnode (class in graphscope.framework.context)": [[254, "graphscope.framework.context.VertexDataContextDAGNode"]], "vertexpropertycontextdagnode (class in graphscope.framework.context)": [[254, "graphscope.framework.context.VertexPropertyContextDAGNode"]], "to_dataframe() (graphscope.framework.context.basecontextdagnode method)": [[254, "graphscope.framework.context.BaseContextDAGNode.to_dataframe"]], "to_numpy() (graphscope.framework.context.basecontextdagnode method)": [[254, "graphscope.framework.context.BaseContextDAGNode.to_numpy"]], "to_vineyard_dataframe() (graphscope.framework.context.basecontextdagnode method)": [[254, "graphscope.framework.context.BaseContextDAGNode.to_vineyard_dataframe"]], "to_vineyard_tensor() (graphscope.framework.context.basecontextdagnode method)": [[254, "graphscope.framework.context.BaseContextDAGNode.to_vineyard_tensor"]], "vertex (in module graphscope)": [[259, "graphscope.Vertex"]], "declare() (in module graphscope)": [[260, "graphscope.declare"]], "load_app() (in module graphscope.framework.app)": [[261, "graphscope.framework.app.load_app"]], "add_column() (in module graphscope.framework.dag_utils)": [[262, "graphscope.framework.dag_utils.add_column"]], "add_labels_to_graph() (in module graphscope.framework.dag_utils)": [[263, "graphscope.framework.dag_utils.add_labels_to_graph"]], "arrow_to_dynamic() (in module graphscope.framework.dag_utils)": [[264, "graphscope.framework.dag_utils.arrow_to_dynamic"]], "bind_app() (in module graphscope.framework.dag_utils)": [[265, "graphscope.framework.dag_utils.bind_app"]], "clear_edges() (in module graphscope.framework.dag_utils)": [[266, "graphscope.framework.dag_utils.clear_edges"]], "clear_graph() (in module graphscope.framework.dag_utils)": [[267, "graphscope.framework.dag_utils.clear_graph"]], "context_to_dataframe() (in module graphscope.framework.dag_utils)": [[268, "graphscope.framework.dag_utils.context_to_dataframe"]], "context_to_numpy() (in module graphscope.framework.dag_utils)": [[269, "graphscope.framework.dag_utils.context_to_numpy"]], "copy_graph() (in module graphscope.framework.dag_utils)": [[270, "graphscope.framework.dag_utils.copy_graph"]], "create_app() (in module graphscope.framework.dag_utils)": [[271, "graphscope.framework.dag_utils.create_app"]], "create_graph() (in module graphscope.framework.dag_utils)": [[272, "graphscope.framework.dag_utils.create_graph"]], "create_graph_view() (in module graphscope.framework.dag_utils)": [[273, "graphscope.framework.dag_utils.create_graph_view"]], "create_loader() (in module graphscope.framework.dag_utils)": [[274, "graphscope.framework.dag_utils.create_loader"]], "create_subgraph() (in module graphscope.framework.dag_utils)": [[275, "graphscope.framework.dag_utils.create_subgraph"]], "create_unload_op() (in module graphscope.framework.dag_utils)": [[276, "graphscope.framework.dag_utils.create_unload_op"]], "dynamic_to_arrow() (in module graphscope.framework.dag_utils)": [[277, "graphscope.framework.dag_utils.dynamic_to_arrow"]], "get_context_data() (in module graphscope.framework.dag_utils)": [[278, "graphscope.framework.dag_utils.get_context_data"]], "graph_to_dataframe() (in module graphscope.framework.dag_utils)": [[279, "graphscope.framework.dag_utils.graph_to_dataframe"]], "graph_to_numpy() (in module graphscope.framework.dag_utils)": [[280, "graphscope.framework.dag_utils.graph_to_numpy"]], "gremlin_to_subgraph() (in module graphscope.framework.dag_utils)": [[281, "graphscope.framework.dag_utils.gremlin_to_subgraph"]], "modify_edges() (in module graphscope.framework.dag_utils)": [[282, "graphscope.framework.dag_utils.modify_edges"]], "modify_vertices() (in module graphscope.framework.dag_utils)": [[283, "graphscope.framework.dag_utils.modify_vertices"]], "output() (in module graphscope.framework.dag_utils)": [[284, "graphscope.framework.dag_utils.output"]], "project_arrow_property_graph() (in module graphscope.framework.dag_utils)": [[285, "graphscope.framework.dag_utils.project_arrow_property_graph"]], "project_to_simple() (in module graphscope.framework.dag_utils)": [[286, "graphscope.framework.dag_utils.project_to_simple"]], "report_graph() (in module graphscope.framework.dag_utils)": [[287, "graphscope.framework.dag_utils.report_graph"]], "run_app() (in module graphscope.framework.dag_utils)": [[288, "graphscope.framework.dag_utils.run_app"]], "to_data_sink() (in module graphscope.framework.dag_utils)": [[289, "graphscope.framework.dag_utils.to_data_sink"]], "to_directed() (in module graphscope.framework.dag_utils)": [[290, "graphscope.framework.dag_utils.to_directed"]], "to_undirected() (in module graphscope.framework.dag_utils)": [[291, "graphscope.framework.dag_utils.to_undirected"]], "to_vineyard_dataframe() (in module graphscope.framework.dag_utils)": [[292, "graphscope.framework.dag_utils.to_vineyard_dataframe"]], "to_vineyard_tensor() (in module graphscope.framework.dag_utils)": [[293, "graphscope.framework.dag_utils.to_vineyard_tensor"]], "unload_app() (in module graphscope.framework.dag_utils)": [[294, "graphscope.framework.dag_utils.unload_app"]], "unload_context() (in module graphscope.framework.dag_utils)": [[295, "graphscope.framework.dag_utils.unload_context"]], "unload_graph() (in module graphscope.framework.dag_utils)": [[296, "graphscope.framework.dag_utils.unload_graph"]], "__init__() (graphscope.framework.operation.operation method)": [[297, "graphscope.framework.operation.Operation.__init__"]], "as_op_def() (graphscope.framework.operation.operation method)": [[298, "graphscope.framework.operation.Operation.as_op_def"]], "eval() (graphscope.framework.operation.operation method)": [[299, "graphscope.framework.operation.Operation.eval"]], "evaluated (graphscope.framework.operation.operation property)": [[300, "graphscope.framework.operation.Operation.evaluated"]], "key (graphscope.framework.operation.operation property)": [[301, "graphscope.framework.operation.Operation.key"]], "signature (graphscope.framework.operation.operation property)": [[302, "graphscope.framework.operation.Operation.signature"]], "g() (in module graphscope)": [[303, "graphscope.g"]], "get_default_session() (in module graphscope)": [[304, "graphscope.get_default_session"]], "graphlearn() (in module graphscope)": [[305, "graphscope.graphlearn"]], "gremlin() (in module graphscope)": [[306, "graphscope.gremlin"]], "has_default_session() (in module graphscope)": [[307, "graphscope.has_default_session"]], "session (in module graphscope)": [[308, "graphscope.session"]], "set_option() (in module graphscope)": [[309, "graphscope.set_option"]], "graph (class in graphscope.framework.graph)": [[324, "graphscope.framework.graph.Graph"]], "graphdagnode (class in graphscope.framework.graph)": [[324, "graphscope.framework.graph.GraphDAGNode"]], "loader (class in graphscope.framework.loader)": [[324, "graphscope.framework.loader.Loader"]], "__init__() (graphscope.framework.graph.graph method)": [[324, "graphscope.framework.graph.Graph.__init__"]], "__init__() (graphscope.framework.graph.graphdagnode method)": [[324, "graphscope.framework.graph.GraphDAGNode.__init__"]], "__init__() (graphscope.framework.loader.loader method)": [[324, "graphscope.framework.loader.Loader.__init__"]], "add_column() (graphscope.framework.graph.graph method)": [[324, "graphscope.framework.graph.Graph.add_column"]], "add_column() (graphscope.framework.graph.graphdagnode method)": [[324, "graphscope.framework.graph.GraphDAGNode.add_column"]], "add_edges() (graphscope.framework.graph.graph method)": [[324, "graphscope.framework.graph.Graph.add_edges"]], "add_edges() (graphscope.framework.graph.graphdagnode method)": [[324, "graphscope.framework.graph.GraphDAGNode.add_edges"]], "add_vertices() (graphscope.framework.graph.graph method)": [[324, "graphscope.framework.graph.Graph.add_vertices"]], "add_vertices() (graphscope.framework.graph.graphdagnode method)": [[324, "graphscope.framework.graph.GraphDAGNode.add_vertices"]], "consolidate_columns() (graphscope.framework.graph.graph method)": [[324, "graphscope.framework.graph.Graph.consolidate_columns"]], "consolidate_columns() (graphscope.framework.graph.graphdagnode method)": [[324, "graphscope.framework.graph.GraphDAGNode.consolidate_columns"]], "detach() (graphscope.framework.graph.graph method)": [[324, "graphscope.framework.graph.Graph.detach"]], "key (graphscope.framework.graph.graph property)": [[324, "graphscope.framework.graph.Graph.key"]], "load_from() (graphscope.framework.graph.graph class method)": [[324, "graphscope.framework.graph.Graph.load_from"]], "load_from() (in module graphscope.framework.graph_builder)": [[324, "graphscope.framework.graph_builder.load_from"]], "loaded() (graphscope.framework.graph.graph method)": [[324, "graphscope.framework.graph.Graph.loaded"]], "project() (graphscope.framework.graph.graph method)": [[324, "graphscope.framework.graph.Graph.project"]], "project() (graphscope.framework.graph.graphdagnode method)": [[324, "graphscope.framework.graph.GraphDAGNode.project"]], "save_to() (graphscope.framework.graph.graph method)": [[324, "graphscope.framework.graph.Graph.save_to"]], "schema (graphscope.framework.graph.graph property)": [[324, "graphscope.framework.graph.Graph.schema"]], "schema_path (graphscope.framework.graph.graph property)": [[324, "graphscope.framework.graph.Graph.schema_path"]], "session_id (graphscope.framework.graph.graph property)": [[324, "graphscope.framework.graph.Graph.session_id"]], "to_dataframe() (graphscope.framework.graph.graph method)": [[324, "graphscope.framework.graph.Graph.to_dataframe"]], "to_directed() (graphscope.framework.graph.graph method)": [[324, "graphscope.framework.graph.Graph.to_directed"]], "to_numpy() (graphscope.framework.graph.graph method)": [[324, "graphscope.framework.graph.Graph.to_numpy"]], "to_undirected() (graphscope.framework.graph.graph method)": [[324, "graphscope.framework.graph.Graph.to_undirected"]], "vineyard_id (graphscope.framework.graph.graph property)": [[324, "graphscope.framework.graph.Graph.vineyard_id"]], "interactivequery (class in graphscope.interactive.query)": [[325, "graphscope.interactive.query.InteractiveQuery"]], "__init__() (graphscope.interactive.query.interactivequery method)": [[325, "graphscope.interactive.query.InteractiveQuery.__init__"]], "close() (graphscope.interactive.query.interactivequery method)": [[325, "graphscope.interactive.query.InteractiveQuery.close"]], "cypher_driver (graphscope.interactive.query.interactivequery property)": [[325, "graphscope.interactive.query.InteractiveQuery.cypher_driver"]], "cypher_url (graphscope.interactive.query.interactivequery property)": [[325, "graphscope.interactive.query.InteractiveQuery.cypher_url"]], "execute() (graphscope.interactive.query.interactivequery method)": [[325, "graphscope.interactive.query.InteractiveQuery.execute"]], "graph_url (graphscope.interactive.query.interactivequery property)": [[325, "graphscope.interactive.query.InteractiveQuery.graph_url"]], "gremlin_client (graphscope.interactive.query.interactivequery property)": [[325, "graphscope.interactive.query.InteractiveQuery.gremlin_client"]], "gremlin_url (graphscope.interactive.query.interactivequery property)": [[325, "graphscope.interactive.query.InteractiveQuery.gremlin_url"]], "object_id (graphscope.interactive.query.interactivequery property)": [[325, "graphscope.interactive.query.InteractiveQuery.object_id"]], "session (graphscope.interactive.query.interactivequery property)": [[325, "graphscope.interactive.query.InteractiveQuery.session"]], "session_id (graphscope.interactive.query.interactivequery property)": [[325, "graphscope.interactive.query.InteractiveQuery.session_id"]], "subgraph() (graphscope.interactive.query.interactivequery method)": [[325, "graphscope.interactive.query.InteractiveQuery.subgraph"]], "submit() (graphscope.interactive.query.interactivequery method)": [[325, "graphscope.interactive.query.InteractiveQuery.submit"]], "traversal_source() (graphscope.interactive.query.interactivequery method)": [[325, "graphscope.interactive.query.InteractiveQuery.traversal_source"]], "e() (graphscope.learning.graph.graph method)": [[326, "graphscope.learning.graph.Graph.E"]], "graph (class in graphscope.learning.graph)": [[326, "graphscope.learning.graph.Graph"]], "v() (graphscope.learning.graph.graph method)": [[326, "graphscope.learning.graph.Graph.V"]], "__init__() (graphscope.learning.graph.graph method)": [[326, "graphscope.learning.graph.Graph.__init__"]], "get_handle() (graphscope.learning.graph.graph method)": [[326, "graphscope.learning.graph.Graph.get_handle"]], "average_clustering() (in module graphscope.nx.builtin)": [[327, "graphscope.nx.builtin.average_clustering"]], "average_shortest_path_length() (in module graphscope.nx.builtin)": [[327, "graphscope.nx.builtin.average_shortest_path_length"]], "bfs_edges() (in module graphscope.nx.builtin)": [[327, "graphscope.nx.builtin.bfs_edges"]], "clustering() (in module graphscope.nx.builtin)": [[327, "graphscope.nx.builtin.clustering"]], "degree_centrality() (in module graphscope.nx.builtin)": [[327, "graphscope.nx.builtin.degree_centrality"]], "eigenvector_centrality() (in module graphscope.nx.builtin)": [[327, "graphscope.nx.builtin.eigenvector_centrality"]], "has_path() (in module graphscope.nx.builtin)": [[327, "graphscope.nx.builtin.has_path"]], "hits() (in module graphscope.nx.builtin)": [[327, "graphscope.nx.builtin.hits"]], "in_degree_centrality() (in module graphscope.nx.builtin)": [[327, "graphscope.nx.builtin.in_degree_centrality"]], "k_core() (in module graphscope.nx.builtin)": [[327, "graphscope.nx.builtin.k_core"]], "katz_centrality() (in module graphscope.nx.builtin)": [[327, "graphscope.nx.builtin.katz_centrality"]], "out_degree_centrality() (in module graphscope.nx.builtin)": [[327, "graphscope.nx.builtin.out_degree_centrality"]], "triangles() (in module graphscope.nx.builtin)": [[327, "graphscope.nx.builtin.triangles"]], "graphscope.nx.classes.function": [[328, "module-graphscope.nx.classes.function"]], "module": [[328, "module-graphscope.nx.classes.function"], [461, "module-graphscope.nx.generators.atlas"], [461, "module-graphscope.nx.generators.classic"], [461, "module-graphscope.nx.generators.community"], [461, "module-graphscope.nx.generators.degree_seq"], [461, "module-graphscope.nx.generators.directed"], [461, "module-graphscope.nx.generators.duplication"], [461, "module-graphscope.nx.generators.ego"], [461, "module-graphscope.nx.generators.expanders"], [461, "module-graphscope.nx.generators.geometric"], [461, "module-graphscope.nx.generators.harary_graph"], [461, "module-graphscope.nx.generators.intersection"], [461, "module-graphscope.nx.generators.joint_degree_seq"], [461, "module-graphscope.nx.generators.mycielski"], [461, "module-graphscope.nx.generators.nonisomorphic_trees"], [461, "module-graphscope.nx.generators.small"], [461, "module-graphscope.nx.generators.social"], [461, "module-graphscope.nx.generators.spectral_graph_forge"], [461, "module-graphscope.nx.generators.sudoku"], [461, "module-graphscope.nx.generators.trees"], [461, "module-graphscope.nx.generators.triads"], [461, "module-networkx.generators.internet_as_graphs"], [461, "module-networkx.generators.stochastic"], [466, "module-graphscope.framework.dag_utils"]], "add_cycle() (in module graphscope.nx.classes.function)": [[329, "graphscope.nx.classes.function.add_cycle"]], "add_path() (in module graphscope.nx.classes.function)": [[330, "graphscope.nx.classes.function.add_path"]], "add_star() (in module graphscope.nx.classes.function)": [[331, "graphscope.nx.classes.function.add_star"]], "all_neighbors() (in module graphscope.nx.classes.function)": [[332, "graphscope.nx.classes.function.all_neighbors"]], "common_neighbors() (in module graphscope.nx.classes.function)": [[333, "graphscope.nx.classes.function.common_neighbors"]], "create_empty_copy() (in module graphscope.nx.classes.function)": [[334, "graphscope.nx.classes.function.create_empty_copy"]], "degree() (in module graphscope.nx.classes.function)": [[335, "graphscope.nx.classes.function.degree"]], "degree_histogram() (in module graphscope.nx.classes.function)": [[336, "graphscope.nx.classes.function.degree_histogram"]], "density() (in module graphscope.nx.classes.function)": [[337, "graphscope.nx.classes.function.density"]], "edge_subgraph() (in module graphscope.nx.classes.function)": [[338, "graphscope.nx.classes.function.edge_subgraph"]], "edges() (in module graphscope.nx.classes.function)": [[339, "graphscope.nx.classes.function.edges"]], "freeze() (in module graphscope.nx.classes.function)": [[340, "graphscope.nx.classes.function.freeze"]], "induced_subgraph() (in module graphscope.nx.classes.function)": [[341, "graphscope.nx.classes.function.induced_subgraph"]], "info() (in module graphscope.nx.classes.function)": [[342, "graphscope.nx.classes.function.info"]], "is_directed() (in module graphscope.nx.classes.function)": [[343, "graphscope.nx.classes.function.is_directed"]], "is_empty() (in module graphscope.nx.classes.function)": [[344, "graphscope.nx.classes.function.is_empty"]], "is_frozen() (in module graphscope.nx.classes.function)": [[345, "graphscope.nx.classes.function.is_frozen"]], "is_negatively_weighted() (in module graphscope.nx.classes.function)": [[346, "graphscope.nx.classes.function.is_negatively_weighted"]], "is_weighted() (in module graphscope.nx.classes.function)": [[347, "graphscope.nx.classes.function.is_weighted"]], "neighbors() (in module graphscope.nx.classes.function)": [[348, "graphscope.nx.classes.function.neighbors"]], "nodes() (in module graphscope.nx.classes.function)": [[349, "graphscope.nx.classes.function.nodes"]], "nodes_with_selfloops() (in module graphscope.nx.classes.function)": [[350, "graphscope.nx.classes.function.nodes_with_selfloops"]], "non_edges() (in module graphscope.nx.classes.function)": [[351, "graphscope.nx.classes.function.non_edges"]], "non_neighbors() (in module graphscope.nx.classes.function)": [[352, "graphscope.nx.classes.function.non_neighbors"]], "number_of_edges() (in module graphscope.nx.classes.function)": [[353, "graphscope.nx.classes.function.number_of_edges"]], "number_of_nodes() (in module graphscope.nx.classes.function)": [[354, "graphscope.nx.classes.function.number_of_nodes"]], "number_of_selfloops() (in module graphscope.nx.classes.function)": [[355, "graphscope.nx.classes.function.number_of_selfloops"]], "selfloop_edges() (in module graphscope.nx.classes.function)": [[356, "graphscope.nx.classes.function.selfloop_edges"]], "subgraph() (in module graphscope.nx.classes.function)": [[357, "graphscope.nx.classes.function.subgraph"]], "to_directed() (in module graphscope.nx.classes.function)": [[358, "graphscope.nx.classes.function.to_directed"]], "to_undirected() (in module graphscope.nx.classes.function)": [[359, "graphscope.nx.classes.function.to_undirected"]], "graph_atlas() (in module graphscope.nx.generators.atlas)": [[360, "graphscope.nx.generators.atlas.graph_atlas"]], "graph_atlas_g() (in module graphscope.nx.generators.atlas)": [[361, "graphscope.nx.generators.atlas.graph_atlas_g"]], "balanced_tree() (in module graphscope.nx.generators.classic)": [[362, "graphscope.nx.generators.classic.balanced_tree"]], "barbell_graph() (in module graphscope.nx.generators.classic)": [[363, "graphscope.nx.generators.classic.barbell_graph"]], "binomial_tree() (in module graphscope.nx.generators.classic)": [[364, "graphscope.nx.generators.classic.binomial_tree"]], "circulant_graph() (in module graphscope.nx.generators.classic)": [[365, "graphscope.nx.generators.classic.circulant_graph"]], "circular_ladder_graph() (in module graphscope.nx.generators.classic)": [[366, "graphscope.nx.generators.classic.circular_ladder_graph"]], "complete_graph() (in module graphscope.nx.generators.classic)": [[367, "graphscope.nx.generators.classic.complete_graph"]], "complete_multipartite_graph() (in module graphscope.nx.generators.classic)": [[368, "graphscope.nx.generators.classic.complete_multipartite_graph"]], "cycle_graph() (in module graphscope.nx.generators.classic)": [[369, "graphscope.nx.generators.classic.cycle_graph"]], "dorogovtsev_goltsev_mendes_graph() (in module graphscope.nx.generators.classic)": [[370, "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph"]], "empty_graph() (in module graphscope.nx.generators.classic)": [[371, "graphscope.nx.generators.classic.empty_graph"]], "full_rary_tree() (in module graphscope.nx.generators.classic)": [[372, "graphscope.nx.generators.classic.full_rary_tree"]], "ladder_graph() (in module graphscope.nx.generators.classic)": [[373, "graphscope.nx.generators.classic.ladder_graph"]], "lollipop_graph() (in module graphscope.nx.generators.classic)": [[374, "graphscope.nx.generators.classic.lollipop_graph"]], "null_graph() (in module graphscope.nx.generators.classic)": [[375, "graphscope.nx.generators.classic.null_graph"]], "path_graph() (in module graphscope.nx.generators.classic)": [[376, "graphscope.nx.generators.classic.path_graph"]], "star_graph() (in module graphscope.nx.generators.classic)": [[377, "graphscope.nx.generators.classic.star_graph"]], "trivial_graph() (in module graphscope.nx.generators.classic)": [[378, "graphscope.nx.generators.classic.trivial_graph"]], "turan_graph() (in module graphscope.nx.generators.classic)": [[379, "graphscope.nx.generators.classic.turan_graph"]], "wheel_graph() (in module graphscope.nx.generators.classic)": [[380, "graphscope.nx.generators.classic.wheel_graph"]], "lfr_benchmark_graph() (in module graphscope.nx.generators.community)": [[381, "graphscope.nx.generators.community.LFR_benchmark_graph"]], "caveman_graph() (in module graphscope.nx.generators.community)": [[382, "graphscope.nx.generators.community.caveman_graph"]], "connected_caveman_graph() (in module graphscope.nx.generators.community)": [[383, "graphscope.nx.generators.community.connected_caveman_graph"]], "gaussian_random_partition_graph() (in module graphscope.nx.generators.community)": [[384, "graphscope.nx.generators.community.gaussian_random_partition_graph"]], "planted_partition_graph() (in module graphscope.nx.generators.community)": [[385, "graphscope.nx.generators.community.planted_partition_graph"]], "random_partition_graph() (in module graphscope.nx.generators.community)": [[386, "graphscope.nx.generators.community.random_partition_graph"]], "relaxed_caveman_graph() (in module graphscope.nx.generators.community)": [[387, "graphscope.nx.generators.community.relaxed_caveman_graph"]], "ring_of_cliques() (in module graphscope.nx.generators.community)": [[388, "graphscope.nx.generators.community.ring_of_cliques"]], "stochastic_block_model() (in module graphscope.nx.generators.community)": [[389, "graphscope.nx.generators.community.stochastic_block_model"]], "windmill_graph() (in module graphscope.nx.generators.community)": [[390, "graphscope.nx.generators.community.windmill_graph"]], "configuration_model() (in module graphscope.nx.generators.degree_seq)": [[391, "graphscope.nx.generators.degree_seq.configuration_model"]], "degree_sequence_tree() (in module graphscope.nx.generators.degree_seq)": [[392, "graphscope.nx.generators.degree_seq.degree_sequence_tree"]], "directed_configuration_model() (in module graphscope.nx.generators.degree_seq)": [[393, "graphscope.nx.generators.degree_seq.directed_configuration_model"]], "directed_havel_hakimi_graph() (in module graphscope.nx.generators.degree_seq)": [[394, "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph"]], "expected_degree_graph() (in module graphscope.nx.generators.degree_seq)": [[395, "graphscope.nx.generators.degree_seq.expected_degree_graph"]], "havel_hakimi_graph() (in module graphscope.nx.generators.degree_seq)": [[396, "graphscope.nx.generators.degree_seq.havel_hakimi_graph"]], "random_degree_sequence_graph() (in module graphscope.nx.generators.degree_seq)": [[397, "graphscope.nx.generators.degree_seq.random_degree_sequence_graph"]], "gn_graph() (in module graphscope.nx.generators.directed)": [[398, "graphscope.nx.generators.directed.gn_graph"]], "gnc_graph() (in module graphscope.nx.generators.directed)": [[399, "graphscope.nx.generators.directed.gnc_graph"]], "gnr_graph() (in module graphscope.nx.generators.directed)": [[400, "graphscope.nx.generators.directed.gnr_graph"]], "random_k_out_graph() (in module graphscope.nx.generators.directed)": [[401, "graphscope.nx.generators.directed.random_k_out_graph"]], "scale_free_graph() (in module graphscope.nx.generators.directed)": [[402, "graphscope.nx.generators.directed.scale_free_graph"]], "duplication_divergence_graph() (in module graphscope.nx.generators.duplication)": [[403, "graphscope.nx.generators.duplication.duplication_divergence_graph"]], "partial_duplication_graph() (in module graphscope.nx.generators.duplication)": [[404, "graphscope.nx.generators.duplication.partial_duplication_graph"]], "ego_graph() (in module graphscope.nx.generators.ego)": [[405, "graphscope.nx.generators.ego.ego_graph"]], "chordal_cycle_graph() (in module graphscope.nx.generators.expanders)": [[406, "graphscope.nx.generators.expanders.chordal_cycle_graph"]], "margulis_gabber_galil_graph() (in module graphscope.nx.generators.expanders)": [[407, "graphscope.nx.generators.expanders.margulis_gabber_galil_graph"]], "paley_graph() (in module graphscope.nx.generators.expanders)": [[408, "graphscope.nx.generators.expanders.paley_graph"]], "geographical_threshold_graph() (in module graphscope.nx.generators.geometric)": [[409, "graphscope.nx.generators.geometric.geographical_threshold_graph"]], "random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[410, "graphscope.nx.generators.geometric.random_geometric_graph"]], "soft_random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[411, "graphscope.nx.generators.geometric.soft_random_geometric_graph"]], "thresholded_random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[412, "graphscope.nx.generators.geometric.thresholded_random_geometric_graph"]], "waxman_graph() (in module graphscope.nx.generators.geometric)": [[413, "graphscope.nx.generators.geometric.waxman_graph"]], "hkn_harary_graph() (in module graphscope.nx.generators.harary_graph)": [[414, "graphscope.nx.generators.harary_graph.hkn_harary_graph"]], "hnm_harary_graph() (in module graphscope.nx.generators.harary_graph)": [[415, "graphscope.nx.generators.harary_graph.hnm_harary_graph"]], "general_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[416, "graphscope.nx.generators.intersection.general_random_intersection_graph"]], "k_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[417, "graphscope.nx.generators.intersection.k_random_intersection_graph"]], "uniform_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[418, "graphscope.nx.generators.intersection.uniform_random_intersection_graph"]], "directed_joint_degree_graph() (in module graphscope.nx.generators.joint_degree_seq)": [[419, "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph"]], "is_valid_directed_joint_degree() (in module graphscope.nx.generators.joint_degree_seq)": [[420, "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree"]], "is_valid_joint_degree() (in module graphscope.nx.generators.joint_degree_seq)": [[421, "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree"]], "joint_degree_graph() (in module graphscope.nx.generators.joint_degree_seq)": [[422, "graphscope.nx.generators.joint_degree_seq.joint_degree_graph"]], "mycielski_graph() (in module graphscope.nx.generators.mycielski)": [[423, "graphscope.nx.generators.mycielski.mycielski_graph"]], "mycielskian() (in module graphscope.nx.generators.mycielski)": [[424, "graphscope.nx.generators.mycielski.mycielskian"]], "nonisomorphic_trees() (in module graphscope.nx.generators.nonisomorphic_trees)": [[425, "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees"]], "number_of_nonisomorphic_trees() (in module graphscope.nx.generators.nonisomorphic_trees)": [[426, "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees"]], "lcf_graph() (in module graphscope.nx.generators.small)": [[427, "graphscope.nx.generators.small.LCF_graph"]], "bull_graph() (in module graphscope.nx.generators.small)": [[428, "graphscope.nx.generators.small.bull_graph"]], "chvatal_graph() (in module graphscope.nx.generators.small)": [[429, "graphscope.nx.generators.small.chvatal_graph"]], "cubical_graph() (in module graphscope.nx.generators.small)": [[430, "graphscope.nx.generators.small.cubical_graph"]], "desargues_graph() (in module graphscope.nx.generators.small)": [[431, "graphscope.nx.generators.small.desargues_graph"]], "diamond_graph() (in module graphscope.nx.generators.small)": [[432, "graphscope.nx.generators.small.diamond_graph"]], "dodecahedral_graph() (in module graphscope.nx.generators.small)": [[433, "graphscope.nx.generators.small.dodecahedral_graph"]], "frucht_graph() (in module graphscope.nx.generators.small)": [[434, "graphscope.nx.generators.small.frucht_graph"]], "heawood_graph() (in module graphscope.nx.generators.small)": [[435, "graphscope.nx.generators.small.heawood_graph"]], "house_graph() (in module graphscope.nx.generators.small)": [[436, "graphscope.nx.generators.small.house_graph"]], "house_x_graph() (in module graphscope.nx.generators.small)": [[437, "graphscope.nx.generators.small.house_x_graph"]], "icosahedral_graph() (in module graphscope.nx.generators.small)": [[438, "graphscope.nx.generators.small.icosahedral_graph"]], "krackhardt_kite_graph() (in module graphscope.nx.generators.small)": [[439, "graphscope.nx.generators.small.krackhardt_kite_graph"]], "make_small_graph() (in module graphscope.nx.generators.small)": [[440, "graphscope.nx.generators.small.make_small_graph"]], "moebius_kantor_graph() (in module graphscope.nx.generators.small)": [[441, "graphscope.nx.generators.small.moebius_kantor_graph"]], "octahedral_graph() (in module graphscope.nx.generators.small)": [[442, "graphscope.nx.generators.small.octahedral_graph"]], "pappus_graph() (in module graphscope.nx.generators.small)": [[443, "graphscope.nx.generators.small.pappus_graph"]], "petersen_graph() (in module graphscope.nx.generators.small)": [[444, "graphscope.nx.generators.small.petersen_graph"]], "sedgewick_maze_graph() (in module graphscope.nx.generators.small)": [[445, "graphscope.nx.generators.small.sedgewick_maze_graph"]], "tetrahedral_graph() (in module graphscope.nx.generators.small)": [[446, "graphscope.nx.generators.small.tetrahedral_graph"]], "truncated_cube_graph() (in module graphscope.nx.generators.small)": [[447, "graphscope.nx.generators.small.truncated_cube_graph"]], "truncated_tetrahedron_graph() (in module graphscope.nx.generators.small)": [[448, "graphscope.nx.generators.small.truncated_tetrahedron_graph"]], "tutte_graph() (in module graphscope.nx.generators.small)": [[449, "graphscope.nx.generators.small.tutte_graph"]], "davis_southern_women_graph() (in module graphscope.nx.generators.social)": [[450, "graphscope.nx.generators.social.davis_southern_women_graph"]], "florentine_families_graph() (in module graphscope.nx.generators.social)": [[451, "graphscope.nx.generators.social.florentine_families_graph"]], "karate_club_graph() (in module graphscope.nx.generators.social)": [[452, "graphscope.nx.generators.social.karate_club_graph"]], "les_miserables_graph() (in module graphscope.nx.generators.social)": [[453, "graphscope.nx.generators.social.les_miserables_graph"]], "spectral_graph_forge() (in module graphscope.nx.generators.spectral_graph_forge)": [[454, "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge"]], "sudoku_graph() (in module graphscope.nx.generators.sudoku)": [[455, "graphscope.nx.generators.sudoku.sudoku_graph"]], "prefix_tree() (in module graphscope.nx.generators.trees)": [[456, "graphscope.nx.generators.trees.prefix_tree"]], "random_tree() (in module graphscope.nx.generators.trees)": [[457, "graphscope.nx.generators.trees.random_tree"]], "triad_graph() (in module graphscope.nx.generators.triads)": [[458, "graphscope.nx.generators.triads.triad_graph"]], "random_internet_as_graph() (in module networkx.generators.internet_as_graphs)": [[459, "networkx.generators.internet_as_graphs.random_internet_as_graph"]], "stochastic_graph() (in module networkx.generators.stochastic)": [[460, "networkx.generators.stochastic.stochastic_graph"]], "graphscope.nx.generators.atlas": [[461, "module-graphscope.nx.generators.atlas"]], "graphscope.nx.generators.classic": [[461, "module-graphscope.nx.generators.classic"]], "graphscope.nx.generators.community": [[461, "module-graphscope.nx.generators.community"]], "graphscope.nx.generators.degree_seq": [[461, "module-graphscope.nx.generators.degree_seq"]], "graphscope.nx.generators.directed": [[461, "module-graphscope.nx.generators.directed"]], "graphscope.nx.generators.duplication": [[461, "module-graphscope.nx.generators.duplication"]], "graphscope.nx.generators.ego": [[461, "module-graphscope.nx.generators.ego"]], "graphscope.nx.generators.expanders": [[461, "module-graphscope.nx.generators.expanders"]], "graphscope.nx.generators.geometric": [[461, "module-graphscope.nx.generators.geometric"]], "graphscope.nx.generators.harary_graph": [[461, "module-graphscope.nx.generators.harary_graph"]], "graphscope.nx.generators.intersection": [[461, "module-graphscope.nx.generators.intersection"]], "graphscope.nx.generators.joint_degree_seq": [[461, "module-graphscope.nx.generators.joint_degree_seq"]], "graphscope.nx.generators.mycielski": [[461, "module-graphscope.nx.generators.mycielski"]], "graphscope.nx.generators.nonisomorphic_trees": [[461, "module-graphscope.nx.generators.nonisomorphic_trees"]], "graphscope.nx.generators.small": [[461, "module-graphscope.nx.generators.small"]], "graphscope.nx.generators.social": [[461, "module-graphscope.nx.generators.social"]], "graphscope.nx.generators.spectral_graph_forge": [[461, "module-graphscope.nx.generators.spectral_graph_forge"]], "graphscope.nx.generators.sudoku": [[461, "module-graphscope.nx.generators.sudoku"]], "graphscope.nx.generators.trees": [[461, "module-graphscope.nx.generators.trees"]], "graphscope.nx.generators.triads": [[461, "module-graphscope.nx.generators.triads"]], "networkx.generators.internet_as_graphs": [[461, "module-networkx.generators.internet_as_graphs"]], "networkx.generators.stochastic": [[461, "module-networkx.generators.stochastic"]], "digraph (class in graphscope.nx)": [[462, "graphscope.nx.DiGraph"]], "graph (class in graphscope.nx)": [[462, "graphscope.nx.Graph"]], "__contains__() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.__contains__"]], "__contains__() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.__contains__"]], "__getitem__() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.__getitem__"]], "__getitem__() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.__getitem__"]], "__init__() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.__init__"]], "__init__() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.__init__"]], "__iter__() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.__iter__"]], "__iter__() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.__iter__"]], "__len__() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.__len__"]], "__len__() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.__len__"]], "add_edge() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.add_edge"]], "add_edge() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.add_edge"]], "add_edges_from() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.add_edges_from"]], "add_edges_from() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.add_edges_from"]], "add_node() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.add_node"]], "add_node() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.add_node"]], "add_nodes_from() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.add_nodes_from"]], "add_nodes_from() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.add_nodes_from"]], "add_weighted_edges_from() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.add_weighted_edges_from"]], "add_weighted_edges_from() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.add_weighted_edges_from"]], "adj (graphscope.nx.digraph property)": [[462, "graphscope.nx.DiGraph.adj"]], "adj (graphscope.nx.graph property)": [[462, "graphscope.nx.Graph.adj"]], "adjacency() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.adjacency"]], "adjacency() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.adjacency"]], "adjlist_inner_dict_factory (graphscope.nx.digraph attribute)": [[462, "graphscope.nx.DiGraph.adjlist_inner_dict_factory"]], "adjlist_inner_dict_factory (graphscope.nx.graph attribute)": [[462, "graphscope.nx.Graph.adjlist_inner_dict_factory"]], "adjlist_outer_dict_factory (graphscope.nx.digraph attribute)": [[462, "graphscope.nx.DiGraph.adjlist_outer_dict_factory"]], "adjlist_outer_dict_factory (graphscope.nx.graph attribute)": [[462, "graphscope.nx.Graph.adjlist_outer_dict_factory"]], "clear() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.clear"]], "clear() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.clear"]], "clear_edges() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.clear_edges"]], "clear_edges() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.clear_edges"]], "copy() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.copy"]], "copy() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.copy"]], "degree (graphscope.nx.digraph property)": [[462, "graphscope.nx.DiGraph.degree"]], "degree (graphscope.nx.graph property)": [[462, "graphscope.nx.Graph.degree"]], "edge_attr_dict_factory (graphscope.nx.digraph attribute)": [[462, "graphscope.nx.DiGraph.edge_attr_dict_factory"]], "edge_attr_dict_factory (graphscope.nx.graph attribute)": [[462, "graphscope.nx.Graph.edge_attr_dict_factory"]], "edge_subgraph() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.edge_subgraph"]], "edge_subgraph() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.edge_subgraph"]], "edges (graphscope.nx.digraph property)": [[462, "graphscope.nx.DiGraph.edges"]], "edges (graphscope.nx.graph property)": [[462, "graphscope.nx.Graph.edges"]], "get_edge_data() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.get_edge_data"]], "get_edge_data() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.get_edge_data"]], "graph_attr_dict_factory (graphscope.nx.digraph attribute)": [[462, "graphscope.nx.DiGraph.graph_attr_dict_factory"]], "graph_attr_dict_factory (graphscope.nx.graph attribute)": [[462, "graphscope.nx.Graph.graph_attr_dict_factory"]], "graph_cache_factory (graphscope.nx.digraph attribute)": [[462, "graphscope.nx.DiGraph.graph_cache_factory"]], "graph_cache_factory (graphscope.nx.graph attribute)": [[462, "graphscope.nx.Graph.graph_cache_factory"]], "graph_type (graphscope.nx.digraph property)": [[462, "graphscope.nx.DiGraph.graph_type"]], "graph_type (graphscope.nx.graph property)": [[462, "graphscope.nx.Graph.graph_type"]], "has_edge() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.has_edge"]], "has_edge() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.has_edge"]], "has_node() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.has_node"]], "has_node() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.has_node"]], "has_predecessor() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.has_predecessor"]], "has_successor() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.has_successor"]], "in_degree (graphscope.nx.digraph property)": [[462, "graphscope.nx.DiGraph.in_degree"]], "in_edges (graphscope.nx.digraph property)": [[462, "graphscope.nx.DiGraph.in_edges"]], "is_directed() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.is_directed"]], "is_directed() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.is_directed"]], "is_multigraph() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.is_multigraph"]], "is_multigraph() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.is_multigraph"]], "key (graphscope.nx.digraph property)": [[462, "graphscope.nx.DiGraph.key"]], "key (graphscope.nx.graph property)": [[462, "graphscope.nx.Graph.key"]], "name (graphscope.nx.digraph property)": [[462, "graphscope.nx.DiGraph.name"]], "name (graphscope.nx.graph property)": [[462, "graphscope.nx.Graph.name"]], "nbunch_iter() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.nbunch_iter"]], "nbunch_iter() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.nbunch_iter"]], "neighbors() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.neighbors"]], "neighbors() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.neighbors"]], "node_attr_dict_factory (graphscope.nx.digraph attribute)": [[462, "graphscope.nx.DiGraph.node_attr_dict_factory"]], "node_attr_dict_factory (graphscope.nx.graph attribute)": [[462, "graphscope.nx.Graph.node_attr_dict_factory"]], "node_dict_factory (graphscope.nx.digraph attribute)": [[462, "graphscope.nx.DiGraph.node_dict_factory"]], "node_dict_factory (graphscope.nx.graph attribute)": [[462, "graphscope.nx.Graph.node_dict_factory"]], "nodes (graphscope.nx.digraph property)": [[462, "graphscope.nx.DiGraph.nodes"]], "nodes (graphscope.nx.graph property)": [[462, "graphscope.nx.Graph.nodes"]], "number_of_edges() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.number_of_edges"]], "number_of_edges() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.number_of_edges"]], "number_of_nodes() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.number_of_nodes"]], "number_of_nodes() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.number_of_nodes"]], "op (graphscope.nx.digraph property)": [[462, "graphscope.nx.DiGraph.op"]], "op (graphscope.nx.graph property)": [[462, "graphscope.nx.Graph.op"]], "order() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.order"]], "order() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.order"]], "out_degree (graphscope.nx.digraph property)": [[462, "graphscope.nx.DiGraph.out_degree"]], "out_edges (graphscope.nx.digraph property)": [[462, "graphscope.nx.DiGraph.out_edges"]], "pred (graphscope.nx.digraph property)": [[462, "graphscope.nx.DiGraph.pred"]], "predecessors() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.predecessors"]], "remove_edge() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.remove_edge"]], "remove_edge() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.remove_edge"]], "remove_edges_from() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.remove_edges_from"]], "remove_edges_from() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.remove_edges_from"]], "remove_node() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.remove_node"]], "remove_node() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.remove_node"]], "remove_nodes_from() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.remove_nodes_from"]], "remove_nodes_from() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.remove_nodes_from"]], "reverse() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.reverse"]], "schema (graphscope.nx.digraph property)": [[462, "graphscope.nx.DiGraph.schema"]], "schema (graphscope.nx.graph property)": [[462, "graphscope.nx.Graph.schema"]], "session (graphscope.nx.digraph property)": [[462, "graphscope.nx.DiGraph.session"]], "session (graphscope.nx.graph property)": [[462, "graphscope.nx.Graph.session"]], "session_id (graphscope.nx.digraph property)": [[462, "graphscope.nx.DiGraph.session_id"]], "session_id (graphscope.nx.graph property)": [[462, "graphscope.nx.Graph.session_id"]], "set_edge_data() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.set_edge_data"]], "set_edge_data() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.set_edge_data"]], "set_node_data() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.set_node_data"]], "set_node_data() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.set_node_data"]], "signature (graphscope.nx.digraph property)": [[462, "graphscope.nx.DiGraph.signature"]], "signature (graphscope.nx.graph property)": [[462, "graphscope.nx.Graph.signature"]], "size() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.size"]], "size() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.size"]], "subgraph() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.subgraph"]], "subgraph() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.subgraph"]], "succ (graphscope.nx.digraph property)": [[462, "graphscope.nx.DiGraph.succ"]], "successors() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.successors"]], "to_directed() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.to_directed"]], "to_directed() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.to_directed"]], "to_undirected() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.to_undirected"]], "to_undirected() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.to_undirected"]], "to_undirected_class() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.to_undirected_class"]], "to_undirected_class() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.to_undirected_class"]], "update() (graphscope.nx.digraph method)": [[462, "graphscope.nx.DiGraph.update"]], "update() (graphscope.nx.graph method)": [[462, "graphscope.nx.Graph.update"]], "read_adjlist() (in module graphscope.nx)": [[464, "graphscope.nx.read_adjlist"]], "read_edgelist() (in module graphscope.nx)": [[464, "graphscope.nx.read_edgelist"]], "__init__() (in module graphscope.nx.graph)": [[465, "graphscope.nx.Graph.__init__"]], "_convert_arrow_to_dynamic() (in module graphscope.nx.graph)": [[465, "graphscope.nx.Graph._convert_arrow_to_dynamic"]], "operation (class in graphscope.framework.operation)": [[466, "graphscope.framework.operation.Operation"]], "graphscope.framework.dag_utils": [[466, "module-graphscope.framework.dag_utils"]], "session (class in graphscope)": [[469, "graphscope.Session"]], "__enter__() (graphscope.session method)": [[469, "graphscope.Session.__enter__"]], "__exit__() (graphscope.session method)": [[469, "graphscope.Session.__exit__"]], "__init__() (graphscope.session method)": [[469, "graphscope.Session.__init__"]], "add_lib() (graphscope.session method)": [[469, "graphscope.Session.add_lib"]], "as_default() (graphscope.session method)": [[469, "graphscope.Session.as_default"]], "close() (graphscope.session method)": [[469, "graphscope.Session.close"]], "connected() (graphscope.session method)": [[469, "graphscope.Session.connected"]], "engine_config (graphscope.session property)": [[469, "graphscope.Session.engine_config"]], "g() (graphscope.session method)": [[469, "graphscope.Session.g"]], "get_config() (graphscope.session method)": [[469, "graphscope.Session.get_config"]], "get_vineyard_object_mapping_table() (graphscope.session method)": [[469, "graphscope.Session.get_vineyard_object_mapping_table"]], "graphlearn() (graphscope.session method)": [[469, "graphscope.Session.graphlearn"]], "info (graphscope.session property)": [[469, "graphscope.Session.info"]], "interactive() (graphscope.session method)": [[469, "graphscope.Session.interactive"]], "load_from() (graphscope.session method)": [[469, "graphscope.Session.load_from"]], "restore_from_pvc() (graphscope.session method)": [[469, "graphscope.Session.restore_from_pvc"]], "run_fetches() (graphscope.session method)": [[469, "graphscope.Session.run_fetches"]], "store_to_pvc() (graphscope.session method)": [[469, "graphscope.Session.store_to_pvc"]]}})
Search.setIndex({"docnames": ["analytical_engine/builtin_algorithms", "analytical_engine/customized_algorithms", "analytical_engine/deployment", "analytical_engine/design_of_gae", "analytical_engine/dev_and_test", "analytical_engine/faqs", "analytical_engine/flash", "analytical_engine/getting_started", "analytical_engine/guide_and_examples", "analytical_engine/ingress", "analytical_engine/key_concepts", "analytical_engine/networkx_compatibility", "analytical_engine/overview_and_architecture", "analytical_engine/performance_tuning", "analytical_engine/programming_model_pie", "analytical_engine/tutorial_dev_algo_cpp_flash", "analytical_engine/tutorial_dev_algo_cpp_pie", "analytical_engine/tutorial_dev_algo_java", "analytical_engine/tutorial_dev_algo_python", "analytical_engine/tutorial_networkx_algorithms", "analytical_engine/tutorial_networkx_operations", "analytical_engine/tutorial_run_builtin_algo", "analytical_engine/tutorial_run_giraph_apps", "analytical_engine/tutorial_run_graphx_apps", "analytical_engine/vertex_centric_models", "contact_us", "deployment/deploy_graphscope_on_clouds", "deployment/deploy_graphscope_on_self_managed_k8s", "deployment/deploy_graphscope_operator", "deployment/deploy_graphscope_with_helm", "deployment/deploy_with_existing_vineyard_cluster", "deployment/install_in_offline_env", "deployment/install_on_local", "deployment/persistent_storage_of_graphs_on_k8s", "design_of_gae", "development/code_style_guide", "development/dev_guide", "development/how_to_contribute", "development/how_to_debug", "development/how_to_instrument", "development/how_to_submit_pr", "development/how_to_test", "flex/interactive/configuration", "flex/interactive/custom_graph_data", "flex/interactive/data_import", "flex/interactive/data_model", "flex/interactive/deployment", "flex/interactive/dev_guide", "flex/interactive/development/cpp_procedure", "flex/interactive/development/cypher_procedure", "flex/interactive/development/java/AdminServiceGraphManagementApi", "flex/interactive/development/java/AdminServiceJobManagementApi", "flex/interactive/development/java/AdminServiceProcedureManagementApi", "flex/interactive/development/java/AdminServiceServiceManagementApi", "flex/interactive/development/java/BaseEdgeType", "flex/interactive/development/java/BaseEdgeTypeVertexTypePairRelationsInner", "flex/interactive/development/java/BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams", "flex/interactive/development/java/BasePropertyMeta", "flex/interactive/development/java/BaseVertexType", "flex/interactive/development/java/BaseVertexTypeXCsrParams", "flex/interactive/development/java/ColumnMapping", "flex/interactive/development/java/CreateEdgeType", "flex/interactive/development/java/CreateGraphRequest", "flex/interactive/development/java/CreateGraphResponse", "flex/interactive/development/java/CreateGraphSchemaRequest", "flex/interactive/development/java/CreateProcedureRequest", "flex/interactive/development/java/CreateProcedureResponse", "flex/interactive/development/java/CreatePropertyMeta", "flex/interactive/development/java/CreateVertexType", "flex/interactive/development/java/DateType", "flex/interactive/development/java/EdgeData", "flex/interactive/development/java/EdgeMapping", "flex/interactive/development/java/EdgeMappingDestinationVertexMappingsInner", "flex/interactive/development/java/EdgeMappingSourceVertexMappingsInner", "flex/interactive/development/java/EdgeMappingSourceVertexMappingsInnerColumn", "flex/interactive/development/java/EdgeMappingTypeTriplet", "flex/interactive/development/java/EdgeRequest", "flex/interactive/development/java/FixedChar", "flex/interactive/development/java/FixedCharChar", "flex/interactive/development/java/GSDataType", "flex/interactive/development/java/GetEdgeType", "flex/interactive/development/java/GetGraphResponse", "flex/interactive/development/java/GetGraphSchemaResponse", "flex/interactive/development/java/GetProcedureResponse", "flex/interactive/development/java/GetPropertyMeta", "flex/interactive/development/java/GetVertexType", "flex/interactive/development/java/GraphServiceEdgeManagementApi", "flex/interactive/development/java/GraphServiceVertexManagementApi", "flex/interactive/development/java/JobResponse", "flex/interactive/development/java/JobStatus", "flex/interactive/development/java/LongText", "flex/interactive/development/java/Parameter", "flex/interactive/development/java/PrimitiveType", "flex/interactive/development/java/Property", "flex/interactive/development/java/PropertyArray", "flex/interactive/development/java/QueryRequest", "flex/interactive/development/java/QueryServiceApi", "flex/interactive/development/java/SchemaMapping", "flex/interactive/development/java/SchemaMappingLoadingConfig", "flex/interactive/development/java/SchemaMappingLoadingConfigFormat", "flex/interactive/development/java/ServiceStatus", "flex/interactive/development/java/StartServiceRequest", "flex/interactive/development/java/StoredProcedureMeta", "flex/interactive/development/java/StringType", "flex/interactive/development/java/StringTypeString", "flex/interactive/development/java/TemporalType", "flex/interactive/development/java/TemporalTypeTemporal", "flex/interactive/development/java/TimeStampType", "flex/interactive/development/java/TypedValue", "flex/interactive/development/java/UpdateProcedureRequest", "flex/interactive/development/java/VarChar", "flex/interactive/development/java/VarCharVarChar", "flex/interactive/development/java/VertexData", "flex/interactive/development/java/VertexMapping", "flex/interactive/development/java/VertexRequest", "flex/interactive/development/java/java_sdk", "flex/interactive/development/python/AdminServiceGraphManagementApi", "flex/interactive/development/python/AdminServiceJobManagementApi", "flex/interactive/development/python/AdminServiceProcedureManagementApi", "flex/interactive/development/python/AdminServiceServiceManagementApi", "flex/interactive/development/python/BaseEdgeType", "flex/interactive/development/python/BaseEdgeTypeVertexTypePairRelationsInner", "flex/interactive/development/python/BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams", "flex/interactive/development/python/BasePropertyMeta", "flex/interactive/development/python/BaseVertexType", "flex/interactive/development/python/BaseVertexTypeXCsrParams", "flex/interactive/development/python/ColumnMapping", "flex/interactive/development/python/CreateEdgeType", "flex/interactive/development/python/CreateGraphRequest", "flex/interactive/development/python/CreateGraphResponse", "flex/interactive/development/python/CreateGraphSchemaRequest", "flex/interactive/development/python/CreateProcedureRequest", "flex/interactive/development/python/CreateProcedureResponse", "flex/interactive/development/python/CreatePropertyMeta", "flex/interactive/development/python/CreateVertexType", "flex/interactive/development/python/DateType", "flex/interactive/development/python/EdgeData", "flex/interactive/development/python/EdgeMapping", "flex/interactive/development/python/EdgeMappingDestinationVertexMappingsInner", "flex/interactive/development/python/EdgeMappingSourceVertexMappingsInner", "flex/interactive/development/python/EdgeMappingSourceVertexMappingsInnerColumn", "flex/interactive/development/python/EdgeMappingTypeTriplet", "flex/interactive/development/python/EdgeRequest", "flex/interactive/development/python/FixedChar", "flex/interactive/development/python/FixedCharChar", "flex/interactive/development/python/GSDataType", "flex/interactive/development/python/GetEdgeType", "flex/interactive/development/python/GetGraphResponse", "flex/interactive/development/python/GetGraphSchemaResponse", "flex/interactive/development/python/GetProcedureResponse", "flex/interactive/development/python/GetPropertyMeta", "flex/interactive/development/python/GetVertexType", "flex/interactive/development/python/GraphServiceEdgeManagementApi", "flex/interactive/development/python/GraphServiceVertexManagementApi", "flex/interactive/development/python/JobResponse", "flex/interactive/development/python/JobStatus", "flex/interactive/development/python/LongText", "flex/interactive/development/python/ModelProperty", "flex/interactive/development/python/Parameter", "flex/interactive/development/python/PrimitiveType", "flex/interactive/development/python/PropertyArray", "flex/interactive/development/python/QueryRequest", "flex/interactive/development/python/QueryServiceApi", "flex/interactive/development/python/SchemaMapping", "flex/interactive/development/python/SchemaMappingLoadingConfig", "flex/interactive/development/python/SchemaMappingLoadingConfigFormat", "flex/interactive/development/python/ServiceStatus", "flex/interactive/development/python/StartServiceRequest", "flex/interactive/development/python/StoredProcedureMeta", "flex/interactive/development/python/StringType", "flex/interactive/development/python/StringTypeString", "flex/interactive/development/python/TemporalType", "flex/interactive/development/python/TemporalTypeTemporal", "flex/interactive/development/python/TimeStampType", "flex/interactive/development/python/TypedValue", "flex/interactive/development/python/UpdateProcedureRequest", "flex/interactive/development/python/VarChar", "flex/interactive/development/python/VarCharVarChar", "flex/interactive/development/python/VertexData", "flex/interactive/development/python/VertexMapping", "flex/interactive/development/python/VertexRequest", "flex/interactive/development/python/python_sdk", "flex/interactive/development/restful_api", "flex/interactive/getting_started", "flex/interactive/glossary", "flex/interactive/installation", "flex/interactive/overview", "flex/interactive/sdk", "flex/interactive/stored_procedures", "flex/interactive/tools", "flex/interactive/tools/admin_tool", "flex/interactive_intro", "frag_intro", "frequently_asked_questions", "getting_started_gle", "graph_workloads", "graphscope_for_data_scientists", "how_to_report_bugs", "index", "interactive_engine/deployment", "interactive_engine/design_of_gie", "interactive_engine/dev_and_test", "interactive_engine/getting_started", "interactive_engine/neo4j/cypher_sdk", "interactive_engine/neo4j/llm_assistant", "interactive_engine/neo4j/supported_cypher", "interactive_engine/neo4j_eco", "interactive_engine/optimizer", "interactive_engine/tinkerpop/faq", "interactive_engine/tinkerpop/guide_and_examples", "interactive_engine/tinkerpop/supported_gremlin_steps", "interactive_engine/tinkerpop/tinkerpop_gremlin", "interactive_engine/tinkerpop/tutorial_ldbc_gremlin", "interactive_engine/tinkerpop_eco", "java_tutorials", "key_features", "learning_engine/design_of_gle", "learning_engine/dev_and_test", "learning_engine/getting_started", "learning_engine/graph_sampling", "learning_engine/guide_and_examples", "learning_engine/tutorial_node_classification_k8s", "learning_engine/tutorial_node_classification_local", "learning_engine/tutorial_node_classification_pyg_k8s", "learning_engine/tutorial_node_classification_pyg_local", "loading_graphs", "overview/design_of_graphscope", "overview/getting_started", "overview/glossary", "overview/graph_analytics_workloads", "overview/graph_interactive_workloads", "overview/graph_learning_workloads", "overview/intro", "overview/positioning", "performance_and_benchmark", "python_tutorials", "reference/analytical_engine_index", "reference/app", "reference/context", "reference/cython_sdk", "reference/flex/index", "reference/gae_java/about", "reference/gae_java/index", "reference/generated/graphscope.Vertex", "reference/generated/graphscope.declare", "reference/generated/graphscope.framework.app.load_app", "reference/generated/graphscope.framework.dag_utils.add_column", "reference/generated/graphscope.framework.dag_utils.add_labels_to_graph", "reference/generated/graphscope.framework.dag_utils.arrow_to_dynamic", "reference/generated/graphscope.framework.dag_utils.bind_app", "reference/generated/graphscope.framework.dag_utils.clear_edges", "reference/generated/graphscope.framework.dag_utils.clear_graph", "reference/generated/graphscope.framework.dag_utils.context_to_dataframe", "reference/generated/graphscope.framework.dag_utils.context_to_numpy", "reference/generated/graphscope.framework.dag_utils.copy_graph", "reference/generated/graphscope.framework.dag_utils.create_app", "reference/generated/graphscope.framework.dag_utils.create_graph", "reference/generated/graphscope.framework.dag_utils.create_graph_view", "reference/generated/graphscope.framework.dag_utils.create_loader", "reference/generated/graphscope.framework.dag_utils.create_subgraph", "reference/generated/graphscope.framework.dag_utils.create_unload_op", "reference/generated/graphscope.framework.dag_utils.dynamic_to_arrow", "reference/generated/graphscope.framework.dag_utils.get_context_data", "reference/generated/graphscope.framework.dag_utils.graph_to_dataframe", "reference/generated/graphscope.framework.dag_utils.graph_to_numpy", "reference/generated/graphscope.framework.dag_utils.gremlin_to_subgraph", "reference/generated/graphscope.framework.dag_utils.modify_edges", "reference/generated/graphscope.framework.dag_utils.modify_vertices", "reference/generated/graphscope.framework.dag_utils.output", "reference/generated/graphscope.framework.dag_utils.project_arrow_property_graph", "reference/generated/graphscope.framework.dag_utils.project_to_simple", "reference/generated/graphscope.framework.dag_utils.report_graph", "reference/generated/graphscope.framework.dag_utils.run_app", "reference/generated/graphscope.framework.dag_utils.to_data_sink", "reference/generated/graphscope.framework.dag_utils.to_directed", "reference/generated/graphscope.framework.dag_utils.to_undirected", "reference/generated/graphscope.framework.dag_utils.to_vineyard_dataframe", "reference/generated/graphscope.framework.dag_utils.to_vineyard_tensor", "reference/generated/graphscope.framework.dag_utils.unload_app", "reference/generated/graphscope.framework.dag_utils.unload_context", "reference/generated/graphscope.framework.dag_utils.unload_graph", "reference/generated/graphscope.framework.operation.Operation.__init__", "reference/generated/graphscope.framework.operation.Operation.as_op_def", "reference/generated/graphscope.framework.operation.Operation.eval", "reference/generated/graphscope.framework.operation.Operation.evaluated", "reference/generated/graphscope.framework.operation.Operation.key", "reference/generated/graphscope.framework.operation.Operation.signature", "reference/generated/graphscope.g", "reference/generated/graphscope.get_default_session", "reference/generated/graphscope.graphlearn", "reference/generated/graphscope.gremlin", "reference/generated/graphscope.has_default_session", "reference/generated/graphscope.session", "reference/generated/graphscope.set_option", "reference/gnn_engine/algo_en", "reference/gnn_engine/data_loader_en", "reference/gnn_engine/graph_object_en", "reference/gnn_engine/graph_query_en", "reference/gnn_engine/graph_sampling_en", "reference/gnn_engine/graph_traverse_en", "reference/gnn_engine/gsl_en", "reference/gnn_engine/install_en", "reference/gnn_engine/model_programming_en", "reference/gnn_engine/negative_sampling_en", "reference/gnn_engine/operator", "reference/gnn_engine/other_source", "reference/gnn_engine/quick_start_en", "reference/gnn_engine/system_config", "reference/graph", "reference/interactive", "reference/learning", "reference/networkx/builtin", "reference/networkx/functions", "reference/networkx/generated/graphscope.nx.classes.function.add_cycle", "reference/networkx/generated/graphscope.nx.classes.function.add_path", "reference/networkx/generated/graphscope.nx.classes.function.add_star", "reference/networkx/generated/graphscope.nx.classes.function.all_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.common_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.create_empty_copy", "reference/networkx/generated/graphscope.nx.classes.function.degree", "reference/networkx/generated/graphscope.nx.classes.function.degree_histogram", "reference/networkx/generated/graphscope.nx.classes.function.density", "reference/networkx/generated/graphscope.nx.classes.function.edge_subgraph", "reference/networkx/generated/graphscope.nx.classes.function.edges", "reference/networkx/generated/graphscope.nx.classes.function.freeze", "reference/networkx/generated/graphscope.nx.classes.function.induced_subgraph", "reference/networkx/generated/graphscope.nx.classes.function.info", "reference/networkx/generated/graphscope.nx.classes.function.is_directed", "reference/networkx/generated/graphscope.nx.classes.function.is_empty", "reference/networkx/generated/graphscope.nx.classes.function.is_frozen", "reference/networkx/generated/graphscope.nx.classes.function.is_negatively_weighted", "reference/networkx/generated/graphscope.nx.classes.function.is_weighted", "reference/networkx/generated/graphscope.nx.classes.function.neighbors", "reference/networkx/generated/graphscope.nx.classes.function.nodes", "reference/networkx/generated/graphscope.nx.classes.function.nodes_with_selfloops", "reference/networkx/generated/graphscope.nx.classes.function.non_edges", "reference/networkx/generated/graphscope.nx.classes.function.non_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.number_of_edges", "reference/networkx/generated/graphscope.nx.classes.function.number_of_nodes", "reference/networkx/generated/graphscope.nx.classes.function.number_of_selfloops", "reference/networkx/generated/graphscope.nx.classes.function.selfloop_edges", "reference/networkx/generated/graphscope.nx.classes.function.subgraph", "reference/networkx/generated/graphscope.nx.classes.function.to_directed", "reference/networkx/generated/graphscope.nx.classes.function.to_undirected", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas_g", "reference/networkx/generated/graphscope.nx.generators.classic.balanced_tree", "reference/networkx/generated/graphscope.nx.generators.classic.barbell_graph", "reference/networkx/generated/graphscope.nx.generators.classic.binomial_tree", "reference/networkx/generated/graphscope.nx.generators.classic.circulant_graph", "reference/networkx/generated/graphscope.nx.generators.classic.circular_ladder_graph", "reference/networkx/generated/graphscope.nx.generators.classic.complete_graph", "reference/networkx/generated/graphscope.nx.generators.classic.complete_multipartite_graph", "reference/networkx/generated/graphscope.nx.generators.classic.cycle_graph", "reference/networkx/generated/graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph", "reference/networkx/generated/graphscope.nx.generators.classic.empty_graph", "reference/networkx/generated/graphscope.nx.generators.classic.full_rary_tree", "reference/networkx/generated/graphscope.nx.generators.classic.ladder_graph", "reference/networkx/generated/graphscope.nx.generators.classic.lollipop_graph", "reference/networkx/generated/graphscope.nx.generators.classic.null_graph", "reference/networkx/generated/graphscope.nx.generators.classic.path_graph", "reference/networkx/generated/graphscope.nx.generators.classic.star_graph", "reference/networkx/generated/graphscope.nx.generators.classic.trivial_graph", "reference/networkx/generated/graphscope.nx.generators.classic.turan_graph", "reference/networkx/generated/graphscope.nx.generators.classic.wheel_graph", "reference/networkx/generated/graphscope.nx.generators.community.LFR_benchmark_graph", "reference/networkx/generated/graphscope.nx.generators.community.caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.connected_caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.gaussian_random_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.planted_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.random_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.relaxed_caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.ring_of_cliques", "reference/networkx/generated/graphscope.nx.generators.community.stochastic_block_model", "reference/networkx/generated/graphscope.nx.generators.community.windmill_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.configuration_model", "reference/networkx/generated/graphscope.nx.generators.degree_seq.degree_sequence_tree", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_configuration_model", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.expected_degree_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.havel_hakimi_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.random_degree_sequence_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gn_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gnc_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gnr_graph", "reference/networkx/generated/graphscope.nx.generators.directed.random_k_out_graph", "reference/networkx/generated/graphscope.nx.generators.directed.scale_free_graph", "reference/networkx/generated/graphscope.nx.generators.duplication.duplication_divergence_graph", "reference/networkx/generated/graphscope.nx.generators.duplication.partial_duplication_graph", "reference/networkx/generated/graphscope.nx.generators.ego.ego_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.chordal_cycle_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.margulis_gabber_galil_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.paley_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.geographical_threshold_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.soft_random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.thresholded_random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.waxman_graph", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hkn_harary_graph", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hnm_harary_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.general_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.k_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.uniform_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.joint_degree_graph", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielski_graph", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielskian", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees", "reference/networkx/generated/graphscope.nx.generators.small.LCF_graph", "reference/networkx/generated/graphscope.nx.generators.small.bull_graph", "reference/networkx/generated/graphscope.nx.generators.small.chvatal_graph", "reference/networkx/generated/graphscope.nx.generators.small.cubical_graph", "reference/networkx/generated/graphscope.nx.generators.small.desargues_graph", "reference/networkx/generated/graphscope.nx.generators.small.diamond_graph", "reference/networkx/generated/graphscope.nx.generators.small.dodecahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.frucht_graph", "reference/networkx/generated/graphscope.nx.generators.small.heawood_graph", "reference/networkx/generated/graphscope.nx.generators.small.house_graph", "reference/networkx/generated/graphscope.nx.generators.small.house_x_graph", "reference/networkx/generated/graphscope.nx.generators.small.icosahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.krackhardt_kite_graph", "reference/networkx/generated/graphscope.nx.generators.small.make_small_graph", "reference/networkx/generated/graphscope.nx.generators.small.moebius_kantor_graph", "reference/networkx/generated/graphscope.nx.generators.small.octahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.pappus_graph", "reference/networkx/generated/graphscope.nx.generators.small.petersen_graph", "reference/networkx/generated/graphscope.nx.generators.small.sedgewick_maze_graph", "reference/networkx/generated/graphscope.nx.generators.small.tetrahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.truncated_cube_graph", "reference/networkx/generated/graphscope.nx.generators.small.truncated_tetrahedron_graph", "reference/networkx/generated/graphscope.nx.generators.small.tutte_graph", "reference/networkx/generated/graphscope.nx.generators.social.davis_southern_women_graph", "reference/networkx/generated/graphscope.nx.generators.social.florentine_families_graph", "reference/networkx/generated/graphscope.nx.generators.social.karate_club_graph", "reference/networkx/generated/graphscope.nx.generators.social.les_miserables_graph", "reference/networkx/generated/graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge", "reference/networkx/generated/graphscope.nx.generators.sudoku.sudoku_graph", "reference/networkx/generated/graphscope.nx.generators.trees.prefix_tree", "reference/networkx/generated/graphscope.nx.generators.trees.random_tree", "reference/networkx/generated/graphscope.nx.generators.triads.triad_graph", "reference/networkx/generated/networkx.generators.internet_as_graphs.random_internet_as_graph", "reference/networkx/generated/networkx.generators.stochastic.stochastic_graph", "reference/networkx/generators", "reference/networkx/graphs", "reference/networkx/index", "reference/networkx/io", "reference/networkx/transformation", "reference/operation", "reference/python_index", "reference/selector", "reference/session", "resources_estimator", "storage_engine/gart", "storage_engine/getting_started", "storage_engine/graphar", "storage_engine/grin", "storage_engine/groot", "storage_engine/vineyard", "tutorial/builtin", "tutorial/scaling", "user_guide_and_examples_of_gae", "user_guide_and_examples_of_gle", "utilities/error_codes", "utilities/gs", "utilities/how_to_find_logs", "utilities/monitoring", "zh/analytics_engine", "zh/deployment", "zh/developer_guide", "zh/frequently_asked_questions", "zh/getting_started", "zh/graph_transformation", "zh/index", "zh/installation", "zh/interactive_engine", "zh/learning_engine", "zh/loading_graph", "zh/tutorials"], "filenames": ["analytical_engine/builtin_algorithms.md", "analytical_engine/customized_algorithms.md", "analytical_engine/deployment.md", "analytical_engine/design_of_gae.md", "analytical_engine/dev_and_test.md", "analytical_engine/faqs.md", "analytical_engine/flash.md", "analytical_engine/getting_started.md", "analytical_engine/guide_and_examples.md", "analytical_engine/ingress.md", "analytical_engine/key_concepts.rst", "analytical_engine/networkx_compatibility.md", "analytical_engine/overview_and_architecture.md", "analytical_engine/performance_tuning.md", "analytical_engine/programming_model_pie.md", "analytical_engine/tutorial_dev_algo_cpp_flash.md", "analytical_engine/tutorial_dev_algo_cpp_pie.md", "analytical_engine/tutorial_dev_algo_java.md", "analytical_engine/tutorial_dev_algo_python.rst", "analytical_engine/tutorial_networkx_algorithms.md", "analytical_engine/tutorial_networkx_operations.md", "analytical_engine/tutorial_run_builtin_algo.md", "analytical_engine/tutorial_run_giraph_apps.md", "analytical_engine/tutorial_run_graphx_apps.md", "analytical_engine/vertex_centric_models.md", "contact_us.md", "deployment/deploy_graphscope_on_clouds.md", "deployment/deploy_graphscope_on_self_managed_k8s.md", "deployment/deploy_graphscope_operator.md", "deployment/deploy_graphscope_with_helm.md", "deployment/deploy_with_existing_vineyard_cluster.md", "deployment/install_in_offline_env.md", "deployment/install_on_local.md", "deployment/persistent_storage_of_graphs_on_k8s.md", "design_of_gae.md", "development/code_style_guide.md", "development/dev_guide.md", "development/how_to_contribute.md", "development/how_to_debug.md", "development/how_to_instrument.md", "development/how_to_submit_pr.md", "development/how_to_test.md", "flex/interactive/configuration.md", "flex/interactive/custom_graph_data.md", "flex/interactive/data_import.md", "flex/interactive/data_model.md", "flex/interactive/deployment.md", "flex/interactive/dev_guide.md", "flex/interactive/development/cpp_procedure.md", "flex/interactive/development/cypher_procedure.md", "flex/interactive/development/java/AdminServiceGraphManagementApi.md", "flex/interactive/development/java/AdminServiceJobManagementApi.md", "flex/interactive/development/java/AdminServiceProcedureManagementApi.md", "flex/interactive/development/java/AdminServiceServiceManagementApi.md", "flex/interactive/development/java/BaseEdgeType.md", "flex/interactive/development/java/BaseEdgeTypeVertexTypePairRelationsInner.md", "flex/interactive/development/java/BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams.md", "flex/interactive/development/java/BasePropertyMeta.md", "flex/interactive/development/java/BaseVertexType.md", "flex/interactive/development/java/BaseVertexTypeXCsrParams.md", "flex/interactive/development/java/ColumnMapping.md", "flex/interactive/development/java/CreateEdgeType.md", "flex/interactive/development/java/CreateGraphRequest.md", "flex/interactive/development/java/CreateGraphResponse.md", "flex/interactive/development/java/CreateGraphSchemaRequest.md", "flex/interactive/development/java/CreateProcedureRequest.md", "flex/interactive/development/java/CreateProcedureResponse.md", "flex/interactive/development/java/CreatePropertyMeta.md", "flex/interactive/development/java/CreateVertexType.md", "flex/interactive/development/java/DateType.md", "flex/interactive/development/java/EdgeData.md", "flex/interactive/development/java/EdgeMapping.md", "flex/interactive/development/java/EdgeMappingDestinationVertexMappingsInner.md", "flex/interactive/development/java/EdgeMappingSourceVertexMappingsInner.md", "flex/interactive/development/java/EdgeMappingSourceVertexMappingsInnerColumn.md", "flex/interactive/development/java/EdgeMappingTypeTriplet.md", "flex/interactive/development/java/EdgeRequest.md", "flex/interactive/development/java/FixedChar.md", "flex/interactive/development/java/FixedCharChar.md", "flex/interactive/development/java/GSDataType.md", "flex/interactive/development/java/GetEdgeType.md", "flex/interactive/development/java/GetGraphResponse.md", "flex/interactive/development/java/GetGraphSchemaResponse.md", "flex/interactive/development/java/GetProcedureResponse.md", "flex/interactive/development/java/GetPropertyMeta.md", "flex/interactive/development/java/GetVertexType.md", "flex/interactive/development/java/GraphServiceEdgeManagementApi.md", "flex/interactive/development/java/GraphServiceVertexManagementApi.md", "flex/interactive/development/java/JobResponse.md", "flex/interactive/development/java/JobStatus.md", "flex/interactive/development/java/LongText.md", "flex/interactive/development/java/Parameter.md", "flex/interactive/development/java/PrimitiveType.md", "flex/interactive/development/java/Property.md", "flex/interactive/development/java/PropertyArray.md", "flex/interactive/development/java/QueryRequest.md", "flex/interactive/development/java/QueryServiceApi.md", "flex/interactive/development/java/SchemaMapping.md", "flex/interactive/development/java/SchemaMappingLoadingConfig.md", "flex/interactive/development/java/SchemaMappingLoadingConfigFormat.md", "flex/interactive/development/java/ServiceStatus.md", "flex/interactive/development/java/StartServiceRequest.md", "flex/interactive/development/java/StoredProcedureMeta.md", "flex/interactive/development/java/StringType.md", "flex/interactive/development/java/StringTypeString.md", "flex/interactive/development/java/TemporalType.md", "flex/interactive/development/java/TemporalTypeTemporal.md", "flex/interactive/development/java/TimeStampType.md", "flex/interactive/development/java/TypedValue.md", "flex/interactive/development/java/UpdateProcedureRequest.md", "flex/interactive/development/java/VarChar.md", "flex/interactive/development/java/VarCharVarChar.md", "flex/interactive/development/java/VertexData.md", "flex/interactive/development/java/VertexMapping.md", "flex/interactive/development/java/VertexRequest.md", "flex/interactive/development/java/java_sdk.md", "flex/interactive/development/python/AdminServiceGraphManagementApi.md", "flex/interactive/development/python/AdminServiceJobManagementApi.md", "flex/interactive/development/python/AdminServiceProcedureManagementApi.md", "flex/interactive/development/python/AdminServiceServiceManagementApi.md", "flex/interactive/development/python/BaseEdgeType.md", "flex/interactive/development/python/BaseEdgeTypeVertexTypePairRelationsInner.md", "flex/interactive/development/python/BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams.md", "flex/interactive/development/python/BasePropertyMeta.md", "flex/interactive/development/python/BaseVertexType.md", "flex/interactive/development/python/BaseVertexTypeXCsrParams.md", "flex/interactive/development/python/ColumnMapping.md", "flex/interactive/development/python/CreateEdgeType.md", "flex/interactive/development/python/CreateGraphRequest.md", "flex/interactive/development/python/CreateGraphResponse.md", "flex/interactive/development/python/CreateGraphSchemaRequest.md", "flex/interactive/development/python/CreateProcedureRequest.md", "flex/interactive/development/python/CreateProcedureResponse.md", "flex/interactive/development/python/CreatePropertyMeta.md", "flex/interactive/development/python/CreateVertexType.md", "flex/interactive/development/python/DateType.md", "flex/interactive/development/python/EdgeData.md", "flex/interactive/development/python/EdgeMapping.md", "flex/interactive/development/python/EdgeMappingDestinationVertexMappingsInner.md", "flex/interactive/development/python/EdgeMappingSourceVertexMappingsInner.md", "flex/interactive/development/python/EdgeMappingSourceVertexMappingsInnerColumn.md", "flex/interactive/development/python/EdgeMappingTypeTriplet.md", "flex/interactive/development/python/EdgeRequest.md", "flex/interactive/development/python/FixedChar.md", "flex/interactive/development/python/FixedCharChar.md", "flex/interactive/development/python/GSDataType.md", "flex/interactive/development/python/GetEdgeType.md", "flex/interactive/development/python/GetGraphResponse.md", "flex/interactive/development/python/GetGraphSchemaResponse.md", "flex/interactive/development/python/GetProcedureResponse.md", "flex/interactive/development/python/GetPropertyMeta.md", "flex/interactive/development/python/GetVertexType.md", "flex/interactive/development/python/GraphServiceEdgeManagementApi.md", "flex/interactive/development/python/GraphServiceVertexManagementApi.md", "flex/interactive/development/python/JobResponse.md", "flex/interactive/development/python/JobStatus.md", "flex/interactive/development/python/LongText.md", "flex/interactive/development/python/ModelProperty.md", "flex/interactive/development/python/Parameter.md", "flex/interactive/development/python/PrimitiveType.md", "flex/interactive/development/python/PropertyArray.md", "flex/interactive/development/python/QueryRequest.md", "flex/interactive/development/python/QueryServiceApi.md", "flex/interactive/development/python/SchemaMapping.md", "flex/interactive/development/python/SchemaMappingLoadingConfig.md", "flex/interactive/development/python/SchemaMappingLoadingConfigFormat.md", "flex/interactive/development/python/ServiceStatus.md", "flex/interactive/development/python/StartServiceRequest.md", "flex/interactive/development/python/StoredProcedureMeta.md", "flex/interactive/development/python/StringType.md", "flex/interactive/development/python/StringTypeString.md", "flex/interactive/development/python/TemporalType.md", "flex/interactive/development/python/TemporalTypeTemporal.md", "flex/interactive/development/python/TimeStampType.md", "flex/interactive/development/python/TypedValue.md", "flex/interactive/development/python/UpdateProcedureRequest.md", "flex/interactive/development/python/VarChar.md", "flex/interactive/development/python/VarCharVarChar.md", "flex/interactive/development/python/VertexData.md", "flex/interactive/development/python/VertexMapping.md", "flex/interactive/development/python/VertexRequest.md", "flex/interactive/development/python/python_sdk.md", "flex/interactive/development/restful_api.md", "flex/interactive/getting_started.md", "flex/interactive/glossary.md", "flex/interactive/installation.md", "flex/interactive/overview.md", "flex/interactive/sdk.md", "flex/interactive/stored_procedures.md", "flex/interactive/tools.md", "flex/interactive/tools/admin_tool.md", "flex/interactive_intro.md", "frag_intro.md", "frequently_asked_questions.rst", "getting_started_gle.md", "graph_workloads.md", "graphscope_for_data_scientists.md", "how_to_report_bugs.md", "index.rst", "interactive_engine/deployment.md", "interactive_engine/design_of_gie.md", "interactive_engine/dev_and_test.md", "interactive_engine/getting_started.md", "interactive_engine/neo4j/cypher_sdk.md", "interactive_engine/neo4j/llm_assistant.md", "interactive_engine/neo4j/supported_cypher.md", "interactive_engine/neo4j_eco.md", "interactive_engine/optimizer.md", "interactive_engine/tinkerpop/faq.md", "interactive_engine/tinkerpop/guide_and_examples.md", "interactive_engine/tinkerpop/supported_gremlin_steps.md", "interactive_engine/tinkerpop/tinkerpop_gremlin.md", "interactive_engine/tinkerpop/tutorial_ldbc_gremlin.md", "interactive_engine/tinkerpop_eco.md", "java_tutorials.md", "key_features.md", "learning_engine/design_of_gle.md", "learning_engine/dev_and_test.md", "learning_engine/getting_started.md", "learning_engine/graph_sampling.md", "learning_engine/guide_and_examples.md", "learning_engine/tutorial_node_classification_k8s.md", "learning_engine/tutorial_node_classification_local.md", "learning_engine/tutorial_node_classification_pyg_k8s.md", "learning_engine/tutorial_node_classification_pyg_local.md", "loading_graphs.rst", "overview/design_of_graphscope.md", "overview/getting_started.md", "overview/glossary.md", "overview/graph_analytics_workloads.md", "overview/graph_interactive_workloads.md", "overview/graph_learning_workloads.md", "overview/intro.md", "overview/positioning.md", "performance_and_benchmark.md", "python_tutorials.md", "reference/analytical_engine_index.rst", "reference/app.rst", "reference/context.rst", "reference/cython_sdk.rst", "reference/flex/index.rst", "reference/gae_java/about.rst", "reference/gae_java/index.rst", "reference/generated/graphscope.Vertex.rst", "reference/generated/graphscope.declare.rst", "reference/generated/graphscope.framework.app.load_app.rst", "reference/generated/graphscope.framework.dag_utils.add_column.rst", "reference/generated/graphscope.framework.dag_utils.add_labels_to_graph.rst", "reference/generated/graphscope.framework.dag_utils.arrow_to_dynamic.rst", "reference/generated/graphscope.framework.dag_utils.bind_app.rst", "reference/generated/graphscope.framework.dag_utils.clear_edges.rst", "reference/generated/graphscope.framework.dag_utils.clear_graph.rst", "reference/generated/graphscope.framework.dag_utils.context_to_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.context_to_numpy.rst", "reference/generated/graphscope.framework.dag_utils.copy_graph.rst", "reference/generated/graphscope.framework.dag_utils.create_app.rst", "reference/generated/graphscope.framework.dag_utils.create_graph.rst", "reference/generated/graphscope.framework.dag_utils.create_graph_view.rst", "reference/generated/graphscope.framework.dag_utils.create_loader.rst", "reference/generated/graphscope.framework.dag_utils.create_subgraph.rst", "reference/generated/graphscope.framework.dag_utils.create_unload_op.rst", "reference/generated/graphscope.framework.dag_utils.dynamic_to_arrow.rst", "reference/generated/graphscope.framework.dag_utils.get_context_data.rst", "reference/generated/graphscope.framework.dag_utils.graph_to_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.graph_to_numpy.rst", "reference/generated/graphscope.framework.dag_utils.gremlin_to_subgraph.rst", "reference/generated/graphscope.framework.dag_utils.modify_edges.rst", "reference/generated/graphscope.framework.dag_utils.modify_vertices.rst", "reference/generated/graphscope.framework.dag_utils.output.rst", "reference/generated/graphscope.framework.dag_utils.project_arrow_property_graph.rst", "reference/generated/graphscope.framework.dag_utils.project_to_simple.rst", "reference/generated/graphscope.framework.dag_utils.report_graph.rst", "reference/generated/graphscope.framework.dag_utils.run_app.rst", "reference/generated/graphscope.framework.dag_utils.to_data_sink.rst", "reference/generated/graphscope.framework.dag_utils.to_directed.rst", "reference/generated/graphscope.framework.dag_utils.to_undirected.rst", "reference/generated/graphscope.framework.dag_utils.to_vineyard_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.to_vineyard_tensor.rst", "reference/generated/graphscope.framework.dag_utils.unload_app.rst", "reference/generated/graphscope.framework.dag_utils.unload_context.rst", "reference/generated/graphscope.framework.dag_utils.unload_graph.rst", "reference/generated/graphscope.framework.operation.Operation.__init__.rst", "reference/generated/graphscope.framework.operation.Operation.as_op_def.rst", "reference/generated/graphscope.framework.operation.Operation.eval.rst", "reference/generated/graphscope.framework.operation.Operation.evaluated.rst", "reference/generated/graphscope.framework.operation.Operation.key.rst", "reference/generated/graphscope.framework.operation.Operation.signature.rst", "reference/generated/graphscope.g.rst", "reference/generated/graphscope.get_default_session.rst", "reference/generated/graphscope.graphlearn.rst", "reference/generated/graphscope.gremlin.rst", "reference/generated/graphscope.has_default_session.rst", "reference/generated/graphscope.session.rst", "reference/generated/graphscope.set_option.rst", "reference/gnn_engine/algo_en.rst", "reference/gnn_engine/data_loader_en.rst", "reference/gnn_engine/graph_object_en.rst", "reference/gnn_engine/graph_query_en.rst", "reference/gnn_engine/graph_sampling_en.rst", "reference/gnn_engine/graph_traverse_en.rst", "reference/gnn_engine/gsl_en.rst", "reference/gnn_engine/install_en.rst", "reference/gnn_engine/model_programming_en.rst", "reference/gnn_engine/negative_sampling_en.rst", "reference/gnn_engine/operator.rst", "reference/gnn_engine/other_source.rst", "reference/gnn_engine/quick_start_en.rst", "reference/gnn_engine/system_config.rst", "reference/graph.rst", "reference/interactive.rst", "reference/learning.rst", "reference/networkx/builtin.rst", "reference/networkx/functions.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_cycle.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_path.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_star.rst", "reference/networkx/generated/graphscope.nx.classes.function.all_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.common_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.create_empty_copy.rst", "reference/networkx/generated/graphscope.nx.classes.function.degree.rst", "reference/networkx/generated/graphscope.nx.classes.function.degree_histogram.rst", "reference/networkx/generated/graphscope.nx.classes.function.density.rst", "reference/networkx/generated/graphscope.nx.classes.function.edge_subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.freeze.rst", "reference/networkx/generated/graphscope.nx.classes.function.induced_subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.info.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_directed.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_empty.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_frozen.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_negatively_weighted.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_weighted.rst", "reference/networkx/generated/graphscope.nx.classes.function.neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.nodes.rst", "reference/networkx/generated/graphscope.nx.classes.function.nodes_with_selfloops.rst", "reference/networkx/generated/graphscope.nx.classes.function.non_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.non_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_nodes.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_selfloops.rst", "reference/networkx/generated/graphscope.nx.classes.function.selfloop_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.to_directed.rst", "reference/networkx/generated/graphscope.nx.classes.function.to_undirected.rst", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas.rst", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas_g.rst", "reference/networkx/generated/graphscope.nx.generators.classic.balanced_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.barbell_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.binomial_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.circulant_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.circular_ladder_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.complete_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.complete_multipartite_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.cycle_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.empty_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.full_rary_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.ladder_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.lollipop_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.null_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.path_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.star_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.trivial_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.turan_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.wheel_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.LFR_benchmark_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.connected_caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.gaussian_random_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.planted_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.random_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.relaxed_caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.ring_of_cliques.rst", "reference/networkx/generated/graphscope.nx.generators.community.stochastic_block_model.rst", "reference/networkx/generated/graphscope.nx.generators.community.windmill_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.configuration_model.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.degree_sequence_tree.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_configuration_model.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.expected_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.havel_hakimi_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.random_degree_sequence_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gn_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gnc_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gnr_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.random_k_out_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.scale_free_graph.rst", "reference/networkx/generated/graphscope.nx.generators.duplication.duplication_divergence_graph.rst", "reference/networkx/generated/graphscope.nx.generators.duplication.partial_duplication_graph.rst", "reference/networkx/generated/graphscope.nx.generators.ego.ego_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.chordal_cycle_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.margulis_gabber_galil_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.paley_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.geographical_threshold_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.soft_random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.thresholded_random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.waxman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hkn_harary_graph.rst", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hnm_harary_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.general_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.k_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.uniform_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.joint_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielski_graph.rst", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielskian.rst", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees.rst", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees.rst", "reference/networkx/generated/graphscope.nx.generators.small.LCF_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.bull_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.chvatal_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.cubical_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.desargues_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.diamond_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.dodecahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.frucht_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.heawood_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.house_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.house_x_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.icosahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.krackhardt_kite_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.make_small_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.moebius_kantor_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.octahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.pappus_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.petersen_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.sedgewick_maze_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.tetrahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.truncated_cube_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.truncated_tetrahedron_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.tutte_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.davis_southern_women_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.florentine_families_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.karate_club_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.les_miserables_graph.rst", "reference/networkx/generated/graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge.rst", "reference/networkx/generated/graphscope.nx.generators.sudoku.sudoku_graph.rst", "reference/networkx/generated/graphscope.nx.generators.trees.prefix_tree.rst", "reference/networkx/generated/graphscope.nx.generators.trees.random_tree.rst", "reference/networkx/generated/graphscope.nx.generators.triads.triad_graph.rst", "reference/networkx/generated/networkx.generators.internet_as_graphs.random_internet_as_graph.rst", "reference/networkx/generated/networkx.generators.stochastic.stochastic_graph.rst", "reference/networkx/generators.rst", "reference/networkx/graphs.rst", "reference/networkx/index.rst", "reference/networkx/io.rst", "reference/networkx/transformation.rst", "reference/operation.rst", "reference/python_index.rst", "reference/selector.rst", "reference/session.rst", "resources_estimator.md", "storage_engine/gart.md", "storage_engine/getting_started.md", "storage_engine/graphar.md", "storage_engine/grin.md", "storage_engine/groot.md", "storage_engine/vineyard.md", "tutorial/builtin.rst", "tutorial/scaling.rst", "user_guide_and_examples_of_gae.md", "user_guide_and_examples_of_gle.md", "utilities/error_codes.md", "utilities/gs.md", "utilities/how_to_find_logs.md", "utilities/monitoring.md", "zh/analytics_engine.rst", "zh/deployment.rst", "zh/developer_guide.rst", "zh/frequently_asked_questions.rst", "zh/getting_started.rst", "zh/graph_transformation.rst", "zh/index.rst", "zh/installation.rst", "zh/interactive_engine.rst", "zh/learning_engine.rst", "zh/loading_graph.rst", "zh/tutorials.rst"], "titles": ["Built-in Algorithms", "Customized Algorithms", "Deployment for GAE", "Design of Analytical Engine", "Dev and Test", "FAQs", "Programming Model: FLASH", "Getting Started", "Guide and Examples", "Ingress: Incrementalize Graph Algorithms", "Key Concepts", "NetworkX Compatibility", "Overview and Architecture", "Performance Tuning", "Programming Model: PIE", "Tutorial: Develop Your Algorithms in C++ with FLASH Model", "Tutorial: Develop your Algorithm in C++ with PIE Model", "Tutorial: Develop your Algorithm in Java with PIE Model", "Tutorial: Develop algorithms in Python", "Tutorial: Graph Algorithms with NetworkX APIs", "Tutorial: Graph Operations with NetworkX APIs", "Tutorial: Running Builtin Algorithms", "Tutorial: Run Giraph Applications on GraphScope", "Tutorial: Run GraphX Applications on GraphScope", "Vertex-Centric Model", "Contact Us", "Deploy GraphScope on Clouds", "Deploy on K8s Cluster", "Deploy GraphScope Operator", "Deploy GraphScope with <code class=\"docutils literal notranslate\"><span class=\"pre\">helm</span></code>", "Deploy with Existing Vineyard Cluster", "Install GraphScope in offline environment", "Install GraphScope on Local", "Persistent storage of graphs on the Kubernetes cluster", "Design of GAE", "Code Style Guide", "Development Guide", "How to Contribute", "Debugging on local deployment", "How to instrument", "How to Submit Pull-requests", "How to Test", "Engine Configuration", "Using Custom Graph", "Data Import Configuration", "Data Model", "Deployment", "GraphScope Interactive Development guide", "Create c++ Stored Procedures on GraphScope Interactive", "Turning Cypher Queries into Stored Procedures with GraphScope Interactive", "AdminServiceGraphManagementApi", "AdminServiceJobManagementApi", "AdminServiceProcedureManagementApi", "AdminServiceServiceManagementApi", "BaseEdgeType", "BaseEdgeTypeVertexTypePairRelationsInner", "BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams", "BasePropertyMeta", "BaseVertexType", "BaseVertexTypeXCsrParams", "ColumnMapping", "CreateEdgeType", "CreateGraphRequest", "CreateGraphResponse", "CreateGraphSchemaRequest", "CreateProcedureRequest", "CreateProcedureResponse", "CreatePropertyMeta", "CreateVertexType", "DateType", "EdgeData", "EdgeMapping", "EdgeMappingDestinationVertexMappingsInner", "EdgeMappingSourceVertexMappingsInner", "EdgeMappingSourceVertexMappingsInnerColumn", "EdgeMappingTypeTriplet", "EdgeRequest", "FixedChar", "FixedCharChar", "GSDataType", "GetEdgeType", "GetGraphResponse", "GetGraphSchemaResponse", "GetProcedureResponse", "GetPropertyMeta", "GetVertexType", "GraphServiceEdgeManagementApi", "GraphServiceVertexManagementApi", "JobResponse", "JobStatus", "LongText", "Parameter", "PrimitiveType", "Property", "PropertyArray", "QueryRequest", "QueryServiceApi", "SchemaMapping", "SchemaMappingLoadingConfig", "SchemaMappingLoadingConfigFormat", "ServiceStatus", "StartServiceRequest", "StoredProcedureMeta", "StringType", "StringTypeString", "TemporalType", "TemporalTypeTemporal", "TimeStampType", "TypedValue", "UpdateProcedureRequest", "VarChar", "VarCharVarChar", "VertexData", "VertexMapping", "VertexRequest", "Java SDK Reference", "interactive_sdk.openapi.AdminServiceGraphManagementApi", "interactive_sdk.openapi.AdminServiceJobManagementApi", "interactive_sdk.openapi.AdminServiceProcedureManagementApi", "interactive_sdk.openapi.AdminServiceServiceManagementApi", "BaseEdgeType", "BaseEdgeTypeVertexTypePairRelationsInner", "BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams", "BasePropertyMeta", "BaseVertexType", "BaseVertexTypeXCsrParams", "ColumnMapping", "CreateEdgeType", "CreateGraphRequest", "CreateGraphResponse", "CreateGraphSchemaRequest", "CreateProcedureRequest", "CreateProcedureResponse", "CreatePropertyMeta", "CreateVertexType", "DateType", "EdgeData", "EdgeMapping", "EdgeMappingDestinationVertexMappingsInner", "EdgeMappingSourceVertexMappingsInner", "EdgeMappingSourceVertexMappingsInnerColumn", "EdgeMappingTypeTriplet", "EdgeRequest", "FixedChar", "FixedCharChar", "GSDataType", "GetEdgeType", "GetGraphResponse", "GetGraphSchemaResponse", "GetProcedureResponse", "GetPropertyMeta", "GetVertexType", "interactive_sdk.openapi.GraphServiceEdgeManagementApi", "interactive_sdk.openapi.GraphServiceVertexManagementApi", "JobResponse", "JobStatus", "LongText", "ModelProperty", "Parameter", "PrimitiveType", "PropertyArray", "QueryRequest", "interactive_sdk.openapi.QueryServiceApi", "SchemaMapping", "SchemaMappingLoadingConfig", "SchemaMappingLoadingConfigFormat", "ServiceStatus", "StartServiceRequest", "StoredProcedureMeta", "StringType", "StringTypeString", "TemporalType", "TemporalTypeTemporal", "TimeStampType", "TypedValue", "UpdateProcedureRequest", "VarChar", "VarCharVarChar", "VertexData", "VertexMapping", "VertexRequest", "Python SDK Reference", "RESTful API Documentation", "Getting Started", "Glossary", "Installation", "Overview", "GraphScope Interactive SDK", "Stored Procedures", "Tools", "The Administrative tool", "GraphScope Interactive", "Introduction to ArrowFragment", "Frequently Asked Questions", "Getting Started for GLE", "Graph Workloads", "GraphScope for Data Scientists", "How to Report Bugs", "GraphScope: A One-Stop Large-Scale Graph Computing System from Alibaba", "Standalone Deployment for GIE", "Design of GIE", "Dev and Test", "Getting Started", "GIE for Cypher", "Using LLM as an Assistant in GIE", "Cypher Support", "Neo4j Ecosystem", "A Generic Graph Optimizer for GIE", "FAQs for GIE Gremlin Usage", "Guide and Examples", "Supported Gremlin Steps", "GIE for Gremlin", "Tutorial: LDBC Gremlin", "Apache TinkerPop Ecosystem", "Tutorials for Java Users", "Key Features", "Design of GLE", "Dev and Test", "Getting Started", "Graph Sampling", "Guide and Examples", "Tutorial: Training a Node Classification Model on K8s Cluster", "Tutorial: Training a Node Classification Model on Your Local Machine", "Tutorial: Training a Node Classification Model (PyG) on a K8S Cluster", "Tutorial: Training a Node Classification Model (PyG) on Your Local Machine", "Loading Graphs", "Design of GraphScope", "Getting Started", "Glossary", "Graph Analytics Workloads", "Graph Interactive Workloads", "Graph Learning Workloads", "Introducing GraphScope", "Positioning of GraphScope", "Performance and Benchmark", "Tutorials for Python Users", "Analytical Engine API Reference", "Analytical App", "Context", "Cython SDK API", "Flex API Reference", "About Grape JDK", "Java Reference (javadoc)", "graphscope.Vertex", "graphscope.declare", "graphscope.framework.app.load_app", "graphscope.framework.dag_utils.add_column", "graphscope.framework.dag_utils.add_labels_to_graph", "graphscope.framework.dag_utils.arrow_to_dynamic", "graphscope.framework.dag_utils.bind_app", "graphscope.framework.dag_utils.clear_edges", "graphscope.framework.dag_utils.clear_graph", "graphscope.framework.dag_utils.context_to_dataframe", "graphscope.framework.dag_utils.context_to_numpy", "graphscope.framework.dag_utils.copy_graph", "graphscope.framework.dag_utils.create_app", "graphscope.framework.dag_utils.create_graph", "graphscope.framework.dag_utils.create_graph_view", "graphscope.framework.dag_utils.create_loader", "graphscope.framework.dag_utils.create_subgraph", "graphscope.framework.dag_utils.create_unload_op", "graphscope.framework.dag_utils.dynamic_to_arrow", "graphscope.framework.dag_utils.get_context_data", "graphscope.framework.dag_utils.graph_to_dataframe", "graphscope.framework.dag_utils.graph_to_numpy", "graphscope.framework.dag_utils.gremlin_to_subgraph", "graphscope.framework.dag_utils.modify_edges", "graphscope.framework.dag_utils.modify_vertices", "graphscope.framework.dag_utils.output", "graphscope.framework.dag_utils.project_arrow_property_graph", "graphscope.framework.dag_utils.project_to_simple", "graphscope.framework.dag_utils.report_graph", "graphscope.framework.dag_utils.run_app", "graphscope.framework.dag_utils.to_data_sink", "graphscope.framework.dag_utils.to_directed", "graphscope.framework.dag_utils.to_undirected", "graphscope.framework.dag_utils.to_vineyard_dataframe", "graphscope.framework.dag_utils.to_vineyard_tensor", "graphscope.framework.dag_utils.unload_app", "graphscope.framework.dag_utils.unload_context", "graphscope.framework.dag_utils.unload_graph", "graphscope.framework.operation.Operation.__init__", "graphscope.framework.operation.Operation.as_op_def", "graphscope.framework.operation.Operation.eval", "graphscope.framework.operation.Operation.evaluated", "graphscope.framework.operation.Operation.key", "graphscope.framework.operation.Operation.signature", "graphscope.g", "graphscope.get_default_session", "graphscope.graphlearn", "graphscope.gremlin", "graphscope.has_default_session", "graphscope.session", "graphscope.set_option", "Developing Your Own Model", "Data Source", "Graph Object", "Graph Query", "Graph Sampling", "Graph Traversal", "Graph Sampling Language\uff08GSL)", "Install from pip", "Graph Learning Model", "Negative Sampling", "Defining Your Own Operator", "Integrating Other Data Sources", "Quick Start", "System configuration", "Graph", "Interactive Query", "Graph Learning", "Builtin algorithms", "Functions", "graphscope.nx.classes.function.add_cycle", "graphscope.nx.classes.function.add_path", "graphscope.nx.classes.function.add_star", "graphscope.nx.classes.function.all_neighbors", "graphscope.nx.classes.function.common_neighbors", "graphscope.nx.classes.function.create_empty_copy", "graphscope.nx.classes.function.degree", "graphscope.nx.classes.function.degree_histogram", "graphscope.nx.classes.function.density", "graphscope.nx.classes.function.edge_subgraph", "graphscope.nx.classes.function.edges", "graphscope.nx.classes.function.freeze", "graphscope.nx.classes.function.induced_subgraph", "graphscope.nx.classes.function.info", "graphscope.nx.classes.function.is_directed", "graphscope.nx.classes.function.is_empty", "graphscope.nx.classes.function.is_frozen", "graphscope.nx.classes.function.is_negatively_weighted", "graphscope.nx.classes.function.is_weighted", "graphscope.nx.classes.function.neighbors", "graphscope.nx.classes.function.nodes", "graphscope.nx.classes.function.nodes_with_selfloops", "graphscope.nx.classes.function.non_edges", "graphscope.nx.classes.function.non_neighbors", "graphscope.nx.classes.function.number_of_edges", "graphscope.nx.classes.function.number_of_nodes", "graphscope.nx.classes.function.number_of_selfloops", "graphscope.nx.classes.function.selfloop_edges", "graphscope.nx.classes.function.subgraph", "graphscope.nx.classes.function.to_directed", "graphscope.nx.classes.function.to_undirected", "graphscope.nx.generators.atlas.graph_atlas", "graphscope.nx.generators.atlas.graph_atlas_g", "graphscope.nx.generators.classic.balanced_tree", "graphscope.nx.generators.classic.barbell_graph", "graphscope.nx.generators.classic.binomial_tree", "graphscope.nx.generators.classic.circulant_graph", "graphscope.nx.generators.classic.circular_ladder_graph", "graphscope.nx.generators.classic.complete_graph", "graphscope.nx.generators.classic.complete_multipartite_graph", "graphscope.nx.generators.classic.cycle_graph", "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph", "graphscope.nx.generators.classic.empty_graph", "graphscope.nx.generators.classic.full_rary_tree", "graphscope.nx.generators.classic.ladder_graph", "graphscope.nx.generators.classic.lollipop_graph", "graphscope.nx.generators.classic.null_graph", "graphscope.nx.generators.classic.path_graph", "graphscope.nx.generators.classic.star_graph", "graphscope.nx.generators.classic.trivial_graph", "graphscope.nx.generators.classic.turan_graph", "graphscope.nx.generators.classic.wheel_graph", "graphscope.nx.generators.community.LFR_benchmark_graph", "graphscope.nx.generators.community.caveman_graph", "graphscope.nx.generators.community.connected_caveman_graph", "graphscope.nx.generators.community.gaussian_random_partition_graph", "graphscope.nx.generators.community.planted_partition_graph", "graphscope.nx.generators.community.random_partition_graph", "graphscope.nx.generators.community.relaxed_caveman_graph", "graphscope.nx.generators.community.ring_of_cliques", "graphscope.nx.generators.community.stochastic_block_model", "graphscope.nx.generators.community.windmill_graph", "graphscope.nx.generators.degree_seq.configuration_model", "graphscope.nx.generators.degree_seq.degree_sequence_tree", "graphscope.nx.generators.degree_seq.directed_configuration_model", "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph", "graphscope.nx.generators.degree_seq.expected_degree_graph", "graphscope.nx.generators.degree_seq.havel_hakimi_graph", "graphscope.nx.generators.degree_seq.random_degree_sequence_graph", "graphscope.nx.generators.directed.gn_graph", "graphscope.nx.generators.directed.gnc_graph", "graphscope.nx.generators.directed.gnr_graph", "graphscope.nx.generators.directed.random_k_out_graph", "graphscope.nx.generators.directed.scale_free_graph", "graphscope.nx.generators.duplication.duplication_divergence_graph", "graphscope.nx.generators.duplication.partial_duplication_graph", "graphscope.nx.generators.ego.ego_graph", "graphscope.nx.generators.expanders.chordal_cycle_graph", "graphscope.nx.generators.expanders.margulis_gabber_galil_graph", "graphscope.nx.generators.expanders.paley_graph", "graphscope.nx.generators.geometric.geographical_threshold_graph", "graphscope.nx.generators.geometric.random_geometric_graph", "graphscope.nx.generators.geometric.soft_random_geometric_graph", "graphscope.nx.generators.geometric.thresholded_random_geometric_graph", "graphscope.nx.generators.geometric.waxman_graph", "graphscope.nx.generators.harary_graph.hkn_harary_graph", "graphscope.nx.generators.harary_graph.hnm_harary_graph", "graphscope.nx.generators.intersection.general_random_intersection_graph", "graphscope.nx.generators.intersection.k_random_intersection_graph", "graphscope.nx.generators.intersection.uniform_random_intersection_graph", "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph", "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree", "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree", "graphscope.nx.generators.joint_degree_seq.joint_degree_graph", "graphscope.nx.generators.mycielski.mycielski_graph", "graphscope.nx.generators.mycielski.mycielskian", "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees", "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees", "graphscope.nx.generators.small.LCF_graph", "graphscope.nx.generators.small.bull_graph", "graphscope.nx.generators.small.chvatal_graph", "graphscope.nx.generators.small.cubical_graph", "graphscope.nx.generators.small.desargues_graph", "graphscope.nx.generators.small.diamond_graph", "graphscope.nx.generators.small.dodecahedral_graph", "graphscope.nx.generators.small.frucht_graph", "graphscope.nx.generators.small.heawood_graph", "graphscope.nx.generators.small.house_graph", "graphscope.nx.generators.small.house_x_graph", "graphscope.nx.generators.small.icosahedral_graph", "graphscope.nx.generators.small.krackhardt_kite_graph", "graphscope.nx.generators.small.make_small_graph", "graphscope.nx.generators.small.moebius_kantor_graph", "graphscope.nx.generators.small.octahedral_graph", "graphscope.nx.generators.small.pappus_graph", "graphscope.nx.generators.small.petersen_graph", "graphscope.nx.generators.small.sedgewick_maze_graph", "graphscope.nx.generators.small.tetrahedral_graph", "graphscope.nx.generators.small.truncated_cube_graph", "graphscope.nx.generators.small.truncated_tetrahedron_graph", "graphscope.nx.generators.small.tutte_graph", "graphscope.nx.generators.social.davis_southern_women_graph", "graphscope.nx.generators.social.florentine_families_graph", "graphscope.nx.generators.social.karate_club_graph", "graphscope.nx.generators.social.les_miserables_graph", "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge", "graphscope.nx.generators.sudoku.sudoku_graph", "graphscope.nx.generators.trees.prefix_tree", "graphscope.nx.generators.trees.random_tree", "graphscope.nx.generators.triads.triad_graph", "networkx.generators.internet_as_graphs.random_internet_as_graph", "networkx.generators.stochastic.stochastic_graph", "Graph generators", "Graph types", "NetworkX-style API", "Reading graphs", "Graph Transformation", "Operation", "Python API Reference", "Selector", "Session", "Resources Estimator", "GART: Bridging the Gap between Relational OLTP and Graph Workloads", "Getting Started", "GraphAr: Standard Graph Data File Format", "GRIN: Graph Retrieval INterface", "Groot: Persistent Graph Store", "In-memory immutable graphs on Vineyard", "Applications and algorithms", "Scaling and repartitioning", "User Guide and Examples of GAE", "User Guide and Examples of GLE", "Error Codes", "Command-line Utility <code class=\"docutils literal notranslate\"><span class=\"pre\">gsctl</span></code>", "How to Find logs", "Monitoring", "\u56fe\u5206\u6790\u5f15\u64ce", "\u90e8\u7f72", "\u5f00\u53d1\u8005\u6307\u5357", "\u5e38\u89c1\u95ee\u9898", "\u5feb\u901f\u4e0a\u624b", "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c", "GraphScope: \u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf", "\u5b89\u88c5", "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce", "\u56fe\u5b66\u4e60\u5f15\u64ce", "\u8f7d\u56fe", "\u5165\u95e8\u6559\u7a0b"], "terms": {"The": [0, 1, 2, 4, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 27, 29, 31, 32, 34, 36, 37, 38, 41, 42, 43, 44, 45, 50, 51, 86, 87, 115, 116, 117, 118, 119, 152, 153, 162, 181, 182, 183, 188, 189, 191, 193, 199, 201, 202, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 218, 219, 221, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 247, 265, 266, 267, 270, 278, 280, 281, 288, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 315, 316, 320, 321, 322, 325, 326, 328, 330, 331, 336, 339, 344, 345, 346, 347, 348, 349, 352, 355, 358, 361, 363, 364, 365, 367, 368, 370, 372, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 431, 432, 433, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 448, 449, 452, 453, 455, 458, 459, 460, 461, 462, 463, 466, 467, 469], "graph": [0, 1, 3, 4, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 22, 23, 24, 27, 29, 36, 37, 38, 42, 47, 49, 50, 51, 52, 53, 86, 87, 96, 100, 115, 116, 117, 118, 119, 152, 153, 162, 166, 181, 182, 183, 184, 187, 188, 190, 191, 193, 199, 200, 201, 202, 203, 205, 206, 210, 211, 213, 214, 218, 220, 228, 232, 235, 236, 237, 238, 239, 246, 247, 248, 249, 250, 251, 254, 256, 257, 259, 261, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 280, 287, 289, 295, 301, 304, 305, 309, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 447, 450, 451, 452, 453, 462, 463, 466, 469, 473, 474, 475, 477, 478, 479], "analyt": [0, 1, 5, 8, 12, 14, 15, 16, 17, 18, 23, 27, 32, 34, 36, 37, 38, 41, 49, 193, 212, 214, 228, 230, 232, 233, 235, 239, 241, 244, 249, 308, 446, 451, 459, 462, 463, 469], "engin": [0, 1, 2, 5, 8, 16, 17, 23, 27, 28, 30, 32, 34, 38, 41, 46, 182, 184, 186, 188, 191, 193, 196, 199, 200, 201, 204, 207, 208, 209, 212, 216, 220, 221, 225, 227, 228, 229, 230, 231, 233, 237, 241, 249, 265, 289, 294, 302, 308, 309, 310, 446, 452, 453, 455, 459, 460, 461, 462, 472, 473], "gae": [0, 3, 10, 12, 14, 15, 28, 32, 193, 198, 214, 215, 226, 229, 233, 234, 235, 241, 265, 309, 470, 471], "graphscop": [0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 18, 24, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 50, 51, 52, 53, 86, 87, 96, 115, 181, 182, 183, 184, 185, 186, 188, 190, 192, 193, 195, 199, 201, 203, 204, 207, 209, 210, 211, 212, 214, 215, 217, 220, 221, 222, 223, 224, 225, 227, 228, 230, 234, 235, 237, 238, 241, 308, 309, 310, 311, 446, 448, 449, 450, 451, 452, 453, 454, 458, 459, 460, 461, 462, 463, 466, 469, 470, 472, 473, 474, 477, 479, 480], "offer": [0, 2, 9, 12, 20, 34, 43, 44, 45, 46, 49, 182, 183, 186, 188, 198, 201, 205, 207, 211, 215, 216, 226, 228, 232, 233, 458], "mani": [0, 4, 6, 10, 12, 13, 14, 24, 32, 34, 36, 37, 45, 186, 191, 193, 196, 200, 217, 225, 227, 228, 229, 231, 295, 302, 349, 393, 395, 446, 458, 463], "which": [0, 2, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 34, 35, 36, 38, 41, 42, 44, 45, 186, 188, 193, 196, 199, 200, 201, 202, 203, 204, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 239, 241, 245, 248, 261, 270, 272, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 306, 308, 309, 310, 311, 325, 350, 352, 365, 366, 367, 375, 377, 394, 395, 396, 403, 405, 406, 424, 436, 438, 440, 444, 445, 446, 448, 449, 450, 452, 453, 455, 457, 458, 459, 460, 461, 463, 466], "enabl": [0, 1, 4, 6, 13, 15, 17, 18, 23, 31, 42, 46, 47, 83, 102, 149, 168, 183, 184, 186, 190, 191, 193, 211, 212, 216, 221, 222, 226, 227, 228, 230, 231, 232, 233, 234, 236, 305, 311, 446, 453, 458, 459, 462, 463, 467], "user": [0, 2, 4, 6, 9, 11, 12, 13, 14, 15, 17, 18, 22, 23, 24, 27, 29, 31, 34, 37, 41, 42, 44, 45, 47, 49, 96, 162, 181, 183, 184, 186, 187, 189, 193, 198, 200, 204, 207, 208, 210, 212, 215, 219, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 294, 296, 297, 298, 299, 300, 301, 303, 306, 309, 446, 452, 453, 455, 458, 459, 462, 473, 476, 477], "analyz": [0, 7, 13, 19, 27, 211, 226, 227, 229, 230, 232, 300, 458], "data": [0, 2, 3, 4, 6, 9, 11, 12, 16, 17, 18, 19, 20, 22, 23, 24, 27, 30, 31, 33, 34, 47, 182, 183, 184, 185, 186, 188, 190, 191, 193, 198, 200, 201, 204, 206, 207, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 244, 246, 252, 253, 258, 263, 264, 268, 276, 277, 294, 296, 297, 298, 299, 300, 304, 308, 318, 324, 340, 341, 356, 373, 389, 408, 438, 446, 448, 449, 452, 453, 455, 458, 460, 461, 463, 469, 470, 472, 473, 478], "least": [0, 6, 37, 212, 311, 345, 367], "effort": [0, 34, 186, 210, 234, 458], "cover": [0, 6, 15, 41, 219], "wide": [0, 11, 12, 24, 186, 202, 214, 215, 219, 226, 227, 229, 230, 231, 233, 298, 457, 463], "rang": [0, 13, 18, 44, 45, 207, 208, 210, 212, 215, 218, 219, 221, 222, 223, 224, 226, 227, 230, 233, 236, 238, 239, 252, 253, 263, 264, 268, 276, 277, 294, 299, 303, 351, 353, 355, 358, 361, 373, 379, 393, 394, 395, 396, 424, 446, 451, 458, 469, 472, 473, 477, 478], "applic": [0, 1, 4, 6, 8, 10, 11, 13, 14, 24, 34, 39, 50, 51, 52, 53, 86, 87, 115, 116, 117, 118, 119, 152, 153, 181, 182, 184, 185, 186, 193, 199, 200, 203, 211, 213, 215, 216, 228, 229, 230, 231, 234, 236, 237, 239, 249, 298, 377, 401, 457, 467], "commun": [0, 4, 6, 8, 9, 12, 15, 16, 18, 24, 27, 215, 226, 227, 228, 229, 232, 236, 237, 241, 296, 304, 397, 438, 443, 447, 457, 466], "detect": [0, 6, 8, 9, 215, 226, 227, 229, 230, 232, 233, 237, 365, 369, 370, 371], "etc": [0, 6, 7, 15, 29, 196, 200, 207, 208, 216, 219, 225, 227, 228, 231, 234, 238, 294, 297, 298, 299, 302, 313, 325, 334, 339, 340, 446, 448, 459], "ar": [0, 1, 2, 4, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 27, 29, 30, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 50, 51, 52, 53, 86, 87, 96, 115, 116, 117, 118, 119, 152, 153, 162, 181, 183, 184, 185, 186, 188, 193, 196, 199, 200, 201, 204, 205, 207, 208, 210, 211, 212, 215, 216, 217, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 241, 244, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 311, 320, 321, 322, 335, 336, 341, 345, 346, 347, 349, 350, 351, 352, 353, 355, 356, 357, 358, 360, 361, 364, 365, 368, 369, 370, 371, 373, 374, 375, 377, 378, 379, 380, 381, 385, 389, 391, 392, 393, 394, 395, 396, 397, 401, 403, 405, 407, 408, 411, 429, 438, 439, 440, 441, 442, 446, 449, 452, 453, 455, 457, 458, 459, 460, 462, 466, 467, 479], "implement": [0, 1, 4, 8, 9, 12, 13, 16, 18, 22, 24, 34, 45, 115, 181, 183, 196, 200, 203, 205, 206, 208, 210, 213, 215, 216, 219, 223, 224, 225, 226, 230, 233, 236, 237, 241, 294, 296, 298, 299, 300, 302, 305, 306, 308, 309, 311, 387, 388, 392, 393, 395, 397, 398, 399, 440, 441, 449, 469], "pie": [0, 1, 3, 8, 12, 34, 212, 214, 215, 229, 241, 244, 451, 463, 473, 475], "program": [0, 3, 9, 15, 16, 17, 18, 20, 23, 24, 49, 186, 188, 214, 215, 219, 226, 228, 229, 231, 233, 234, 241, 294, 299, 300, 458, 459, 463], "model": [0, 1, 3, 8, 9, 18, 43, 46, 50, 51, 52, 53, 86, 87, 96, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 191, 196, 200, 206, 207, 208, 212, 214, 215, 218, 219, 220, 225, 226, 227, 229, 230, 233, 241, 296, 298, 300, 301, 365, 369, 373, 375, 377, 379, 385, 387, 388, 393, 394, 395, 396, 397, 401, 402, 436, 443, 453, 457, 463, 473], "highli": [0, 4, 12, 34, 206, 212, 215, 228, 229, 457], "optim": [0, 9, 12, 14, 34, 42, 44, 45, 49, 56, 59, 122, 125, 186, 188, 198, 200, 211, 212, 213, 215, 216, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 234, 237, 294, 306, 308, 458, 460, 473], "best": [0, 16, 226, 228, 230, 233, 234, 237, 446, 469], "perform": [0, 3, 4, 6, 9, 12, 14, 17, 22, 23, 24, 37, 41, 42, 44, 46, 186, 198, 200, 205, 207, 210, 212, 213, 214, 216, 226, 228, 229, 231, 232, 233, 238, 296, 300, 302, 308, 403, 408, 438, 450, 452, 455, 459, 461, 463], "can": [0, 1, 2, 4, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 49, 96, 162, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 196, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 219, 221, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 241, 245, 247, 271, 272, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 320, 321, 324, 328, 349, 352, 365, 366, 367, 374, 375, 377, 393, 394, 395, 396, 403, 407, 408, 415, 417, 419, 424, 427, 432, 433, 438, 440, 446, 449, 450, 452, 453, 455, 457, 458, 459, 460, 461, 463, 466, 467, 469], "us": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 24, 28, 29, 30, 31, 33, 35, 36, 37, 38, 41, 42, 44, 45, 46, 56, 59, 96, 122, 125, 162, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 196, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 246, 247, 271, 272, 281, 286, 294, 295, 296, 297, 298, 300, 302, 305, 307, 308, 309, 310, 311, 330, 331, 340, 352, 355, 359, 365, 366, 367, 373, 375, 379, 380, 382, 384, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 403, 407, 411, 424, 429, 438, 440, 443, 444, 446, 448, 449, 451, 453, 457, 458, 461, 462, 463, 466, 467, 469, 473, 479], "them": [0, 1, 2, 6, 8, 12, 14, 15, 17, 24, 27, 30, 33, 34, 36, 41, 43, 188, 193, 196, 200, 205, 210, 212, 221, 226, 227, 229, 231, 233, 234, 235, 246, 294, 297, 306, 351, 438, 452, 458, 459, 469], "out": [0, 6, 9, 12, 27, 29, 33, 34, 37, 50, 51, 52, 53, 86, 87, 96, 115, 208, 211, 216, 223, 224, 225, 227, 228, 229, 230, 233, 237, 239, 294, 297, 298, 300, 311, 368, 377, 378, 385, 386, 389, 403, 404, 440, 444, 446, 458, 459, 460, 462, 473, 477], "box": [0, 228, 439], "manner": [0, 2, 17, 18, 32, 36, 186, 227, 229, 230], "here": [0, 4, 10, 14, 16, 17, 18, 20, 23, 27, 33, 36, 37, 38, 41, 42, 43, 45, 182, 185, 188, 193, 199, 200, 201, 204, 205, 207, 208, 210, 211, 212, 215, 217, 218, 221, 222, 225, 231, 234, 237, 295, 296, 300, 303, 305, 306, 308, 311, 365, 377, 392, 393, 395, 404, 424, 446, 449, 457, 458, 459, 473], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 96, 115, 116, 117, 118, 119, 152, 153, 162, 181, 182, 183, 184, 186, 188, 190, 191, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 236, 237, 238, 239, 240, 241, 242, 245, 247, 271, 281, 283, 287, 288, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 319, 321, 323, 325, 326, 327, 328, 329, 330, 331, 340, 341, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 361, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 441, 442, 443, 444, 446, 448, 449, 452, 453, 455, 457, 458, 459, 460, 461, 462, 463, 466, 467, 469, 472, 473, 477, 478, 479], "full": [0, 4, 12, 16, 17, 18, 22, 34, 44, 96, 162, 208, 215, 216, 219, 226, 231, 233, 237, 294, 297, 298, 300, 356, 459, 463, 469, 478], "list": [0, 1, 16, 19, 20, 28, 31, 34, 37, 38, 43, 44, 45, 50, 51, 52, 54, 58, 61, 62, 64, 68, 70, 71, 76, 80, 81, 82, 83, 85, 94, 95, 97, 102, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 188, 199, 205, 208, 210, 212, 215, 221, 223, 225, 228, 231, 235, 237, 239, 258, 259, 266, 267, 281, 295, 298, 300, 308, 311, 320, 322, 325, 332, 334, 340, 341, 344, 345, 349, 351, 352, 370, 373, 375, 377, 378, 379, 380, 381, 393, 397, 400, 403, 404, 409, 411, 424, 440, 446, 447, 449, 453, 457, 459, 462, 467, 474, 477], "support": [0, 3, 4, 6, 9, 10, 12, 13, 17, 18, 20, 22, 24, 29, 32, 34, 37, 42, 43, 45, 46, 115, 116, 117, 118, 119, 152, 153, 162, 181, 183, 186, 191, 193, 196, 199, 200, 202, 206, 208, 212, 213, 214, 218, 219, 220, 221, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 238, 241, 247, 294, 295, 296, 298, 299, 300, 302, 303, 305, 308, 309, 311, 446, 449, 452, 453, 455, 457, 459, 460, 462, 463, 466, 472], "bf": [0, 15, 17, 34, 234, 237, 469], "df": [0, 34, 457], "hit": [0, 34, 36, 237, 238, 311, 447, 452, 469], "lpa": [0, 7, 34, 227, 237, 469], "sssp": [0, 7, 8, 9, 13, 14, 17, 18, 22, 24, 34, 192, 227, 234, 237, 238, 245, 452, 453, 461, 462, 469], "thi": [0, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 53, 96, 115, 116, 117, 119, 162, 181, 182, 183, 186, 188, 190, 193, 196, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 255, 268, 271, 286, 294, 295, 296, 298, 299, 300, 301, 302, 304, 306, 308, 311, 328, 342, 343, 344, 345, 346, 347, 352, 355, 357, 358, 365, 366, 367, 369, 370, 373, 374, 375, 377, 379, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 405, 407, 424, 426, 429, 434, 438, 440, 441, 443, 444, 445, 446, 448, 450, 452, 453, 454, 455, 457, 458, 459, 463, 466, 467, 469], "find": [0, 4, 8, 9, 17, 22, 31, 32, 36, 37, 41, 43, 185, 193, 196, 198, 201, 208, 210, 212, 221, 225, 227, 229, 230, 234, 236, 245, 293, 311, 316, 335, 336, 365, 453, 458, 459, 466], "problem": [0, 2, 6, 9, 11, 14, 15, 24, 31, 37, 38, 193, 195, 196, 200, 212, 229, 231], "from": [0, 2, 3, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 18, 22, 23, 24, 27, 29, 30, 34, 36, 37, 38, 42, 49, 51, 86, 87, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 188, 191, 193, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 245, 265, 266, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 313, 314, 325, 344, 346, 351, 353, 355, 358, 365, 368, 372, 373, 374, 375, 377, 380, 385, 386, 388, 389, 393, 394, 395, 396, 397, 398, 405, 412, 421, 433, 438, 440, 441, 445, 446, 448, 449, 452, 453, 457, 458, 460, 466, 469, 473, 474, 477, 479], "given": [0, 7, 9, 13, 14, 20, 34, 44, 186, 188, 190, 191, 196, 199, 200, 201, 207, 210, 211, 212, 219, 225, 227, 230, 231, 233, 237, 298, 300, 303, 306, 308, 310, 345, 352, 363, 375, 376, 377, 378, 379, 380, 381, 389, 397, 398, 399, 403, 404, 405, 406, 410, 438, 441, 442, 445, 446, 452, 453, 457, 458, 461, 462], "weight": [0, 7, 19, 20, 33, 44, 152, 182, 192, 207, 210, 212, 219, 227, 229, 234, 237, 266, 294, 296, 297, 298, 299, 300, 303, 306, 308, 311, 313, 314, 315, 319, 330, 331, 373, 385, 389, 393, 396, 436, 444, 445, 446, 448, 453, 478], "As": [0, 7, 12, 13, 15, 16, 18, 20, 22, 24, 27, 38, 186, 193, 200, 202, 205, 212, 218, 219, 226, 230, 294, 296, 302, 303, 304, 375, 457, 458], "result": [0, 2, 4, 6, 7, 9, 12, 14, 15, 16, 17, 18, 19, 24, 33, 37, 50, 51, 52, 53, 86, 87, 96, 115, 186, 188, 196, 200, 201, 202, 204, 207, 210, 211, 212, 215, 219, 226, 227, 229, 230, 231, 236, 237, 238, 246, 252, 253, 262, 268, 270, 272, 273, 276, 277, 294, 297, 298, 300, 302, 303, 305, 308, 309, 311, 375, 377, 380, 399, 446, 457, 459, 461, 469, 473], "comput": [0, 3, 4, 6, 9, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 31, 34, 37, 184, 186, 200, 201, 210, 212, 215, 216, 219, 227, 228, 229, 230, 231, 232, 233, 236, 237, 239, 298, 299, 302, 304, 311, 392, 395, 396, 400, 405, 414, 437, 438, 450, 453, 459, 460, 469], "minimum": [0, 6, 193, 201, 205, 210, 212, 237, 365, 453], "distanc": [0, 7, 15, 17, 18, 227, 237, 311, 346, 385, 389, 393, 394, 395, 396, 397, 415, 427, 469], "ani": [0, 2, 4, 17, 19, 20, 22, 24, 27, 30, 33, 34, 36, 37, 38, 42, 43, 50, 51, 53, 116, 117, 119, 188, 190, 199, 200, 202, 208, 210, 211, 212, 225, 226, 227, 229, 230, 233, 235, 236, 238, 247, 254, 298, 309, 310, 311, 322, 326, 341, 365, 370, 372, 375, 377, 393, 395, 397, 446, 449, 452, 458, 466], "vertex": [0, 2, 3, 4, 6, 9, 12, 13, 14, 15, 16, 17, 18, 19, 22, 30, 33, 34, 43, 45, 72, 73, 86, 87, 115, 138, 139, 152, 153, 181, 192, 199, 205, 207, 208, 210, 214, 215, 216, 219, 226, 227, 228, 229, 230, 231, 234, 236, 237, 238, 239, 244, 265, 295, 296, 297, 298, 299, 300, 303, 306, 308, 310, 311, 385, 390, 407, 408, 424, 449, 451, 455, 457, 459, 460, 463, 469, 474], "other": [0, 3, 4, 6, 8, 9, 10, 12, 14, 16, 20, 23, 24, 29, 30, 33, 34, 36, 37, 44, 45, 47, 185, 186, 188, 191, 193, 196, 200, 208, 210, 212, 215, 216, 219, 221, 226, 228, 229, 230, 231, 232, 233, 237, 239, 294, 296, 298, 300, 304, 307, 308, 309, 311, 315, 346, 348, 352, 355, 365, 374, 380, 386, 395, 396, 438, 446, 448, 449, 452, 453, 457, 458, 462], "vertic": [0, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 33, 44, 45, 186, 192, 199, 200, 202, 205, 207, 208, 210, 216, 219, 226, 227, 229, 230, 231, 236, 237, 238, 239, 267, 295, 296, 297, 298, 299, 300, 303, 306, 308, 369, 380, 390, 392, 407, 408, 419, 421, 432, 433, 439, 452, 453, 455, 457, 458, 459, 460, 469, 473, 474], "all_pairs_shortest_path_length": [0, 34], "refer": [0, 2, 4, 9, 10, 12, 16, 17, 23, 24, 30, 33, 34, 37, 41, 43, 45, 47, 183, 184, 186, 188, 191, 193, 199, 201, 202, 205, 208, 210, 212, 216, 217, 219, 229, 230, 231, 233, 237, 256, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 311, 344, 345, 356, 365, 366, 367, 368, 369, 370, 371, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 445, 446, 459, 463, 477], "tendenc": [0, 20], "similar": [0, 10, 12, 20, 37, 43, 199, 200, 208, 211, 212, 216, 219, 225, 226, 229, 233, 237, 294, 295, 296, 297, 300, 303, 308, 438, 446], "over": [0, 9, 12, 15, 16, 18, 22, 24, 33, 34, 193, 196, 210, 214, 219, 226, 228, 229, 233, 234, 237, 239, 297, 311, 333, 334, 340, 392, 446, 455, 463], "dissimilar": 0, "measur": [0, 6, 20, 200, 229, 231, 237, 295, 311, 389, 390, 423], "extent": [0, 6], "same": [0, 2, 4, 6, 10, 13, 15, 17, 20, 22, 29, 30, 37, 45, 46, 183, 200, 205, 208, 210, 212, 216, 225, 229, 230, 234, 295, 296, 300, 301, 304, 306, 308, 310, 311, 339, 340, 361, 369, 370, 375, 377, 403, 404, 406, 439, 440, 446, 453, 457, 458, 459, 460, 461], "properti": [0, 4, 6, 7, 9, 12, 15, 17, 20, 33, 43, 44, 45, 86, 87, 115, 152, 153, 181, 182, 183, 184, 191, 192, 201, 204, 207, 213, 227, 229, 230, 231, 236, 237, 238, 239, 256, 270, 284, 285, 286, 297, 300, 308, 309, 393, 408, 438, 443, 446, 449, 452, 453, 455, 459, 460, 467, 473, 474, 477], "each": [0, 6, 9, 10, 12, 13, 14, 15, 16, 19, 20, 24, 30, 34, 35, 36, 38, 41, 43, 44, 45, 49, 182, 199, 200, 207, 208, 210, 211, 212, 216, 218, 219, 221, 222, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 285, 294, 295, 296, 297, 298, 299, 300, 304, 305, 306, 308, 311, 320, 322, 340, 341, 346, 350, 352, 357, 363, 365, 367, 368, 369, 371, 372, 374, 375, 377, 378, 380, 385, 388, 390, 393, 394, 395, 396, 397, 400, 401, 403, 405, 406, 411, 414, 426, 431, 436, 440, 442, 443, 444, 446, 452, 453, 455, 457, 458, 459, 460, 463, 467], "attribute_assort": [0, 34], "nearest": [0, 237], "neighbor": [0, 6, 9, 13, 14, 17, 18, 192, 207, 210, 212, 216, 219, 223, 229, 230, 231, 237, 239, 294, 295, 297, 298, 300, 302, 303, 304, 306, 307, 311, 316, 317, 336, 388, 389, 403, 406, 439, 446, 455, 458, 469], "return": [0, 6, 9, 15, 18, 20, 49, 83, 102, 115, 149, 168, 181, 182, 192, 200, 202, 203, 204, 205, 207, 210, 211, 212, 219, 221, 223, 224, 227, 230, 237, 238, 239, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 287, 288, 289, 293, 294, 296, 297, 298, 299, 300, 303, 304, 305, 306, 308, 309, 310, 311, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 448, 452, 453, 455, 458, 469, 478], "success": [0, 13, 22, 50, 51, 52, 53, 89, 116, 117, 118, 119, 182, 241, 296, 380, 411], "0": [0, 9, 10, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 27, 28, 29, 30, 31, 33, 35, 42, 43, 44, 46, 115, 152, 181, 182, 193, 196, 199, 201, 202, 206, 210, 212, 216, 218, 219, 221, 222, 223, 224, 225, 227, 234, 236, 237, 238, 239, 253, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 311, 313, 314, 315, 317, 321, 322, 325, 326, 330, 340, 344, 345, 347, 348, 349, 350, 352, 355, 357, 358, 360, 361, 362, 364, 365, 368, 369, 370, 371, 373, 374, 375, 377, 378, 381, 384, 386, 393, 394, 395, 396, 397, 403, 404, 408, 411, 424, 429, 438, 440, 441, 446, 448, 449, 453, 455, 458, 459, 460, 461, 467, 469, 471, 472, 473, 474, 476, 477, 478, 479], "1": [0, 6, 7, 9, 10, 13, 14, 15, 17, 19, 20, 22, 23, 24, 28, 30, 31, 33, 34, 35, 37, 42, 44, 45, 46, 86, 87, 115, 152, 153, 181, 182, 191, 196, 199, 200, 201, 202, 206, 207, 208, 210, 212, 216, 218, 219, 221, 222, 223, 224, 225, 227, 230, 231, 234, 237, 238, 294, 297, 299, 300, 301, 303, 308, 309, 310, 311, 313, 314, 315, 317, 321, 322, 325, 330, 331, 334, 339, 340, 344, 346, 347, 348, 349, 350, 352, 356, 357, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 446, 448, 449, 453, 458, 459, 460, 461, 467, 469, 473, 474, 476, 477, 478, 479], "2": [0, 6, 9, 10, 13, 14, 17, 18, 19, 20, 22, 23, 28, 31, 33, 34, 37, 42, 44, 45, 46, 115, 152, 153, 182, 191, 199, 200, 201, 202, 206, 207, 210, 212, 216, 218, 219, 221, 222, 223, 224, 225, 227, 230, 231, 234, 237, 238, 294, 297, 298, 299, 300, 301, 303, 308, 311, 313, 314, 315, 317, 325, 326, 330, 331, 334, 339, 340, 347, 348, 349, 352, 357, 358, 363, 365, 367, 369, 371, 372, 373, 375, 376, 377, 379, 380, 381, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 413, 415, 417, 418, 419, 423, 424, 426, 428, 429, 431, 438, 439, 440, 441, 446, 448, 449, 453, 457, 458, 460, 461, 469, 470, 471, 473, 474, 477, 478, 479], "average_degree_connect": [0, 237, 469], "source_degree_typ": 0, "target_degree_typ": 0, "paramet": [0, 2, 6, 9, 15, 16, 17, 30, 42, 46, 49, 83, 102, 115, 149, 168, 181, 184, 186, 188, 193, 200, 205, 210, 211, 212, 219, 224, 227, 231, 236, 237, 238, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 259, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283, 286, 293, 295, 296, 298, 300, 303, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 320, 322, 324, 325, 326, 328, 329, 330, 331, 335, 336, 340, 341, 344, 346, 348, 349, 351, 352, 353, 355, 356, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 432, 433, 438, 439, 440, 441, 442, 443, 444, 446, 448, 449, 453, 457, 458, 459, 466], "str": [0, 20, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 170, 172, 173, 175, 178, 179, 180, 221, 222, 223, 225, 237, 238, 239, 245, 246, 252, 253, 254, 256, 263, 264, 265, 268, 270, 271, 272, 273, 276, 277, 306, 308, 309, 324, 326, 440, 446, 448, 452, 453, 459, 474, 479], "target": [0, 6, 17, 22, 24, 115, 182, 201, 216, 217, 226, 227, 231, 233, 237, 239, 300, 302, 308, 311, 382, 384, 403, 406, 438, 459, 469], "base": [0, 4, 6, 9, 11, 12, 13, 14, 18, 32, 34, 42, 44, 45, 47, 186, 196, 199, 200, 201, 204, 208, 210, 212, 215, 219, 226, 227, 228, 229, 230, 231, 234, 236, 237, 238, 260, 266, 294, 296, 298, 300, 301, 302, 311, 382, 421, 436, 446, 458, 459, 463, 469, 478], "v": [0, 2, 6, 7, 9, 10, 13, 14, 15, 18, 20, 22, 24, 33, 37, 192, 196, 202, 205, 208, 211, 212, 219, 227, 230, 231, 236, 237, 238, 239, 294, 297, 298, 299, 300, 303, 306, 308, 309, 310, 311, 317, 340, 365, 368, 373, 375, 379, 385, 388, 393, 396, 403, 406, 408, 440, 446, 452, 453, 457, 458, 459, 469, 473, 477, 478], "sum": [0, 20, 205, 208, 223, 229, 237, 239, 311, 365, 370, 373, 375, 376, 377, 386, 393, 396, 397, 404, 405, 444, 446, 477], "fraction": [0, 237, 311, 365], "pass": [0, 2, 6, 9, 10, 14, 15, 16, 18, 20, 24, 27, 37, 42, 96, 162, 186, 188, 200, 202, 204, 210, 212, 219, 225, 230, 231, 237, 239, 244, 300, 304, 306, 355, 393, 395, 438, 446, 450, 459, 469, 474, 479], "through": [0, 2, 4, 6, 12, 13, 14, 15, 16, 19, 22, 24, 27, 32, 34, 37, 38, 43, 183, 198, 199, 200, 202, 203, 204, 206, 207, 210, 211, 212, 213, 216, 219, 225, 227, 229, 230, 231, 233, 238, 241, 295, 296, 298, 299, 300, 305, 306, 308, 311, 341, 355, 372, 411, 446, 457, 458, 459], "betweenness_centr": [0, 34, 311], "normal": [0, 6, 27, 193, 212, 237, 300, 308, 311, 368, 458], "endpoint": [0, 9, 10, 27, 28, 29, 42, 46, 50, 51, 53, 87, 115, 116, 117, 119, 153, 181, 182, 183, 186, 199, 201, 203, 206, 210, 211, 221, 225, 227, 236, 300, 309, 311, 453, 455, 459, 466, 469, 477, 479], "bool": [0, 6, 14, 15, 20, 79, 92, 122, 149, 168, 192, 205, 225, 236, 237, 239, 283, 291, 308, 311, 318, 328, 330, 331, 340, 369, 379, 385, 389, 405, 446, 448, 453, 458, 479], "whether": [0, 37, 42, 44, 188, 199, 200, 207, 210, 212, 225, 226, 230, 236, 237, 295, 296, 300, 308, 368, 370, 373, 393, 404, 405, 446, 457, 458, 459, 460], "should": [0, 6, 9, 13, 16, 19, 20, 22, 23, 27, 28, 30, 33, 37, 44, 49, 183, 199, 200, 202, 204, 208, 210, 212, 225, 226, 227, 231, 236, 237, 245, 248, 261, 270, 304, 305, 308, 310, 311, 341, 365, 393, 394, 395, 396, 446, 448, 453, 455, 458, 459, 460, 461], "includ": [0, 3, 4, 6, 7, 9, 12, 16, 17, 20, 22, 24, 27, 30, 35, 36, 37, 43, 44, 45, 182, 186, 188, 190, 196, 198, 200, 201, 205, 206, 207, 212, 215, 216, 217, 218, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 296, 297, 300, 302, 308, 311, 326, 365, 373, 379, 389, 438, 445, 446, 457, 458, 459, 466, 467], "count": [0, 6, 33, 49, 115, 181, 182, 200, 202, 205, 207, 208, 211, 212, 219, 227, 229, 236, 237, 298, 299, 303, 304, 307, 311, 321, 379, 446, 459, 473, 477], "an": [0, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 27, 29, 30, 31, 32, 34, 37, 41, 42, 43, 44, 45, 47, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 186, 188, 190, 191, 193, 196, 199, 200, 201, 202, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 241, 245, 248, 249, 250, 251, 252, 253, 255, 256, 258, 261, 263, 264, 265, 266, 267, 268, 271, 272, 273, 276, 277, 278, 280, 281, 289, 294, 295, 296, 298, 299, 300, 302, 303, 305, 306, 308, 310, 311, 322, 323, 328, 333, 334, 340, 341, 343, 344, 345, 347, 350, 351, 352, 353, 355, 356, 358, 360, 361, 364, 366, 367, 375, 377, 378, 379, 381, 382, 385, 386, 387, 388, 392, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 407, 411, 413, 419, 424, 428, 431, 432, 436, 438, 439, 440, 441, 443, 444, 446, 449, 450, 452, 453, 455, 457, 458, 459, 460, 461, 462, 463, 466], "travers": [0, 6, 13, 15, 17, 183, 184, 186, 199, 200, 205, 208, 211, 216, 226, 227, 228, 229, 294, 297, 300, 302, 306, 309, 440, 446, 455, 458, 459, 460, 469, 477], "It": [0, 2, 4, 6, 9, 10, 11, 12, 13, 15, 16, 24, 27, 29, 34, 37, 41, 43, 44, 45, 49, 186, 193, 196, 199, 200, 202, 204, 205, 208, 210, 211, 212, 215, 216, 222, 225, 227, 228, 229, 230, 231, 232, 233, 236, 237, 241, 287, 294, 295, 296, 300, 302, 304, 308, 309, 311, 315, 370, 374, 398, 399, 403, 406, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 427, 430, 432, 433, 438, 446, 453, 457, 458, 459, 460, 466, 467], "start": [0, 2, 4, 6, 9, 16, 19, 20, 27, 28, 29, 31, 32, 37, 39, 42, 45, 47, 53, 119, 186, 188, 190, 191, 198, 199, 203, 204, 205, 210, 211, 219, 221, 223, 224, 225, 230, 232, 235, 236, 238, 294, 298, 300, 309, 310, 311, 346, 371, 375, 377, 378, 381, 397, 411, 440, 448, 453, 458, 459, 463, 476], "root": [0, 4, 27, 32, 36, 42, 189, 193, 225, 228, 346, 348, 439, 440, 457], "explor": [0, 17, 43, 44, 185, 191, 196, 201, 210, 212, 226, 227, 230, 458], "present": [0, 2, 20, 27, 44, 190, 207, 212, 219, 220, 221, 222, 223, 224, 226, 227, 229, 241, 311, 322, 365, 446, 457, 458], "prior": [0, 12, 34, 43, 210, 212, 215, 226], "move": [0, 4, 6, 43, 186, 204, 228, 300, 403, 406], "next": [0, 6, 9, 12, 14, 16, 24, 29, 30, 33, 34, 185, 211, 212, 216, 219, 220, 225, 226, 231, 294, 295, 298, 300, 302, 304, 305, 306, 372, 440, 452, 455, 458, 459, 461], "level": [0, 6, 12, 38, 42, 186, 196, 200, 226, 228, 231, 237, 302, 356, 403, 404, 443, 458, 459], "int": [0, 14, 15, 16, 17, 18, 19, 20, 23, 24, 33, 125, 140, 144, 146, 147, 149, 150, 151, 155, 166, 177, 192, 207, 208, 221, 223, 225, 236, 237, 238, 239, 271, 295, 296, 297, 298, 299, 300, 303, 306, 307, 308, 310, 311, 339, 344, 346, 348, 351, 353, 355, 356, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 381, 382, 383, 384, 385, 387, 388, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 407, 408, 409, 410, 441, 446, 448, 453, 455, 459, 469, 477, 479], "evalu": [0, 6, 14, 15, 16, 18, 37, 215, 227, 228, 231, 234, 236, 237, 238, 249, 272, 281, 283, 287, 289, 308, 453, 463, 477], "also": [0, 1, 2, 4, 6, 9, 10, 12, 16, 17, 19, 20, 22, 23, 27, 29, 30, 32, 34, 36, 37, 38, 43, 45, 46, 47, 182, 184, 186, 190, 193, 196, 199, 200, 204, 208, 210, 212, 215, 218, 220, 221, 226, 227, 228, 229, 231, 233, 234, 236, 237, 239, 241, 294, 295, 296, 298, 301, 302, 303, 306, 308, 309, 311, 346, 365, 390, 392, 393, 397, 416, 421, 426, 438, 440, 444, 446, 449, 452, 453, 455, 457, 458, 459, 462, 463, 469], "known": [0, 6, 8, 9, 24, 32, 199, 202, 204, 205, 212, 229, 230, 237, 328, 346, 349, 398, 399, 416, 440, 461], "see": [0, 2, 4, 13, 19, 20, 27, 29, 30, 36, 37, 38, 44, 116, 117, 118, 119, 152, 153, 162, 182, 183, 186, 193, 199, 202, 204, 208, 211, 212, 215, 225, 232, 237, 238, 241, 287, 289, 295, 296, 298, 303, 306, 308, 344, 354, 359, 365, 368, 369, 370, 371, 373, 375, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 393, 394, 395, 396, 397, 400, 401, 402, 403, 406, 411, 438, 441, 443, 446, 448, 452, 453, 457, 458, 459, 462], "max_round": [0, 237, 457, 469], "10": [0, 13, 15, 16, 17, 20, 27, 31, 45, 193, 195, 196, 200, 202, 203, 208, 210, 212, 218, 219, 221, 222, 223, 224, 227, 234, 237, 295, 296, 297, 299, 300, 306, 308, 311, 313, 314, 315, 349, 355, 365, 368, 370, 379, 380, 381, 382, 384, 388, 393, 397, 401, 417, 423, 428, 441, 446, 453, 457, 459, 467, 469, 473, 477], "maximum": [0, 45, 199, 205, 210, 212, 229, 237, 297, 311, 365, 381, 396, 397, 398, 399, 404, 445, 459], "round": [0, 9, 14, 17, 24, 237, 239, 363, 373], "default": [0, 6, 13, 15, 20, 23, 28, 29, 30, 32, 36, 41, 42, 44, 45, 46, 49, 116, 117, 118, 119, 152, 153, 162, 182, 183, 186, 188, 190, 193, 196, 199, 201, 202, 208, 210, 212, 218, 221, 223, 225, 234, 236, 237, 238, 239, 256, 265, 287, 288, 291, 295, 296, 300, 307, 308, 310, 311, 313, 314, 315, 318, 340, 342, 343, 346, 348, 349, 351, 353, 355, 356, 358, 360, 361, 364, 365, 368, 369, 370, 371, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 406, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 432, 433, 438, 439, 441, 443, 444, 446, 448, 449, 453, 455, 457, 459, 466, 467, 479], "origin": [0, 4, 6, 9, 12, 13, 22, 43, 200, 207, 208, 210, 216, 221, 222, 231, 236, 238, 265, 294, 296, 308, 309, 365, 387, 393, 432, 440, 444, 446, 452, 453, 459, 460], "reciproc": [0, 311], "n": [0, 19, 20, 30, 33, 38, 42, 44, 49, 116, 117, 118, 119, 152, 153, 162, 181, 182, 188, 190, 200, 202, 203, 205, 210, 212, 215, 219, 227, 231, 234, 237, 238, 298, 300, 303, 305, 311, 321, 325, 326, 328, 332, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 367, 368, 369, 374, 375, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 407, 408, 411, 424, 439, 440, 441, 443, 446], "reachabl": [0, 311], "node": [0, 4, 10, 13, 15, 18, 27, 30, 33, 45, 49, 182, 193, 196, 205, 206, 218, 219, 220, 226, 227, 229, 231, 233, 235, 237, 238, 239, 259, 262, 267, 270, 271, 289, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 328, 332, 334, 336, 338, 339, 340, 341, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 458, 460, 469, 472, 473, 478], "wasserman": 0, "faust": 0, "propos": [0, 3, 6, 12, 14, 24, 34, 215, 226, 228, 229, 231, 233, 298, 304, 455, 458], "improv": [0, 6, 9, 17, 19, 23, 186, 208, 228, 231, 232, 233, 462], "formula": 0, "more": [0, 2, 3, 4, 6, 7, 9, 12, 13, 14, 15, 16, 17, 20, 27, 29, 30, 32, 34, 36, 37, 38, 41, 45, 49, 115, 181, 182, 183, 186, 188, 193, 196, 200, 201, 202, 204, 207, 208, 210, 212, 215, 216, 217, 218, 219, 225, 226, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 294, 295, 298, 299, 300, 304, 305, 308, 311, 344, 385, 392, 393, 407, 408, 440, 446, 448, 453, 457, 458, 459, 462, 463, 466], "than": [0, 13, 15, 18, 23, 24, 29, 30, 33, 37, 186, 193, 199, 200, 205, 210, 212, 214, 219, 225, 226, 229, 230, 232, 233, 237, 296, 298, 300, 307, 311, 321, 355, 363, 365, 367, 372, 374, 385, 387, 396, 453, 458, 459, 462, 463], "one": [0, 2, 6, 9, 10, 12, 13, 14, 15, 19, 20, 22, 24, 29, 30, 36, 37, 41, 45, 49, 182, 186, 193, 196, 198, 199, 200, 205, 208, 210, 212, 216, 219, 225, 227, 230, 231, 233, 236, 237, 239, 245, 246, 286, 294, 295, 296, 297, 298, 300, 304, 308, 311, 320, 344, 345, 348, 349, 352, 361, 362, 365, 374, 375, 380, 382, 383, 384, 385, 386, 388, 403, 406, 414, 417, 421, 424, 430, 431, 432, 438, 440, 442, 446, 452, 453, 455, 457, 458, 459, 462, 473, 477], "compon": [0, 4, 6, 12, 19, 29, 32, 34, 38, 41, 45, 193, 202, 207, 226, 228, 229, 230, 236, 237, 311, 379, 393, 452, 458, 459], "ratio": [0, 13, 212, 438], "actor": [0, 182, 188, 212, 226, 423], "group": [0, 2, 186, 193, 200, 223, 225, 227, 229, 230, 236, 302, 308, 369, 370, 371, 373, 390, 418, 436, 457, 459, 477, 479], "who": [0, 11, 29, 186, 212, 226, 230, 301, 306, 459], "closeness_centr": [0, 34], "wf": 0, "quantifi": 0, "how": [0, 2, 4, 8, 9, 12, 13, 14, 16, 20, 27, 30, 33, 34, 36, 38, 44, 45, 183, 186, 188, 190, 193, 195, 196, 198, 199, 201, 204, 207, 209, 210, 211, 212, 213, 214, 220, 221, 222, 223, 224, 226, 227, 229, 230, 231, 233, 235, 238, 241, 249, 295, 296, 300, 302, 453, 454, 457, 458, 459, 460, 462, 463, 473], "its": [0, 4, 6, 7, 9, 10, 12, 13, 14, 18, 24, 30, 31, 34, 42, 43, 44, 115, 181, 186, 188, 190, 196, 204, 207, 208, 210, 212, 216, 218, 219, 222, 225, 226, 227, 229, 230, 231, 237, 238, 239, 286, 294, 296, 300, 304, 306, 308, 311, 353, 356, 363, 365, 385, 390, 403, 406, 414, 433, 443, 453, 458, 459, 461], "being": [0, 45, 208, 219, 230, 308, 345, 375, 455, 458, 459, 460], "cliqu": [0, 6, 212, 226, 229, 366, 367, 371, 372, 374, 388], "complet": [0, 14, 31, 33, 34, 182, 200, 204, 208, 212, 225, 228, 294, 296, 300, 321, 346, 347, 349, 351, 352, 358, 363, 372, 403, 406, 430, 446, 459], "have": [0, 2, 4, 6, 8, 9, 11, 12, 13, 15, 19, 20, 23, 24, 27, 29, 30, 31, 32, 33, 36, 37, 38, 41, 42, 43, 45, 185, 193, 196, 199, 200, 201, 202, 203, 204, 205, 207, 208, 210, 212, 214, 215, 217, 219, 225, 226, 227, 229, 230, 231, 233, 237, 238, 241, 245, 294, 295, 296, 297, 298, 300, 301, 303, 304, 306, 308, 311, 321, 325, 328, 340, 346, 351, 356, 365, 375, 376, 377, 379, 385, 388, 403, 404, 406, 422, 426, 440, 446, 452, 453, 457, 458, 459, 461, 463, 466, 467, 473], "edg": [0, 6, 7, 9, 12, 13, 15, 17, 18, 19, 22, 24, 30, 33, 37, 43, 45, 75, 86, 115, 141, 152, 181, 182, 186, 192, 199, 200, 204, 205, 207, 208, 210, 216, 218, 219, 221, 222, 223, 224, 226, 227, 229, 230, 231, 233, 236, 237, 238, 239, 250, 251, 254, 259, 266, 270, 271, 289, 294, 295, 296, 297, 298, 299, 300, 302, 303, 306, 307, 308, 309, 310, 311, 313, 314, 315, 318, 321, 322, 324, 325, 326, 328, 330, 331, 334, 335, 337, 339, 340, 341, 345, 347, 348, 349, 350, 351, 352, 355, 357, 358, 359, 362, 363, 365, 367, 370, 371, 373, 375, 376, 377, 379, 381, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 436, 440, 443, 444, 445, 446, 447, 449, 452, 453, 455, 457, 459, 460, 461, 469, 473, 474, 478], "u": [0, 6, 14, 16, 18, 20, 37, 192, 193, 208, 212, 225, 227, 237, 300, 304, 306, 308, 311, 317, 340, 352, 365, 379, 385, 388, 393, 396, 408, 446, 458, 469, 479], "equal": [0, 10, 193, 205, 210, 212, 218, 222, 225, 227, 311, 363, 365, 396, 401, 439, 473], "degree_assortativity_coeffici": [0, 237, 469], "hold": [0, 10, 20, 46, 210, 236, 237, 238, 239, 265, 273, 296, 308, 311, 446, 452], "numer": [0, 20, 205, 210, 226, 228, 229, 237, 238, 311, 446, 452, 458], "valu": [0, 6, 9, 13, 15, 18, 20, 24, 29, 36, 42, 44, 45, 49, 55, 56, 65, 79, 81, 83, 86, 87, 89, 92, 93, 98, 102, 108, 112, 152, 153, 157, 174, 178, 192, 193, 199, 200, 202, 205, 216, 221, 223, 225, 229, 231, 236, 237, 238, 239, 272, 281, 293, 294, 296, 297, 298, 299, 300, 303, 305, 306, 307, 308, 310, 311, 320, 340, 355, 365, 393, 394, 395, 396, 403, 405, 406, 438, 439, 440, 446, 448, 449, 452, 453, 455, 457, 458, 459, 460, 469, 477, 478, 479], "If": [0, 2, 4, 6, 7, 8, 13, 14, 15, 17, 20, 23, 27, 29, 30, 32, 33, 36, 37, 42, 43, 44, 45, 46, 183, 185, 188, 190, 193, 199, 201, 202, 204, 210, 212, 218, 225, 227, 233, 237, 238, 241, 293, 295, 296, 300, 301, 304, 305, 307, 308, 309, 310, 311, 316, 317, 319, 326, 330, 331, 340, 341, 346, 347, 348, 349, 351, 352, 353, 355, 356, 358, 360, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 406, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 438, 441, 442, 444, 446, 448, 449, 452, 453, 455, 458, 459, 460, 466, 467], "fals": [0, 13, 15, 17, 18, 19, 20, 42, 44, 46, 186, 199, 204, 210, 223, 224, 225, 236, 237, 239, 287, 294, 295, 296, 300, 306, 308, 310, 311, 324, 328, 330, 331, 340, 342, 343, 368, 369, 370, 373, 379, 389, 404, 446, 449, 453, 457, 459, 469, 478], "ha": [0, 2, 4, 6, 8, 9, 10, 12, 13, 14, 15, 17, 23, 28, 29, 31, 34, 37, 41, 42, 43, 45, 182, 186, 193, 196, 200, 201, 202, 204, 205, 207, 208, 209, 212, 216, 219, 220, 221, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 241, 286, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 308, 309, 311, 328, 330, 331, 334, 339, 340, 346, 361, 363, 365, 376, 380, 385, 393, 394, 395, 396, 397, 403, 406, 412, 413, 417, 418, 422, 428, 430, 433, 436, 438, 440, 444, 446, 450, 452, 453, 459, 461, 463, 473, 474, 477], "adjac": [0, 10, 16, 20, 24, 210, 212, 231, 237, 297, 302, 311, 334, 367, 391, 409, 424, 438, 439, 446, 447, 458], "direct": [0, 9, 10, 15, 43, 45, 199, 212, 216, 219, 222, 225, 227, 228, 231, 236, 237, 257, 287, 294, 296, 300, 303, 306, 308, 311, 316, 321, 327, 342, 353, 366, 367, 368, 369, 370, 373, 377, 378, 380, 389, 390, 391, 392, 403, 404, 413, 440, 444, 446, 447, 449, 453, 457, 458, 460, 474, 478, 479], "three": [0, 6, 10, 12, 14, 18, 30, 34, 38, 41, 43, 45, 212, 225, 226, 228, 233, 234, 241, 295, 298, 299, 300, 303, 304, 305, 306, 311, 340, 345, 352, 428, 433, 442, 446, 459, 463], "separ": [0, 6, 17, 30, 36, 188, 199, 201, 212, 226, 233, 295, 296, 393, 448, 458, 459], "defin": [0, 4, 6, 10, 12, 13, 18, 20, 24, 27, 43, 44, 45, 50, 51, 52, 53, 86, 87, 116, 117, 118, 119, 152, 153, 162, 183, 186, 188, 193, 199, 204, 207, 208, 210, 212, 215, 218, 221, 225, 226, 227, 228, 230, 236, 237, 241, 256, 294, 295, 298, 300, 303, 305, 306, 311, 348, 370, 372, 395, 452, 453, 457, 458, 459, 473], "name": [0, 2, 4, 6, 12, 16, 17, 20, 22, 23, 27, 28, 29, 30, 32, 33, 37, 38, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 188, 190, 193, 199, 200, 201, 204, 205, 207, 208, 210, 212, 223, 224, 225, 226, 228, 230, 236, 237, 238, 239, 245, 281, 295, 297, 300, 302, 304, 306, 308, 309, 311, 330, 331, 345, 412, 419, 424, 436, 442, 446, 448, 449, 452, 453, 457, 458, 459, 467, 469, 470, 472, 477, 479], "both": [0, 2, 10, 12, 13, 18, 19, 20, 32, 34, 45, 183, 188, 199, 202, 207, 208, 216, 222, 225, 226, 227, 228, 229, 230, 231, 237, 239, 294, 295, 296, 308, 309, 310, 325, 334, 339, 340, 345, 365, 389, 392, 397, 403, 406, 453, 455, 457, 458, 459, 461, 462, 476, 477], "degree_centr": [0, 34, 196, 237, 311, 447, 469], "centrality_typ": [0, 237], "appli": [0, 6, 9, 10, 12, 13, 24, 27, 33, 42, 46, 183, 199, 200, 207, 210, 214, 216, 226, 227, 229, 233, 388, 395, 411, 438, 455, 458, 459, 461, 463], "far": [0, 226, 295], "possibl": [0, 4, 6, 15, 44, 186, 191, 193, 200, 216, 230, 231, 237, 296, 302, 303, 311, 379, 387, 388, 403, 404, 405, 406, 438, 442, 458], "along": [0, 6, 10, 20, 24, 31, 190, 208, 210, 216, 239, 296, 300, 306, 440, 446, 459, 460], "branch": [0, 205, 212, 300, 346, 356, 477], "befor": [0, 4, 17, 22, 23, 27, 29, 30, 37, 42, 43, 45, 183, 190, 204, 210, 212, 219, 221, 236, 237, 241, 294, 300, 307, 346, 348, 349, 351, 353, 356, 358, 360, 361, 364, 375, 377, 378, 380, 382, 383, 384, 390, 391, 392, 398, 399, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 432, 433, 441, 448, 453, 455, 458, 459, 461], "backtrack": 0, "influenc": [0, 27, 311], "relationship": [0, 45, 186, 193, 200, 205, 206, 207, 212, 216, 219, 226, 229, 230, 231, 295, 296, 306, 458, 459], "high": [0, 6, 9, 186, 191, 196, 200, 207, 212, 225, 228, 229, 231, 232, 233, 234, 302, 380, 411, 453, 455], "score": [0, 212, 231], "contribut": [0, 4, 198, 458], "low": [0, 6, 7, 13, 32, 200, 218, 226, 227, 231, 232, 233, 438, 459], "A": [0, 6, 7, 9, 10, 24, 27, 28, 29, 37, 42, 44, 45, 182, 184, 191, 196, 201, 203, 205, 211, 212, 216, 218, 225, 226, 228, 229, 230, 231, 234, 236, 237, 238, 239, 246, 247, 249, 250, 251, 254, 257, 259, 266, 267, 271, 272, 281, 298, 299, 300, 303, 305, 308, 309, 310, 311, 313, 314, 315, 317, 318, 320, 322, 324, 325, 326, 328, 329, 330, 331, 334, 339, 340, 341, 344, 345, 346, 348, 349, 351, 355, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 381, 385, 387, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 408, 412, 414, 423, 434, 438, 439, 440, 441, 443, 444, 446, 448, 453, 457, 458, 459, 460, 461], "mean": [0, 2, 20, 29, 30, 36, 37, 42, 45, 186, 199, 200, 208, 221, 236, 238, 244, 283, 296, 299, 300, 310, 311, 351, 368, 375, 385, 394, 395, 396, 446, 449, 452, 453, 455, 457, 458, 459, 461, 466], "themselv": [0, 200, 212, 216, 440], "eigenvector_centr": [0, 34, 237, 311, 447, 469], "toler": [0, 237, 311, 365], "doubl": [0, 9, 14, 16, 18, 33, 44, 79, 92, 192, 205, 207, 208, 210, 225, 234, 239, 295, 305, 416, 440, 457, 461, 469, 477, 479], "error": [0, 2, 32, 36, 37, 38, 42, 47, 50, 52, 53, 86, 87, 96, 116, 118, 119, 152, 153, 162, 193, 198, 200, 202, 207, 236, 237, 300, 304, 311, 345, 446, 459], "check": [0, 6, 12, 17, 27, 29, 30, 32, 33, 34, 35, 37, 38, 46, 186, 190, 193, 199, 200, 204, 207, 210, 212, 219, 221, 229, 230, 237, 304, 308, 311, 404, 405, 446, 453, 458, 459, 467, 472, 473], "converg": [0, 6, 9, 14, 17, 24, 231, 234, 237, 311], "number": [0, 8, 9, 13, 19, 20, 24, 28, 30, 33, 38, 42, 45, 196, 199, 201, 202, 209, 210, 212, 216, 220, 221, 223, 227, 229, 231, 234, 236, 237, 239, 296, 297, 298, 299, 300, 303, 307, 311, 321, 326, 328, 337, 338, 339, 344, 345, 347, 349, 352, 356, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 411, 419, 424, 429, 436, 438, 439, 441, 443, 444, 445, 446, 453, 455, 458, 459, 460, 467, 473, 477], "iter": [0, 6, 9, 14, 16, 17, 19, 20, 24, 210, 211, 216, 218, 219, 221, 222, 225, 226, 227, 228, 229, 231, 232, 237, 239, 294, 297, 306, 310, 311, 313, 314, 315, 316, 317, 322, 333, 334, 335, 336, 340, 341, 351, 352, 353, 355, 358, 360, 361, 364, 365, 393, 394, 395, 396, 397, 403, 406, 408, 440, 446, 469, 473, 478], "import": [0, 2, 4, 7, 10, 15, 16, 17, 18, 19, 20, 22, 27, 29, 30, 33, 36, 37, 38, 50, 51, 52, 53, 86, 87, 96, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 190, 191, 196, 198, 200, 202, 203, 204, 211, 212, 214, 216, 218, 219, 221, 222, 224, 225, 227, 229, 231, 237, 238, 287, 289, 294, 295, 296, 298, 301, 303, 305, 306, 307, 308, 311, 365, 393, 394, 395, 396, 446, 453, 457, 461, 463, 467, 469, 470, 471, 473, 474, 477, 478, 479], "rate": [0, 43, 186, 191, 226, 232, 237, 393, 395, 396], "two": [0, 2, 6, 9, 13, 16, 17, 18, 19, 29, 37, 45, 186, 187, 193, 196, 199, 200, 204, 205, 207, 208, 210, 212, 216, 217, 225, 227, 229, 230, 231, 233, 234, 294, 295, 296, 297, 298, 300, 302, 304, 306, 308, 311, 317, 340, 347, 348, 350, 352, 353, 357, 374, 385, 386, 393, 394, 395, 396, 397, 401, 403, 406, 407, 412, 413, 421, 439, 440, 445, 446, 457, 458, 459, 466, 473], "hub": [0, 29, 237, 238, 311, 364, 452], "author": [0, 27, 47, 222, 227, 237, 311, 365, 453, 473], "estim": [0, 200, 207, 212, 229, 230, 306, 311], "within": [0, 13, 30, 36, 42, 44, 45, 49, 186, 188, 190, 191, 204, 205, 207, 208, 210, 211, 212, 217, 226, 227, 228, 229, 230, 231, 300, 309, 311, 365, 368, 369, 389, 395, 396, 453, 458, 467, 473, 477], "we": [0, 2, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 49, 115, 181, 182, 183, 185, 186, 188, 193, 196, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 238, 241, 245, 247, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 308, 309, 349, 363, 365, 375, 377, 403, 424, 446, 449, 452, 453, 457, 458, 459, 461, 463, 473, 479], "need": [0, 2, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 27, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 49, 50, 51, 53, 116, 117, 119, 186, 193, 196, 199, 200, 204, 212, 215, 216, 217, 218, 221, 225, 226, 227, 228, 230, 231, 233, 236, 237, 241, 294, 295, 296, 298, 300, 303, 304, 305, 307, 308, 380, 393, 398, 404, 424, 440, 446, 449, 455, 458, 459, 461, 462, 463, 469], "rel": [0, 27, 42, 44, 50, 51, 52, 53, 86, 87, 96, 115, 116, 117, 118, 119, 152, 153, 162, 181, 200, 201, 216, 225, 231, 296, 300, 311, 459], "immedi": [0, 6, 186, 200, 232, 237, 239, 300, 311, 449, 453, 459], "under": [0, 9, 10, 14, 17, 24, 38, 45, 186, 188, 207, 212, 218, 225, 226, 237, 241, 300, 302, 303, 311, 458], "consider": [0, 207, 208, 225, 311, 368], "katz_centr": [0, 34, 237, 311, 447, 469], "alpha": [0, 212, 237, 311, 385, 386, 397, 438], "beta": [0, 237, 311, 386, 397], "attenu": [0, 311], "factor": [0, 13, 201, 212, 237, 311, 346, 356, 378, 380, 458], "neighborhood": [0, 6, 226, 228, 231, 237, 300, 304, 311, 389], "maxim": [0, 6, 311, 399, 445], "subgraph": [0, 6, 9, 17, 33, 212, 213, 215, 227, 228, 229, 237, 259, 265, 294, 300, 302, 308, 309, 311, 322, 325, 347, 358, 389, 446, 457, 473, 477], "contain": [0, 2, 4, 6, 8, 17, 20, 23, 27, 32, 37, 38, 43, 44, 183, 185, 188, 193, 196, 199, 200, 205, 207, 209, 210, 212, 216, 219, 220, 223, 225, 226, 227, 229, 231, 233, 234, 236, 239, 241, 294, 295, 298, 300, 303, 304, 305, 306, 308, 311, 313, 314, 315, 322, 325, 326, 341, 351, 352, 353, 355, 358, 373, 398, 399, 403, 404, 446, 449, 450, 453, 457, 458, 459, 467, 471, 477], "found": [0, 4, 9, 16, 17, 18, 36, 50, 52, 86, 87, 116, 118, 152, 153, 182, 193, 199, 211, 212, 216, 217, 228, 234, 287, 307, 365, 407, 408, 444, 446, 453, 457, 458, 459, 463], "recurs": [0, 6, 300, 348], "prune": 0, "less": [0, 2, 6, 13, 17, 27, 199, 204, 205, 210, 225, 237, 300, 307, 311, 363, 374, 385, 387, 459], "kkore": [0, 34], "order": [0, 6, 34, 44, 186, 200, 205, 207, 215, 228, 230, 231, 237, 238, 295, 300, 306, 311, 313, 314, 320, 344, 345, 348, 353, 360, 373, 374, 377, 409, 410, 413, 438, 439, 446, 452, 455, 459, 477], "That": [0, 27, 237, 305, 363, 406, 449, 461], "kshell": [0, 34], "fast": [0, 9, 20, 200, 237, 304], "where": [0, 2, 6, 12, 13, 14, 18, 24, 37, 38, 41, 42, 45, 46, 182, 193, 204, 205, 207, 208, 215, 216, 225, 226, 227, 230, 231, 233, 237, 281, 295, 296, 298, 300, 304, 311, 321, 328, 346, 375, 379, 381, 390, 393, 394, 395, 396, 424, 446, 453, 458, 459, 466, 473, 477], "assign": [0, 7, 9, 15, 18, 20, 36, 37, 199, 208, 217, 225, 227, 229, 231, 236, 237, 239, 311, 365, 373, 375, 377, 379, 393, 396, 401, 446, 449, 452, 455, 458, 459, 479], "unlabel": 0, "dure": [0, 6, 9, 13, 24, 182, 188, 193, 202, 210, 212, 228, 229, 231, 236, 295, 300, 365, 453, 455, 459, 460, 461, 462], "aim": [0, 22, 49, 186, 212, 222, 228, 229, 230, 231, 233], "local": [0, 2, 4, 6, 10, 13, 14, 22, 24, 27, 30, 34, 37, 44, 115, 189, 193, 198, 199, 203, 211, 212, 220, 225, 226, 227, 231, 236, 237, 241, 271, 295, 296, 304, 305, 306, 308, 457, 460, 466, 476, 477], "follow": [0, 4, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 42, 43, 44, 45, 46, 49, 115, 181, 182, 183, 185, 188, 190, 191, 193, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 218, 219, 220, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 241, 245, 294, 295, 296, 297, 298, 300, 303, 304, 306, 308, 310, 345, 365, 375, 379, 385, 388, 398, 399, 405, 408, 429, 442, 446, 453, 455, 457, 458, 459, 460, 462, 463, 466, 467], "specif": [0, 4, 6, 9, 12, 14, 15, 16, 20, 24, 33, 34, 37, 38, 41, 42, 49, 183, 190, 193, 196, 199, 200, 202, 205, 207, 208, 212, 215, 222, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 298, 299, 300, 303, 306, 308, 365, 393, 397, 446, 452, 455, 457, 458, 459, 466], "ldbc": [0, 4, 34, 186, 199, 201, 208, 209, 215, 225, 229, 233, 234, 457, 474, 479], "wai": [0, 1, 4, 6, 10, 14, 20, 29, 36, 37, 43, 45, 49, 186, 188, 193, 196, 199, 200, 207, 208, 211, 215, 228, 230, 231, 298, 300, 302, 304, 311, 365, 431, 438, 440, 446, 453, 457, 458, 460], "exist": [0, 2, 4, 6, 8, 9, 10, 12, 14, 15, 20, 34, 37, 42, 46, 49, 86, 87, 152, 153, 190, 196, 198, 205, 207, 210, 216, 225, 226, 228, 229, 230, 231, 233, 237, 239, 245, 247, 291, 293, 295, 298, 300, 304, 305, 308, 311, 330, 331, 335, 377, 386, 400, 444, 446, 453, 455, 457], "variant": [0, 31, 231, 234], "networkx": [0, 3, 7, 8, 12, 34, 196, 215, 232, 235, 236, 237, 271, 311, 313, 314, 315, 316, 317, 318, 320, 322, 324, 325, 326, 328, 329, 330, 331, 335, 336, 340, 341, 345, 346, 348, 349, 351, 352, 353, 356, 358, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 386, 389, 390, 391, 392, 397, 398, 399, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 439, 441, 446, 448, 449, 451, 475, 480], "damp": 0, "set": [0, 2, 4, 6, 7, 9, 10, 13, 14, 15, 16, 18, 20, 23, 27, 30, 31, 39, 41, 42, 43, 44, 45, 46, 115, 183, 186, 193, 196, 199, 200, 201, 202, 205, 206, 207, 210, 212, 215, 218, 219, 225, 226, 227, 228, 230, 231, 234, 235, 236, 237, 239, 287, 293, 294, 295, 296, 298, 300, 303, 306, 307, 308, 309, 310, 311, 325, 349, 365, 379, 380, 385, 389, 397, 400, 401, 402, 407, 408, 426, 441, 444, 446, 449, 453, 457, 458, 459, 460, 463, 466, 471, 472, 476], "sampling_path": [0, 34], "source_id": [0, 14], "cutoff": 0, "fix": [0, 6, 45, 210, 212, 216, 218, 231, 286, 438, 459, 461], "rank": [0, 6, 33, 223, 226, 236, 237, 238, 438, 452], "vote": [0, 239], "scheme": [0, 6, 9, 43, 44, 182, 199, 225], "With": [0, 4, 12, 19, 24, 34, 36, 41, 188, 189, 201, 207, 208, 210, 212, 215, 220, 221, 226, 227, 228, 384, 457, 466], "top": [0, 9, 12, 22, 34, 116, 117, 118, 119, 152, 153, 162, 208, 210, 212, 233, 298, 420, 459, 477], "highest": [0, 212, 380], "elect": 0, "num_of_nod": [0, 237], "select": [0, 9, 15, 36, 45, 200, 204, 208, 216, 219, 225, 226, 229, 231, 238, 246, 252, 253, 263, 264, 268, 276, 277, 294, 300, 308, 365, 374, 397, 409, 443, 446, 452, 453, 457, 458, 477], "influenti": 0, "extract": [0, 185, 203, 205, 210, 225, 226, 227, 228, 237, 245, 309, 453, 455, 459], "weakli": [0, 237, 311, 385], "In": [1, 2, 4, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 28, 29, 32, 34, 37, 38, 42, 43, 44, 45, 46, 49, 184, 185, 186, 188, 193, 196, 198, 199, 200, 201, 202, 204, 205, 208, 210, 211, 212, 214, 215, 216, 219, 221, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 306, 307, 308, 311, 368, 397, 400, 403, 404, 406, 446, 449, 452, 455, 458, 459, 461, 463, 466], "addit": [1, 4, 6, 9, 10, 12, 15, 18, 20, 24, 32, 34, 37, 43, 196, 200, 201, 202, 205, 207, 208, 210, 212, 214, 215, 216, 219, 225, 228, 234, 256, 272, 295, 296, 297, 298, 308, 440, 446, 459, 463], "built": [1, 3, 4, 8, 9, 12, 15, 18, 20, 22, 32, 34, 36, 41, 186, 188, 193, 201, 202, 204, 207, 212, 226, 227, 231, 232, 234, 235, 294, 308, 382, 383, 384, 455, 457, 463], "provid": [1, 2, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 23, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 47, 87, 153, 182, 183, 186, 187, 188, 190, 193, 196, 198, 199, 200, 204, 205, 207, 208, 210, 211, 212, 214, 215, 216, 217, 219, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 255, 294, 296, 300, 301, 302, 306, 311, 342, 343, 365, 393, 394, 395, 396, 443, 446, 448, 453, 455, 457, 458, 459, 460, 463, 466, 469], "run": [1, 2, 4, 6, 8, 9, 12, 13, 19, 20, 24, 27, 29, 30, 31, 32, 38, 42, 43, 46, 47, 86, 89, 96, 115, 152, 162, 181, 182, 186, 188, 190, 191, 193, 199, 201, 203, 204, 211, 214, 217, 220, 221, 225, 226, 227, 228, 231, 233, 235, 236, 237, 238, 272, 283, 300, 304, 305, 306, 308, 309, 398, 399, 449, 450, 453, 458, 459, 460, 461, 462, 463, 466, 467, 469, 471], "your": [1, 2, 4, 7, 8, 12, 13, 14, 20, 23, 24, 27, 29, 30, 31, 32, 36, 38, 41, 43, 46, 115, 183, 185, 186, 188, 191, 193, 201, 202, 203, 204, 211, 216, 217, 218, 220, 221, 227, 233, 235, 237, 241, 296, 301, 305, 306, 355, 375, 446, 453, 455, 458, 466, 469, 477], "own": [1, 4, 6, 8, 12, 15, 24, 34, 36, 37, 183, 204, 208, 214, 215, 229, 235, 241, 286, 298, 301, 306, 365, 375, 453, 458, 459, 463], "design": [1, 4, 6, 7, 12, 13, 15, 18, 27, 42, 44, 45, 181, 186, 188, 190, 191, 196, 198, 202, 207, 208, 212, 218, 219, 220, 221, 228, 230, 231, 232, 233, 236, 294, 296, 302, 311, 446, 459], "extens": [1, 4, 6, 27, 36, 44, 200, 202, 205, 219, 226, 295], "henc": [1, 2, 10, 32, 225, 320, 443, 446, 459], "you": [1, 2, 4, 7, 8, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 33, 36, 37, 38, 41, 42, 43, 46, 49, 115, 181, 182, 183, 185, 186, 188, 193, 199, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 217, 218, 220, 221, 225, 227, 230, 232, 233, 235, 237, 241, 293, 295, 296, 299, 300, 301, 304, 305, 308, 311, 324, 355, 365, 375, 377, 389, 394, 395, 396, 446, 453, 455, 457, 458, 459, 461, 466, 467, 469, 479], "flash": [1, 3, 8, 12, 226], "java": [1, 4, 8, 12, 14, 34, 47, 187, 191, 198, 201, 207, 213, 215, 228, 229, 233, 237, 241, 245, 458, 469], "c": [1, 6, 8, 12, 14, 17, 18, 31, 34, 38, 42, 43, 47, 49, 182, 183, 184, 186, 188, 190, 191, 207, 210, 212, 215, 216, 223, 226, 228, 229, 236, 237, 238, 241, 244, 256, 268, 296, 300, 304, 306, 311, 344, 345, 355, 375, 386, 399, 400, 403, 404, 438, 440, 442, 443, 446, 458, 461, 467, 469, 471, 477], "python": [1, 7, 8, 11, 12, 14, 16, 17, 20, 22, 23, 27, 29, 30, 32, 33, 34, 37, 47, 183, 187, 191, 193, 196, 198, 199, 202, 204, 206, 212, 213, 216, 218, 221, 225, 226, 227, 229, 230, 232, 233, 236, 237, 244, 294, 297, 301, 304, 306, 309, 310, 446, 448, 449, 457, 458, 466, 467, 469, 470, 472, 473, 475, 476, 477, 479], "These": [1, 4, 9, 15, 20, 24, 44, 45, 186, 199, 205, 216, 225, 226, 227, 229, 230, 231, 232, 300, 306, 458, 466], "type": [1, 3, 4, 6, 9, 12, 13, 15, 16, 18, 19, 20, 27, 29, 30, 33, 34, 36, 37, 38, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 186, 188, 196, 199, 200, 201, 204, 206, 208, 210, 212, 216, 219, 221, 222, 223, 224, 226, 227, 229, 230, 231, 234, 236, 237, 238, 244, 245, 247, 248, 252, 253, 256, 257, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 273, 276, 277, 281, 287, 289, 294, 296, 297, 298, 299, 300, 303, 304, 305, 306, 308, 309, 310, 311, 316, 317, 320, 322, 325, 326, 328, 330, 331, 334, 335, 336, 339, 340, 341, 344, 345, 346, 348, 349, 351, 352, 353, 355, 356, 358, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 407, 408, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 438, 439, 440, 441, 442, 443, 447, 448, 450, 451, 453, 455, 458, 459, 461, 470, 473, 478], "queri": [1, 2, 7, 9, 13, 14, 19, 22, 29, 34, 42, 43, 46, 47, 65, 83, 86, 87, 96, 102, 115, 131, 149, 152, 153, 162, 168, 181, 182, 184, 187, 189, 191, 193, 196, 199, 201, 202, 203, 205, 206, 207, 209, 210, 211, 213, 214, 215, 216, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 246, 252, 253, 265, 268, 272, 276, 277, 281, 294, 296, 298, 300, 302, 306, 308, 310, 330, 331, 451, 452, 453, 458, 461, 463, 467, 473], "upon": [1, 2, 9, 14, 186, 205, 207, 233, 308, 459, 460], "pregel": [1, 4, 8, 12, 17, 22, 34, 215, 226, 229, 451, 463, 473, 475], "alreadi": [2, 8, 20, 23, 24, 27, 29, 30, 36, 37, 41, 42, 86, 87, 152, 153, 196, 201, 207, 212, 219, 225, 227, 294, 444, 446, 479], "deploi": [2, 15, 33, 37, 115, 191, 193, 198, 200, 201, 202, 203, 211, 215, 218, 226, 228, 233, 296, 453, 455, 460], "machin": [2, 4, 6, 7, 11, 14, 20, 24, 27, 30, 32, 36, 37, 38, 44, 185, 186, 193, 199, 201, 202, 203, 211, 217, 218, 220, 221, 226, 227, 228, 229, 230, 231, 237, 294, 306, 453, 458], "take": [2, 4, 6, 9, 14, 15, 18, 24, 27, 29, 30, 36, 41, 42, 45, 183, 188, 193, 200, 204, 207, 212, 215, 216, 225, 227, 228, 231, 241, 258, 295, 298, 299, 300, 304, 306, 308, 311, 374, 395, 426, 444, 446, 450, 452, 458, 459, 460, 461], "advantag": [2, 200, 215, 225, 232, 233, 462], "3": [2, 6, 9, 10, 13, 14, 17, 19, 20, 22, 23, 27, 30, 31, 32, 34, 37, 41, 42, 45, 86, 115, 152, 181, 182, 191, 193, 196, 199, 200, 201, 202, 206, 208, 210, 211, 212, 216, 219, 223, 224, 227, 231, 234, 237, 238, 297, 298, 299, 300, 303, 308, 309, 311, 313, 314, 315, 317, 322, 326, 330, 331, 347, 349, 352, 355, 361, 365, 366, 367, 369, 370, 371, 373, 377, 380, 381, 385, 386, 390, 392, 403, 404, 406, 408, 411, 414, 419, 423, 424, 427, 430, 433, 435, 438, 439, 440, 441, 446, 448, 449, 458, 461, 470, 473, 476, 477], "gie": [2, 32, 33, 198, 205, 212, 215, 225, 226, 230, 233, 234, 235, 265, 453, 470, 471, 480], "gle": [2, 32, 198, 215, 218, 219, 220, 226, 231, 233, 235, 470, 471, 478], "address": [2, 9, 14, 17, 23, 31, 42, 193, 207, 208, 223, 226, 231, 459, 477], "differ": [2, 6, 9, 10, 12, 13, 15, 17, 18, 20, 23, 27, 30, 34, 35, 36, 37, 41, 183, 186, 196, 199, 200, 204, 207, 210, 212, 213, 215, 216, 219, 225, 226, 227, 228, 229, 230, 231, 233, 234, 237, 256, 294, 295, 296, 297, 298, 299, 300, 302, 303, 305, 365, 369, 370, 371, 393, 396, 403, 423, 438, 446, 451, 453, 455, 457, 458, 459, 460, 461, 462, 463, 466], "complex": [2, 4, 6, 12, 22, 34, 37, 184, 186, 188, 196, 200, 201, 207, 208, 209, 210, 215, 216, 225, 226, 228, 229, 230, 231, 232, 233, 237, 297, 311, 375, 379, 394, 395, 396, 458], "relat": [2, 4, 13, 23, 24, 27, 33, 38, 43, 45, 55, 115, 121, 181, 182, 183, 184, 186, 190, 193, 198, 200, 204, 206, 207, 211, 216, 219, 222, 226, 227, 228, 230, 231, 236, 296, 300, 306, 402, 438, 443, 457, 458, 459], "show": [2, 14, 19, 20, 27, 29, 30, 38, 188, 190, 193, 200, 201, 212, 215, 220, 221, 227, 229, 230, 231, 297, 298, 306, 449, 453, 455, 458], "kubernet": [2, 29, 193, 196, 198, 199, 201, 215, 220, 223, 225, 227, 232, 453, 459, 470, 472, 473, 475, 479, 480], "cluster": [2, 6, 7, 10, 14, 15, 17, 18, 19, 20, 22, 23, 29, 34, 193, 196, 198, 201, 203, 211, 212, 215, 218, 220, 225, 226, 227, 228, 229, 230, 231, 232, 237, 296, 306, 311, 368, 447, 453, 459, 460, 467, 469, 476], "howev": [2, 6, 9, 11, 13, 15, 20, 24, 30, 37, 42, 45, 46, 183, 186, 193, 196, 199, 200, 202, 204, 205, 207, 208, 212, 216, 225, 226, 231, 233, 295, 296, 297, 302, 311, 375, 446, 458, 459], "scenario": [2, 4, 6, 8, 12, 13, 41, 45, 186, 188, 200, 210, 211, 212, 216, 219, 225, 226, 230, 231, 233, 295, 296, 298], "quit": [2, 30, 204, 365], "common": [2, 6, 12, 15, 30, 46, 200, 204, 212, 216, 219, 225, 226, 228, 229, 230, 231, 233, 294, 295, 302, 303, 317, 438, 440, 446, 457, 458, 467], "intend": [2, 13, 36, 205, 438, 452], "analysi": [2, 7, 8, 11, 13, 200, 211, 212, 215, 225, 231, 232, 234, 235, 237, 399], "offlin": [2, 198, 215, 216, 228, 231, 232, 455], "everi": [2, 6, 23, 42, 45, 184, 210, 212, 219, 231, 236, 300, 311, 313, 314, 315, 330, 331, 349, 363, 426, 433, 446, 452, 458], "dai": [2, 20, 45, 212, 446, 449, 457], "export": [2, 4, 23, 29, 31, 33, 39, 185, 193, 201, 217, 457, 459, 472], "warehous": 2, "without": [2, 4, 6, 9, 14, 22, 27, 29, 30, 34, 37, 42, 188, 190, 199, 208, 210, 226, 228, 233, 241, 254, 295, 297, 298, 299, 300, 321, 358, 372, 379, 385, 386, 393, 394, 395, 396, 397, 446, 449, 453, 458, 459, 461, 477], "real": [2, 6, 9, 12, 13, 34, 182, 196, 199, 208, 210, 215, 226, 227, 229, 231, 438, 457, 459], "time": [2, 6, 9, 12, 13, 14, 17, 19, 20, 23, 27, 29, 30, 33, 34, 37, 45, 182, 183, 193, 200, 205, 208, 210, 212, 215, 219, 223, 224, 225, 227, 230, 231, 234, 237, 295, 296, 300, 311, 344, 345, 381, 382, 383, 384, 394, 395, 396, 398, 399, 408, 411, 446, 458, 459, 461, 473, 477], "sampl": [2, 29, 30, 31, 33, 43, 49, 191, 198, 199, 215, 216, 223, 226, 227, 233, 241, 295, 296, 297, 299, 302, 304, 307, 310, 385, 405, 438, 459, 478], "case": [2, 4, 6, 8, 10, 13, 14, 15, 18, 27, 37, 41, 46, 193, 196, 199, 200, 205, 208, 210, 212, 219, 225, 230, 234, 239, 295, 296, 300, 302, 304, 307, 311, 365, 373, 379, 403, 414, 430, 452, 453, 457, 458, 459, 463, 466], "unnecessari": [2, 6, 9, 207, 212, 458], "capabl": [2, 6, 11, 16, 20, 186, 205, 206, 207, 210, 213, 226, 228, 230, 233, 446], "independ": [2, 6, 30, 226, 233, 295, 309, 322, 325, 373, 400, 446], "document": [2, 10, 27, 29, 33, 35, 36, 38, 47, 188, 190, 191, 193, 201, 204, 205, 206, 210, 211, 213, 215, 217, 231, 237, 294, 295, 301, 453, 454, 459], "walk": [2, 4, 32, 43, 183, 199, 212, 226, 227, 230, 300, 347, 358], "process": [2, 3, 4, 6, 9, 11, 12, 13, 14, 15, 16, 19, 22, 23, 24, 27, 29, 30, 32, 34, 35, 37, 42, 43, 182, 183, 184, 186, 188, 191, 196, 198, 199, 201, 202, 206, 207, 211, 212, 214, 215, 216, 218, 219, 220, 221, 226, 228, 229, 230, 231, 232, 236, 247, 295, 296, 298, 300, 304, 306, 375, 377, 380, 408, 414, 446, 453, 455, 457, 458, 461, 463], "standalon": [2, 23, 27, 32, 193, 198, 201, 202, 212, 225, 226, 460, 466, 479], "self": [2, 199, 212, 225, 281, 294, 297, 300, 311, 321, 334, 373, 375, 377, 379, 385, 393, 394, 395, 396, 397, 446, 447, 449, 453, 459, 474, 478, 479], "manag": [2, 4, 10, 12, 14, 16, 27, 29, 30, 47, 115, 181, 182, 184, 187, 188, 190, 191, 193, 196, 199, 206, 212, 215, 219, 220, 221, 226, 228, 229, 230, 231, 232, 233, 234, 236, 453, 459, 460, 466, 469], "k8": [2, 4, 7, 17, 22, 30, 37, 38, 41, 46, 193, 196, 198, 199, 203, 211, 215, 218, 220, 225, 233, 235, 453, 459, 469, 470, 471, 473, 476, 479], "7": [2, 10, 20, 23, 27, 30, 31, 32, 115, 181, 193, 202, 210, 212, 234, 295, 301, 306, 313, 314, 326, 349, 411, 417, 419, 423, 424, 427, 429, 441, 446, 461, 472, 476, 477], "To": [2, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 27, 29, 30, 32, 34, 36, 37, 42, 43, 44, 46, 49, 115, 182, 183, 185, 186, 188, 193, 196, 199, 200, 212, 214, 215, 216, 217, 219, 221, 222, 225, 226, 227, 231, 233, 234, 237, 241, 294, 295, 296, 298, 300, 301, 302, 304, 306, 311, 324, 375, 377, 382, 384, 393, 396, 436, 440, 446, 448, 452, 453, 455, 458, 459, 462, 463, 466, 467], "get": [2, 4, 6, 12, 16, 18, 19, 20, 27, 29, 30, 31, 32, 33, 34, 38, 41, 47, 50, 51, 52, 53, 86, 87, 116, 117, 118, 119, 152, 153, 182, 186, 191, 193, 198, 199, 200, 201, 205, 210, 212, 216, 219, 225, 230, 232, 235, 237, 238, 239, 257, 294, 297, 298, 299, 300, 303, 308, 309, 310, 311, 344, 365, 436, 446, 452, 453, 455, 458, 459, 463, 466, 467, 469, 472, 473], "instal": [2, 4, 15, 16, 17, 19, 23, 33, 35, 41, 46, 47, 183, 191, 193, 199, 201, 203, 211, 227, 237, 241, 304, 446, 449, 453, 470, 471, 472, 473, 476], "client": [2, 17, 22, 23, 29, 33, 38, 41, 115, 116, 117, 118, 119, 152, 153, 162, 181, 182, 183, 192, 200, 211, 213, 215, 221, 224, 236, 237, 306, 453, 455, 457, 458, 459, 460, 469, 471, 476], "prepar": [2, 4, 33, 36, 43, 191, 199, 202, 204, 216, 217, 218, 219, 221, 222, 227, 231, 235, 458, 473], "continu": [2, 6, 15, 16, 20, 27, 199, 200, 211, 212, 215, 216, 226, 227, 231, 234, 294, 365, 403, 406, 458, 459, 460], "incas": [2, 199], "doesn": [2, 13, 29, 32, 37, 38, 41, 186, 199, 212, 241, 300, 375, 377, 379, 446, 452, 461], "t": [2, 6, 8, 13, 17, 23, 29, 30, 32, 33, 36, 37, 38, 41, 185, 186, 190, 192, 193, 199, 208, 210, 212, 223, 224, 225, 228, 234, 236, 237, 239, 241, 247, 294, 299, 300, 306, 310, 311, 324, 340, 375, 377, 379, 399, 403, 404, 438, 440, 443, 446, 452, 459, 461, 478], "could": [2, 4, 6, 9, 15, 22, 27, 28, 29, 31, 32, 36, 38, 41, 45, 182, 185, 199, 201, 202, 210, 215, 217, 225, 235, 237, 289, 296, 298, 299, 308, 374, 457, 458, 459, 460], "creat": [2, 9, 10, 12, 13, 16, 17, 19, 23, 27, 29, 30, 31, 34, 38, 44, 46, 47, 50, 52, 86, 87, 96, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 186, 190, 191, 193, 199, 201, 202, 204, 207, 210, 211, 212, 223, 225, 226, 227, 230, 231, 236, 237, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 271, 274, 275, 281, 287, 288, 289, 298, 300, 303, 305, 308, 309, 324, 346, 348, 349, 351, 352, 353, 355, 356, 358, 360, 361, 363, 364, 365, 367, 368, 370, 373, 375, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 392, 394, 395, 396, 398, 399, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 432, 433, 440, 441, 446, 448, 449, 450, 453, 459, 460, 461, 462, 467, 469, 472], "distinct": [2, 49, 205, 210, 226, 227, 230, 351, 413, 439, 458], "method": [2, 15, 16, 17, 18, 20, 22, 23, 29, 50, 51, 52, 53, 86, 87, 96, 115, 116, 117, 118, 119, 152, 153, 162, 181, 182, 207, 212, 219, 221, 225, 229, 231, 236, 237, 239, 260, 271, 286, 294, 298, 302, 303, 309, 311, 374, 382, 384, 393, 395, 446, 449, 451, 453, 458, 459, 463, 469], "entir": [2, 9, 34, 186, 188, 200, 212, 227, 231, 300, 311, 446], "discret": [2, 216, 231, 294, 365, 378, 380, 386, 390, 401], "util": [2, 4, 6, 9, 15, 32, 36, 41, 43, 45, 49, 186, 190, 205, 206, 207, 212, 215, 217, 222, 225, 226, 228, 229, 232, 236, 237, 239, 310, 411, 457, 458, 459, 462], "either": [2, 13, 30, 34, 183, 188, 193, 199, 207, 208, 211, 212, 219, 237, 296, 300, 308, 309, 349, 352, 365, 392, 403, 436, 446, 460], "aforement": [2, 49, 225, 229, 231, 295, 300, 459], "per": [2, 44, 186, 199, 207, 458, 459], "prefer": [2, 13, 27, 36, 42, 186, 187, 458], "session": [2, 7, 8, 16, 17, 22, 27, 28, 29, 33, 115, 181, 193, 196, 202, 204, 209, 211, 212, 215, 218, 220, 223, 225, 227, 235, 237, 238, 256, 287, 288, 289, 291, 293, 308, 309, 446, 450, 451, 457, 459, 461, 466, 467, 469, 470, 471, 473, 474, 477, 479], "class": [2, 4, 9, 15, 17, 18, 20, 22, 23, 50, 51, 52, 53, 86, 87, 96, 115, 116, 117, 118, 119, 152, 153, 162, 181, 205, 212, 219, 222, 225, 227, 231, 236, 237, 238, 239, 244, 294, 295, 308, 309, 310, 311, 355, 424, 446, 450, 453, 458, 459, 460, 469, 478], "option": [2, 4, 6, 13, 15, 27, 29, 31, 32, 37, 41, 42, 44, 45, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 71, 72, 73, 74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 98, 99, 100, 101, 102, 109, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 137, 138, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 161, 162, 163, 164, 165, 166, 167, 168, 175, 178, 179, 180, 188, 190, 199, 201, 203, 204, 205, 208, 210, 211, 212, 215, 217, 223, 225, 228, 230, 233, 237, 238, 241, 244, 265, 271, 272, 273, 283, 293, 295, 298, 300, 308, 309, 311, 313, 314, 315, 330, 331, 340, 346, 348, 349, 351, 353, 355, 356, 358, 360, 361, 364, 368, 369, 370, 373, 375, 377, 378, 380, 381, 382, 383, 384, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 432, 433, 438, 441, 444, 446, 448, 449, 452, 453, 459, 460], "control": [2, 6, 27, 38, 225, 226, 228, 236, 311, 446, 458, 459], "subset": [2, 6, 20, 186, 208, 210, 222, 227, 352, 363, 452, 453], "launch": [2, 8, 9, 17, 22, 29, 36, 41, 46, 182, 193, 196, 199, 209, 218, 220, 221, 227, 235, 287, 305, 450, 453, 459, 460, 466, 469, 473], "For": [2, 4, 6, 9, 10, 12, 15, 16, 17, 20, 22, 29, 30, 35, 37, 41, 42, 43, 45, 46, 47, 49, 115, 182, 183, 186, 188, 193, 196, 199, 200, 205, 207, 208, 210, 212, 215, 216, 219, 221, 225, 226, 227, 229, 230, 231, 237, 239, 245, 294, 295, 296, 297, 300, 302, 304, 306, 308, 311, 323, 344, 347, 349, 352, 375, 377, 379, 380, 385, 388, 389, 393, 394, 395, 396, 397, 408, 411, 440, 446, 450, 452, 453, 459, 461, 462, 467], "exampl": [2, 7, 10, 15, 16, 18, 19, 20, 27, 31, 37, 41, 43, 44, 45, 47, 49, 115, 181, 185, 188, 196, 198, 199, 202, 204, 205, 207, 208, 211, 212, 213, 215, 216, 218, 219, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 237, 238, 244, 245, 287, 289, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 308, 309, 311, 313, 314, 315, 317, 322, 324, 325, 330, 331, 334, 339, 340, 345, 347, 349, 351, 352, 355, 358, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 379, 381, 382, 384, 386, 389, 393, 394, 395, 396, 397, 403, 406, 411, 436, 438, 439, 440, 441, 444, 446, 448, 449, 450, 452, 453, 457, 458, 459, 460, 461, 466, 467, 469, 473, 478], "set_opt": [2, 7, 15, 17, 19, 29, 38, 193, 202, 204, 218, 221, 222, 223, 224, 227, 467, 472], "show_log": [2, 7, 15, 17, 19, 29, 38, 193, 202, 218, 221, 222, 223, 224, 227, 293, 467, 472], "true": [2, 6, 7, 9, 13, 15, 16, 17, 18, 19, 20, 29, 38, 42, 44, 46, 182, 193, 199, 202, 207, 210, 211, 212, 218, 219, 221, 222, 223, 224, 225, 227, 236, 237, 239, 241, 283, 287, 291, 294, 295, 296, 300, 303, 306, 308, 311, 318, 327, 328, 329, 330, 331, 340, 342, 343, 349, 351, 369, 373, 375, 379, 385, 389, 392, 404, 444, 446, 448, 449, 453, 459, 460, 467, 469, 472, 477, 478, 479], "sess": [2, 16, 17, 22, 27, 29, 30, 33, 196, 204, 221, 222, 223, 225, 237, 238, 283, 287, 308, 309, 453, 457, 461, 467, 469, 470, 471, 473, 474, 477, 479], "enabled_engin": [2, 293, 453], "g": [2, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 28, 29, 32, 33, 34, 36, 37, 41, 43, 45, 49, 182, 183, 186, 188, 190, 196, 201, 202, 204, 208, 210, 211, 212, 214, 215, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 245, 289, 294, 296, 297, 298, 299, 300, 301, 303, 304, 306, 308, 309, 311, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 345, 346, 348, 349, 351, 352, 355, 356, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 403, 406, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 438, 439, 443, 444, 446, 448, 449, 452, 453, 455, 457, 458, 459, 460, 462, 463, 466, 467, 469, 472, 473, 474, 476, 477, 478, 479], "custom": [2, 3, 4, 7, 8, 22, 29, 35, 36, 44, 45, 182, 183, 186, 191, 200, 215, 219, 225, 226, 229, 231, 232, 294, 295, 298, 300, 302, 303, 304, 393, 395, 396, 443, 463], "command": [2, 4, 7, 16, 23, 27, 29, 30, 31, 32, 35, 36, 41, 42, 43, 46, 47, 49, 115, 183, 188, 189, 193, 198, 201, 217, 218, 223, 236, 295, 459, 460, 467], "line": [2, 4, 6, 7, 17, 36, 37, 38, 41, 49, 115, 182, 190, 198, 200, 217, 218, 228, 233, 294, 295, 446, 448, 459, 460, 467, 478], "releas": [2, 27, 31, 32, 35, 43, 46, 183, 193, 208, 221, 234, 403, 406, 452, 453, 459, 472, 476], "replac": [2, 17, 19, 22, 23, 29, 30, 43, 181, 200, 201, 204, 210, 228, 234, 297, 298, 299, 308, 446], "my": [2, 18, 29, 446, 449, 453, 459], "illustr": [2, 4, 29, 43, 44, 45, 207, 212, 216, 222, 223, 224, 229, 231, 297, 423], "Then": [2, 9, 14, 15, 16, 17, 19, 22, 23, 27, 29, 30, 33, 46, 115, 181, 196, 199, 200, 203, 211, 212, 219, 221, 225, 226, 227, 294, 300, 440, 455, 461], "connect": [2, 6, 15, 17, 19, 20, 27, 37, 41, 45, 115, 181, 183, 186, 187, 193, 199, 200, 206, 210, 212, 213, 215, 219, 221, 225, 226, 227, 228, 229, 231, 237, 238, 239, 295, 296, 298, 300, 303, 309, 311, 315, 332, 347, 349, 351, 353, 357, 358, 360, 361, 363, 364, 365, 367, 368, 369, 370, 372, 374, 379, 380, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 402, 411, 421, 422, 424, 426, 428, 445, 446, 453, 460, 461, 469, 477], "servic": [2, 27, 28, 29, 38, 39, 44, 46, 47, 49, 53, 119, 187, 188, 189, 191, 203, 211, 215, 221, 226, 227, 229, 231, 236, 453, 460], "detail": [2, 4, 6, 7, 9, 12, 13, 14, 17, 20, 27, 29, 30, 33, 34, 38, 39, 42, 43, 44, 45, 46, 47, 89, 115, 155, 181, 183, 186, 189, 193, 195, 199, 205, 207, 210, 212, 215, 218, 219, 225, 229, 231, 233, 236, 237, 238, 287, 289, 293, 295, 296, 298, 299, 302, 303, 304, 306, 403, 446, 453, 457, 459, 462, 463], "addr": [2, 29, 239, 453], "ip": [2, 29, 199, 201, 211, 453, 459, 477], "port": [2, 23, 29, 38, 42, 46, 183, 186, 190, 193, 199, 201, 204, 211, 223, 225, 236, 453, 459, 477, 479], "mai": [2, 4, 6, 7, 8, 14, 15, 18, 20, 22, 24, 27, 29, 30, 31, 32, 36, 37, 38, 186, 193, 196, 199, 200, 202, 204, 208, 210, 212, 216, 218, 221, 225, 226, 227, 230, 231, 232, 233, 247, 295, 300, 302, 303, 304, 305, 308, 345, 368, 375, 377, 385, 446, 449, 452, 453, 458, 459, 461, 463, 466], "would": [2, 4, 20, 29, 31, 36, 37, 41, 45, 193, 201, 204, 212, 226, 236, 237, 300, 306, 449, 452, 453, 459], "previou": [2, 9, 15, 19, 27, 29, 31, 33, 41, 182, 212, 227, 237, 246, 294, 298, 300, 384, 459], "wcc_result": 2, "wcc": [2, 13, 234, 237, 469, 474], "print": [2, 7, 16, 20, 29, 30, 33, 46, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 193, 196, 199, 202, 203, 204, 211, 212, 218, 219, 221, 222, 223, 224, 225, 227, 237, 238, 297, 299, 300, 303, 306, 308, 309, 311, 324, 373, 441, 446, 449, 457, 459, 467, 474, 477, 479], "to_datafram": [2, 7, 15, 196, 227, 238, 308, 452, 457, 469], "id": [2, 4, 7, 9, 13, 15, 17, 18, 28, 30, 33, 38, 43, 44, 45, 49, 51, 81, 83, 89, 102, 117, 147, 149, 152, 155, 168, 182, 192, 193, 196, 199, 200, 201, 204, 205, 207, 213, 216, 219, 225, 227, 230, 231, 234, 236, 237, 238, 239, 265, 271, 273, 294, 295, 296, 297, 298, 299, 300, 303, 304, 306, 307, 308, 310, 403, 404, 443, 446, 449, 452, 453, 457, 459, 460, 467, 469, 470, 472, 473, 477, 478, 479], "r": [2, 6, 7, 15, 16, 17, 22, 31, 33, 35, 196, 199, 205, 227, 228, 231, 237, 238, 346, 356, 363, 369, 373, 385, 393, 402, 434, 439, 452, 453, 457, 459, 469, 473, 474], "tip": [2, 13, 431], "encount": [2, 32, 37, 186, 193, 229, 247], "fail": [2, 37, 89, 96, 162, 182, 193, 200, 207, 210, 231, 311, 446, 459], "project": [2, 4, 7, 13, 15, 17, 23, 33, 37, 115, 183, 186, 200, 203, 205, 227, 228, 230, 236, 237, 238, 270, 301, 308, 453, 457, 459, 469, 473, 474, 477], "simpl": [2, 7, 9, 15, 16, 17, 20, 27, 30, 32, 33, 42, 44, 115, 181, 183, 188, 193, 198, 200, 202, 208, 210, 212, 218, 225, 226, 227, 230, 237, 238, 270, 294, 296, 309, 311, 375, 377, 380, 381, 403, 404, 405, 406, 408, 420, 438, 446, 452, 459, 469, 472, 473, 477], "empti": [2, 19, 29, 41, 96, 162, 182, 190, 192, 210, 212, 225, 237, 239, 328, 352, 355, 385, 386, 424, 440, 446, 449, 459], "load": [2, 4, 7, 10, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 29, 33, 43, 50, 116, 182, 183, 184, 190, 191, 193, 196, 198, 199, 200, 201, 202, 203, 206, 211, 218, 227, 228, 229, 231, 234, 235, 236, 237, 245, 247, 249, 278, 294, 296, 305, 306, 308, 453, 458], "dataset": [2, 4, 7, 15, 16, 17, 18, 19, 20, 22, 23, 27, 33, 193, 196, 202, 206, 212, 218, 221, 222, 223, 224, 227, 231, 234, 237, 238, 294, 300, 306, 453, 457, 469, 471, 473, 477, 479], "load_modern_graph": [2, 7, 30, 33, 202, 227, 237, 309], "modern": [2, 6, 7, 33, 42, 43, 46, 49, 181, 182, 183, 188, 190, 191, 199, 201, 202, 207, 212, 215, 227, 228, 229, 455, 459, 460], "current": [2, 7, 11, 12, 13, 16, 17, 22, 27, 29, 32, 37, 38, 42, 43, 44, 45, 46, 53, 86, 119, 152, 182, 183, 186, 188, 190, 193, 196, 199, 200, 205, 208, 210, 212, 215, 219, 221, 223, 225, 227, 229, 230, 232, 237, 239, 288, 291, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 438, 441, 446, 453, 458, 459, 466, 469, 476], "e": [2, 4, 6, 9, 10, 12, 13, 14, 17, 18, 19, 20, 22, 23, 32, 34, 37, 45, 46, 50, 51, 52, 53, 86, 87, 96, 116, 117, 118, 119, 152, 153, 162, 182, 186, 192, 196, 201, 205, 207, 208, 212, 214, 215, 218, 219, 221, 225, 226, 227, 228, 229, 230, 231, 233, 234, 237, 238, 247, 296, 297, 298, 299, 300, 303, 306, 308, 309, 310, 311, 347, 365, 375, 377, 379, 380, 382, 383, 384, 387, 392, 393, 400, 401, 402, 403, 406, 408, 424, 429, 435, 437, 446, 448, 449, 452, 453, 455, 457, 458, 460, 462, 463, 469, 473, 476, 477, 479], "path": [2, 4, 6, 7, 9, 17, 19, 22, 23, 24, 27, 28, 30, 31, 33, 39, 42, 43, 44, 46, 182, 199, 200, 201, 204, 205, 207, 213, 215, 216, 219, 223, 225, 227, 229, 230, 233, 237, 245, 295, 296, 298, 300, 305, 306, 308, 311, 314, 347, 353, 357, 358, 360, 377, 440, 446, 448, 450, 452, 453, 457, 459, 461, 469, 470, 473, 474, 477], "store": [2, 10, 12, 13, 16, 17, 30, 34, 42, 43, 45, 46, 47, 115, 181, 182, 183, 186, 187, 190, 191, 193, 198, 199, 205, 206, 208, 210, 212, 215, 225, 226, 228, 229, 230, 232, 233, 238, 239, 252, 253, 268, 276, 277, 296, 302, 308, 309, 365, 370, 393, 394, 395, 396, 397, 446, 448, 453, 455, 457, 458, 460, 467, 469, 472], "pod": [2, 27, 28, 29, 30, 38, 41, 46, 182, 193, 196, 199, 221, 225, 453, 459, 467, 470, 472, 473, 479], "elimin": [2, 6, 14, 49, 296], "extran": 2, "resourc": [2, 27, 29, 33, 38, 185, 186, 193, 196, 211, 221, 226, 233, 237, 245, 365, 398, 453, 459, 462, 466, 472], "fewer": 2, "inconveni": 2, "requir": [2, 4, 6, 13, 15, 17, 20, 31, 32, 35, 37, 42, 45, 47, 50, 51, 52, 53, 86, 87, 96, 116, 117, 118, 119, 152, 153, 162, 183, 185, 188, 193, 196, 200, 202, 204, 207, 208, 210, 212, 216, 219, 221, 225, 226, 227, 231, 233, 237, 241, 255, 294, 295, 296, 298, 299, 303, 304, 305, 306, 307, 344, 392, 393, 397, 446, 453, 458, 459, 462, 476], "equival": [2, 20, 193, 205, 207, 208, 210, 212, 300, 365, 402, 446], "function": [2, 4, 6, 9, 12, 14, 16, 17, 19, 20, 24, 34, 43, 45, 184, 186, 188, 190, 193, 204, 205, 207, 208, 210, 211, 212, 216, 225, 226, 228, 231, 233, 236, 300, 304, 311, 344, 345, 352, 355, 375, 377, 382, 393, 394, 395, 396, 397, 405, 441, 444, 445, 446, 447, 448, 451, 457, 458, 463, 466, 469], "when": [2, 4, 6, 9, 10, 13, 20, 23, 24, 27, 29, 30, 31, 37, 44, 45, 46, 50, 51, 52, 53, 86, 87, 96, 116, 117, 118, 119, 152, 153, 162, 182, 186, 188, 193, 196, 199, 200, 204, 205, 210, 211, 212, 216, 219, 221, 226, 228, 229, 231, 233, 234, 237, 238, 239, 247, 281, 287, 295, 296, 297, 298, 299, 300, 303, 304, 305, 307, 308, 310, 311, 355, 365, 385, 393, 394, 395, 396, 402, 446, 448, 449, 453, 455, 457, 458, 459, 461, 466, 467], "close": [2, 6, 27, 29, 30, 33, 182, 211, 219, 221, 226, 237, 296, 306, 309, 448, 453, 459, 473], "free": [2, 9, 37, 193, 219, 233, 386, 393, 403, 406, 408, 439, 445, 453], "delet": [2, 9, 27, 29, 30, 33, 46, 50, 51, 52, 86, 87, 115, 116, 117, 118, 152, 153, 181, 182, 193, 266, 305, 453, 455, 459, 472], "handl": [3, 6, 8, 9, 11, 12, 20, 27, 34, 37, 45, 186, 190, 191, 199, 200, 208, 211, 212, 215, 226, 228, 229, 230, 231, 238, 268, 295, 307, 310, 446, 448, 458, 459], "variou": [3, 4, 8, 12, 14, 15, 20, 24, 30, 34, 38, 41, 42, 186, 190, 200, 208, 212, 215, 216, 226, 227, 228, 229, 231, 232, 258, 308, 411, 458, 463], "algorithm": [3, 4, 7, 8, 12, 13, 14, 20, 24, 30, 193, 196, 200, 214, 216, 219, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 241, 296, 299, 300, 302, 308, 356, 365, 368, 369, 377, 378, 379, 380, 381, 385, 386, 387, 388, 393, 398, 399, 402, 403, 405, 406, 429, 438, 443, 446, 447, 449, 451, 452, 462], "deriv": [3, 12, 34, 227, 230, 236, 238, 308, 311, 455], "grape": [3, 4, 15, 16, 22, 23, 34, 198, 214, 226, 232, 236, 245, 455, 458, 460, 461, 462, 463, 469, 475], "system": [3, 6, 8, 9, 12, 24, 30, 31, 33, 34, 36, 37, 49, 50, 51, 52, 53, 86, 87, 96, 115, 182, 183, 184, 185, 186, 193, 196, 199, 200, 202, 205, 206, 207, 208, 212, 213, 214, 215, 218, 226, 228, 229, 230, 231, 232, 234, 295, 296, 301, 304, 443, 445, 455, 457, 458, 459, 461, 463, 469, 477], "sigmod": [3, 12, 14, 24, 34, 226, 469, 475], "2017": [3, 12, 14, 34, 226, 403, 404, 469], "further": [3, 6, 10, 14, 20, 27, 30, 34, 186, 196, 201, 205, 208, 210, 212, 227, 228, 238, 296, 308, 309, 324, 455, 458], "enhanc": [3, 4, 9, 182, 186, 207, 210, 227], "introduc": [3, 6, 10, 19, 20, 24, 44, 115, 181, 198, 200, 205, 207, 208, 210, 212, 214, 216, 226, 228, 230, 233, 294, 297, 298, 300, 302, 311, 423, 445, 458, 463], "lot": [3, 13, 37, 196, 212, 214, 463], "new": [3, 4, 6, 9, 12, 13, 14, 17, 20, 23, 30, 33, 34, 37, 42, 50, 51, 52, 53, 86, 87, 96, 116, 118, 182, 186, 191, 200, 202, 207, 212, 217, 226, 227, 228, 236, 239, 246, 247, 288, 305, 308, 309, 311, 318, 324, 365, 377, 386, 388, 408, 437, 444, 446, 453, 455, 457, 458, 459, 461, 473], "featur": [3, 6, 9, 12, 23, 32, 34, 43, 115, 181, 191, 205, 207, 214, 216, 218, 221, 222, 226, 227, 230, 231, 232, 233, 236, 241, 294, 295, 302, 306, 308, 446, 453, 458, 463, 473, 478], "storag": [3, 9, 30, 46, 56, 59, 122, 125, 186, 193, 200, 201, 205, 207, 208, 212, 225, 228, 231, 233, 273, 296, 457, 459, 460], "languag": [3, 12, 16, 35, 183, 184, 187, 189, 191, 196, 200, 202, 207, 208, 210, 211, 212, 213, 215, 216, 219, 226, 227, 228, 229, 230, 233, 241, 309, 458, 459, 463], "pattern": [3, 6, 12, 23, 30, 42, 186, 200, 201, 204, 207, 208, 210, 215, 219, 226, 229, 233, 237, 299, 304, 459], "better": [3, 8, 12, 20, 24, 29, 34, 199, 200, 212, 214, 231, 233, 453, 459, 463], "integr": [3, 4, 9, 12, 13, 22, 23, 34, 44, 115, 181, 183, 200, 202, 204, 207, 213, 214, 226, 228, 230, 232, 233, 439, 458, 459, 461, 463], "big": [3, 6, 12, 37, 214, 228, 463], "overview": [3, 23, 34, 47, 183, 189, 191, 207, 212, 227, 455], "architectur": [3, 9, 185, 186, 226, 231, 237], "kei": [3, 4, 13, 20, 27, 43, 44, 45, 72, 73, 86, 87, 115, 138, 139, 152, 153, 181, 182, 191, 199, 202, 205, 206, 207, 210, 212, 225, 228, 230, 231, 232, 237, 238, 239, 270, 271, 272, 281, 297, 300, 306, 308, 311, 340, 389, 393, 394, 395, 396, 444, 446, 448, 449, 452, 453, 458, 459, 469, 479], "concept": [3, 228, 231, 294, 295], "centric": [3, 6, 9, 12, 14, 15, 17, 18, 22, 34, 214, 215, 226, 228, 229, 463], "ingress": [3, 12], "increment": [3, 14, 16, 18, 20, 34, 211, 216, 228, 236, 463], "compat": [3, 7, 12, 13, 15, 19, 20, 23, 32, 34, 183, 193, 196, 199, 202, 205, 213, 215, 216, 218, 219, 220, 221, 222, 227, 231, 232, 235, 237, 302, 309, 452, 453, 455, 457, 473], "tune": [3, 196, 225, 226], "guid": [4, 7, 9, 16, 27, 29, 32, 37, 41, 42, 43, 44, 115, 181, 182, 183, 185, 186, 188, 190, 191, 198, 199, 202, 204, 206, 210, 211, 213, 218, 221, 222, 227, 241, 473], "code": [4, 6, 8, 14, 15, 16, 18, 29, 31, 32, 34, 36, 47, 50, 51, 52, 53, 86, 87, 96, 115, 116, 117, 118, 119, 152, 153, 162, 181, 184, 186, 188, 198, 200, 201, 204, 205, 212, 217, 226, 227, 228, 233, 234, 236, 237, 239, 244, 294, 295, 296, 297, 300, 301, 306, 365, 407, 450, 458, 459, 461, 466], "organ": [4, 49, 190, 204, 210, 212, 215, 216, 231, 235, 294, 296, 298, 302, 303, 382, 384, 423], "identifi": [4, 9, 13, 24, 45, 205, 208, 210, 212, 226, 227, 229, 237, 286, 373, 440, 443, 446, 453, 459, 466, 479], "simplic": [4, 9], "suggest": [4, 13, 200, 204, 212, 225, 228, 365], "prebuilt": [4, 41, 201], "docker": [4, 27, 32, 33, 36, 38, 41, 43, 183, 185, 190, 191, 193, 201, 215, 459, 466, 470, 473, 475, 476], "imag": [4, 29, 36, 38, 46, 183, 190, 193, 201, 215, 217, 223, 234, 297, 453, 466], "necessari": [4, 6, 23, 27, 37, 41, 43, 185, 188, 201, 202, 207, 211, 225, 248, 256, 261, 295, 296, 298, 300, 308, 458, 459, 467], "depend": [4, 13, 17, 22, 27, 30, 35, 36, 37, 41, 115, 185, 193, 201, 203, 204, 211, 212, 217, 218, 228, 231, 237, 300, 368, 373, 459, 466, 469], "shm": [4, 32, 41, 201, 217, 223, 471], "size": [4, 6, 10, 13, 16, 17, 23, 24, 32, 41, 44, 192, 193, 199, 201, 211, 216, 217, 219, 223, 225, 231, 234, 239, 295, 297, 298, 300, 305, 307, 308, 351, 352, 363, 365, 366, 367, 368, 370, 371, 372, 373, 374, 377, 388, 397, 401, 403, 446, 457, 458, 459, 460, 471], "4096m": [4, 32, 41, 201, 217], "registri": [4, 27, 32, 41, 46, 201, 217, 223, 301, 453, 459, 471], "cn": [4, 23, 27, 29, 31, 32, 41, 46, 201, 217, 223, 225, 301, 459, 470, 471, 479], "hongkong": [4, 27, 32, 41, 46, 201, 217, 223, 459, 471], "aliyunc": [4, 23, 27, 29, 31, 32, 41, 46, 201, 217, 223, 225, 301, 459, 470, 471, 479], "com": [4, 7, 17, 19, 22, 23, 27, 29, 30, 31, 32, 35, 41, 46, 50, 51, 52, 53, 86, 87, 96, 115, 153, 181, 201, 202, 204, 217, 218, 223, 225, 228, 229, 234, 237, 241, 301, 304, 311, 398, 407, 411, 413, 415, 416, 417, 418, 419, 420, 421, 422, 426, 431, 453, 458, 459, 469, 470, 471, 472, 479], "latest": [4, 14, 17, 32, 37, 38, 39, 41, 46, 183, 185, 201, 204, 217, 218, 458, 459, 471, 476], "altern": [4, 43, 45, 205, 374, 393, 397, 446, 458, 459], "manual": [4, 9, 27, 30, 33, 115, 193, 226, 233, 308, 459], "all": [4, 6, 9, 10, 12, 13, 15, 16, 17, 20, 22, 23, 24, 27, 29, 30, 35, 37, 45, 46, 50, 51, 52, 53, 86, 87, 96, 115, 116, 117, 118, 119, 152, 153, 162, 181, 182, 183, 185, 186, 188, 190, 193, 199, 200, 202, 205, 207, 208, 210, 211, 212, 217, 219, 221, 223, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 315, 316, 318, 319, 323, 325, 340, 341, 345, 346, 349, 351, 352, 356, 365, 374, 383, 389, 403, 404, 406, 408, 432, 440, 441, 444, 446, 453, 457, 458, 459, 462, 467], "pleas": [4, 9, 12, 14, 16, 17, 23, 24, 27, 30, 32, 33, 34, 37, 41, 42, 43, 46, 115, 181, 183, 185, 186, 193, 201, 204, 208, 219, 221, 225, 227, 294, 295, 296, 298, 299, 300, 301, 304, 306, 457, 459, 463, 466, 473], "environ": [4, 11, 19, 20, 23, 24, 27, 29, 33, 37, 38, 39, 43, 183, 193, 196, 198, 202, 206, 215, 221, 227, 228, 235, 237, 241, 301, 305, 311, 453, 458, 459, 460, 467, 472], "after": [4, 6, 9, 14, 15, 17, 18, 20, 22, 24, 29, 32, 33, 34, 42, 96, 162, 182, 188, 196, 204, 208, 210, 216, 228, 229, 231, 237, 238, 239, 249, 294, 295, 296, 297, 304, 305, 306, 311, 408, 419, 438, 446, 450, 452, 453, 455, 458, 459, 460, 466, 467, 469], "clone": [4, 17, 22, 29, 30, 31, 32, 36, 37, 46, 115, 201, 204, 241, 301, 459, 471], "repositori": [4, 29, 36, 37, 46, 115, 199, 204, 241, 453, 459], "enter": [4, 116, 117, 118, 119, 152, 153, 162, 200, 211], "analytical_engin": [4, 15, 17, 31, 36, 241, 469], "directori": [4, 22, 27, 30, 31, 32, 33, 36, 38, 42, 43, 46, 182, 188, 193, 204, 211, 215, 236, 240, 242, 294, 305, 308, 453, 457, 466, 467, 470, 472, 473], "git": [4, 17, 22, 29, 30, 31, 32, 35, 37, 46, 115, 201, 204, 241, 304, 458, 471], "http": [4, 7, 17, 19, 22, 23, 27, 29, 30, 31, 32, 35, 42, 46, 47, 115, 181, 193, 201, 202, 203, 204, 206, 211, 218, 221, 222, 227, 228, 229, 237, 241, 301, 304, 311, 365, 369, 370, 371, 385, 388, 395, 396, 398, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 430, 431, 432, 433, 438, 453, 458, 459, 469, 470, 471, 472, 473, 476, 477, 479], "github": [4, 22, 29, 30, 31, 32, 35, 46, 115, 201, 204, 228, 229, 237, 241, 301, 304, 396, 453, 458, 469, 471, 479], "alibaba": [4, 17, 22, 23, 29, 31, 32, 46, 50, 51, 52, 53, 86, 87, 96, 115, 201, 215, 226, 228, 231, 232, 241, 301, 304, 469, 471, 479], "cd": [4, 17, 22, 29, 31, 32, 35, 46, 115, 185, 201, 203, 211, 241, 301, 304, 306, 459, 466, 467, 469, 471, 477], "sinc": [4, 6, 23, 24, 29, 30, 37, 42, 45, 183, 186, 200, 204, 210, 212, 217, 221, 225, 226, 234, 247, 296, 300, 308, 344, 345, 375, 377, 424, 441, 448, 452, 457, 458, 459, 466], "inherit": [4, 6, 9, 16, 200, 228, 236, 294, 304], "libgrap": [4, 16, 31, 34, 228, 241], "lite": [4, 16, 31, 34, 228, 241], "note": [4, 13, 14, 20, 27, 29, 37, 38, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 186, 188, 200, 204, 205, 207, 212, 216, 221, 222, 225, 227, 228, 229, 237, 238, 239, 247, 286, 288, 296, 300, 308, 311, 320, 321, 324, 328, 341, 342, 343, 344, 345, 346, 352, 353, 358, 361, 363, 365, 366, 367, 368, 370, 372, 374, 375, 377, 378, 379, 380, 381, 385, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 406, 407, 408, 423, 438, 439, 440, 441, 443, 446, 448, 449, 452, 453, 457, 459, 466, 473, 479], "core": [4, 6, 12, 34, 37, 193, 200, 202, 226, 227, 228, 237, 241, 306, 311, 453, 473], "structur": [4, 6, 9, 12, 15, 16, 17, 20, 24, 42, 44, 45, 47, 186, 196, 200, 207, 211, 212, 222, 227, 228, 229, 230, 231, 237, 295, 296, 297, 308, 356, 375, 423, 438, 440, 446, 447, 457, 458, 459, 462], "partition": [4, 192, 304], "worker": [4, 9, 13, 14, 23, 28, 34, 42, 201, 219, 221, 223, 296, 299, 306, 453, 457], "between": [4, 6, 9, 10, 12, 13, 18, 19, 45, 182, 193, 198, 200, 207, 212, 213, 216, 229, 231, 236, 237, 295, 296, 298, 300, 306, 311, 368, 369, 370, 373, 379, 385, 386, 388, 392, 393, 394, 395, 397, 400, 402, 403, 404, 406, 411, 441, 443, 446, 458, 459, 466], "heavili": 4, "reus": [4, 30, 188, 207, 216, 219, 228, 237, 306, 308, 453, 455], "want": [4, 6, 7, 18, 20, 22, 27, 29, 30, 32, 33, 46, 188, 208, 212, 218, 225, 232, 241, 247, 293, 304, 308, 355, 389, 446, 452, 453, 455, 457, 459, 466], "fulli": [4, 186, 216, 219, 230, 237, 247, 388, 458, 469], "recommend": [4, 27, 30, 36, 37, 193, 199, 202, 204, 212, 216, 225, 226, 227, 231, 300], "locat": [4, 23, 27, 36, 38, 43, 44, 45, 182, 183, 185, 199, 201, 205, 212, 217, 225, 230, 240, 242, 296, 297, 308, 459, 460, 466], "like": [4, 14, 15, 18, 19, 20, 23, 24, 27, 32, 36, 37, 41, 42, 43, 45, 46, 182, 193, 196, 199, 200, 202, 204, 207, 212, 213, 215, 217, 225, 226, 227, 231, 232, 233, 235, 236, 237, 295, 300, 304, 306, 308, 365, 375, 377, 385, 446, 452, 453, 455, 457, 458, 459, 460, 479], "therebi": [4, 186, 208], "fledg": [4, 12, 226], "coordin": [4, 15, 27, 29, 35, 37, 38, 41, 202, 221, 236, 308, 358, 453, 459, 466, 467, 470, 471, 473], "while": [4, 6, 12, 19, 20, 29, 34, 44, 45, 183, 186, 188, 196, 199, 203, 205, 207, 208, 210, 211, 212, 216, 226, 228, 229, 230, 232, 233, 295, 300, 306, 342, 343, 403, 406, 408, 440, 446, 455, 458, 459, 467], "": [4, 6, 9, 13, 14, 15, 17, 18, 19, 20, 23, 24, 27, 29, 30, 32, 33, 35, 37, 38, 41, 42, 43, 44, 45, 46, 49, 86, 87, 115, 116, 117, 118, 119, 152, 153, 162, 181, 182, 183, 184, 186, 188, 190, 193, 199, 201, 203, 204, 205, 206, 207, 210, 211, 212, 213, 215, 216, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 234, 237, 247, 263, 264, 281, 294, 296, 298, 300, 303, 305, 307, 308, 311, 347, 358, 365, 368, 370, 373, 377, 380, 382, 383, 384, 400, 408, 409, 410, 433, 436, 438, 446, 452, 453, 455, 457, 458, 459, 460, 477, 478], "onli": [4, 6, 9, 12, 13, 14, 15, 17, 18, 20, 22, 23, 27, 29, 30, 34, 36, 42, 43, 44, 45, 46, 186, 196, 199, 200, 205, 207, 208, 210, 212, 215, 216, 218, 219, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 241, 245, 294, 295, 296, 298, 299, 300, 301, 308, 309, 311, 330, 331, 340, 366, 367, 392, 393, 397, 405, 418, 439, 440, 446, 452, 453, 457, 458, 459, 460, 463], "ship": [4, 466], "6": [4, 10, 17, 18, 22, 31, 181, 182, 196, 202, 210, 211, 212, 227, 234, 237, 295, 300, 306, 311, 330, 349, 378, 379, 380, 397, 411, 413, 419, 420, 423, 426, 430, 431, 439, 441, 446, 459, 461, 469, 472, 473, 477], "graphalyt": [4, 233], "benchmark": [4, 34, 186, 208, 212, 215, 229, 231, 233, 365], "flatten": [4, 13, 223], "thu": [4, 6, 12, 16, 20, 27, 34, 36, 193, 196, 212, 221, 231, 237, 299, 341, 349, 446, 458], "execut": [4, 6, 9, 12, 14, 15, 17, 23, 24, 27, 29, 41, 42, 43, 45, 115, 181, 183, 184, 186, 188, 196, 199, 200, 201, 202, 206, 207, 210, 212, 215, 227, 228, 230, 231, 236, 237, 238, 265, 300, 304, 308, 309, 311, 406, 450, 453, 455, 459, 461, 466, 467, 469, 473, 477], "written": [4, 12, 20, 45, 212, 226, 228, 230, 424, 455, 458, 461, 469], "giraph": [4, 7, 8, 12, 17, 23, 24, 214, 233, 463], "graphx": [4, 7, 8, 12, 17, 24, 214, 233, 463], "app": [4, 15, 16, 17, 18, 33, 238, 239, 241, 246, 249, 272, 278, 281, 295, 308, 451, 452, 458, 469], "librari": [4, 6, 12, 15, 16, 31, 32, 33, 83, 102, 115, 149, 168, 183, 186, 200, 201, 226, 236, 237, 241, 459], "serv": [4, 27, 182, 193, 204, 207, 215, 227, 228, 231, 296, 459, 466], "layer": [4, 6, 199, 200, 216, 219, 228, 231, 233, 294, 295, 298, 302, 306, 478], "cuda": [4, 234], "suit": [4, 36, 196, 201, 216, 231, 466], "gpu": [4, 228, 301], "acceler": [4, 27, 458], "fragment": [4, 10, 12, 13, 14, 16, 17, 18, 192, 200, 229, 231, 239, 271, 308, 309, 455, 460, 463, 469], "extend": [4, 9, 17, 23, 186, 207, 208, 210, 211, 212, 233, 238, 295, 303, 304, 392, 458, 469], "loader": [4, 22, 201, 224, 236, 247, 258, 451, 460, 474, 475], "mutabl": [4, 228], "io": [4, 27, 30, 33, 41, 228, 229, 237, 305, 308, 396, 453, 459, 462, 476], "io_adaptor": 4, "parallel": [4, 6, 12, 14, 15, 16, 24, 34, 196, 215, 223, 226, 228, 230, 236, 239, 296, 375, 377, 414, 446, 449, 459, 469], "sub": [4, 12, 14, 18, 212, 215, 225, 238, 298, 300, 458, 463], "helper": [4, 466], "thread": [4, 6, 31, 42, 199, 201, 216, 234, 307], "messag": [4, 6, 10, 14, 15, 16, 17, 18, 24, 34, 36, 37, 38, 182, 183, 190, 193, 200, 212, 219, 231, 236, 239, 307, 458, 469], "buffer": [4, 305], "sync": [4, 239, 305, 458], "serial": [4, 210, 211, 236, 308, 453, 458, 477], "vertex_map": [4, 13, 43, 44, 163, 179, 182, 287, 308, 453], "some": [4, 6, 10, 12, 13, 17, 20, 23, 29, 31, 34, 36, 37, 43, 182, 183, 199, 200, 202, 205, 208, 210, 211, 216, 225, 226, 229, 231, 237, 294, 295, 296, 302, 304, 306, 307, 308, 309, 356, 365, 375, 377, 380, 399, 440, 445, 446, 457, 458, 459, 460, 466], "map": [4, 6, 13, 43, 72, 73, 89, 99, 138, 139, 182, 183, 190, 205, 208, 210, 212, 229, 236, 295, 304, 308, 438, 453, 459, 460, 474, 477], "intern": [4, 13, 43, 50, 52, 53, 86, 87, 96, 116, 118, 119, 152, 153, 162, 182, 183, 208, 229, 308, 346, 469, 471], "frame": [4, 231], "wrap": [4, 225, 228, 236, 241], "becaus": [4, 37, 200, 204, 208, 212, 231, 294, 297, 311, 441, 458, 459], "reli": [4, 9, 19, 185, 204, 206, 301, 458], "templat": [4, 9, 15, 28, 46, 192, 223, 236, 458], "inadequ": 4, "usual": [4, 9, 13, 19, 27, 38, 39, 193, 196, 200, 204, 210, 212, 216, 219, 220, 221, 231, 300, 304, 307, 374, 397, 440, 446, 458, 460, 461], "multipl": [4, 6, 12, 14, 17, 29, 30, 41, 44, 45, 186, 188, 199, 200, 205, 207, 210, 215, 216, 226, 227, 228, 229, 230, 231, 232, 233, 237, 238, 239, 295, 296, 300, 311, 408, 446, 452, 457, 458, 461, 467], "label": [4, 6, 7, 13, 15, 20, 33, 49, 75, 86, 87, 112, 114, 141, 152, 153, 178, 180, 192, 199, 204, 205, 207, 208, 218, 222, 223, 224, 226, 227, 229, 231, 236, 237, 238, 239, 247, 294, 297, 300, 306, 308, 311, 346, 350, 357, 361, 362, 364, 374, 375, 377, 378, 379, 380, 381, 423, 424, 446, 448, 449, 452, 453, 457, 459, 460, 473, 474, 477, 478], "cannot": [4, 27, 30, 182, 193, 207, 210, 212, 216, 231, 233, 236, 237, 241, 296, 308, 365, 404, 405, 452, 453, 459, 461, 472], "determin": [4, 37, 42, 200, 210, 212, 216, 219, 225, 229, 230, 236, 237, 296, 300, 391, 394, 395, 396, 453], "reason": [4, 50, 51, 52, 53, 86, 87, 96, 193, 208, 210, 216, 295, 296, 426], "jit": 4, "technologi": [4, 198, 200, 232], "compil": [4, 15, 31, 32, 34, 42, 47, 115, 183, 186, 190, 191, 193, 199, 200, 201, 205, 211, 226, 237, 249, 458, 459, 461, 467], "associ": [4, 6, 9, 29, 42, 43, 45, 188, 205, 210, 231, 380, 392, 438, 440, 446, 453, 458, 459], "runtim": [4, 6, 17, 23, 31, 47, 49, 182, 183, 200, 226, 228, 229, 230, 236, 237, 241, 458, 471, 472], "wrapper": [4, 203, 211, 213, 215, 230, 236, 249, 255, 308, 309, 458], "facilit": [4, 20, 201, 210, 215, 216, 219, 231, 295, 458, 459], "task": [4, 6, 7, 14, 34, 37, 41, 200, 202, 212, 215, 216, 218, 220, 221, 222, 223, 224, 226, 228, 229, 231, 295, 306, 458], "api": [4, 8, 15, 16, 18, 22, 24, 30, 34, 47, 50, 51, 52, 53, 86, 87, 96, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 191, 196, 198, 206, 215, 226, 232, 235, 241, 247, 294, 296, 298, 299, 300, 304, 310, 446, 453, 457, 458, 459, 460, 469, 480], "jar": [4, 8, 22, 23, 35, 39, 115, 237, 459, 469], "read": [4, 8, 20, 24, 37, 44, 186, 196, 203, 205, 209, 220, 225, 226, 227, 228, 294, 295, 300, 305, 306, 308, 344, 345, 444, 446, 447, 451, 453, 455, 459, 477], "about": [4, 7, 12, 14, 17, 30, 34, 37, 38, 46, 186, 199, 201, 202, 212, 217, 218, 226, 231, 232, 236, 237, 300, 304, 305, 452, 453, 457, 462, 469], "cmake": [4, 31, 32, 36, 193, 301], "script": [4, 32, 37, 233, 234, 265, 294, 295, 306, 309, 470], "configur": [4, 15, 16, 17, 23, 27, 31, 35, 37, 38, 39, 43, 45, 50, 51, 52, 53, 86, 87, 96, 115, 116, 117, 118, 119, 152, 153, 162, 182, 183, 185, 186, 188, 190, 191, 193, 201, 210, 211, 212, 221, 225, 226, 236, 237, 248, 249, 255, 256, 261, 286, 305, 306, 308, 365, 375, 377, 453, 455, 460, 466], "figur": [4, 6, 9, 12, 24, 27, 30, 34, 200, 204, 212, 216, 219, 227, 229, 230, 231, 296, 298, 429, 455], "abov": [4, 6, 7, 9, 13, 14, 15, 16, 19, 22, 27, 30, 32, 33, 43, 188, 196, 199, 202, 208, 210, 212, 214, 218, 225, 229, 230, 294, 295, 296, 300, 304, 349, 365, 385, 408, 442, 452, 459, 461, 463, 467], "well": [4, 6, 8, 9, 12, 13, 18, 20, 27, 29, 34, 45, 185, 200, 204, 207, 208, 215, 216, 225, 227, 228, 229, 230, 231, 235, 300, 308, 316, 349, 397, 446, 455, 459, 462, 463, 467], "thei": [4, 6, 20, 24, 27, 30, 31, 196, 200, 204, 207, 212, 215, 221, 226, 229, 231, 233, 294, 295, 303, 308, 352, 360, 365, 393, 395, 396, 439, 440, 446, 452, 453, 455, 458, 459], "work": [4, 8, 11, 14, 18, 20, 32, 34, 36, 37, 41, 45, 182, 196, 199, 200, 202, 207, 210, 215, 219, 225, 226, 227, 228, 229, 230, 231, 236, 238, 298, 300, 308, 445, 446, 452, 461], "partit": [4, 6, 9, 10, 12, 13, 14, 15, 18, 24, 199, 200, 208, 219, 226, 229, 231, 237, 299, 304, 363, 368, 369, 370, 373, 404, 463], "object": [4, 15, 38, 70, 76, 86, 87, 89, 93, 99, 108, 114, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 201, 202, 203, 205, 210, 211, 212, 216, 219, 225, 226, 227, 229, 231, 234, 236, 248, 261, 273, 287, 295, 297, 298, 299, 300, 303, 306, 309, 310, 324, 344, 345, 403, 443, 446, 448, 449, 451, 452, 459, 469, 479], "messagemessag": 4, "strategi": [4, 9, 10, 12, 16, 24, 45, 208, 210, 211, 212, 219, 231, 234, 239, 298, 299, 300, 303, 304, 449, 462, 477], "respons": [4, 9, 12, 16, 27, 34, 36, 37, 47, 193, 200, 204, 226, 236, 304, 307, 453, 455], "state": [4, 6, 9, 10, 12, 24, 27, 34, 200, 215, 229, 230, 232, 234, 305, 308, 365, 368, 369, 370, 371, 373, 375, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 393, 394, 395, 396, 397, 400, 401, 402, 406, 438, 441, 443], "synchron": [4, 6, 10, 12, 14, 15, 226, 458], "explicitli": [4, 13, 236, 296, 365, 453, 459], "implicitli": [4, 247], "main": [4, 6, 30, 34, 37, 43, 50, 51, 52, 53, 86, 87, 96, 115, 186, 200, 207, 208, 211, 212, 233, 294, 303, 306, 311, 453, 459, 478, 479], "logic": [4, 6, 9, 14, 16, 17, 200, 210, 212, 215, 228, 230, 234, 297, 457, 458, 459, 467, 469], "access": [4, 6, 12, 14, 27, 29, 30, 31, 38, 46, 49, 184, 186, 193, 199, 201, 204, 210, 211, 212, 216, 219, 225, 226, 228, 229, 230, 231, 295, 296, 297, 298, 299, 300, 305, 306, 308, 446, 449, 453, 455, 457, 458, 459, 460, 467, 479], "send": [4, 6, 10, 18, 24, 182, 201, 229, 239, 458, 469], "receiv": [4, 6, 9, 14, 16, 17, 24, 37, 182, 225, 226, 229, 231, 239, 300, 304, 455, 458, 469], "messagemanag": [4, 17, 469], "call": [4, 6, 12, 13, 16, 17, 19, 24, 49, 50, 51, 52, 53, 86, 87, 96, 116, 117, 118, 119, 152, 153, 162, 186, 188, 193, 208, 210, 212, 219, 236, 239, 294, 296, 300, 303, 304, 309, 341, 355, 356, 386, 397, 426, 438, 446, 449, 453, 458, 459], "encourag": [4, 6, 15, 24, 37], "fork": 4, "repo": [4, 29, 37, 201, 228, 459, 470, 471], "much": [4, 6, 13, 19, 22, 183, 193, 200, 210, 212, 296, 300, 458], "easier": [4, 32, 36, 37, 210, 228, 229, 230, 300, 453], "begin": [4, 15, 16, 30, 43, 192, 196, 204, 205, 209, 212, 227, 238, 239, 385, 452, 458], "small": [4, 9, 11, 13, 20, 186, 196, 212, 229, 230, 233, 311, 366, 367, 393, 436, 447, 453, 459], "chang": [4, 9, 11, 12, 14, 20, 23, 33, 34, 36, 42, 183, 212, 226, 230, 231, 233, 234, 237, 254, 286, 295, 308, 311, 324, 446, 453, 459], "revis": [4, 14, 17, 234], "ad": [4, 6, 9, 13, 15, 17, 19, 29, 37, 205, 215, 216, 231, 233, 234, 245, 246, 296, 308, 313, 314, 324, 382, 383, 384, 386, 440, 446, 455, 477, 479], "gradual": 4, "avoid": [4, 13, 208, 211, 458, 459], "larg": [4, 6, 7, 9, 11, 12, 13, 14, 18, 20, 23, 27, 34, 37, 45, 186, 193, 196, 199, 200, 202, 206, 211, 212, 213, 215, 216, 219, 220, 221, 226, 227, 228, 232, 233, 237, 281, 295, 296, 298, 300, 302, 306, 307, 320, 344, 345, 365, 400, 458, 469], "singl": [4, 6, 7, 11, 14, 15, 17, 20, 24, 27, 36, 37, 41, 45, 182, 185, 188, 193, 199, 205, 208, 210, 212, 217, 218, 220, 221, 226, 227, 229, 230, 237, 238, 294, 308, 319, 326, 348, 352, 357, 367, 372, 389, 395, 440, 442, 446, 453, 457, 461], "commit": [4, 234, 455], "python3": [4, 7, 23, 27, 28, 30, 31, 32, 35, 36, 41, 193, 201, 202, 217, 218, 223, 227, 469, 470, 471, 472], "gsctl": [4, 32, 36, 41, 198, 201, 217, 470, 471], "py": [4, 15, 32, 36, 41, 116, 117, 118, 119, 152, 153, 162, 181, 201, 217, 223, 294, 301, 306, 453, 459, 466, 469, 470, 471, 478], "cmakelist": 4, "txt": [4, 31, 35, 469], "artifact": [4, 17, 23, 29, 36, 46, 201, 217, 466], "grape_engin": [4, 38, 271, 467], "togeth": [4, 9, 10, 20, 41, 200, 212, 221, 226, 234, 300, 304, 347], "share": [4, 6, 30, 31, 37, 42, 45, 46, 212, 217, 226, 228, 229, 458, 460, 471], "bunch": [4, 41, 233, 236], "binari": [4, 15, 27, 31, 231, 466], "choos": [4, 6, 12, 22, 34, 41, 45, 199, 200, 210, 212, 215, 216, 226, 231, 294, 295, 385, 386, 424], "prefix": [4, 31, 36, 37, 184, 193, 201, 210, 217, 223, 308, 440, 458, 477], "usr": [4, 459], "look": [4, 15, 18, 20, 27, 42, 43, 115, 182, 199, 212, 225, 241, 307, 452, 455, 459, 460], "file": [4, 15, 17, 22, 23, 28, 29, 35, 37, 38, 39, 42, 43, 45, 46, 49, 182, 183, 185, 186, 188, 190, 191, 193, 198, 199, 201, 204, 225, 236, 237, 245, 268, 294, 295, 301, 306, 308, 344, 345, 396, 446, 448, 453, 455, 459, 460, 466, 467, 469, 479], "investig": [4, 6], "ensur": [4, 6, 9, 32, 35, 36, 37, 42, 43, 44, 46, 182, 183, 185, 186, 188, 200, 205, 208, 227, 233, 453], "correct": [4, 6, 14, 37, 38, 200, 204, 300, 308, 311, 458], "unit": [4, 200, 212, 230, 304, 394, 395, 396, 459], "easili": [4, 12, 20, 22, 23, 24, 27, 29, 30, 34, 188, 193, 199, 202, 212, 215, 226, 227, 228, 230, 231, 233, 300, 302, 458], "graphscope_hom": [4, 23, 471], "pwd": [4, 30, 185, 306], "download": [4, 7, 17, 19, 22, 23, 27, 29, 30, 32, 35, 36, 39, 46, 185, 190, 202, 203, 206, 211, 217, 218, 225, 234, 301, 306, 471], "tmp": [4, 18, 19, 28, 38, 46, 199, 201, 268, 273, 306, 308, 453, 457, 459, 467, 469, 472], "gstest": [4, 19, 22, 23, 30, 469, 471], "against": [4, 14, 37, 201, 237, 428], "compar": [4, 19, 200, 205, 207, 208, 210, 212, 229, 234, 236, 237, 297, 365, 452], "ground": [4, 207, 231], "truth": [4, 231], "distribut": [6, 10, 11, 12, 14, 15, 18, 20, 22, 23, 24, 27, 32, 34, 186, 193, 198, 199, 200, 202, 206, 208, 210, 213, 215, 216, 219, 220, 221, 223, 224, 226, 228, 229, 231, 232, 233, 237, 241, 294, 297, 299, 303, 305, 306, 310, 365, 368, 375, 377, 386, 393, 394, 395, 396, 397, 405, 459, 460], "broad": [6, 228], "spectrum": [6, 228, 311, 438], "central": [6, 15, 196, 215, 216, 227, 228, 231, 232, 237, 300, 311, 423, 458], "match": [6, 15, 42, 49, 115, 181, 182, 186, 200, 201, 202, 203, 204, 205, 207, 226, 227, 228, 237, 345, 365, 373, 375, 377, 404, 440, 477], "mine": [6, 15, 226, 228, 229], "philosophi": [6, 24, 228], "step": [6, 9, 14, 15, 27, 29, 30, 31, 32, 33, 36, 37, 183, 184, 186, 191, 199, 200, 201, 202, 203, 208, 211, 213, 215, 216, 223, 224, 225, 226, 227, 228, 230, 239, 294, 295, 296, 298, 300, 303, 306, 365, 373, 385, 438, 459, 467, 479], "stronger": [6, 228], "flexibl": [6, 12, 13, 23, 42, 45, 206, 207, 212, 215, 226, 227, 228, 453, 457], "flow": [6, 184, 228, 229, 294, 436], "oper": [6, 9, 12, 15, 30, 31, 36, 42, 50, 51, 52, 53, 116, 117, 118, 119, 185, 186, 188, 190, 193, 196, 198, 199, 200, 202, 206, 207, 208, 210, 215, 216, 219, 225, 226, 228, 229, 230, 231, 232, 237, 239, 247, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 266, 267, 268, 270, 271, 274, 275, 276, 277, 295, 296, 297, 298, 299, 300, 302, 303, 305, 307, 308, 328, 407, 408, 446, 449, 451, 453, 455, 458, 459, 466], "arbitrari": [6, 210, 212, 228, 298, 373, 377, 393, 394, 395, 396, 446, 449, 459, 477], "beyond": [6, 24, 207, 228, 232, 406], "make": [6, 9, 13, 14, 15, 16, 23, 27, 29, 30, 31, 32, 35, 36, 37, 41, 43, 49, 96, 162, 183, 186, 188, 198, 199, 200, 201, 203, 204, 205, 207, 210, 211, 212, 215, 217, 225, 228, 229, 230, 231, 234, 300, 301, 304, 306, 308, 324, 376, 440, 446, 453, 457, 458, 459, 466, 470, 471], "divers": [6, 10, 12, 34, 45, 198, 200, 228, 229, 295, 455], "easi": [6, 7, 12, 186, 188, 196, 199, 200, 202, 203, 211, 212, 213, 215, 218, 219, 225, 226, 227, 228, 232, 295, 300, 304, 466], "write": [6, 8, 9, 12, 15, 17, 22, 24, 34, 37, 186, 193, 196, 205, 208, 210, 212, 215, 225, 226, 227, 228, 229, 230, 235, 239, 241, 294, 300, 304, 308, 309, 448, 449, 455, 458, 463, 469, 473], "few": [6, 29, 186, 193, 199, 228, 458], "satisfactori": [6, 228, 231], "major": [6, 12, 13, 14, 205, 229, 236], "recent": [6, 298, 459], "framework": [6, 9, 15, 16, 17, 18, 22, 23, 24, 193, 200, 207, 213, 216, 219, 225, 226, 228, 229, 230, 231, 232, 233, 237, 238, 287, 298, 300, 302, 304, 308, 309, 450, 453, 455, 457, 469, 474, 479], "focu": [6, 41, 226, 230, 233, 304], "hand": [6, 30, 33, 200, 208, 210, 426], "point": [6, 13, 14, 22, 37, 182, 200, 210, 219, 229, 294, 349, 374, 403, 406, 446, 457, 459, 460, 461, 466], "breadth": [6, 237, 311], "first": [6, 13, 14, 15, 16, 17, 19, 20, 24, 29, 35, 37, 43, 44, 46, 115, 181, 183, 193, 196, 200, 201, 202, 203, 205, 210, 211, 212, 216, 220, 221, 225, 227, 228, 230, 231, 237, 238, 294, 295, 300, 302, 304, 308, 311, 315, 345, 361, 364, 373, 386, 389, 400, 401, 402, 403, 404, 407, 440, 445, 446, 449, 452, 453, 455, 458, 459, 460, 461], "search": [6, 37, 198, 204, 216, 226, 229, 231, 233, 237, 311, 475], "pagerank": [6, 8, 9, 13, 17, 22, 33, 34, 37, 196, 226, 229, 232, 234, 237, 238, 311, 449, 452, 457, 469], "shortest": [6, 7, 19, 24, 200, 227, 229, 237, 311, 461], "leav": [6, 212, 308, 346, 356], "varieti": [6, 12, 34, 196, 226, 233], "suffer": [6, 196], "effici": [6, 9, 12, 13, 16, 18, 23, 34, 45, 49, 182, 186, 188, 193, 196, 198, 204, 207, 208, 211, 212, 215, 216, 219, 225, 226, 227, 228, 229, 230, 231, 232, 233, 241, 298, 300, 302, 379, 400, 457, 458, 460, 462], "limit": [6, 9, 13, 22, 45, 191, 193, 199, 203, 204, 205, 208, 213, 216, 229, 230, 231, 233, 234, 453, 472, 477], "phase": [6, 16, 23, 24, 295, 300], "propag": [6, 7, 9, 14, 36, 226, 227, 229, 231, 237, 300, 318, 408], "short": [6, 228, 233, 234, 326, 458, 459], "isvp": 6, "until": [6, 9, 14, 17, 24, 27, 30, 210, 212, 231, 305, 365, 388, 459, 477], "updat": [6, 9, 12, 14, 15, 17, 20, 24, 27, 29, 32, 34, 42, 52, 86, 87, 115, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 210, 215, 216, 226, 229, 231, 233, 301, 304, 446, 455, 459, 469, 470], "Such": [6, 13, 184, 230, 233, 268, 273, 405, 414], "abstract": [6, 196, 215, 219, 222, 226, 227, 228, 294, 295, 302, 304, 305, 460], "bring": [6, 41], "product": [6, 12, 32, 193, 219, 226, 230, 233, 239, 295, 296, 300, 466, 477], "sacrific": 6, "almost": [6, 22, 212, 381, 458], "infeas": 6, "kind": [6, 9, 12, 13, 15, 27, 33, 34, 45, 46, 193, 212, 223, 225, 227, 228, 233, 236, 238, 298, 300, 304, 305, 443, 452, 457, 459, 461, 462, 470, 472, 476], "At": [6, 12, 14, 15, 20, 34, 37, 115, 200, 211, 212, 295, 305, 459, 461], "advanc": [6, 7, 15, 200, 218, 219, 228, 392], "pose": 6, "challeng": [6, 9, 195, 226, 458], "repres": [6, 9, 12, 15, 42, 44, 45, 196, 200, 204, 208, 212, 216, 218, 219, 222, 225, 226, 227, 228, 229, 231, 234, 236, 237, 238, 245, 272, 295, 296, 297, 298, 300, 304, 306, 308, 352, 385, 393, 394, 395, 396, 397, 405, 412, 415, 419, 427, 436, 438, 440, 441, 446, 450, 453, 458, 459], "non": [6, 9, 27, 182, 210, 233, 236, 239, 297, 335, 336, 356, 375, 377, 380, 404, 408, 415, 433, 446, 447], "ones": [6, 9, 232, 237, 302], "distil": 6, "critic": [6, 13, 216, 237], "context": [6, 15, 17, 18, 20, 27, 31, 45, 116, 117, 118, 119, 152, 153, 162, 208, 228, 230, 237, 239, 244, 245, 246, 252, 253, 268, 273, 276, 277, 279, 288, 291, 304, 308, 311, 436, 451, 453, 458, 466, 469], "fall": 6, "meet": [6, 15, 18, 37, 196, 200, 202, 219, 226, 231, 298, 299, 365, 394, 395, 396, 461, 463], "therefor": [6, 12, 15, 196, 200, 202, 204, 205, 208, 210, 212, 216, 227, 294, 295, 300, 392, 458, 467], "fulfil": [6, 15, 18, 186, 228], "ligra": 6, "By": [6, 13, 17, 20, 30, 36, 42, 43, 44, 46, 183, 193, 196, 208, 210, 212, 213, 218, 225, 229, 231, 232, 295, 296, 311, 446, 455, 458, 466, 467], "must": [6, 13, 24, 27, 30, 37, 43, 44, 45, 49, 60, 126, 188, 190, 193, 199, 210, 212, 226, 236, 238, 247, 295, 296, 298, 299, 300, 308, 310, 311, 324, 363, 365, 373, 376, 386, 388, 390, 393, 395, 397, 405, 408, 444, 446, 448, 452, 458, 459], "race": 6, "schedul": [6, 23, 36, 226, 228, 453], "do": [6, 15, 16, 18, 20, 29, 30, 31, 33, 35, 37, 41, 42, 43, 50, 116, 193, 199, 200, 201, 204, 205, 208, 212, 225, 236, 237, 238, 255, 271, 296, 308, 365, 377, 389, 393, 403, 406, 424, 440, 446, 449, 452, 453, 457, 458, 459, 463, 466], "so": [6, 12, 13, 30, 37, 41, 45, 185, 193, 199, 200, 202, 206, 211, 212, 216, 219, 221, 225, 226, 228, 237, 241, 294, 300, 302, 321, 356, 361, 374, 375, 376, 379, 394, 395, 396, 407, 440, 446, 458, 459, 473], "middlewar": 6, "flashwar": 6, "hide": [6, 196], "automat": [6, 9, 12, 14, 34, 42, 44, 186, 188, 199, 200, 203, 208, 211, 215, 225, 226, 229, 230, 231, 233, 238, 306, 308, 446, 459, 461, 462, 479], "adapt": [6, 22, 42, 186, 200, 231, 233, 234, 461, 462], "70": [6, 15, 477], "40": [6, 15, 234, 296, 297, 299, 373, 439], "commonli": [6, 205, 210, 215, 219, 225], "now": [6, 7, 20, 23, 27, 43, 46, 182, 186, 199, 201, 204, 205, 207, 211, 212, 218, 237, 304, 377, 459, 461, 474], "succinct": [6, 208], "interfac": [6, 9, 11, 12, 17, 18, 19, 22, 23, 34, 182, 193, 196, 198, 200, 212, 213, 214, 216, 219, 226, 229, 230, 231, 232, 233, 236, 241, 296, 297, 298, 300, 301, 302, 303, 446, 453, 463], "help": [6, 9, 12, 13, 16, 17, 32, 37, 38, 183, 190, 204, 210, 212, 223, 225, 229, 230, 304, 308, 458, 460, 466, 470], "demonstr": [6, 16, 42, 199, 200, 207, 215, 220, 222, 226, 227, 229, 231, 233, 238, 294, 306, 308, 453, 458], "up": [6, 13, 20, 23, 37, 183, 204, 210, 212, 215, 217, 219, 232, 239, 304, 307, 345, 349, 373, 440, 458, 459, 476], "92": [6, 311], "bulk": [6, 15, 50, 116, 182], "bsp": [6, 15], "paradigm": [6, 15, 215, 219, 226, 294, 300], "primari": [6, 15, 43, 44, 45, 72, 73, 86, 87, 115, 138, 139, 152, 153, 181, 186, 191, 208, 226, 233, 459], "constitut": [6, 222, 225], "superstep": [6, 16, 17, 24, 239], "vertexsubset": [6, 15], "indic": [6, 13, 24, 37, 38, 44, 45, 49, 182, 186, 188, 199, 212, 225, 228, 229, 230, 234, 245, 295, 297, 300, 308, 352, 355, 365, 368, 369, 370, 371, 373, 375, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 390, 393, 394, 395, 396, 397, 400, 401, 402, 406, 436, 438, 441, 443, 448, 458], "maintain": [6, 10, 14, 35, 36, 44, 207, 208, 210, 226, 229, 230, 459], "onc": [6, 12, 15, 17, 20, 24, 27, 29, 30, 34, 36, 45, 49, 188, 200, 201, 216, 237, 239, 296, 297, 300, 306, 308, 309, 311, 341, 446, 453, 459, 466], "describ": [6, 27, 36, 37, 38, 45, 46, 188, 193, 199, 201, 212, 216, 217, 226, 230, 231, 238, 295, 298, 300, 305, 306, 345, 349, 365, 366, 367, 370, 375, 377, 378, 403, 404, 417, 424, 426, 440, 442, 443, 454, 457, 458, 459, 467, 472], "vsize": [6, 15], "size_t": [6, 13, 192, 236, 239, 305, 455, 458], "vertexmap": [6, 13, 15, 97, 115, 163, 181, 192], "condit": [6, 9, 14, 24, 27, 38, 42, 200, 207, 212, 219, 228, 230, 234, 365, 394, 395, 396, 404, 405, 458], "f": [6, 20, 33, 46, 199, 201, 218, 223, 224, 227, 300, 311, 398, 399, 445, 459, 467, 473], "output": [6, 14, 17, 24, 27, 29, 30, 34, 38, 196, 199, 201, 204, 207, 208, 210, 212, 216, 218, 219, 222, 226, 227, 231, 234, 236, 265, 273, 281, 294, 300, 302, 306, 308, 309, 393, 395, 397, 438, 450, 452, 459, 469, 470, 473, 478], "form": [6, 20, 200, 206, 208, 210, 212, 216, 219, 230, 231, 237, 294, 296, 297, 300, 347, 367, 397, 412, 414, 417, 420, 424, 446, 452], "special": [6, 20, 186, 191, 207, 212, 226, 295, 414, 430, 440, 463], "m": [6, 7, 9, 18, 20, 23, 27, 28, 30, 31, 32, 35, 199, 200, 202, 212, 218, 227, 237, 238, 311, 321, 352, 356, 358, 369, 375, 377, 379, 381, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 425, 434, 438, 439, 443, 446, 469], "omit": [6, 188, 225, 238, 319, 460, 479], "filter": [6, 15, 23, 42, 200, 207, 213, 225, 230, 237, 238, 438, 452, 458, 477], "semant": [6, 200, 219, 299, 458], "unchang": 6, "edgemap": [6, 15, 97, 115, 163, 181], "sourc": [6, 7, 8, 9, 14, 15, 18, 22, 23, 24, 29, 33, 36, 37, 38, 43, 45, 73, 75, 139, 141, 186, 191, 192, 193, 199, 201, 202, 204, 205, 212, 216, 217, 219, 225, 227, 229, 230, 231, 233, 236, 237, 238, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 287, 288, 289, 291, 293, 296, 297, 298, 299, 300, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 448, 450, 452, 453, 455, 457, 458, 459, 461, 466, 469, 470, 471, 477, 479], "satisfi": [6, 9, 24, 32, 186, 202, 212, 230, 233, 237, 241, 305, 311, 363, 393, 397, 404, 405, 463], "h": [6, 9, 15, 16, 20, 36, 41, 182, 190, 216, 217, 234, 245, 311, 322, 325, 346, 373, 377, 393, 438, 445, 446, 458, 470, 475], "conduct": [6, 15, 212, 234, 300], "allow": [6, 11, 12, 20, 22, 24, 27, 30, 36, 42, 43, 45, 115, 181, 183, 186, 196, 199, 200, 204, 205, 207, 208, 210, 212, 213, 214, 215, 219, 225, 226, 227, 229, 230, 231, 232, 233, 295, 300, 370, 375, 377, 380, 385, 388, 393, 438, 446, 455, 458, 463, 466], "dynam": [6, 12, 34, 183, 184, 186, 200, 215, 226, 228, 229, 231, 237, 248, 261, 366, 367, 449, 455, 459], "even": [6, 8, 20, 200, 204, 212, 228, 229, 302, 308, 311, 375, 385, 403, 405, 406, 446, 458], "virtual": [6, 9, 23, 45, 202, 204, 227, 236, 304, 305], "gener": [6, 9, 13, 14, 17, 27, 34, 41, 45, 115, 183, 188, 196, 198, 200, 206, 208, 210, 212, 216, 219, 225, 226, 227, 228, 229, 231, 237, 246, 294, 295, 296, 300, 306, 308, 310, 311, 446, 447, 451, 453, 455, 457, 458, 459, 460, 461, 467], "index": [6, 12, 13, 31, 43, 44, 74, 140, 182, 192, 198, 216, 219, 225, 231, 236, 237, 238, 296, 297, 305, 308, 310, 311, 320, 344, 345, 375, 377, 378, 379, 381, 458, 475, 479], "pre": [6, 29, 32, 49, 193, 200, 207, 212, 218, 222, 227, 230, 453, 472], "conveni": [6, 29, 193, 199, 204, 212, 216, 228, 300, 444, 446], "revers": [6, 20, 205, 212, 254, 257, 310, 311, 389, 397, 446], "exchang": [6, 14], "chosen": [6, 375, 382, 383, 384, 385, 386, 397, 401, 441], "temporari": 6, "sequenti": [6, 12, 14, 18, 34, 36, 226, 344, 345, 381, 458, 463, 469], "pull": [6, 12, 14, 27, 29, 32, 34, 38, 183, 193, 199, 229, 301, 304, 453, 459, 471], "mode": [6, 15, 27, 32, 36, 46, 193, 211, 220, 223, 225, 236, 237, 238, 287, 294, 298, 304, 306, 308, 448, 453, 459, 463, 467, 479], "push": [6, 12, 34, 37, 42, 200, 207, 229, 304], "anoth": [6, 9, 10, 20, 36, 45, 200, 210, 212, 225, 226, 227, 231, 239, 375, 408, 446, 458, 461, 462], "final": [6, 9, 13, 14, 17, 19, 24, 200, 204, 212, 216, 221, 226, 230, 236, 294, 300, 302, 388, 408, 446, 460], "reduc": [6, 9, 13, 14, 15, 17, 186, 200, 204, 207, 211, 219, 295, 298, 394, 395, 396, 446, 459], "commut": 6, "alwai": [6, 185, 212, 221, 238, 342, 343, 382, 384, 403, 406, 440, 458, 466], "ctrue": 6, "doe": [6, 11, 12, 13, 20, 34, 37, 50, 51, 53, 116, 117, 119, 185, 186, 207, 210, 219, 225, 228, 230, 233, 297, 300, 305, 311, 330, 331, 373, 375, 377, 392, 403, 446, 448, 453, 458], "sometim": [6, 27, 212, 225, 356, 416], "similarli": [6, 19, 20, 45, 201, 212, 229, 311, 349, 375, 377, 393, 396, 403, 446, 467], "suppli": [6, 193, 208, 395], "edgeset": 6, "d": [6, 9, 15, 17, 19, 20, 46, 49, 182, 188, 190, 199, 207, 212, 237, 298, 300, 303, 306, 311, 321, 366, 367, 375, 377, 378, 380, 381, 382, 384, 389, 393, 394, 395, 396, 397, 400, 437, 446, 448, 453], "auxiliari": [6, 15, 16, 212], "union": [6, 308, 374, 474], "minu": [6, 210, 349], "intersect": [6, 230, 447], "add": [6, 15, 19, 20, 23, 29, 33, 37, 86, 87, 115, 152, 153, 181, 193, 205, 207, 210, 212, 225, 227, 236, 239, 246, 247, 256, 295, 306, 308, 313, 314, 315, 365, 372, 385, 403, 406, 408, 424, 446, 449, 453, 458, 459, 470, 473, 474, 479], "getv": [6, 200], "besid": [6, 10, 38, 305, 306], "combin": [6, 14, 18, 34, 45, 198, 200, 212, 215, 226, 227, 230, 294, 295, 296, 300, 446, 453, 462, 469], "primit": [6, 43, 228], "natur": [6, 12, 13, 24, 45, 196, 208, 212], "multi": [6, 31, 198, 208, 212, 215, 216, 219, 226, 228, 230, 231, 232, 233, 237, 298, 300, 302, 455, 459], "tradit": [6, 200, 204, 206, 207, 208, 231, 423], "awkward": 6, "supplement": 6, "perspect": [6, 24, 228], "whole": [6, 9, 12, 24, 34, 186, 199, 200, 212, 216, 226, 228, 230, 231, 302, 457, 459, 462], "pick": [6, 212, 234, 388, 403, 406], "transfer": [6, 196, 198, 215, 230, 232, 477], "intuit": [6, 186, 200, 208, 215, 230, 453], "sever": [6, 9, 15, 17, 20, 23, 30, 33, 36, 37, 38, 186, 198, 200, 205, 212, 215, 216, 219, 225, 226, 229, 231, 232, 234, 238, 294, 300, 302, 304, 305, 311, 352, 446, 452, 453, 458, 459], "shown": [6, 7, 9, 10, 12, 15, 16, 18, 24, 27, 34, 49, 182, 200, 202, 212, 218, 219, 229, 231, 234, 295, 296, 297, 300, 306], "input": [6, 9, 12, 13, 15, 17, 22, 24, 43, 44, 71, 86, 87, 113, 137, 152, 153, 179, 182, 188, 190, 196, 216, 218, 219, 222, 225, 226, 227, 230, 231, 237, 256, 260, 281, 294, 295, 296, 297, 298, 300, 303, 306, 309, 311, 379, 393, 395, 397, 403, 404, 438, 446, 449, 450, 453, 458, 459, 473, 478], "second": [6, 13, 27, 44, 46, 186, 196, 205, 212, 216, 225, 230, 233, 234, 238, 302, 391, 392, 400, 401, 402, 403, 407, 445, 446, 453, 459, 460], "fundament": [6, 9, 45, 200, 228], "modul": [6, 8, 9, 15, 19, 20, 23, 198, 200, 204, 210, 215, 223, 226, 227, 228, 230, 231, 307, 445, 475], "produc": [6, 38, 41, 43, 200, 234, 237, 246, 294, 306, 308, 309, 311, 365, 379, 381, 389, 450, 459], "abil": [6, 12, 34, 49, 204, 208, 212, 219, 226, 459], "activ": [6, 9, 23, 24, 30, 49, 188, 202, 221, 227, 231, 306, 453], "dens": [6, 216, 229, 231, 297, 306], "spars": [6, 13, 216, 231, 294, 297, 373, 446, 449], "dispatch": [6, 34, 226, 236], "kernel": [6, 382], "auto": [6, 14, 16, 34, 192, 212, 239, 455, 458, 460], "switch": [6, 12, 23, 34, 182, 211, 229, 403, 406, 458, 466], "prove": [6, 24, 438], "world": [6, 9, 13, 196, 210, 212, 226, 227, 229, 236, 311, 366, 367, 393], "dual": 6, "edgemapdens": 6, "edgemapspars": 6, "instead": [6, 13, 16, 20, 23, 30, 37, 45, 115, 204, 207, 210, 212, 225, 228, 296, 297, 298, 304, 305, 308, 372, 379, 384, 392, 393, 397, 403, 446, 452, 455, 458], "co": [6, 23, 196, 227, 295, 473], "lead": [6, 17, 24, 193, 212, 231, 375, 377], "master": [6, 19, 22, 23, 24, 31, 186, 223, 469], "broadcast": [6, 236, 458], "mirror": [6, 7, 10, 24, 27, 32, 202, 217, 218], "On": [6, 27, 30, 37, 186, 200, 208, 210, 237, 380, 443, 458], "contrari": 6, "total": [6, 8, 12, 34, 196, 200, 201, 211, 212, 223, 239, 321, 365, 388, 405, 411, 446, 460, 473], "4": [6, 9, 10, 13, 17, 19, 20, 22, 27, 31, 46, 193, 200, 201, 203, 206, 207, 208, 210, 211, 212, 223, 224, 227, 234, 245, 294, 296, 297, 299, 300, 301, 311, 317, 322, 324, 325, 330, 331, 349, 351, 352, 361, 369, 372, 374, 381, 390, 392, 397, 406, 413, 416, 417, 423, 424, 430, 432, 439, 440, 441, 446, 448, 449, 453, 458, 459, 460, 461, 462, 469, 472, 473, 477], "redund": [6, 188, 207], "programm": [6, 17, 226, 241], "scope": [6, 23, 37, 115, 182, 228, 308], "disabl": [6, 31, 42, 182, 183, 186, 190, 191, 201, 204, 234, 453], "develop": [6, 8, 9, 11, 12, 14, 24, 29, 34, 37, 115, 181, 186, 191, 196, 200, 201, 206, 207, 208, 212, 213, 214, 215, 216, 217, 226, 229, 230, 231, 233, 241, 298, 300, 301, 302, 304, 365, 458, 466], "katz": [6, 237, 311], "eigenvector": [6, 237, 311, 438], "harmon": 6, "coeffici": [6, 19, 237, 311], "fluid": 6, "version": [6, 15, 17, 18, 20, 23, 27, 29, 37, 42, 43, 45, 115, 183, 193, 202, 204, 208, 210, 211, 218, 226, 228, 233, 234, 237, 301, 308, 366, 367, 382, 384, 397, 403, 424, 446, 455, 457, 458, 459, 466, 469, 472], "color": [6, 19, 20, 212, 446], "biconnect": 6, "bridg": [6, 198, 228], "seven": [6, 306, 345], "strongli": [6, 36, 202, 204, 212, 300, 385], "cut": [6, 12, 24, 431], "k": [6, 20, 37, 192, 201, 212, 216, 226, 227, 228, 230, 237, 238, 298, 311, 348, 356, 366, 367, 368, 369, 371, 373, 374, 375, 382, 385, 394, 395, 396, 398, 401, 402, 403, 404, 405, 406, 411, 446, 452, 458, 473, 477], "decomposit": [6, 227, 311], "degeneraci": 6, "onion": 6, "minim": [6, 11, 229, 306, 397, 398, 419, 445], "domin": [6, 311, 458], "cycl": [6, 228, 230, 233, 236, 313, 349, 350, 353, 364, 386, 390, 411, 413, 429, 433], "triangl": [6, 33, 212, 227, 230, 237, 311, 408, 412, 416, 420, 432, 447, 469, 473], "acycl": [6, 228, 440], "cyclic": [6, 226, 228, 230, 353], "diamond": [6, 416], "rectangl": 6, "tail": [6, 199, 204, 210, 212, 228, 467], "approxim": [6, 365, 438], "densest": 6, "articlerank": 6, "hyperlink": [6, 237, 311], "induc": [6, 208, 210, 237, 259, 322, 325, 341, 389, 446], "topic": [6, 7, 202, 218, 227, 237, 459], "person": [6, 7, 30, 33, 43, 44, 45, 49, 86, 152, 153, 182, 199, 202, 204, 207, 208, 210, 212, 225, 227, 308, 426, 435, 446, 449, 452, 457, 458, 459, 460, 474, 479], "standard": [6, 35, 183, 198, 200, 207, 212, 213, 225, 228, 309, 379, 394, 395, 396, 458], "diamet": 6, "span": [6, 20], "forest": 6, "center": [6, 212, 361, 364, 389], "four": [6, 9, 12, 20, 222, 227, 228, 236, 294, 297, 306, 393, 397, 458], "random": [6, 28, 31, 219, 221, 226, 234, 298, 299, 300, 303, 306, 347, 358, 365, 368, 369, 370, 371, 373, 375, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 406, 438, 441, 443, 445, 453], "give": [7, 12, 13, 31, 34, 44, 182, 202, 212, 218, 225, 234, 300, 308, 373, 393, 413, 445, 446], "quick": [7, 202, 218, 459, 476], "ll": [7, 13, 20, 29, 43, 44, 218], "pip": [7, 27, 30, 31, 32, 47, 193, 199, 202, 218, 227, 304, 459, 472, 476], "upgrad": [7, 23, 32, 202, 218, 476], "occur": [7, 9, 14, 32, 193, 210, 218, 459], "veri": [7, 13, 32, 196, 200, 202, 212, 215, 218, 225, 227, 231, 296, 298, 469], "speed": [7, 32, 186, 191, 212, 217, 218, 228, 307, 373, 446], "try": [7, 17, 23, 32, 36, 41, 50, 51, 52, 53, 86, 87, 96, 115, 116, 117, 118, 119, 152, 153, 162, 181, 191, 193, 196, 202, 211, 217, 218, 221, 222, 227, 235, 237, 324, 365, 449, 453, 473], "site": [7, 32, 202, 218], "aliyun": [7, 27, 32, 202, 217, 218, 234, 453, 470], "pypi": [7, 27, 32, 193, 202, 203, 218, 472], "trust": [7, 27, 32, 202, 218], "host": [7, 15, 17, 22, 23, 27, 28, 32, 44, 87, 116, 117, 118, 119, 152, 153, 162, 182, 183, 196, 201, 202, 204, 211, 218, 225, 234, 236, 237, 238, 449, 453, 457, 469, 477, 479], "packag": [7, 8, 11, 17, 18, 20, 22, 23, 27, 29, 30, 36, 115, 181, 185, 193, 199, 202, 218, 227, 304, 393, 395, 446, 449, 459, 466, 471], "everyth": [7, 218, 227, 458], "job": [7, 13, 23, 50, 51, 115, 116, 117, 181, 182, 196, 200, 218, 226, 227, 228, 232, 236, 271, 295, 453, 459], "modern_graph": [7, 30, 33, 44, 46, 182, 199, 202, 227, 460, 466], "gremlin": [7, 29, 33, 42, 46, 191, 193, 196, 199, 200, 201, 202, 207, 209, 213, 216, 219, 226, 227, 228, 232, 233, 235, 265, 300, 309, 453, 459, 467, 472, 473, 475, 480], "apach": [7, 17, 22, 23, 31, 183, 184, 186, 198, 207, 208, 211, 214, 215, 226, 227, 230, 457, 459, 463, 469, 471, 475], "tinkerpop": [7, 183, 184, 186, 196, 198, 199, 201, 202, 211, 215, 227, 228, 309, 459, 475], "org": [7, 17, 23, 115, 193, 203, 211, 218, 221, 222, 223, 227, 229, 237, 311, 369, 370, 371, 385, 388, 395, 408, 412, 413, 414, 415, 417, 418, 419, 425, 426, 427, 428, 430, 431, 432, 433, 438, 459, 469, 472, 473, 477], "doc": [7, 16, 17, 30, 37, 227, 228, 236, 240, 242, 308, 395, 476], "tutori": [7, 8, 12, 14, 24, 199, 201, 202, 209, 215, 220, 225, 227, 229, 231, 306, 395, 463], "trigger": [7, 14, 15, 18, 37, 219, 227, 247, 461, 466], "ret": [7, 18, 211, 227, 469, 474], "selector": [7, 15, 33, 38, 227, 236, 238, 246, 252, 253, 263, 264, 268, 276, 277, 308, 451, 453, 457, 469, 474], "homogen": [7, 216, 225, 227, 231, 296], "pg": [7, 227, 237, 453, 457, 458], "none": [7, 9, 20, 27, 31, 153, 162, 205, 221, 223, 224, 225, 227, 237, 238, 245, 252, 253, 256, 259, 263, 264, 265, 266, 268, 271, 273, 276, 277, 281, 287, 289, 293, 294, 295, 300, 308, 309, 310, 311, 319, 323, 325, 326, 330, 331, 340, 341, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 368, 369, 370, 371, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 438, 440, 441, 443, 446, 448, 449, 450, 453, 457, 458, 459, 474, 478, 479], "know": [7, 8, 30, 33, 38, 44, 45, 182, 199, 207, 209, 210, 212, 220, 225, 227, 230, 295, 296, 304, 308, 457, 459, 460, 474, 477, 479], "src": [7, 13, 15, 16, 17, 18, 30, 34, 86, 115, 152, 181, 192, 196, 208, 211, 218, 219, 222, 225, 227, 237, 238, 245, 294, 296, 308, 452, 455, 458, 459, 461, 469, 473, 478, 479], "our": [7, 12, 13, 17, 32, 34, 36, 37, 41, 42, 44, 45, 183, 196, 200, 205, 207, 208, 217, 227, 229, 230, 231, 233, 234, 235, 301, 302, 311, 459, 461, 469], "learn": [7, 27, 32, 36, 37, 38, 41, 186, 196, 200, 202, 215, 219, 220, 221, 223, 228, 229, 232, 235, 289, 295, 298, 299, 300, 301, 304, 306, 451, 453, 473, 475], "technic": [7, 218, 302, 440, 446], "disaggreg": [7, 36], "deploy": [7, 29, 30, 33, 191, 193, 196, 201, 212, 226, 232, 296, 306, 453, 459], "scale": [7, 11, 12, 13, 20, 23, 27, 34, 37, 186, 196, 199, 201, 206, 211, 212, 213, 215, 216, 226, 227, 228, 229, 231, 232, 233, 296, 298, 300, 302, 307, 375, 386, 393, 445, 458], "usag": [7, 17, 31, 32, 36, 37, 47, 115, 182, 185, 189, 210, 212, 213, 217, 218, 219, 238, 297, 298, 299, 303, 308, 365, 446, 453, 459, 460], "section": [8, 13, 27, 29, 42, 44, 45, 188, 190, 209, 212, 216, 220, 226, 300, 301, 308, 345, 458, 459], "assum": [8, 23, 27, 30, 185, 199, 209, 212, 220, 227, 295, 308, 344, 405, 444, 446, 453, 457, 458, 473], "getting_start": [8, 42, 185, 209, 220], "most": [8, 9, 13, 15, 22, 33, 38, 45, 186, 193, 200, 204, 205, 207, 210, 212, 216, 225, 227, 229, 231, 233, 234, 238, 294, 296, 300, 302, 304, 308, 366, 367, 391, 394, 395, 396, 457, 459], "suffici": [8, 17, 193, 226, 295], "louvain": [8, 229, 237, 469], "social": [8, 45, 196, 201, 212, 226, 229, 231, 234, 373, 423, 438, 447], "scientist": [8, 215, 233], "familiar": [8, 14, 16, 29, 200], "manipul": [8, 11, 19, 20, 186, 212, 215, 230, 233, 235, 236, 446], "invok": [8, 9, 12, 14, 15, 17, 24, 34, 47, 186, 188, 225, 236, 298, 299, 303, 453, 469], "pydata": [8, 232], "eco": 8, "still": [8, 24, 27, 34, 38, 182, 196, 212, 229, 324, 453, 458, 459], "directli": [8, 12, 20, 24, 30, 32, 34, 36, 37, 38, 182, 186, 196, 204, 207, 208, 210, 212, 214, 216, 219, 225, 231, 236, 295, 298, 300, 301, 302, 303, 438, 446, 449, 453, 459, 463], "migrat": [8, 200, 218, 221, 222, 227, 228, 233, 455, 473], "transpar": [8, 226], "don": [8, 17, 23, 30, 33, 36, 37, 193, 199, 212, 247, 340, 446, 459], "autom": [9, 29, 228], "abl": [9, 24, 27, 183, 199, 228, 299, 403, 458, 459], "batch": [9, 12, 19, 44, 201, 211, 216, 219, 223, 224, 228, 231, 294, 297, 299, 300, 302, 304, 306, 310, 459, 478], "counterpart": [9, 207, 215, 228], "redesign": [9, 228], "underli": [9, 196, 200, 212, 228, 302, 458], "equip": [9, 214, 215, 228, 234, 463], "polici": [9, 193, 228, 236, 453], "memori": [9, 12, 23, 24, 27, 34, 45, 182, 186, 193, 196, 198, 208, 211, 215, 217, 220, 221, 223, 226, 228, 229, 231, 232, 233, 234, 294, 295, 296, 302, 306, 308, 446, 453, 459, 462, 471, 472], "todai": 9, "static": [9, 16, 31, 50, 51, 52, 53, 86, 87, 96, 115, 211, 236, 459, 461], "recomput": 9, "costli": 9, "consum": [9, 193, 231, 302, 305], "especi": [9, 225], "trillion": 9, "commerc": [9, 226, 229], "constantli": 9, "issu": [9, 17, 32, 37, 193, 196, 199, 202, 211, 228, 229, 233, 369, 370, 371, 435, 472], "involv": [9, 13, 37, 41, 42, 186, 196, 200, 212, 216, 219, 226, 229, 230, 231, 232, 233], "adjust": [9, 12, 42, 43, 193], "old": [9, 12, 14, 32, 34, 204, 453], "typic": [9, 24, 42, 183, 186, 196, 208, 210, 212, 226, 229, 230, 233, 295, 300, 375, 446, 452, 458], "often": [9, 37, 45, 186, 196, 199, 211, 226, 229, 230, 231, 233, 296, 297, 300, 446, 459, 467], "overlap": [9, 453], "intervent": 9, "burden": [9, 15, 296], "expert": 9, "light": 9, "overal": [9, 231], "verifi": [9, 27, 38, 196, 199, 201, 205, 234, 300], "characterist": [9, 208, 219, 226, 231, 294, 299], "deduc": [9, 308, 479], "appropri": [9, 27, 41, 44, 45, 200, 216, 226, 231, 294], "record": [9, 13, 115, 181, 182, 186, 199, 202, 203, 204, 212, 227, 305, 455, 459], "part": [9, 13, 37, 196, 200, 210, 216, 219, 228, 300, 301, 304, 306, 429, 446, 457, 458, 459], "intermedi": [9, 12, 17, 186, 200, 207, 212, 215, 226, 228], "deliv": [9, 477], "There": [9, 10, 12, 34, 37, 38, 43, 193, 199, 200, 207, 212, 227, 229, 230, 231, 237, 296, 299, 300, 302, 446, 452, 453, 458, 459], "reshap": [9, 306], "eas": [9, 12, 34, 202, 231, 233, 234], "achiev": [9, 12, 20, 24, 27, 34, 186, 212, 226, 229, 234, 455], "decid": [9, 296, 393], "due": [9, 193, 226, 233, 300], "among": [9, 200, 212, 226, 233, 236, 305, 311, 440, 459], "fetch": [9, 15, 17, 453, 459, 469], "suffic": 9, "replai": [9, 219, 228, 455, 459], "affect": [9, 13, 30, 36, 37, 207, 446], "area": [9, 15, 186, 204, 397, 443], "readili": 9, "obtain": [9, 14, 17, 29, 30, 200, 201, 203, 207, 211, 215, 216, 219, 222, 227, 231, 295, 299, 300, 302, 421, 424, 440, 446, 453, 459], "simpli": [9, 17, 20, 42, 115, 188, 199, 204, 212, 225, 227, 300, 368, 372, 446], "coincid": 9, "idea": [9, 37, 216, 231, 241, 302], "invalid": [9, 86, 87, 152, 153, 207, 308, 453], "miss": [9, 37, 298, 308, 356, 453], "comparison": [9, 19, 205, 210, 212, 215, 233, 234], "those": [9, 29, 45, 182, 186, 199, 201, 204, 205, 208, 212, 225, 235, 298, 308, 311, 322, 351, 353, 355, 446, 448, 452], "although": [9, 12, 14, 22, 34, 49, 186, 196, 227, 241, 345, 458, 459], "solut": [9, 31, 46, 186, 193, 230, 231, 233, 311, 472], "enough": [9, 219, 295, 298, 365, 453, 457], "caus": [9, 14, 22, 32, 37, 193, 211, 218, 231, 296, 302, 308, 345], "overwhelm": 9, "overhead": [9, 13, 233, 295, 296], "mf": 9, "delta": [9, 12, 13, 33, 37, 237, 308], "php": 9, "mp": 9, "cc": [9, 458, 474], "sswp": 9, "mv": [9, 204], "track": 9, "gcn": [9, 215, 219, 231, 235, 294, 298, 302, 306, 473, 475, 478, 480], "commnet": 9, "me": 9, "keep": [9, 212, 219, 239, 300, 308, 403, 406, 459], "graphsag": [9, 215, 219, 223, 227, 231, 235, 294, 298, 300, 302, 306, 475, 478, 480], "gin": [9, 231], "vldb": [9, 469, 475], "paper": [9, 14, 24, 216, 218, 221, 222, 223, 224, 226, 227, 228, 234, 306, 311, 443, 453, 469, 473], "publish": [9, 14, 24, 29, 207, 226, 227], "2021": [9, 228], "denot": [9, 45, 49, 184, 186, 210, 212, 299, 374, 459], "w": [9, 182, 211, 237, 311, 373, 379, 393, 396, 398, 403, 406, 408, 436, 446, 448, 459, 477], "respect": [9, 16, 38, 188, 198, 200, 205, 210, 225, 226, 227, 230, 231, 237, 256, 273, 281, 297, 300, 311, 352, 365, 412, 446, 452, 458, 459], "initi": [9, 16, 18, 19, 42, 43, 44, 181, 190, 201, 212, 223, 224, 229, 231, 236, 295, 296, 306, 308, 310, 311, 385, 387, 388, 446, 449, 457, 459, 463, 469], "init_v": 9, "init_m": 9, "aggreg": [9, 200, 205, 213, 231, 239, 294, 300, 302, 306, 458, 477], "vector": [9, 192, 216, 222, 227, 231, 236, 239, 294, 302, 304, 311, 393, 397], "element": [9, 13, 45, 115, 181, 205, 210, 212, 229, 236, 295, 298, 300, 308, 311, 341, 373, 418, 440, 452, 453, 458], "specifi": [9, 16, 17, 20, 23, 24, 30, 36, 42, 43, 44, 45, 49, 53, 86, 87, 119, 152, 153, 182, 183, 186, 188, 190, 199, 205, 208, 210, 215, 219, 223, 227, 229, 237, 239, 245, 252, 253, 263, 264, 268, 272, 276, 277, 293, 294, 295, 297, 300, 303, 308, 310, 311, 322, 330, 331, 352, 365, 375, 377, 378, 381, 382, 389, 393, 394, 395, 396, 397, 403, 406, 408, 411, 424, 443, 446, 448, 452, 453, 457, 459, 460, 466], "addition": [9, 12, 14, 36, 45, 204, 216, 222, 226, 228, 230, 233, 302, 311, 458, 467], "correspond": [9, 10, 13, 15, 17, 18, 37, 41, 182, 200, 204, 208, 210, 212, 215, 219, 225, 230, 233, 237, 271, 294, 295, 296, 297, 299, 300, 304, 308, 311, 344, 345, 375, 377, 378, 379, 380, 381, 393, 439, 440, 442, 446, 448, 449, 455, 459, 467], "iteratorkernel": 9, "void": [9, 14, 15, 16, 17, 24, 50, 51, 52, 53, 86, 87, 96, 115, 192, 236, 455, 458, 459, 460, 469], "m1": [9, 193, 202, 347, 472, 476], "m2": [9, 347], "below": [9, 10, 12, 20, 34, 35, 36, 37, 44, 49, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 210, 219, 226, 227, 229, 230, 231, 234, 295, 298, 300, 303, 306, 345, 375, 377, 411, 446, 453, 459], "ssspkernel": 9, "public": [9, 15, 16, 17, 27, 50, 51, 52, 53, 86, 87, 96, 115, 227, 234, 236, 304, 459, 469, 473], "dbl_max": 9, "backend": [9, 27, 29, 215, 218, 223, 226, 227, 231, 308, 446, 453, 460, 473], "seamless": [9, 49, 196, 232, 459], "block": [9, 182, 193, 200, 297, 373, 459], "spawn": 9, "adopt": [9, 42, 186, 188, 233, 298, 459], "csc": [9, 457], "csr": [9, 13, 192, 308, 457, 460], "sent": [9, 10, 14, 16, 24, 182, 211], "mainten": [9, 458], "preserv": [9, 13, 188, 207, 238, 308, 408, 438], "effect": [9, 36, 37, 42, 186, 188, 196, 207, 210, 211, 219, 226, 231, 298, 377, 446, 459], "readi": [9, 30, 32, 37, 182, 186, 193, 196, 201, 211, 226, 296, 298, 453, 459, 467], "accept": [9, 42, 50, 51, 52, 53, 86, 87, 96, 116, 117, 118, 119, 152, 153, 162, 183, 311, 393, 397, 459, 460], "insert": [9, 14, 45, 86, 152, 200, 266, 459], "newli": [9, 41, 42], "particular": [9, 37, 205, 210, 237, 297, 300, 375], "incid": [9, 20, 208, 210, 212, 322, 323, 365, 387, 436, 446], "encod": [9, 13, 205, 208, 237, 295, 300, 306, 308, 310, 448, 459, 478], "dummi": 9, "furthermor": [9, 211, 212, 215, 226, 233], "proprieti": 9, "deduct": 9, "techniqu": [9, 34, 219, 228, 229, 300], "cancel": [9, 89, 182], "compens": 9, "whose": [9, 24, 204, 212, 298, 300, 311, 316, 336, 418, 422, 438, 440, 441, 457, 458], "proce": [9, 183, 365, 459], "inner": [10, 13, 16, 192, 212, 213, 239, 308, 458], "outer": [10, 14, 192, 205, 239, 361, 458], "cross": [10, 208, 241, 421], "f_": 10, "instanc": [10, 15, 23, 27, 28, 29, 30, 33, 38, 45, 46, 49, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 186, 188, 193, 199, 208, 212, 221, 226, 227, 229, 230, 234, 236, 237, 238, 245, 247, 249, 265, 272, 289, 297, 308, 346, 348, 349, 351, 353, 355, 356, 358, 360, 361, 364, 375, 377, 378, 380, 382, 383, 384, 386, 390, 391, 392, 398, 399, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 432, 433, 441, 448, 453, 458, 467], "5": [10, 13, 19, 20, 31, 193, 201, 206, 210, 212, 218, 219, 221, 222, 223, 224, 227, 230, 234, 294, 297, 299, 300, 301, 303, 306, 311, 317, 322, 324, 330, 349, 352, 365, 369, 370, 371, 373, 374, 382, 384, 391, 392, 393, 394, 396, 397, 411, 412, 414, 415, 416, 417, 419, 420, 423, 425, 427, 429, 430, 436, 441, 446, 452, 453, 459, 461, 467, 472, 473, 477], "9": [10, 31, 199, 202, 210, 212, 227, 295, 311, 349, 351, 397, 415, 423, 436, 441, 476], "12": [10, 20, 32, 193, 202, 212, 234, 237, 295, 296, 297, 299, 301, 313, 314, 315, 351, 413, 414, 418, 422, 426, 432, 470, 472, 476, 477], "split": [10, 44, 207, 210, 212, 221, 222, 223, 224, 295, 296, 453, 459], "roughli": 10, "across": [10, 14, 34, 35, 36, 46, 183, 186, 207, 208, 223, 226, 228, 229, 233, 458, 460], "divid": [10, 205, 210, 212, 216, 226, 237, 295, 298, 302, 303, 311, 457], "place": [10, 18, 19, 36, 43, 44, 199, 212, 304, 305, 308, 373, 393, 394, 395, 396, 397, 426, 444], "itself": [10, 20, 22, 37, 210, 212, 216, 225, 226, 239, 294, 296, 452, 453, 458], "replic": [10, 201, 387], "resid": [10, 14, 38], "j": [10, 31, 192, 237, 306, 311, 344, 345, 366, 367, 375, 377, 378, 380, 386, 397, 400, 401, 402, 424, 458], "outcom": 10, "outgo": [10, 13, 16, 24, 45, 207, 210, 212, 230, 239, 300, 311, 446, 458], "incom": [10, 13, 14, 16, 34, 45, 210, 212, 236, 239, 311], "consid": [10, 15, 18, 27, 37, 207, 212, 219, 229, 237, 238, 295, 296, 311, 375, 438, 455, 458], "vice": [10, 393], "versa": [10, 393], "compani": [10, 458], "syncstateonoutervertexastarget": 10, "certain": [10, 24, 196, 210, 225, 233, 295, 296, 300, 303, 308, 458, 459], "regardless": [10, 188, 205, 228, 295, 391, 458], "friendli": [11, 12, 37, 198, 215, 229, 231, 232, 233], "research": [11, 207, 219, 231, 436, 453], "particularli": [11, 231, 438], "field": [11, 27, 30, 33, 38, 43, 45, 199, 219, 221, 222, 225, 227, 298, 302, 306, 308, 392, 453, 459, 470, 473], "scienc": [11, 400, 423], "solv": [11, 24, 37, 193, 195, 212, 229], "recast": [12, 14, 34], "ga": 12, "plug": [12, 34, 226], "minor": [12, 14, 34, 215, 226, 231, 234, 461], "cope": [12, 34], "life": [12, 32, 34, 199, 226], "extrem": [12, 27, 226, 302, 347, 358, 458], "fashion": [12, 20], "consist": [12, 13, 20, 24, 30, 34, 35, 36, 42, 45, 200, 207, 208, 210, 212, 215, 216, 219, 228, 229, 231, 233, 234, 236, 237, 239, 297, 298, 300, 302, 348, 349, 350, 361, 364, 372, 418, 440, 453, 455, 457, 458, 459, 460], "format": [12, 13, 20, 22, 34, 35, 43, 44, 45, 98, 164, 182, 196, 198, 212, 216, 223, 225, 231, 232, 234, 237, 265, 272, 294, 297, 300, 302, 305, 306, 308, 309, 446, 448, 453, 455, 471], "unifi": [12, 34, 186, 196, 198, 200, 295, 455], "care": [12, 34, 212, 304, 305, 458], "foreign": [12, 458], "ecosystem": [12, 183, 198, 202, 214, 215, 230, 233, 463], "freedom": 12, "accord": [12, 19, 36, 42, 182, 193, 199, 200, 204, 210, 212, 216, 225, 226, 230, 231, 236, 298, 300, 304, 365, 373, 385, 386, 455, 459], "demand": [12, 186, 200, 229, 458, 459, 463], "sdk": [12, 18, 47, 191, 193, 199, 203, 213, 214, 215, 229, 230, 233, 241, 451, 459, 463, 469], "domain": [12, 204, 226, 231, 393, 394, 395, 396, 397], "dedic": 12, "treat": [12, 14, 20, 34, 212, 308, 446, 448, 453, 466], "immut": [12, 34, 198, 208, 228], "persist": [12, 15, 30, 34, 46, 193, 198, 199, 226, 228, 233, 457], "fortun": [12, 20, 43, 196], "grin": [12, 198], "awar": [12, 37, 42, 183, 193, 199, 228], "introduct": [12, 34, 47, 207, 213, 229, 299, 300, 303, 311, 356, 438, 458], "foundat": [12, 191, 207, 226], "visit": [12, 29, 183, 204, 212, 230, 295], "meanwhil": [12, 196, 215, 231, 458], "compress": [12, 13, 185, 227, 237, 295, 411], "pipelin": [12, 34, 215, 226, 229, 233, 462], "balanc": [12, 296, 346], "link": [12, 31, 37, 38, 45, 49, 183, 193, 195, 200, 208, 216, 231, 234, 237, 308, 311, 348, 369, 371, 372, 382, 383, 384, 443, 446, 453], "popular": [12, 22, 29, 184, 196, 225, 227, 230, 231, 294, 306, 459], "freeli": [12, 24], "background": [12, 195], "interoper": [12, 458], "panda": [12, 196, 204, 236, 238, 252, 263, 308, 446, 475], "mar": [12, 27, 196, 210, 228, 453], "fastffi": [12, 241], "via": [12, 14, 17, 18, 20, 22, 23, 24, 27, 32, 43, 46, 115, 181, 186, 188, 193, 199, 205, 206, 208, 210, 213, 214, 215, 226, 228, 230, 233, 236, 347, 358, 365, 441, 444, 446, 463, 469], "emploi": [12, 24, 34, 49, 222, 228, 229], "captur": [12, 231], "20": [12, 13, 27, 29, 32, 34, 199, 202, 210, 212, 215, 234, 237, 238, 296, 297, 299, 308, 365, 393, 394, 415, 417, 446, 469, 470, 476, 477], "100": [12, 34, 204, 212, 218, 221, 222, 227, 237, 306, 311, 368, 375, 379, 386, 395, 446, 453, 459, 473, 477], "build": [12, 15, 31, 34, 35, 37, 115, 193, 200, 204, 211, 215, 216, 225, 228, 236, 237, 247, 249, 296, 300, 302, 304, 305, 308, 394, 395, 396, 438, 453, 455, 466, 471, 478], "been": [12, 17, 23, 24, 28, 29, 33, 37, 42, 182, 193, 200, 201, 202, 204, 207, 210, 212, 214, 216, 226, 228, 229, 230, 231, 233, 237, 286, 298, 300, 308, 309, 311, 365, 388, 438, 450, 463], "go": [13, 217, 306, 373, 426, 459], "impact": [13, 230], "dive": 13, "arrowfrag": [13, 16, 236, 460], "vineyard": [13, 15, 16, 23, 28, 31, 33, 192, 193, 198, 199, 208, 215, 220, 221, 226, 232, 233, 236, 238, 268, 273, 276, 277, 308, 309, 453, 458, 459, 467, 469, 472, 473, 474, 477, 479], "basic": [13, 16, 20, 43, 44, 207, 230, 294, 297, 302, 304, 305, 306, 365, 375, 380, 452], "member": [13, 16, 210, 212, 236, 436], "string": [13, 17, 23, 33, 43, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 104, 106, 107, 109, 112, 113, 114, 115, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 199, 204, 205, 207, 208, 210, 225, 236, 237, 239, 244, 281, 295, 296, 297, 298, 299, 300, 303, 305, 306, 307, 308, 310, 311, 326, 330, 331, 340, 438, 440, 442, 446, 448, 455, 457, 458, 459, 460, 469, 477, 479], "consecut": 13, "hashmap": [13, 192, 308], "arrai": [13, 17, 192, 205, 216, 225, 231, 236, 237, 238, 297, 298, 300, 303, 306, 446, 449, 461, 469], "o2g_": 13, "fragment_id": 13, "_": [13, 30, 37, 182, 203, 210, 225, 237, 308, 311, 446, 449, 469, 472, 474, 479], "vertex_label": [13, 236, 239], "perfect": [13, 308], "int64_t": [13, 192, 199, 225, 236, 237, 308, 461, 479], "std": [13, 14, 15, 192, 236, 455, 460], "string_view": 13, "uint64_t": [13, 16, 308, 455], "oid_arrays_": [13, 192], "topologi": [13, 216, 219, 228, 297, 302, 443, 455, 457, 458], "row": [13, 44, 199, 207, 216, 231, 295, 308, 439, 459], "matrix": [13, 225, 231, 237, 302, 311, 373, 391, 406, 409, 438, 446, 449], "src_type": [13, 297], "edge_typ": [13, 43, 45, 130, 148, 182, 218, 221, 222, 227, 294, 296, 297, 298, 299, 300, 303, 306, 310, 458, 473, 478], "pair": [13, 20, 202, 205, 208, 212, 236, 237, 239, 293, 306, 345, 350, 351, 357, 373, 391, 397, 446, 449, 452, 458, 460], "indptr": 13, "ie_lists_": [13, 192], "edge_label": [13, 136, 142, 152, 204, 236, 239, 453], "neighbor_vertex_id": 13, "edge_table_index": 13, "tabl": [13, 42, 182, 191, 207, 208, 212, 216, 225, 234, 294, 296, 308, 453, 455, 457, 458, 460], "uint32_t": [13, 236, 308], "num_edg": 13, "ie_offsets_lists_": [13, 192], "offset": [13, 192, 236, 297, 305, 349, 459], "slice": [13, 200, 238, 308, 452], "ie_list": 13, "ie_offset": 13, "num_vertic": 13, "oe_lists_": [13, 192], "oe_offsets_lists_": [13, 192], "oe_list": 13, "oe_offset": 13, "edge_tables_": [13, 192], "vertex_tables_": [13, 192], "oid_t": [13, 15, 16, 192, 236], "vid_t": [13, 15, 16, 192, 236], "sizeof": 13, "uint8_t": 13, "load_factor": 13, "observ": [13, 23, 193], "practic": [13, 16, 28, 185, 200, 208, 216, 219, 226, 231, 295, 296, 298, 459], "load_factori": 13, "15": [13, 193, 212, 221, 222, 224, 234, 296, 297, 299, 300, 406, 428, 439, 446, 453], "extra": [13, 37, 193, 199, 201, 311, 407, 472], "column": [13, 18, 33, 43, 44, 45, 60, 72, 73, 115, 126, 138, 139, 181, 182, 192, 196, 200, 208, 216, 225, 227, 231, 236, 238, 239, 246, 295, 305, 308, 439, 455, 459, 460, 469, 473, 479], "edge_id": 13, "uniqu": [13, 43, 44, 45, 182, 190, 200, 204, 205, 208, 210, 225, 226, 227, 228, 237, 285, 286, 295, 299, 304, 305, 308, 311, 413, 419, 452, 459, 460], "kept": [13, 210, 212, 236], "summari": [13, 233, 326], "argument": [13, 23, 30, 95, 161, 182, 210, 212, 219, 223, 225, 311, 313, 314, 315, 344, 352, 382, 389, 393, 394, 395, 396, 397, 424, 446, 449, 452, 453, 459, 460, 469], "use_perfect_hash": [13, 236, 287, 308, 453], "load_from": [13, 22, 30, 308, 453, 457], "realli": 13, "margin": 13, "former": [13, 229], "globalvertexmap": 13, "later": [13, 18, 20, 32, 33, 202, 204, 212, 230, 308, 453, 458, 459, 476], "localvertexmap": 13, "suitabl": [13, 45, 185, 226, 233, 296, 300, 306, 365, 459, 462], "dozen": 13, "hundr": [13, 375, 386], "repeatedli": [13, 200, 229], "add_vertic": [13, 196, 204, 225, 308, 446, 449, 450, 473, 474, 479], "sure": [13, 23, 27, 30, 41, 43, 96, 162, 183, 201, 204, 212, 300, 304, 306, 453, 459], "fairli": [13, 202], "8": [13, 20, 31, 32, 33, 35, 37, 115, 193, 199, 202, 204, 210, 212, 215, 218, 234, 237, 295, 349, 372, 391, 414, 423, 425, 431, 435, 441, 443, 446, 448, 459, 461, 472, 477], "absolut": 13, "int32_t": [13, 225, 308, 479], "vid_typ": [13, 33, 236, 287, 308, 453], "compact_edg": [13, 236, 287, 308, 453], "compact": [13, 236, 308], "varint": [13, 308], "half": [13, 308], "generated_eid": 13, "save": [13, 18, 28, 29, 49, 199, 296, 308, 311, 459], "interact": [13, 27, 29, 33, 36, 37, 38, 41, 42, 43, 45, 46, 50, 51, 52, 53, 86, 87, 96, 115, 181, 182, 184, 186, 188, 189, 190, 196, 199, 200, 201, 203, 204, 206, 207, 209, 211, 212, 213, 215, 225, 226, 228, 229, 232, 233, 235, 265, 308, 387, 436, 451, 453, 466, 473, 477], "vertex_id": [13, 24, 188, 196, 225, 479], "retain_oid": [13, 199, 225, 236, 287, 308, 453, 460, 479], "gain": [13, 37], "signific": [13, 228, 233], "arrowprojectedfrag": [13, 15, 16, 236, 245], "implicit": [13, 449], "arrowflattenfrag": 13, "thought": [13, 374], "view": [13, 20, 24, 191, 225, 226, 257, 319, 323, 342, 343, 446, 449, 455, 467], "mainli": [13, 44, 200, 205, 212, 233, 302], "purpos": [13, 207, 212, 226, 458], "penalti": 13, "arrowprojectfrag": 13, "r1": [13, 238, 461, 462], "r2": [13, 238, 461, 462], "r3": [13, 238, 461], "projected_g": 13, "_project_to_simpl": [13, 16, 17, 22], "otherwis": [13, 33, 212, 229, 237, 295, 299, 300, 301, 311, 328, 365, 385, 395, 444, 446, 453, 458, 459], "express": [14, 15, 24, 184, 200, 205, 206, 208, 219, 228, 230, 238, 295, 297, 300, 397, 446, 477], "modifi": [14, 20, 24, 28, 182, 186, 199, 205, 211, 250, 251, 266, 267, 301, 324, 377, 444, 457, 458], "adher": [14, 35, 45, 207, 458], "think": [14, 24], "principl": [14, 304], "privileg": 14, "experienc": [14, 230], "inform": [14, 15, 16, 19, 27, 29, 38, 115, 182, 183, 193, 200, 201, 204, 205, 208, 222, 227, 229, 231, 232, 241, 255, 294, 295, 296, 297, 300, 302, 304, 308, 311, 326, 344, 385, 407, 408, 436, 446, 453, 455, 459, 466], "hop": [14, 200, 208, 210, 212, 215, 216, 219, 226, 230, 231, 294, 298, 300, 302, 303, 304, 306], "slow": [14, 202], "consequ": [14, 226, 229], "piec": [14, 184, 198, 305, 453], "destin": [14, 33, 43, 44, 45, 72, 75, 138, 141, 199, 204, 205, 212, 216, 225, 227, 236, 238, 254, 295, 296, 297, 299, 300, 306, 308, 310, 452, 457, 458, 459, 479], "abovement": 14, "peval": [14, 16, 17, 18, 34, 229, 236, 244, 463, 469], "incev": [14, 16, 17, 18, 34, 229, 236, 244, 463, 469], "assembl": [14, 34, 200, 228, 229, 236, 308], "unlik": [14, 17, 206, 216, 219, 226, 446], "modif": [14, 22, 215, 226, 231, 308, 449], "convent": [14, 37, 193, 207, 379, 405, 467], "taught": [14, 212], "colleg": 14, "textbook": 14, "answer": [14, 34, 37, 193, 204, 226, 459], "collect": [14, 34, 115, 181, 205, 210, 211, 212, 230, 231, 232, 306, 446], "partial": [14, 16, 18, 34, 210, 236, 238, 295, 388, 463], "intricaci": 14, "fixpoint": 14, "monoton": 14, "guarante": [14, 199, 219, 233, 295, 303, 311, 381, 446], "accur": [14, 204, 207], "long": [14, 17, 30, 33, 38, 188, 204, 208, 210, 212, 228, 233, 237, 300, 458, 459, 469, 477], "const": [14, 15, 16, 192, 236, 239, 304, 305, 458, 459, 460], "fragment_t": [14, 15, 16, 236], "frag": [14, 17, 18, 192, 244, 455, 460, 469], "context_t": [14, 15, 16, 236], "ctx": [14, 17, 22, 236, 457, 469], "message_manager_t": [14, 16, 236], "vertex_t": [14, 16, 192, 236], "native_sourc": [14, 18, 469], "getinnervertex": [14, 236], "partial_result": 14, "getoutgoingadjlist": [14, 16, 17, 192, 236, 455, 469], "get_neighbor": 14, "min": [14, 18, 24, 202, 205, 239, 469, 477], "static_cast": [14, 16, 192, 455], "get_data": [14, 192], "isoutervertex": [14, 236], "put": [14, 16, 17, 22, 45, 46, 52, 86, 87, 115, 118, 152, 153, 181, 182, 304], "channel": [14, 16, 37], "syncstateonoutervertex": 14, "els": [14, 16, 18, 192, 212, 296, 306, 308, 404, 458, 459, 469], "next_modifi": 14, "inner_vertic": [14, 16], "innervertic": [14, 16, 17, 192, 236, 455, 469], "parallelprocess": [14, 16], "thread_num": [14, 16], "tid": [14, 16], "msg": [14, 16, 24, 212, 239, 458], "atomic_min": 14, "curr_modifi": 14, "foreach": [14, 16], "distv": [14, 18, 469], "ndistu": 14, "outer_vertic": 14, "outervertic": [14, 192, 236], "dijkstra": [14, 18, 229, 311, 469], "checkout": [14, 37, 301], "seri": [15, 212, 231, 236, 300, 458], "strong": [15, 185, 200, 229], "typenam": [15, 16, 54, 58, 61, 68, 80, 85, 113, 192, 236], "frag_t": [15, 16, 236], "yourapp": 15, "flashappbas": 15, "v_type": 15, "install_flash_work": 15, "flashvertexdatacontext": 15, "v_res_typ": 15, "sync_all_": 15, "re": [15, 37, 42, 43, 199, 211, 212, 230, 297, 300, 304, 306, 452, 461], "shared_ptr": [15, 192, 236, 455, 460], "fw_t": 15, "fw": 15, "Or": [15, 17, 19, 22, 29, 36, 41, 188, 204, 212, 225, 453, 469, 479], "global": [15, 24, 200, 208, 210, 212, 231, 287, 308, 438, 453, 460, 466, 477], "flashglobaldatacontext": 15, "g_res_typ": 15, "let": [15, 18, 19, 41, 44, 199, 200, 212, 225, 231, 408, 452], "bfsflash": 15, "bfs_type": 15, "value_t": 15, "di": 15, "o_sourc": 15, "oid2flashid": 15, "definemapv": 15, "init": [15, 16, 17, 18, 43, 44, 98, 182, 183, 190, 192, 221, 225, 236, 237, 239, 244, 294, 296, 297, 301, 304, 306, 446, 449, 455, 463, 469, 478, 479], "vset_t": 15, "ctruev": 15, "definefv": 15, "definemap": 15, "cond": [15, 354], "len": [15, 210, 212, 221, 223, 296, 311, 320, 351, 368, 370, 373, 375, 376, 380, 446], "ed": [15, 23, 379, 393, 400, 423, 429], "ctruee": 15, "rather": [15, 18, 186, 212, 225, 230, 232, 233, 311, 365, 407, 458], "project_to_simpl": 15, "not_compatible_for": 15, "arrow_properti": [15, 30, 248, 449], "dynamic_properti": [15, 261, 449], "def": [15, 18, 23, 203, 218, 221, 222, 223, 224, 225, 227, 244, 294, 296, 297, 298, 299, 300, 303, 306, 352, 459, 469, 473, 474, 478, 479], "arg": [15, 50, 51, 52, 53, 86, 87, 96, 115, 221, 223, 236, 237, 238, 239, 272, 290, 297, 298, 299, 300, 303, 306, 310, 453, 459], "appasset": [15, 18, 244, 245, 249, 451, 469], "algo": [15, 16, 17, 22, 23, 237, 245], "flash_bf": 15, "vertex_data": [15, 16, 153, 178, 237, 245], "gscoordin": [15, 28, 36], "builtin": [15, 19, 20, 46, 181, 188, 447, 449, 451], "gs_conf": [15, 16, 245], "yaml": [15, 16, 28, 29, 38, 42, 43, 44, 45, 183, 188, 190, 199, 211, 223, 237, 245, 453, 457, 459, 477], "cpp_flash": 15, "class_nam": [15, 16, 245], "compatible_graph": [15, 16, 245], "immutableedgecutfrag": 15, "log": [15, 17, 42, 89, 155, 182, 193, 198, 221, 222, 226, 228, 458, 460, 472], "p2p": [15, 17, 22, 23], "network": [15, 27, 45, 193, 196, 198, 201, 212, 216, 220, 222, 226, 227, 229, 232, 233, 234, 235, 237, 294, 295, 296, 298, 300, 302, 306, 311, 366, 367, 373, 375, 379, 382, 383, 384, 387, 399, 423, 434, 435, 437, 438, 443, 447, 461, 472], "load_p2p_network": [15, 16, 17, 18, 196, 237, 238, 469], "attribut": [15, 19, 45, 208, 219, 222, 227, 229, 231, 236, 237, 270, 281, 296, 297, 299, 302, 306, 307, 310, 311, 313, 314, 315, 330, 331, 340, 352, 365, 370, 389, 393, 394, 395, 396, 397, 400, 401, 402, 436, 438, 440, 443, 444, 446, 447, 449, 455], "convert": [15, 20, 23, 49, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 207, 216, 237, 252, 253, 263, 264, 276, 277, 294, 295, 302, 306, 366, 367, 424, 441, 446, 448, 449, 455], "simple_graph": [15, 16], "dist": [15, 17, 203, 237, 238, 301, 304, 393, 395, 397, 453, 469, 477], "codegen": [15, 200], "bit": [15, 202, 205, 210, 212, 457], "longer": [15, 221, 239, 453], "retriev": [15, 47, 49, 198, 204, 208, 210, 227, 228, 238, 252, 253, 263, 264, 268, 272, 276, 277, 297, 298, 300, 306, 311, 452, 459, 460], "displai": [15, 190, 211, 295], "vertex_rang": [15, 238, 252, 253, 263, 264, 268, 276, 277, 308, 452], "end": [15, 16, 192, 196, 205, 210, 212, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 233, 238, 239, 300, 305, 311, 325, 334, 339, 340, 353, 365, 448, 452, 458, 463], "sort_valu": 15, "pip3": [16, 19, 23, 35, 37, 181, 193, 203, 211, 466, 470, 472, 476], "degre": [16, 19, 20, 192, 196, 207, 212, 219, 237, 239, 297, 298, 303, 311, 320, 345, 346, 365, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 391, 403, 404, 405, 406, 440, 446, 447, 459], "vertexdatacontext": [16, 17, 236, 311, 469], "myappcontext": 16, "explicit": [16, 236, 390, 446, 453], "parallelmessagemanag": [16, 17, 469], "param1": [16, 87, 153], "setvalu": [16, 17, 469], "vertex_array_t": [16, 236], "variabl": [16, 29, 33, 39, 41, 45, 193, 201, 210, 244, 365, 453, 459, 460, 472], "And": [16, 18, 23, 29, 31, 36, 38, 196, 200, 202, 212, 225, 234, 237, 238, 299, 304, 449, 452, 453, 459], "zero": [16, 45, 228, 237, 295, 300, 311, 328, 346, 355, 388, 440, 441, 460], "myapp": 16, "parallelappbas": [16, 17, 469], "parallelengin": [16, 17, 469], "install_parallel_work": 16, "constexpr": [16, 236], "messagestrategi": [16, 18, 236, 239, 469], "message_strategi": [16, 236], "ksynconoutervertex": [16, 18, 236, 239, 469], "loadstrategi": [16, 236], "load_strategi": [16, 236], "kbothoutin": [16, 236], "initchannel": 16, "noth": [16, 239, 255, 308, 310, 446], "forc": [16, 37, 225], "forcecontinu": [16, 17, 469], "getincomingadjlist": [16, 192, 236], "counter": [16, 212], "runnabl": [16, 17, 23, 83, 149], "content": [16, 45, 50, 51, 52, 53, 86, 87, 96, 116, 117, 118, 119, 152, 153, 162, 182, 185, 196, 212, 222, 225, 227, 311, 443, 457, 479], "my_app": [16, 18, 469], "cpp_pie": [16, 237, 245], "context_typ": [16, 236, 237, 245], "dynamicprojectedfrag": 16, "codebas": [16, 35], "my_app_context": 16, "zip": [16, 185, 203, 204, 211, 245, 393, 397, 446, 477], "jr": 16, "load_app": [16, 17, 18, 22, 469], "path_to_your_gar_resourc": 16, "to_numpi": [16, 17, 22, 237, 238, 308, 452, 469], "demo": [17, 22, 23, 202, 241, 453, 459, 467, 469], "turn": [17, 47, 186, 191, 193, 204, 234, 241, 440, 467], "verbos": [17, 23, 38, 193, 467], "cluster_typ": [17, 22, 204, 225, 237, 238, 453, 457, 469, 479], "add_lib": [17, 22, 453], "home": [17, 22, 23, 28, 38, 43, 44, 193, 196, 225, 236, 301, 302, 304, 305, 307, 308, 311, 355, 466, 467, 469, 471, 479], "19": [17, 22, 23, 32, 193, 203, 212, 234, 296, 297, 299, 467, 472, 476], "shade": [17, 22, 23, 469], "java_pi": [17, 237], "threadnum": [17, 469], "info": [17, 38, 42, 183, 193, 202, 212, 223, 239, 308, 446, 449, 453, 458, 459, 460, 467], "avail": [17, 23, 29, 30, 41, 44, 182, 184, 191, 196, 204, 205, 208, 211, 219, 225, 228, 234, 237, 293, 306, 394, 395, 396, 446, 453, 455, 458, 466, 469], "mvn": [17, 22, 115, 241, 459], "clean": [17, 32, 115, 196, 202, 204, 227, 241, 304, 458], "dskiptest": [17, 241], "pom": [17, 23, 115, 459], "xml": [17, 23, 236, 459], "groupid": [17, 23, 115, 459, 469], "artifactid": [17, 23, 115, 459, 469], "shall": [17, 23], "fat": 17, "plugin": [17, 23, 459, 469], "spark": [17, 457], "drastic": 17, "great": [17, 23, 37, 459], "suppos": [17, 212, 440, 458], "traversecontext": [17, 469], "overrid": [17, 225, 236, 294, 304, 466, 469], "ifrag": [17, 469], "parallelcontextbas": [17, 469], "adjlist": [17, 236, 239, 457, 469], "nbr": [17, 20, 192, 236, 239, 446, 469], "dst": [17, 18, 30, 86, 115, 152, 181, 196, 208, 219, 225, 238, 294, 297, 308, 310, 452, 455, 458, 469, 478, 479], "largest": [17, 212, 311, 391, 469], "vertexarrai": [17, 236, 239, 469], "math": [17, 218, 222, 227, 311, 395, 396, 473, 475], "max": [17, 205, 239, 307, 311, 469, 477], "pars": [17, 200, 225, 237, 295, 455, 459], "maxiter": [17, 469], "jsonobject": [17, 469], "gsvertexarrai": [17, 469], "createfficontext": [17, 469], "containskei": [17, 469], "getinteg": [17, 469], "javadoc": [17, 35], "proper": [17, 37], "javaapp": [17, 451, 469], "But": [17, 199, 212, 225, 233, 241, 446, 452], "rememb": [17, 22, 23, 30, 33, 42, 188, 459, 466], "pack": [17, 23, 469], "param": [17, 23, 29, 83, 102, 149, 168, 182, 193, 202, 204, 223, 237, 257, 258, 272, 287, 289, 293, 300, 306, 453, 459, 469], "b": [17, 18, 22, 37, 205, 207, 210, 212, 300, 355, 373, 386, 392, 393, 397, 402, 403, 404, 406, 434, 442, 446, 469, 477], "bother": 17, "click": [17, 36, 37, 219, 296, 297, 300, 470], "pure": [18, 236, 463], "just": [18, 19, 23, 27, 43, 46, 181, 183, 185, 188, 193, 196, 199, 210, 212, 233, 241, 304, 308, 446, 449, 453, 459, 461], "udf": [18, 244, 452, 469], "decor": [18, 469], "vd_type": [18, 239, 244, 469], "md_type": [18, 239, 244, 469], "youralgorithm": [18, 469], "staticmethod": [18, 244, 469], "statu": [18, 27, 29, 30, 38, 47, 50, 51, 52, 53, 86, 87, 89, 96, 100, 115, 116, 117, 118, 119, 152, 153, 155, 162, 166, 181, 188, 190, 193, 221, 304, 305, 311, 459, 463, 467], "cython": [18, 34, 193, 272, 451, 469], "sssp_pie": [18, 469], "v_label_num": [18, 460, 469], "vertex_label_num": [18, 239, 455, 460, 469], "v_label_id": [18, 239, 469], "init_valu": [18, 239, 469], "1000000000": [18, 237, 469], "pieaggregatetyp": [18, 239, 469], "kminaggreg": [18, 239, 469], "register_sync_buff": [18, 239, 469], "get_config": [18, 239, 453, 469], "declar": [18, 200, 210, 212, 215, 230, 233, 296, 469], "get_inner_nod": [18, 239, 469], "break": [18, 37, 49, 186, 211, 306, 469], "set_node_valu": [18, 239, 469], "e_label_num": [18, 192, 460, 469], "edge_label_num": [18, 239, 455, 460, 469], "e_label_id": [18, 469], "get_outgoing_edg": [18, 239, 469], "third": [18, 225, 226, 230, 308, 431, 432], "get_int": [18, 239, 469], "get_node_valu": [18, 239, 469], "iv": [18, 469], "inner_nod": [18, 239, 469], "v_dist": [18, 469], "u_dist": [18, 192, 469], "classic": [18, 219, 299, 447], "yourpregelalgorithm": [18, 469], "sssp_pregel": [18, 469], "set_valu": [18, 239, 469], "src_id": [18, 192, 219, 295, 296, 297, 299, 300, 303, 306, 310, 469], "cur_dist": [18, 469], "new_dist": [18, 469], "outgoing_edg": [18, 239, 469], "vote_to_halt": [18, 239, 469], "sin": [18, 469], "m_pi": [18, 469], "translat": [18, 37, 204, 226], "generate_eid": [18, 199, 225, 236, 287, 308, 453, 460, 469, 479], "test": [18, 23, 29, 33, 47, 49, 182, 185, 193, 198, 199, 202, 212, 215, 218, 221, 222, 227, 231, 294, 304, 306, 310, 330, 331, 365, 446, 448, 453, 458, 459, 466, 470, 471, 473, 478], "futur": [18, 45, 115, 181, 186, 205, 210, 212, 225], "to_gar": [18, 469], "my_sssp_pregel": [18, 469], "gar": [18, 237, 245, 469], "construct": [19, 186, 191, 212, 216, 219, 225, 226, 227, 228, 236, 287, 294, 295, 296, 297, 298, 308, 309, 313, 314, 354, 375, 377, 378, 380, 386, 390, 391, 392, 400, 403, 404, 405, 406, 408, 424, 428, 432, 438, 440, 453, 457, 460], "expand": [19, 186, 200, 212, 213, 298, 300, 447], "add_edges_from": [19, 20, 330, 446], "add_nod": [19, 20, 446, 449], "number_of_nod": [19, 20, 311, 355, 439, 446], "number_of_edg": [19, 20, 320, 355, 439, 446], "sort": [19, 20, 192, 200, 212, 311, 317, 345, 349, 352, 355, 380, 381, 439, 440, 446, 458], "connected_compon": [19, 311], "nx": [19, 20, 196, 248, 250, 251, 254, 257, 259, 261, 266, 267, 271, 274, 275, 308, 311, 446, 448, 449], "add_nodes_from": [19, 20, 446], "red": [19, 20, 37, 204, 295, 446], "green": [19, 20, 36, 37], "add_edg": [19, 20, 181, 196, 204, 225, 308, 324, 330, 331, 334, 339, 340, 446, 449, 473, 474, 479], "1415": [19, 20], "all_pairs_shortest_path": 19, "sp": [19, 184], "dict": [19, 20, 27, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 237, 238, 265, 273, 293, 296, 297, 300, 308, 309, 393, 394, 395, 396, 403, 404, 424, 446, 452, 453, 459], "draw": [19, 49, 186, 212, 393, 396], "matplotlib": [19, 212], "with_label": 19, "font_weight": 19, "bold": [19, 234], "twitter": [19, 234], "wget": [19, 22, 23, 29, 35, 203, 301, 477], "raw": [19, 22, 23, 43, 44, 46, 183, 190, 199, 200, 216, 263, 264, 296, 302, 304, 305, 310], "githubusercont": [19, 22, 23], "p": [19, 20, 31, 36, 46, 49, 204, 210, 212, 227, 228, 237, 296, 306, 311, 369, 370, 371, 373, 382, 383, 384, 387, 388, 390, 392, 394, 395, 396, 397, 400, 402, 477], "o": [19, 22, 23, 27, 30, 33, 38, 236, 306, 311, 328, 379, 381, 386, 394, 395, 396, 398, 399, 400, 446, 459, 470, 473], "gs_nx": 19, "g1": [19, 308, 450, 461, 462], "read_edgelist": [19, 448], "expandvar": [19, 22], "nodetyp": [19, 448], "create_us": [19, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 375, 376, 377, 378, 380, 382, 383, 384, 386, 390, 391, 392, 398, 399, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 441, 448], "g2": [19, 308, 446, 450, 461, 462], "ret_g": 19, "ret_nx": 19, "lack": [20, 32, 204, 232, 311], "hashabl": [20, 326, 341, 403, 446, 448], "float": [20, 79, 92, 205, 208, 210, 221, 225, 234, 237, 294, 295, 296, 297, 305, 306, 307, 311, 365, 368, 369, 370, 371, 373, 384, 385, 386, 387, 388, 393, 394, 395, 396, 397, 400, 401, 402, 438, 446, 448, 453, 457, 461, 477, 478, 479], "tupl": [20, 212, 225, 295, 296, 297, 306, 308, 311, 330, 331, 340, 352, 393, 397, 403, 442, 446, 448, 453], "though": [20, 365, 446, 459], "yield": [20, 49, 188, 300, 306, 393, 397, 446], "node_attribute_dict": 20, "discuss": [20, 193, 212, 311, 458, 472], "incorpor": [20, 49, 207], "path_graph": [20, 311, 322, 324, 325, 331, 446, 448], "grown": [20, 355, 388, 446], "unpack": [20, 211, 236, 446], "ebunch": [20, 446], "dictionari": [20, 184, 237, 281, 311, 393, 394, 395, 396, 403, 404, 405, 406, 446, 448, 457], "11": [20, 27, 30, 31, 32, 199, 202, 212, 218, 234, 237, 295, 296, 297, 299, 313, 314, 315, 351, 446, 459, 467], "complaint": 20, "clear": [20, 37, 210, 212, 250, 251, 346, 348, 349, 351, 353, 355, 356, 358, 360, 361, 364, 375, 377, 378, 380, 382, 383, 384, 386, 390, 391, 392, 398, 399, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 432, 433, 441, 446, 448, 459], "quietli": [20, 341, 446], "ignor": [20, 46, 311, 322, 341, 446, 453], "spam": 20, "stage": [20, 193, 198, 216, 232, 233, 300, 458], "seen": [20, 200, 226, 458], "report": [20, 193, 207, 234, 271, 369, 370, 371, 446, 449], "adj": [20, 239, 311, 446], "item": [20, 29, 44, 183, 223, 226, 295, 296, 297, 300, 306, 311, 446, 459], "One": [20, 200, 205, 226, 230, 231, 232, 233, 237, 298, 300, 377, 386, 440, 459], "nbunch": [20, 319, 323, 325, 341, 446], "remove_nod": [20, 446], "remove_nodes_from": [20, 446], "remove_edg": [20, 446], "remove_edges_from": [20, 375, 377, 446], "instanti": [20, 237, 306, 461], "digraph": [20, 308, 313, 323, 325, 330, 331, 334, 339, 340, 351, 368, 369, 370, 373, 377, 378, 380, 382, 383, 384, 385, 389, 440, 441, 442, 444, 447, 448, 449], "edgelist": [20, 424, 448], "subscript": [20, 446], "notat": [20, 42, 44, 411, 413, 415, 417, 419, 425, 427, 446], "yellow": [20, 295], "blue": [20, 295, 446], "undirect": [20, 45, 225, 231, 237, 257, 296, 300, 308, 311, 317, 321, 343, 366, 367, 373, 375, 382, 384, 387, 389, 390, 391, 393, 394, 395, 396, 397, 403, 408, 412, 413, 416, 419, 420, 422, 428, 441, 443, 446, 460], "twice": [20, 424, 446], "fg": [20, 460], "add_weighted_edges_from": [20, 330, 446], "125": [20, 295, 379, 390], "75": [20, 212, 218, 221, 222, 227, 234, 311, 369, 370, 371, 373, 453, 473], "375": 20, "eattr": [20, 446], "wt": 20, "attach": [20, 236, 295, 382, 385], "fridai": [20, 446, 449], "mondai": 20, "5pm": [20, 446], "2pm": [20, 446], "room": [20, 446], "714": [20, 446], "to_direct": [20, 308, 366, 367, 382, 384, 446], "represent": [20, 45, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 186, 200, 226, 228, 231, 308, 444, 446, 457], "dg": [20, 215, 231], "dgv": 20, "as_view": [20, 342, 343, 446], "shallow": 20, "out_edg": [20, 323, 446], "in_degre": [20, 219, 221, 298, 300, 303, 306, 377, 403, 404, 446], "predecessor": [20, 316, 389, 440, 446], "successor": [20, 283, 316, 383, 384, 389, 446], "out_degre": [20, 377, 403, 404, 446], "feel": [20, 37, 193], "inconsist": [20, 234], "inde": [20, 22], "lump": 20, "danger": 20, "probabl": [20, 37, 210, 219, 231, 237, 298, 303, 368, 369, 370, 371, 373, 375, 379, 382, 384, 385, 386, 387, 388, 393, 394, 395, 396, 397, 400, 402], "to_undirect": [20, 308, 382, 384, 446], "theoret": 20, "load_ldbc": [20, 212, 457, 477], "foo": [20, 446], "famou": [22, 23, 445], "hadoop": [22, 459], "stop": [22, 27, 30, 43, 53, 115, 119, 181, 182, 190, 228, 232, 236, 311], "open": [22, 36, 37, 182, 201, 211, 213, 219, 230, 233, 306, 448, 458, 459], "actual": [22, 23, 28, 43, 45, 181, 201, 208, 210, 212, 219, 240, 242, 299, 397, 446, 449, 457, 467], "vertexinputformat": 22, "edgeinputformat": 22, "vformat": [22, 308], "p2pvertexinputformat": 22, "eformat": [22, 308], "p2pedgeinputformat": 22, "gs_test_dir": [22, 33], "graphscope_sess": [22, 308], "31": [22, 23, 196, 225, 296, 297, 299, 479], "v_prop": [22, 236, 270], "vdata": 22, "e_prop": [22, 236, 270], "giraph_sssp": 22, "sourceid": 22, "faster": [22, 183, 311], "toward": [22, 459], "offici": [22, 199, 201, 202, 211, 230], "pl": 22, "snapshot": [22, 208, 233, 455, 459], "writabl": 22, "degrad": [22, 233], "procedur": [22, 29, 42, 43, 47, 52, 96, 115, 118, 162, 181, 182, 183, 186, 187, 189, 191, 199, 200, 212, 247, 388], "except": [22, 50, 51, 52, 53, 86, 87, 96, 116, 117, 118, 119, 152, 153, 162, 186, 193, 211, 218, 221, 222, 225, 227, 232, 299, 306, 324, 341, 345, 356, 365, 375, 377, 426, 446, 453, 458, 473], "right": [22, 205, 207, 210, 225, 304, 347, 356, 358, 379, 444], "inputformat": 22, "sparksess": 23, "gssparksess": 23, "experi": [23, 32, 37, 49, 182, 196, 200, 215, 229, 231, 233, 234, 368], "proceed": [23, 27, 183, 368, 386], "side": [23, 37, 200, 210, 211, 237, 256, 296, 349, 458], "venv": [23, 202, 227], "virtualenv": 23, "pyspark_venv": 23, "bin": [23, 31, 42, 43, 49, 182, 183, 188, 201, 202, 211, 212, 226, 227, 320, 459, 467, 471, 477], "pyspark_venv_g": 23, "tar": [23, 29, 31, 459], "gz": [23, 31, 448, 459], "upload": [23, 199], "pyspark_driver_python": 23, "pyspark_python": 23, "archiv": [23, 226, 457, 477], "oss": [23, 29, 31, 225, 236, 301, 308, 459, 469, 470, 479], "beij": [23, 29, 31, 216, 231, 295, 459, 470], "fixm": 23, "yuansi": 23, "env": [23, 193, 202, 223, 227, 301], "var": [23, 33, 38, 193, 225, 306, 459, 467, 479], "gs_jar": 23, "l": [23, 29, 35, 188, 219, 231, 298, 366, 367, 369, 370, 371, 378, 379, 380, 382, 383, 384, 387, 394, 395, 396, 397, 399, 403, 404, 405, 406, 435, 438, 446, 466, 467], "lib": [23, 31, 115, 184, 201, 245, 459], "7077": 23, "master_url": 23, "conf": [23, 42, 43, 183, 201, 211, 236, 459, 477], "executor": [23, 35, 38, 46, 199, 201, 226, 309, 467], "driver": [23, 27, 115, 181, 186, 206, 211, 225, 273, 308, 459, 477], "2g": 23, "10g": [23, 471], "minregisteredresourcesratio": 23, "bfstest": 23, "placehold": [23, 205], "url": [23, 89, 155, 182, 201, 308, 309, 459, 477], "rdd": 23, "classifi": [23, 216, 218, 222, 227, 231, 306, 469], "maven": [23, 47, 241, 459, 469], "conflict": [23, 202, 212, 218, 308, 436, 459], "correctli": [23, 37, 193, 215, 311, 459], "resolv": [23, 28, 193, 225, 308, 460], "goal": [23, 186, 191, 200, 205, 216, 228, 231, 458], "reloc": 23, "shadedpattern": 23, "vineyardmemori": 23, "memorystr": 23, "builder": [23, 192, 200, 352, 459], "config": [23, 27, 28, 31, 46, 190, 199, 201, 211, 223, 271, 281, 293, 294, 307, 310, 450, 453, 455, 459, 460, 466, 477, 478], "socket": [23, 28, 30, 201, 236, 460], "bound": [23, 45, 182, 210, 212, 230, 272, 365, 453, 458, 461], "vineyardsock": 23, "filepath": 23, "sock": [23, 28, 201], "gssubmitjar": 23, "grapegraph": 23, "togsgraph": 23, "vd": 23, "classtag": 23, "grapegraphimpl": 23, "loadgraphtog": 23, "vfilepath": 23, "efilepath": 23, "numpartit": 23, "shell": [23, 35, 49, 183, 188, 189, 199, 201, 206, 230, 237], "grow": [24, 186, 196, 215, 226, 365, 375, 382, 383, 384, 445, 458], "capac": [24, 33, 201, 446, 453], "indivis": 24, "succinctli": [24, 184], "oppos": [24, 219], "orient": [24, 219, 233, 303, 459], "googl": [24, 35, 229, 471], "powergraph": [24, 233, 234], "wa": [24, 29, 30, 37, 188, 207, 210, 212, 228, 234, 300, 311, 365, 380, 393, 394, 395, 396, 445, 459], "2010": [24, 234, 237, 311, 371, 438, 443], "sequenc": [24, 184, 205, 210, 212, 237, 308, 345, 365, 375, 376, 377, 378, 379, 380, 381, 397, 403, 404, 407, 440, 441, 446, 447, 460], "conceptu": [24, 207], "behavior": [24, 42, 182, 210, 212, 225, 239, 453], "becom": [24, 188, 196, 207, 212, 219, 446, 458, 459], "inact": 24, "again": [24, 193, 225, 461, 466], "termin": [24, 36, 183, 204, 466], "halt": [24, 230, 239, 385], "individu": [24, 199, 201, 207, 222, 227], "messageiter": [24, 239], "mindist": 24, "issourc": 24, "inf": 24, "done": [24, 216, 219, 295, 306, 311, 408, 460], "getvalu": [24, 192], "mutablevalu": 24, "outedgeiter": 24, "getoutedgeiter": 24, "sendmessageto": 24, "votetohalt": 24, "drop": [24, 37, 193, 459], "dramat": 24, "face": [24, 31, 200, 212, 229, 431, 432], "power": [24, 115, 181, 188, 205, 206, 210, 212, 215, 230, 237, 311, 365, 375, 423, 446], "law": [24, 365, 375], "gather": [24, 453], "scatter": [24, 296], "accumul": [24, 219, 440], "workload": [27, 36, 186, 196, 198, 200, 201, 209, 212, 215, 226, 228, 234, 459, 461, 462], "grpc": [27, 28, 31, 193, 236, 470, 472], "linux": [27, 30, 31, 36, 185, 199, 218, 234, 241, 476], "maco": [27, 30, 36, 185, 193, 202, 470, 472, 473, 476], "skip": [27, 31, 35, 230, 241, 459], "minikub": [27, 30, 459], "instruct": [27, 29, 30, 33, 37, 183, 186, 188, 199, 201, 202, 203, 204, 211, 227, 230, 236, 249, 300], "platform": [27, 32, 37, 198, 199, 200, 218, 232, 233, 234, 241, 295, 437, 453], "desktop": [27, 459, 473], "server": [27, 29, 46, 86, 87, 96, 152, 153, 162, 181, 182, 200, 201, 204, 208, 211, 213, 215, 219, 224, 226, 228, 230, 235, 299, 304, 305, 306, 459, 471, 477], "kubectl": [27, 29, 30, 33, 38, 46, 193, 199, 459, 467, 472], "kube": [27, 453], "apivers": [27, 33, 223], "v1": [27, 33, 35, 50, 51, 52, 53, 86, 87, 96, 115, 116, 117, 118, 119, 152, 153, 162, 181, 182, 193, 210, 212, 218, 221, 222, 223, 227, 230, 294, 411, 424, 449, 472, 473, 478], "certif": 27, "ca": 27, "crt": 27, "last": [27, 30, 212, 300, 305, 308, 368, 440, 467], "16": [27, 31, 199, 201, 212, 234, 294, 296, 297, 299, 301, 402, 425, 439, 478], "2023": [27, 207, 467], "44": [27, 46, 234, 296, 297, 299, 439], "05": [27, 373, 386], "cst": 27, "sig": [27, 469, 476], "28": [27, 210, 212, 216, 231, 234, 296, 297, 299, 443], "cluster_info": 27, "172": [27, 234], "21": [27, 31, 196, 212, 234, 237, 296, 297, 299, 419, 459], "67": [27, 234, 237], "111": 27, "8443": 27, "context_info": 27, "namespac": [27, 28, 29, 30, 33, 38, 223, 453], "profil": [27, 477], "encapsul": [27, 49, 183, 188, 215, 216, 294, 300, 453], "entranc": [27, 300], "tag": [27, 41, 46, 210, 212, 234, 373, 453, 459, 471], "intranet": 27, "internet": [27, 29, 31, 204, 212, 229, 443, 445], "might": [27, 42, 45, 183, 193, 311, 403, 446, 462], "k8s_image_registri": [27, 33, 453], "k8s_image_repositori": [27, 453], "k8s_image_tag": [27, 33, 223, 453], "fit": [27, 186, 196, 199, 220, 221, 241], "increas": [27, 38, 42, 193, 196, 296, 344, 345, 353, 375, 377, 385, 403, 406, 408, 458], "cpu": [27, 182, 193, 199, 223, 224, 301, 453, 462, 472], "num_work": [27, 28, 33, 223, 224, 293, 453, 477], "k8s_engine_cpu": [27, 293, 453], "32": [27, 210, 234, 296, 297, 299, 307, 311, 457], "k8s_engine_mem": [27, 193, 223, 293, 453, 472], "256gi": 27, "vineyard_shared_mem": [27, 193, 223, 293, 453, 472], "preexist": [27, 207], "k8s_client_config": [27, 453], "disk": [27, 186, 193, 199, 226, 459], "test_data": [27, 218, 222, 227, 470, 473], "testingdata": [27, 30, 33, 470, 473], "k8s_volum": [27, 30, 33, 293, 453, 470, 473], "constructor": [27, 225, 346, 348, 349, 351, 353, 355, 356, 358, 360, 361, 364, 375, 377, 378, 380, 382, 383, 384, 386, 390, 391, 392, 398, 399, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 432, 433, 441, 448], "vm": [27, 30, 236], "copi": [27, 29, 30, 199, 226, 228, 233, 254, 311, 318, 322, 324, 325, 383, 389, 444, 446, 449, 457, 458, 459, 460, 461], "hostpath": [27, 30, 33, 46, 199, 453, 470, 473], "expandus": [27, 470, 473], "mountpath": [27, 30, 33, 223, 453, 470, 473], "expect": [27, 34, 37, 47, 193, 225, 241, 375, 377, 379, 449, 453], "monitor": [27, 29, 215], "wait": [27, 89, 193, 453], "finish": [27, 192, 211, 221, 239, 296, 299, 459], "remov": [27, 29, 86, 87, 115, 152, 153, 181, 190, 207, 210, 212, 237, 241, 301, 318, 324, 326, 372, 375, 377, 379, 421, 424, 440, 446, 459], "remain": [27, 186, 188, 205, 210, 225, 229, 295, 300, 380, 407], "statefulset": [27, 459], "svc": [27, 46, 199], "left": [27, 36, 42, 205, 207, 210, 237, 308, 311, 347, 379], "service_port": 28, "63800": 28, "launcher_typ": 28, "operator_launch": 28, "gae_endpoint": 28, "60001": 28, "instance_id": [28, 460], "0000": [28, 196, 212], "rpc_port": 28, "9600": 28, "sai": [28, 41], "configmap": [28, 223], "mount": [28, 30, 33, 43, 193, 200, 225, 305, 453, 470, 472, 473], "ideal": [29, 37, 45, 186, 233], "deploy_graphscope_on_self_managed_k8": 29, "chart": [29, 46, 193, 199, 201, 212, 459, 470, 472], "minut": [29, 193, 200], "succe": 29, "past": [29, 45, 200, 461], "noteport": 29, "node_ip": [29, 459], "ojsonpath": 29, "hostip": 29, "node_port": 29, "spec": [29, 33, 223, 236, 306], "nodeport": [29, 223, 453, 459, 473], "echo": [29, 31], "listen": [29, 42, 46, 115, 181, 186, 201, 236], "statement": [29, 300, 459], "ident": [29, 238, 254, 342, 343, 347, 418, 438, 440, 446], "reconnect": [29, 453], "disconnect": [29, 311, 387, 388, 403, 406, 453, 466], "sess2": 29, "comment": [29, 37, 196, 204, 205, 212, 225, 295, 446, 448, 449, 457, 474, 479], "homepag": 29, "remot": [29, 36, 115, 211, 223, 224, 241, 309, 453, 477], "cater": [29, 226], "tgz": 29, "unzip": [29, 185, 203, 204, 211, 477], "zxvf": 29, "bundl": [30, 453], "aliv": 30, "reserv": 30, "simplifi": [30, 49, 199, 226, 227, 228, 230, 232, 295, 300, 458], "etcd": [30, 193, 199, 453, 455, 470], "replica": [30, 199, 223], "etcd_replica": 30, "greater": [30, 33, 205, 210, 237, 296, 311, 365, 396, 453, 458], "ag": [30, 33, 44, 45, 153, 182, 200, 207, 208, 210, 212, 216, 231, 294, 295, 308, 452, 467, 477, 478], "33": [30, 186, 210, 296, 297, 299, 436, 439], "vineyardd": [30, 33, 201], "vineyardctl": [30, 453], "v6d": [30, 31, 199, 225, 453], "blob": [30, 193, 469], "cmd": [30, 236, 453], "readm": [30, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 241], "md": [30, 306], "notic": [30, 33, 199, 208, 212, 226, 300, 308, 439, 446, 453, 461], "charact": [30, 44, 437, 442, 448], "vineyard_deploy": 30, "restart": [30, 42, 49, 53, 115, 119, 181, 182, 188, 190, 467], "etcd0": 30, "73m": 30, "5db59987f": 30, "vr2fg": 30, "beforehand": 30, "onto": 30, "stai": 30, "k8s_namespac": [30, 33, 293, 453], "k8s_vineyard_deploy": [30, 33, 293, 453], "reload": [30, 459], "vineyard_id": [30, 33, 308, 467], "new_sess": 30, "22731319746904674": 30, "objectid": [30, 33, 236, 308, 453, 458, 460], "softwar": [30, 33, 44, 86, 152, 182, 199, 202, 207, 210, 215, 226, 308, 460], "successfulli": [30, 86, 87, 96, 152, 153, 162, 182, 185, 201, 204, 216, 221, 365, 459], "folder": [31, 38, 43, 185, 190, 223, 225, 458], "cento": [31, 32, 193, 202, 234, 472, 476], "82": [31, 234], "boost": [31, 215, 226, 236], "perl": 31, "v3": [31, 230, 234], "24": [31, 153, 199, 212, 234, 296, 297, 299, 413, 431, 439], "openmpi": [31, 234], "gflag": 31, "glog": [31, 207], "arrow": [31, 44, 192, 236, 248, 261, 308, 449], "74": [31, 234, 437], "openssl": [31, 193, 472], "zlib": 31, "protobuf": 31, "49": [31, 212, 234, 296, 297, 299], "13": [31, 35, 212, 234, 295, 296, 297, 299, 351, 392], "libclang": 31, "curl": [31, 47, 211], "lo": [31, 211], "czf": 31, "mkdir": [31, 193, 306, 472], "workdir": 31, "xzf": 31, "yum": 31, "scl": 31, "rh": [31, 192], "y": [31, 32, 212, 223, 224, 237, 392, 393, 397], "devtoolset": 31, "python38": 31, "opt": [31, 36, 42, 188, 200, 201, 217, 306], "bash": [31, 210, 223, 467, 471], "euxo": 31, "pipefail": 31, "dir": [31, 459], "ld_library_path": 31, "lib64": 31, "py2": 31, "py3": [31, 471], "manylinux2010_x86_64": 31, "whl": [31, 301, 304], "x86_64": [31, 185, 223], "sh": [31, 35, 211, 301, 459, 477], "licens": [31, 471], "dbuild_shared_lib": 31, "ON": 31, "dcmake_prefix_path": 31, "dcmake_install_prefix": 31, "boost_1_74_0": 31, "bootstrap": 31, "filesystem": [31, 295], "program_opt": 31, "regex": [31, 210], "chrono": 31, "atom": [31, 459], "date_tim": [31, 45], "b2": 31, "openssl_1_1_1h": 31, "fpic": 31, "cpp": [31, 65, 83, 102, 182], "darrow_comput": 31, "darrow_with_utf8proc": 31, "off": [31, 200, 226, 431, 459], "darrow_csv": 31, "darrow_filesystem": 31, "darrow_ipc": 31, "darrow_build_benchmark": 31, "darrow_build_exampl": 31, "darrow_build_integr": 31, "darrow_build_util": 31, "darrow_build_test": 31, "darrow_enable_timing_test": 31, "darrow_fuzz": 31, "darrow_jemalloc": 31, "darrow_build_shar": 31, "darrow_build_stat": 31, "mpi": [31, 236], "cxx": 31, "dlopen": 31, "nproc": 31, "dgrpc_instal": 31, "dgrpc_build_test": 31, "dgrpc_build_csharp_ext": 31, "dgrpc_build_grpc_csharp_plugin": 31, "dgrpc_build_grpc_node_plugin": 31, "dgrpc_build_grpc_objective_c_plugin": 31, "dgrpc_build_grpc_php_plugin": 31, "dgrpc_build_grpc_python_plugin": 31, "dgrpc_build_grpc_ruby_plugin": 31, "dgrpc_backwards_compatibility_mod": 31, "dgrpc_protobuf_provid": 31, "dgrpc_zlib_provid": 31, "dgrpc_ssl_provid": 31, "dopenssl_root_dir": 31, "dcmake_cxx_flag": 31, "fpermiss": 31, "dbuild_vineyard_test": 31, "dbuild_vineyard_python_bind": 31, "j4": 31, "dnetworkx": 31, "denable_java_sdk": 31, "dbuild_test": 31, "ubuntu": [32, 185, 193, 199, 202, 301, 470, 472, 476], "04": [32, 193, 199, 202, 212, 234, 301, 470, 472, 476], "intel": [32, 202, 470, 472, 476], "appl": [32, 193, 202, 446, 470, 472, 476], "silicon": [32, 202, 470, 472], "jdk": [32, 199, 202, 214, 463, 469], "wheel": [32, 193, 364, 430, 472, 475], "manylinux2014": [32, 471], "abi": 32, "wish": [32, 37, 42, 183, 188], "nightli": [32, 193, 472], "tidi": 32, "quickli": [32, 36, 186, 215, 227, 230, 231, 233, 306, 453], "insid": [32, 38, 44, 193, 210, 212, 237, 245, 295, 307, 308, 421, 452, 453, 477], "apt": [32, 301], "ipython": 32, "tensorflow": [32, 215, 216, 218, 221, 222, 226, 227, 231, 232, 294, 295, 296, 299, 300, 302, 306, 473], "tool": [32, 35, 36, 43, 183, 186, 191, 196, 199, 206, 213, 215, 217, 226, 393, 395, 455, 458, 459, 460, 476], "dep": [32, 35, 466, 470, 471], "fly": [32, 186, 227], "clang": [32, 35, 202, 471], "essenti": [32, 44, 45, 193, 205, 210, 215, 230, 232], "arm": 32, "preliminari": 32, "yet": [32, 115, 181, 185, 203, 210, 238, 403, 406, 446, 452, 459], "calcul": [33, 200, 207, 210, 212, 237, 239, 297, 311, 365, 397], "period": [33, 459], "restor": [33, 453, 459], "persistentvolum": [33, 459], "dump": [33, 237, 273], "cat": [33, 223, 224, 459, 467], "eof": 33, "metadata": [33, 43, 44, 99, 165, 182, 188, 190, 193, 223, 236, 308, 446, 455, 459], "1gi": 33, "accessmod": 33, "readwriteonc": 33, "storageclassnam": 33, "importantli": 33, "lost": [33, 453], "persistentvolumeclaim": [33, 453, 459], "matchlabel": 33, "request": [33, 47, 115, 181, 193, 225, 236, 265, 296, 304, 307, 309, 340, 446, 453, 459, 472], "extern": [33, 37, 43, 219, 226, 453, 459], "ccc": 33, "sub_graph": [33, 208, 227, 473, 474], "haslabel": [33, 196, 202, 208, 212, 227, 477], "simple_g": [33, 227, 469, 473], "pr_result": 33, "tc_result": 33, "add_column": [33, 227, 236, 308, 469, 473, 474], "tc": [33, 227, 473], "997255889378630": 33, "997163552113975": 33, "store_graphs_to_pvc": 33, "graphid": [33, 50, 52, 63, 86, 87, 96, 101, 453], "pvc_name": [33, 453], "schema": [33, 43, 44, 50, 60, 62, 81, 115, 116, 126, 181, 182, 186, 190, 192, 200, 201, 204, 206, 207, 208, 212, 221, 222, 225, 237, 295, 296, 305, 308, 446, 455, 457, 458, 459, 460, 474, 477, 479], "oid_typ": [33, 225, 236, 237, 265, 287, 308, 453, 479], "ulong": 33, "lang": [33, 35, 44, 182, 202, 204, 207, 227, 309], "eid": [33, 192, 204, 308, 459], "restore_graphs_from_pvc": 33, "anymor": 33, "nativ": [34, 42, 200, 206, 226, 230, 232, 233], "behind": [34, 221, 458, 461, 466, 467], "scene": [34, 200, 221, 303], "lower": [34, 200, 210, 212, 230, 365, 372, 385], "cost": [34, 200, 212, 226, 230, 311, 459], "ownership": 34, "cach": [34, 183, 216, 223, 229, 233, 446], "layout": [34, 229, 459], "were": [34, 37, 212, 234, 397, 459], "outperform": [34, 215, 229, 231, 232, 233], "art": [34, 215, 229, 232, 234], "voderank": 34, "average_degree_assort": 34, "degree_assort": 34, "guidelin": [35, 37, 186, 188], "promot": 35, "readabl": [35, 49, 210, 446], "qualiti": [35, 37, 231], "black": [35, 471], "enforc": 35, "rule": [35, 42, 188, 200, 212, 219, 229, 298, 304, 308, 345, 455], "cpplint": 35, "flake8": 35, "fmt": 35, "lint": [35, 37], "makefil": 35, "graphscope_clformat": 35, "graphscope_cpplint": 35, "dev": [35, 198, 223, 470, 471], "pushd": 35, "isort": 35, "diff": 35, "popd": 35, "interactive_engin": [35, 36, 201, 211], "check_format": 35, "files_to_format": 35, "aosp": 35, "toolchain": [36, 217], "devcontain": 36, "json": [36, 50, 51, 52, 53, 86, 87, 96, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 199, 201, 453, 455, 459, 460], "setup": [36, 37, 181, 193, 308, 453, 471], "visual": [36, 37, 186, 226], "studio": 36, "collabor": [36, 226, 458], "stabl": [36, 237, 308, 455, 459, 476], "haven": [36, 185, 212], "navig": [36, 458, 466], "icon": 36, "bottom": [36, 356], "corner": 36, "window": [36, 212, 476], "reopen": 36, "marketplac": 36, "prompt": [36, 49, 204, 211], "shift": [36, 205, 210, 212, 311, 411], "ctrl": 36, "made": [36, 37, 42, 183, 199, 219, 234, 295, 298, 304, 311, 406, 458], "rebuild": 36, "subcommand": [36, 217], "assembli": [36, 201], "learning_engin": 36, "graphlearn": [36, 38, 216, 218, 221, 222, 223, 227, 294, 295, 296, 300, 301, 306, 307, 310, 453, 467, 473, 478], "compos": [36, 38, 184, 207, 216, 219, 227, 229, 233], "alon": [36, 200, 208, 466], "circul": [36, 349], "edit": [36, 37, 204, 392, 429, 466], "entrypoint": [36, 466, 473], "plai": [36, 200, 214, 235, 305, 310, 463], "thank": [37, 186, 196, 204, 226], "interest": [37, 212, 215, 229, 459], "focus": [37, 207, 212, 226, 232, 234, 300, 438, 459], "eager": [37, 237, 238, 287, 289, 308, 453], "contributor": [37, 439], "welcom": [37, 182, 183], "engag": [37, 226, 227], "good": [37, 186], "particip": [37, 42], "join": [37, 42, 205, 207, 212, 223, 296, 306, 347, 350, 358, 365, 374, 375, 388, 390, 393, 394, 395, 396, 397, 405, 406, 446, 458], "ask": [37, 198], "question": [37, 198, 206, 212, 472], "ve": [37, 43, 183, 188, 199, 203, 211, 226], "hasn": [37, 212], "confirm": 37, "concis": [37, 207, 208, 230, 309], "descript": [37, 44, 45, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 188, 190, 199, 200, 205, 207, 210, 219, 223, 225, 295, 298, 303, 304, 308, 403, 411, 459], "relev": [37, 42, 43, 301, 340, 446, 457], "reproduc": [37, 446], "yourself": 37, "why": [37, 193, 212, 237], "saw": 37, "incomplet": 37, "inaccur": 37, "knowledg": [37, 196, 204, 216, 231, 302], "submiss": 37, "fact": [37, 200, 204, 207, 403, 406], "page": [37, 43, 183, 198, 228, 237, 240, 242, 356, 371, 435, 475], "button": [37, 204], "tbf": [37, 197, 234, 454, 465, 468], "isn": [37, 190, 208, 299], "someon": 37, "approach": [37, 186, 204, 208, 215, 216, 226, 228, 230, 231, 299, 375, 388, 443, 458], "spend": 37, "secret": [37, 225, 453, 470, 479], "accident": 37, "hook": 37, "titl": [37, 43, 212, 222, 227], "grammar": 37, "spell": 37, "500": [37, 50, 52, 53, 86, 87, 96, 116, 118, 119, 152, 153, 162, 182, 365], "word": [37, 188, 212, 222, 227, 230, 231, 306, 308, 446], "42": [37, 212, 234, 296, 297, 299, 369, 371, 381, 439], "ticket": 37, "chines": 37, "everyon": 37, "beginn": [37, 230], "patch": 37, "rest": [37, 46, 47, 116, 117, 118, 119, 152, 153, 162, 191, 446, 459], "attain": 37, "brief": [37, 195], "valid": [37, 200, 221, 222, 231, 244, 294, 341, 365, 387, 393, 442, 453, 455], "typo": 37, "feat": 37, "inv": [37, 300, 306, 477], "refactor": 37, "gulp": 37, "broccoli": 37, "npm": [37, 459], "ci": 37, "perf": 37, "neither": 37, "nor": 37, "chore": 37, "routin": [37, 311, 446], "insight": [37, 196, 229, 231, 466], "feedback": [37, 196], "discourag": 37, "rebas": 37, "workflow": [37, 196, 226, 231, 232, 236], "upstream": [37, 300], "leas": 37, "ping": [37, 469], "await": 37, "unfamiliar": 37, "acronym": 37, "glossari": [37, 191, 198, 439], "approv": 37, "date": [37, 45, 205, 212, 457, 458, 459], "todo": [37, 46, 96, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 205, 207, 223, 224, 304], "dongz": 37, "potenti": [37, 184, 186, 216, 226, 458], "concern": [37, 226, 233, 458], "reach": [37, 193, 208, 212, 230, 300, 305, 308, 311, 388, 403, 406, 458], "action": [37, 183, 190], "realiti": [37, 300], "uncommon": 37, "infrastructur": 37, "vital": 37, "inspect": [37, 38, 225, 453, 459], "failur": [37, 233], "stream": [38, 193, 199, 210, 211, 212, 216, 300, 305, 308], "stdout": 38, "log_level": [38, 42, 223, 293], "permiss": [38, 45, 193, 245, 472], "consol": [38, 186, 199, 201, 204, 213, 215, 225, 230, 309, 459, 475], "frontend": [38, 39, 46, 199, 201, 202, 203, 211, 459, 467], "event": [38, 365], "involvedobject": 38, "warn": [38, 446], "pinpoint": 38, "exec": [38, 459, 467], "diagnost": 38, "forward": [38, 186, 216, 218, 219, 221, 222, 227, 231, 300, 459, 473], "browser": [38, 212], "explain": [38, 212, 295, 453, 458, 477], "leverag": [39, 115, 206, 208, 214, 215, 228, 230, 241, 438, 455, 459, 463], "opentelemetri": 39, "javaag": 39, "agent": 39, "protocol": [39, 203, 206, 225, 233, 453], "java_tool_opt": 39, "TO": 39, "otel_service_nam": 39, "compris": [41, 43, 205, 208, 222, 226, 299], "busi": [41, 200, 212, 216, 225, 226, 227, 233], "e2": [41, 425], "coupl": [41, 228, 233, 426, 455], "straightforward": [42, 202, 227], "gs_interact": [42, 43, 49, 183, 188, 190], "tailor": [42, 182], "align": [42, 43, 44, 45, 60, 126, 183, 188, 200, 210, 219, 230, 294, 297, 298, 397, 458], "engine_config": [42, 182, 453], "unconfigur": 42, "glimps": 42, "what": [42, 183, 188, 193, 199, 212, 213, 230, 305, 392, 446, 452, 458], "compute_engin": 42, "thread_num_per_work": 42, "planner": [42, 188], "is_on": 42, "rbo": [42, 200], "filtermatchrul": 42, "filterintojoinrul": 42, "notexisttoantijoinrul": 42, "query_timeout": 42, "20000": 42, "timeout": [42, 193, 201, 202], "millisecond": [42, 45, 205, 210, 234, 457], "default_listen_address": 42, "localhost": [42, 201, 203, 211, 223, 225, 453, 479], "bolt_connector": [42, 186], "cypher": [42, 43, 46, 47, 65, 83, 96, 102, 115, 162, 181, 182, 188, 189, 191, 199, 200, 201, 202, 204, 206, 207, 226, 227, 228, 232, 233, 309, 453], "7687": [42, 46, 183, 186, 199, 201, 203, 204], "gremlin_connector": [42, 186], "8182": [42, 46, 199, 201, 211, 459], "http_servic": 42, "admin_port": 42, "7777": [42, 46], "query_port": [42, 182], "10000": [42, 46, 443], "hierarchi": [42, 44], "propertynam": [42, 57, 67, 84, 459], "databas": [42, 43, 184, 186, 189, 193, 200, 205, 206, 207, 210, 212, 226, 228, 230, 232, 234, 459, 469], "debug": [42, 193, 223, 295, 300, 453, 459, 467], "default_graph": 42, "benefit": [42, 207, 211, 225, 229, 458], "throughput": [42, 46, 186, 191, 200, 226, 232, 233, 459], "claus": [42, 186, 206, 207], "calcit": [42, 199, 207], "notmatchtoantijoinrul": 42, "transform": [42, 49, 200, 207, 212, 236, 248, 261, 438, 446, 447, 451, 457], "anti": [42, 205, 207, 226, 230, 233], "bind": [42, 237, 458], "admin": [42, 46, 47, 182, 186, 189, 308, 459], "submit": [42, 182, 183, 186, 187, 200, 203, 204, 210, 211, 212, 227, 230, 295, 296, 309, 455, 459, 473], "movi": [43, 188, 228, 296], "interactive_hom": [43, 185], "destroi": [43, 190], "csv": [43, 46, 191, 196, 199, 204, 225, 308, 446, 449, 457, 459, 460, 473, 474, 479], "volum": [43, 46, 183, 190, 193, 199, 207, 211, 223, 369, 370, 371, 381, 390, 435, 453, 458], "crucial": [43, 45, 49, 182, 226], "conclud": [43, 294], "reflect": [43, 210, 458, 466], "v0": [43, 46, 234, 301, 449], "vertex_typ": [43, 45, 130, 148, 182], "type_nam": [43, 44, 45, 120, 124, 127, 134, 146, 151, 179, 182], "property_nam": [43, 45, 123, 133, 150, 182, 212, 238, 239, 452], "property_typ": [43, 45, 123, 133, 150, 182], "primitive_typ": [43, 45, 145, 159, 182], "dt_signed_int64": [43, 45, 79, 92, 182], "dt_signed_int32": [43, 45, 79, 92], "taglin": 43, "long_text": [43, 45, 156, 170, 182], "primary_kei": [43, 45, 124, 134, 151, 182, 459], "born": 43, "acted_in": 43, "vertex_type_pair_rel": [43, 45, 120, 127, 146, 182], "source_vertex": [43, 44, 45, 121, 141, 182], "destination_vertex": [43, 44, 45, 121, 141, 182], "many_to_mani": [43, 45, 55, 182], "review": [43, 226, 237, 311, 375, 393], "wrote": 43, "dt_unsigned_int32": [43, 45, 79, 92], "dt_unsigned_int64": [43, 45, 79, 92], "dt_bool": [43, 45, 79, 92], "dt_float": [43, 45, 79, 92], "dt_doubl": [43, 45, 79, 92, 182], "comprehens": [43, 115, 181, 182, 186, 188, 190, 226, 232, 234, 235], "administr": [43, 182, 183, 189, 191, 423], "loading_config": [43, 44, 163, 182], "data_sourc": [43, 44, 182], "odp": [43, 191, 295], "import_opt": [43, 44, 164, 182], "append": [43, 192, 212, 221, 222, 223, 224, 227, 239, 294, 305, 306, 377, 440, 473, 478], "overwrit": [43, 44, 98, 190, 453, 459], "delimit": [43, 44, 199, 308, 448, 460, 474], "edge_map": [43, 44, 137, 163, 182], "type_triplet": [43, 44, 137, 182], "column_map": [43, 44, 126, 137, 179, 182], "understand": [43, 44, 212, 219, 230, 294, 300, 308, 458], "consult": [43, 186], "graph_algo": 43, "flex": [43, 115, 186, 191, 466], "delv": [44, 182], "deeper": 44, "thorough": 44, "examin": [44, 207, 227], "modern_import_ful": 44, "showcas": 44, "dissect": 44, "header_row": [44, 199, 308, 460], "quot": 44, "quote_char": 44, "double_quot": 44, "escape_char": 44, "block_siz": 44, "4mb": 44, "person_knows_person": [44, 459], "source_vertex_map": [44, 137, 182], "destination_vertex_map": [44, 137, 182], "person_created_softwar": 44, "dd_graph": 44, "your_proj_nam": 44, "table_nam": 44, "partition_col_nam": 44, "partition_nam": 44, "src_user_id": 44, "dst_user_id": 44, "mandatori": [44, 45, 227, 295], "ye": [44, 196, 446], "No": [44, 50, 51, 52, 53, 86, 87, 96, 116, 117, 118, 119, 152, 153, 162, 193, 210, 446], "header": [44, 199, 308, 458, 459], "escap": 44, "batch_siz": [44, 219, 221, 223, 224, 294, 298, 299, 300, 303, 306, 462, 478], "triplet": [44, 45, 208], "outlin": [44, 201, 205], "seamlessli": [44, 115, 181, 183, 196, 199, 206, 213, 215, 226, 232, 233], "encompass": [45, 203, 207, 211, 222], "friendship": 45, "peopl": [45, 200, 204, 212, 446, 459], "since_d": 45, "explan": [45, 182, 186, 237, 298], "terminologi": [45, 205], "delin": 45, "plan": [45, 96, 162, 186, 200, 205, 226, 228, 229, 230, 241, 459, 467], "var_char": [45, 170, 176], "fixed_char": [45, 143, 144], "character": [45, 298], "exclus": [45, 49, 205], "symbol": 45, "skill": 45, "profici": [45, 212], "one_to_on": [45, 55], "one_to_mani": [45, 55, 182], "many_to_on": [45, 55], "x_csr_param": [45, 121, 124, 134, 151], "max_vertex_num": [45, 125], "mmap": 45, "48": [45, 196, 234, 296, 297, 299, 398, 399, 445], "edge_storage_strategi": [45, 122], "only_in": [45, 56], "only_out": [45, 56], "both_out_in": [45, 56], "pertain": [45, 199], "categor": [45, 186, 219], "subtyp": 45, "length": [45, 115, 192, 196, 205, 210, 212, 225, 230, 237, 298, 311, 350, 352, 357, 379, 400, 404, 410, 432, 441, 446, 479], "unlimit": 45, "text": [45, 96, 162, 231, 239, 347], "char": [45, 143, 170, 305, 308, 458], "fixed_length": 45, "desir": [45, 208, 308, 365, 387, 407, 409, 410], "restrict": 45, "max_length": [45, 177], "uint32": [45, 205], "situat": [45, 210, 212, 215, 295, 296, 459], "df_yyyy_mm_dd": 45, "iso": 45, "fomat": 45, "2019": [45, 439], "01": [45, 212, 218, 222, 224, 227, 237, 295, 311, 370, 473], "date_format": 45, "tf_hh_mm_ss_sss": 45, "00": [45, 212], "000": [45, 199, 212, 234], "time_format": 45, "tzf_utc": 45, "tzf_offset": 45, "time_zone_format": 45, "dtf_yyyy_mm_dd_hh_mm_ss_sss": 45, "date_time_format": 45, "date32": [45, 69, 106, 135, 172], "int32": [45, 205, 218, 222, 227, 295, 297, 305, 306, 457, 473], "1970": 45, "time32": 45, "midnight": 45, "timestamp": [45, 106, 107, 172, 173, 457, 459], "int64": [45, 205, 225, 239, 265, 287, 295, 297, 298, 303, 305, 306, 308, 453, 457, 479], "000000": 45, "zone": [45, 205], "signifi": [45, 330, 331], "integ": [45, 59, 74, 78, 80, 81, 83, 84, 85, 89, 100, 111, 205, 210, 311, 346, 349, 350, 351, 352, 353, 355, 357, 358, 360, 361, 364, 365, 368, 369, 370, 371, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 411, 424, 438, 439, 440, 441, 443, 446, 457, 459], "januari": 45, "timezon": 45, "albeit": 45, "previous": [45, 188, 212, 245, 382, 383, 384, 457, 458], "mention": [45, 210, 212, 457, 458, 467], "component_typ": 45, "overflow": 45, "truncat": [45, 431, 432, 433, 438], "bolt": [46, 183, 186, 201, 203, 204, 230], "grep": [46, 199], "awk": [46, 199], "192": 46, "168": [46, 234], "pvc": [46, 199, 453, 459], "higher": [46, 200, 232, 311, 321, 385, 459], "nf": [46, 193, 305, 472], "dataload": [46, 50, 51, 115, 116, 117, 181, 182, 223, 224], "pv": [46, 193, 199, 453, 459, 472], "vim": 46, "someth": [46, 202, 446], "claim": [46, 199, 428, 458, 459], "emptydir": [46, 223], "existingclaim": 46, "replicacount": [46, 199, 459], "num": [46, 192, 201, 211, 212, 307, 458], "gremlinport": [46, 100, 199], "hiactor": [46, 226], "hiactorworkernum": 46, "hiactortimeout": 46, "240000": [46, 201], "craft": [47, 186, 188], "listgraph": [47, 115], "graphmanag": 47, "categori": [47, 205, 210, 216, 218, 219, 227, 231, 306], "creategraph": [47, 115], "deletegraph": [47, 115], "getgraphschema": 47, "getgraphmeta": 47, "importgraph": 47, "createprocedur": [47, 115], "proceduremanag": 47, "listallprocedur": 47, "getprocedur": [47, 115], "updateprocedur": [47, 115], "deleteprocedur": [47, 115], "startservic": [47, 115], "servicemanag": 47, "restartservic": [47, 115], "stopservic": [47, 115], "servicestatu": [47, 53, 115, 119, 181], "systemmetr": 47, "nodemetr": 47, "getjobbyid": [47, 115], "jobmanag": 47, "getalljob": 47, "canceljobbyid": 47, "adminservic": 47, "setuptool": 47, "intric": [49, 182, 212], "inspir": [49, 241, 446], "neo4j": [49, 115, 183, 184, 186, 188, 198, 199, 201, 202, 203, 204, 205, 228, 233, 234, 309, 457], "empow": [49, 206, 213, 230], "skeleton": [49, 414, 417, 431, 432], "param_nam": [49, 186], "clariti": [49, 205], "mandat": 49, "hous": [49, 226, 420, 421], "personid": 49, "draft": 49, "query1": 49, "firstnam": [49, 212, 225, 457, 474, 479], "lastnam": [49, 212, 225, 457, 474, 479], "intrins": 49, "absenc": 49, "imper": [49, 210, 230], "subsequ": [49, 183, 188, 199, 200, 201, 207, 211, 237, 295, 296], "1l": [49, 188, 210], "conclus": [49, 212], "effortlessli": [49, 227], "streamlin": [49, 207, 210], "uri": [50, 51, 52, 53, 86, 87, 96, 115, 116, 117, 118, 119, 152, 153, 162, 181, 203, 225, 308, 457, 479], "interactive_endpoint": [50, 51, 52, 53, 86, 87, 96, 115, 116, 117, 118, 119, 152, 153, 162, 181, 182], "post": [50, 51, 52, 53, 86, 87, 96, 115, 116, 117, 118, 119, 152, 153, 162, 181, 182, 193, 212, 225, 300, 365, 479], "graph_id": [50, 51, 52, 86, 87, 96, 115, 116, 117, 118, 129, 152, 153, 162, 167, 181, 182, 453], "jobrespons": [50, 115, 116, 181], "schemamap": [50, 81, 115, 116, 147, 181], "openapi": [50, 51, 52, 53, 86, 87, 96, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "apicli": [50, 51, 52, 53, 86, 87, 96, 116, 117, 118, 119, 152, 153, 162, 453], "apiexcept": [50, 51, 52, 53, 86, 87, 96, 116, 117, 118, 119, 152, 153, 162], "defaultcli": [50, 51, 52, 53, 86, 87, 96], "getdefaultapicli": [50, 51, 52, 53, 86, 87, 96], "setbasepath": [50, 51, 52, 53, 86, 87, 96], "apiinst": [50, 51, 52, 53, 86, 87, 96], "graphid_exampl": [50, 52, 86, 87, 96], "println": [50, 51, 52, 53, 86, 87, 96, 115, 459], "catch": [50, 51, 52, 53, 86, 87, 96, 459], "err": [50, 51, 52, 53, 86, 87, 96, 324], "getcod": [50, 51, 52, 53, 86, 87, 96], "getresponsebodi": [50, 51, 52, 53, 86, 87, 96], "getresponsehead": [50, 51, 52, 53, 86, 87, 96], "printstacktrac": [50, 51, 52, 53, 86, 87, 96], "200": [50, 51, 52, 53, 86, 87, 96, 116, 117, 118, 119, 152, 153, 162, 182, 212, 294, 452, 462, 478], "creategraphrespons": [50, 115, 116, 181], "creategraphrequest": [50, 115, 116, 181], "400": [50, 52, 86, 87, 116, 118, 152, 153, 182, 452], "badrequest": [50, 116], "Not": [50, 51, 52, 53, 86, 87, 116, 117, 118, 119, 152, 153, 182, 186, 207, 446, 459], "404": [50, 52, 86, 87, 116, 118, 152, 153, 182], "getgraphrespons": [50, 100, 115, 116, 166, 181], "getgraphschemarespons": [50, 81, 115, 116, 147, 181], "job_id": [51, 115, 117, 154, 181, 182], "jobid": [51, 88], "jobid_exampl": 51, "jobstatu": [51, 115, 117, 181], "procedure_id": [52, 115, 118, 132, 181, 182], "createprocedurerespons": [52, 115, 118, 181], "createprocedurerequest": [52, 62, 115, 118, 128, 181], "bad": [52, 86, 87, 118, 152, 153], "procedureid": [52, 66], "procedureid_exampl": 52, "getprocedurerespons": [52, 81, 115, 118, 147, 181], "updateprocedurerequest": [52, 115, 118, 181], "startservicerequest": [53, 115, 119, 181], "vertextypepairrel": [54, 61, 80], "baseedgetypevertextypepairrelationsinn": [54, 61, 80, 115, 120, 127, 146, 181], "sourcevertex": [55, 75], "destinationvertex": [55, 75], "xcsrparam": [55, 58, 68, 85], "baseedgetypevertextypepairrelationsinnerxcsrparam": [55, 115, 121, 181], "edgestoragestrategi": 56, "sortoncompact": 56, "boolean": [56, 83, 102, 205, 207, 210, 225, 237, 239, 296, 300, 311, 330, 331, 368, 370, 373, 404, 444, 457], "oemut": 56, "iemut": 56, "propertytyp": [57, 67, 84], "gsdatatyp": [57, 67, 84, 91, 108, 115, 123, 133, 150, 158, 174, 181], "primarykei": [58, 68, 85], "basevertextypexcsrparam": [58, 68, 85, 115, 124, 134, 151, 181], "maxvertexnum": 59, "edgemappingsourcevertexmappingsinnercolumn": [60, 72, 73, 115, 126, 138, 139, 181], "createpropertymeta": [61, 68, 115, 127, 134, 181], "storedprocedur": [62, 81], "creategraphschemarequest": [62, 115, 128, 181], "vertextyp": [64, 82], "createvertextyp": [64, 115, 130, 181], "edgetyp": [64, 82, 448], "createedgetyp": [64, 115, 130, 181], "srclabel": [70, 76, 86, 459], "dstlabel": [70, 76, 86, 459], "edgelabel": [70, 76, 86, 210, 258], "srcprimarykeyvalu": [70, 76, 86], "dstprimarykeyvalu": [70, 76, 86], "typetriplet": 71, "edgemappingtypetriplet": [71, 115, 137, 181], "sourcevertexmap": 71, "edgemappingsourcevertexmappingsinn": [71, 115, 137, 181], "destinationvertexmap": 71, "edgemappingdestinationvertexmappingsinn": [71, 115, 137, 181], "columnmap": [71, 113, 115, 137, 179, 181], "_char": [77, 104], "fixedcharchar": [77, 104, 115, 143, 170, 181], "fixedchar": [78, 115, 181], "primitivetyp": [79, 115, 181], "stringtypestr": [79, 103, 115, 145, 169, 181], "tempor": [79, 105, 145, 171, 205, 210], "temporaltypetempor": [79, 105, 145, 171], "signed_int32": [79, 92], "unsigned_int32": [79, 92], "signed_int64": [79, 92], "unsigned_int64": [79, 92], "dt_string": [79, 92], "typeid": [80, 85], "getpropertymeta": [80, 85, 115, 146, 151, 181], "storetyp": 81, "creationtim": [81, 83], "dataupdatetim": 81, "dataimportconfig": 81, "mutable_csr": [81, 182], "getvertextyp": [82, 115, 148, 181], "getedgetyp": [82, 115, 148, 181], "boundgraph": 83, "propertyid": 84, "edgerequest": [86, 115, 152, 181], "409": [86, 87, 152, 153, 182], "exit": [86, 87, 152, 153, 211, 223, 237, 477], "edgedata": [86, 115, 152, 181], "paramt": [86, 87, 152, 153], "vertexrequest": [87, 115, 153, 181], "primarykeyvalu": [87, 114], "label_exampl": [87, 153], "null": [87, 96, 205, 210, 311, 328, 344, 345, 352, 359, 411, 441, 446], "vertexdata": [87, 115, 153, 181], "value1": [87, 153, 199, 225, 479], "param2": [87, 153], "value2": [87, 153, 199], "starttim": [89, 100], "endtim": 89, "querynam": 95, "typedvalu": [95, 115, 161, 181], "byte": [96, 205, 237, 245, 305], "bodi": [96, 162, 182, 300, 304, 412], "typeinfo": [96, 162], "plain": [96, 162, 231], "loadingconfig": 97, "schemamappingloadingconfig": [97, 115, 163, 181], "importopt": 98, "schemamappingloadingconfigformat": [98, 115, 164, 181], "boltport": 100, "hqpsport": 100, "longtext": [104, 115, 181], "varchar": [104, 115, 181], "varcharvarchar": [104, 110, 115, 170, 176, 181], "maxlength": 111, "propertyarrai": [114, 115, 180, 181], "gradl": 115, "ossrh": 115, "gettingstart": [115, 186], "neo4jsess": 115, "getneo4jsess": [115, 181], "tostr": [115, 236, 460], "adminservicegraphmanagementapi": [115, 181], "createdataloadingjob": 115, "getgraph": 115, "getschema": 115, "adminservicejobmanagementapi": [115, 181], "deletejobbyid": 115, "listjob": 115, "adminserviceproceduremanagementapi": [115, 181], "listprocedur": 115, "adminserviceservicemanagementapi": [115, 181], "getservicestatu": 115, "graphserviceedgemanagementapi": [115, 181], "addedg": 115, "deleteedg": 115, "getedg": 115, "updateedg": 115, "graphservicevertexmanagementapi": [115, 181], "addvertex": 115, "deletevertex": 115, "getvertex": [115, 236], "updatevertex": 115, "queryserviceapi": [115, 181], "proccal": 115, "baseedgetyp": [115, 181], "basepropertymeta": [115, 181], "basevertextyp": [115, 181], "collectiveresult": [115, 181], "keyvalu": [115, 181], "queryrequest": [115, 181], "storedproceduremeta": [115, 181], "stringtyp": [115, 181], "temporaltyp": [115, 181], "timestamptyp": [115, 181], "authent": [115, 181, 201, 203, 232, 459], "schema_map": [116, 163], "job_respons": [116, 154], "pprint": [116, 117, 118, 119, 152, 153, 162], "api_cli": [116, 117, 118, 119, 152, 153, 162, 453], "api_inst": [116, 117, 118, 119, 152, 153, 162], "graph_id_exampl": [116, 118, 152, 153, 162], "api_respons": [116, 117, 118, 119, 152, 153, 162], "back": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 212, 215, 221, 304, 458, 466], "create_graph_request": [116, 128], "create_graph_respons": [116, 129], "get_graph_respons": [116, 147], "get_graph_schema_respons": [116, 148], "job_id_exampl": 117, "job_statu": [117, 155], "create_procedure_request": [118, 131], "create_procedure_respons": [118, 132], "procedure_id_exampl": 118, "get_procedure_respons": [118, 149], "update_procedure_request": [118, 175], "service_statu": [119, 166], "start_service_request": [119, 167], "interactive_sdk": [120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "base_edge_typ": 120, "base_edge_type_inst": 120, "from_json": [120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "to_json": [120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "base_edge_type_dict": 120, "to_dict": [120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "base_edge_type_from_dict": 120, "from_dict": [120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "base_edge_type_vertex_type_pair_relations_inn": 121, "base_edge_type_vertex_type_pair_relations_inner_inst": 121, "base_edge_type_vertex_type_pair_relations_inner_dict": 121, "base_edge_type_vertex_type_pair_relations_inner_from_dict": 121, "sort_on_compact": 122, "oe_mut": 122, "ie_mut": 122, "base_edge_type_vertex_type_pair_relations_inner_x_csr_param": 122, "base_edge_type_vertex_type_pair_relations_inner_x_csr_params_inst": 122, "base_edge_type_vertex_type_pair_relations_inner_x_csr_params_dict": 122, "base_edge_type_vertex_type_pair_relations_inner_x_csr_params_from_dict": 122, "base_property_meta": 123, "base_property_meta_inst": 123, "base_property_meta_dict": 123, "base_property_meta_from_dict": 123, "base_vertex_typ": 124, "base_vertex_type_inst": 124, "base_vertex_type_dict": 124, "base_vertex_type_from_dict": 124, "base_vertex_type_x_csr_param": 125, "base_vertex_type_x_csr_params_inst": 125, "base_vertex_type_x_csr_params_dict": 125, "base_vertex_type_x_csr_params_from_dict": 125, "var_properti": [126, 138, 139], "column_mapping_inst": 126, "column_mapping_dict": 126, "column_mapping_from_dict": 126, "create_edge_typ": 127, "create_edge_type_inst": 127, "create_edge_type_dict": 127, "create_edge_type_from_dict": 127, "stored_procedur": [128, 147, 182, 188, 190], "var_schema": [128, 147], "create_graph_request_inst": 128, "create_graph_request_dict": 128, "create_graph_request_from_dict": 128, "create_graph_response_inst": 129, "create_graph_response_dict": 129, "create_graph_response_from_dict": 129, "create_graph_schema_request": 130, "create_graph_schema_request_inst": 130, "create_graph_schema_request_dict": 130, "create_graph_schema_request_from_dict": 130, "create_procedure_request_inst": 131, "create_procedure_request_dict": 131, "create_procedure_request_from_dict": 131, "create_procedure_response_inst": 132, "create_procedure_response_dict": 132, "create_procedure_response_from_dict": 132, "create_property_meta": 133, "create_property_meta_inst": 133, "create_property_meta_dict": 133, "create_property_meta_from_dict": 133, "create_vertex_typ": 134, "create_vertex_type_inst": 134, "create_vertex_type_dict": 134, "create_vertex_type_from_dict": 134, "date_typ": 135, "date_type_inst": 135, "date_type_dict": 135, "date_type_from_dict": 135, "src_label": [136, 142, 152, 199, 225, 308, 449, 453, 459, 460, 473, 474], "dst_label": [136, 142, 152, 199, 225, 308, 449, 453, 459, 460, 473, 474], "src_primary_key_valu": [136, 142, 152], "dst_primary_key_valu": [136, 142, 152], "modelproperti": [136, 142, 160, 178, 181], "edge_data": [136, 152, 271, 461], "edge_data_inst": 136, "edge_data_dict": 136, "edge_data_from_dict": 136, "edge_mapping_inst": 137, "edge_mapping_dict": 137, "edge_mapping_from_dict": 137, "edge_mapping_destination_vertex_mappings_inn": 138, "edge_mapping_destination_vertex_mappings_inner_inst": 138, "edge_mapping_destination_vertex_mappings_inner_dict": 138, "edge_mapping_destination_vertex_mappings_inner_from_dict": 138, "edge_mapping_source_vertex_mappings_inn": 139, "edge_mapping_source_vertex_mappings_inner_inst": 139, "edge_mapping_source_vertex_mappings_inner_dict": 139, "edge_mapping_source_vertex_mappings_inner_from_dict": 139, "edge_mapping_source_vertex_mappings_inner_column": 140, "edge_mapping_source_vertex_mappings_inner_column_inst": 140, "edge_mapping_source_vertex_mappings_inner_column_dict": 140, "edge_mapping_source_vertex_mappings_inner_column_from_dict": 140, "edge_mapping_type_triplet": 141, "edge_mapping_type_triplet_inst": 141, "edge_mapping_type_triplet_dict": 141, "edge_mapping_type_triplet_from_dict": 141, "edge_request": [142, 152], "edge_request_inst": 142, "edge_request_dict": 142, "edge_request_from_dict": 142, "fixed_char_inst": 143, "fixed_char_dict": 143, "fixed_char_from_dict": 143, "fixed_char_char": 144, "fixed_char_char_inst": 144, "fixed_char_char_dict": 144, "fixed_char_char_from_dict": 144, "gs_data_typ": 145, "gs_data_type_inst": 145, "gs_data_type_dict": 145, "gs_data_type_from_dict": 145, "type_id": [146, 151, 182], "get_edge_typ": 146, "get_edge_type_inst": 146, "get_edge_type_dict": 146, "get_edge_type_from_dict": 146, "store_typ": [147, 182], "creation_tim": [147, 149, 182], "data_update_tim": [147, 182], "data_import_config": [147, 182], "get_graph_response_inst": 147, "get_graph_response_dict": 147, "get_graph_response_from_dict": 147, "get_graph_schema_response_inst": 148, "get_graph_schema_response_dict": 148, "get_graph_schema_response_from_dict": 148, "bound_graph": [149, 182], "get_procedure_response_inst": 149, "get_procedure_response_dict": 149, "get_procedure_response_from_dict": 149, "property_id": [150, 182, 239], "get_property_meta": 150, "get_property_meta_inst": 150, "get_property_meta_dict": 150, "get_property_meta_from_dict": 150, "get_vertex_typ": 151, "get_vertex_type_inst": 151, "get_vertex_type_dict": 151, "get_vertex_type_from_dict": 151, "src_pk_name": 152, "src_pk_valu": 152, "dst_pk_name": 152, "dst_pk_valu": 152, "vertex_request": [153, 180], "primimary_key_valu": 153, "bob": [153, 459], "primary_key_valu": [153, 180], "cindi": 153, "job_response_inst": 154, "job_response_dict": 154, "job_response_from_dict": 154, "start_tim": [155, 166, 182], "end_tim": 155, "job_status_inst": 155, "job_status_dict": 155, "job_status_from_dict": 155, "long_text_inst": 156, "long_text_dict": 156, "long_text_from_dict": 156, "model_properti": 157, "model_property_inst": 157, "model_property_dict": 157, "model_property_from_dict": 157, "parameter_inst": 158, "parameter_dict": 158, "parameter_from_dict": 158, "primitive_type_inst": 159, "primitive_type_dict": 159, "primitive_type_from_dict": 159, "property_arrai": 160, "property_array_inst": 160, "property_array_dict": 160, "property_array_from_dict": 160, "query_nam": 161, "query_request": 161, "query_request_inst": 161, "query_request_dict": 161, "query_request_from_dict": 161, "bytearrai": 162, "schema_mapping_inst": 163, "schema_mapping_dict": 163, "schema_mapping_from_dict": 163, "schema_mapping_loading_config": 164, "schema_mapping_loading_config_inst": 164, "schema_mapping_loading_config_dict": 164, "schema_mapping_loading_config_from_dict": 164, "schema_mapping_loading_config_format": 165, "schema_mapping_loading_config_format_inst": 165, "schema_mapping_loading_config_format_dict": 165, "schema_mapping_loading_config_format_from_dict": 165, "bolt_port": 166, "hqps_port": 166, "gremlin_port": [166, 459], "service_status_inst": 166, "service_status_dict": 166, "service_status_from_dict": 166, "start_service_request_inst": 167, "start_service_request_dict": 167, "start_service_request_from_dict": 167, "stored_procedure_meta": 168, "stored_procedure_meta_inst": 168, "stored_procedure_meta_dict": 168, "stored_procedure_meta_from_dict": 168, "string_typ": 169, "string_type_inst": 169, "string_type_dict": 169, "string_type_from_dict": 169, "string_type_str": 170, "string_type_string_inst": 170, "string_type_string_dict": 170, "string_type_string_from_dict": 170, "temporal_typ": 171, "temporal_type_inst": 171, "temporal_type_dict": 171, "temporal_type_from_dict": 171, "temporal_type_tempor": 172, "temporal_type_temporal_inst": 172, "temporal_type_temporal_dict": 172, "temporal_type_temporal_from_dict": 172, "time_stamp_typ": 173, "time_stamp_type_inst": 173, "time_stamp_type_dict": 173, "time_stamp_type_from_dict": 173, "typed_valu": 174, "typed_value_inst": 174, "typed_value_dict": 174, "typed_value_from_dict": 174, "update_procedure_request_inst": 175, "update_procedure_request_dict": 175, "update_procedure_request_from_dict": 175, "var_char_inst": 176, "var_char_dict": 176, "var_char_from_dict": 176, "var_char_var_char": 177, "var_char_var_char_inst": 177, "var_char_var_char_dict": 177, "var_char_var_char_from_dict": 177, "vertex_data_inst": 178, "vertex_data_dict": 178, "vertex_data_from_dict": 178, "vertex_mapping_inst": 179, "vertex_mapping_dict": 179, "vertex_mapping_from_dict": 179, "vertex_request_inst": 180, "vertex_request_dict": 180, "vertex_request_from_dict": 180, "assist": [181, 201, 206, 229], "har": 181, "sudo": [181, 301, 470, 471], "pytest": 181, "mock": 181, "virtserv": 181, "swaggerhub": 181, "resp": 181, "f0": [181, 308], "create_dataloading_job": 181, "create_graph": 181, "delete_graph": 181, "get_graph": 181, "get_schema": 181, "list_graph": 181, "delete_job_by_id": 181, "get_job_by_id": 181, "list_job": 181, "create_procedur": 181, "delete_procedur": 181, "get_procedur": 181, "list_procedur": 181, "update_procedur": 181, "get_service_statu": 181, "restart_servic": 181, "start_servic": 181, "stop_servic": 181, "delete_edg": [181, 459], "get_edg": [181, 297], "update_edg": 181, "add_vertex": 181, "delete_vertex": [181, 459], "get_vertex": 181, "update_vertex": 181, "proc_cal": 181, "seek": [182, 305], "toolkit": 182, "showprocedur": 182, "proc_nam": [182, 190], "metric": [182, 231, 393, 394, 395, 396, 397], "canceljob": 182, "x": [182, 211, 212, 223, 224, 234, 237, 294, 300, 306, 311, 349, 382, 390, 392, 393, 397, 421, 478], "ok": [182, 236], "yourfil": 182, "123": [182, 295], "example_graph": 182, "11223444": 182, "11123445": 182, "rune": 182, "path_to_fil": 182, "query_servic": 182, "reject": [182, 453], "unabl": 182, "emptybodi": 182, "cpu_usag": 182, "memory_usag": 182, "job_": 182, "create_timestamp": 182, "process_id": 182, "line1": 182, "nlin2": 182, "1706786404768": 182, "bulk_load": 182, "workspac": [182, 223], "maintan": 182, "interactive_serv": 182, "subprocess": 182, "statuscod": 182, "invalidargu": 182, "unsupportedoper": 182, "alreadyexist": 182, "notexist": 182, "codegenerror": 182, "uninitializedstatu": 182, "invalidschema": 182, "permissionerror": [182, 245], "403": 182, "illegaloper": 182, "internalerror": 182, "invalidimportfil": 182, "ioerror": 182, "notfound": 182, "queryfail": 182, "depth": [183, 201, 205, 227, 294, 306, 311, 478], "graph_data": 183, "gs_interactive_conf": 183, "breakdown": [183, 191], "regist": [183, 184, 186, 200, 207, 225, 236, 239, 268, 453], "meta": [183, 201, 216, 225, 236, 297, 298, 457, 459], "tell": [183, 458], "eras": [183, 190], "irrevers": [183, 190], "caution": 183, "establish": [183, 196, 459], "connector": [183, 186, 203, 212], "opencyph": [183, 228], "supported_cyph": [183, 186], "term": [184, 216], "proc": [184, 398, 399, 403, 404, 445], "storp": 184, "sproc": 184, "stopro": 184, "storedproc": 184, "storeproc": 184, "subroutin": 184, "rdbm": [184, 204], "wikipedia": [184, 229, 237, 408, 412, 413, 414, 415, 417, 418, 419, 425, 426, 427, 428, 430, 431, 432, 433, 439], "nest": [184, 210], "sole": [185, 204, 205], "theori": [185, 219, 298, 306], "arm64": 185, "mac": [185, 241, 471, 473], "gs_interactive_hom": 185, "concurr": [186, 191, 226, 296], "impress": [186, 191], "Its": [186, 191, 193, 228, 425, 458], "timefram": [186, 191], "emphas": [186, 191, 233], "stand": [186, 233, 298, 299, 458], "shoulder": 186, "pivot": 186, "pillar": 186, "qp": [186, 199, 212, 232, 459], "snb": [186, 212, 225, 474, 479], "180": 186, "87": [186, 234, 437], "op": [186, 238, 248, 250, 251, 252, 253, 255, 256, 258, 260, 261, 263, 264, 265, 266, 267, 268, 271, 272, 273, 276, 277, 278, 280, 281, 304, 446, 450, 453], "boast": 186, "highlight": [186, 205, 226, 230], "laid": 186, "triumph": 186, "ten": [186, 229, 233, 298], "thousand": 186, "swiftli": 186, "versatil": [186, 207, 232, 458], "expans": [186, 230, 231, 303, 477], "prowess": 186, "prime": [186, 390, 392], "gql": [186, 200, 226, 233], "scalabl": [186, 199, 211, 229, 230, 231, 232, 233, 443], "possess": 186, "larger": [186, 208, 212, 222, 393], "massiv": [186, 200, 230], "too": [186, 199, 212, 233, 296, 365, 446], "offload": [186, 459], "excess": 186, "slave": 186, "constraint": [186, 205, 212, 213, 230], "portion": [186, 212, 229, 230, 238, 308], "occurr": [186, 204, 230], "syntax": [186, 205, 210, 219, 230, 238, 300, 446, 452], "definit": [186, 210, 226, 311, 392, 393, 395], "ir": [186, 199, 200, 201, 226, 228], "unif": 186, "physic": [186, 199, 200, 226, 237, 311, 369, 370, 371, 393, 457], "ddl": 186, "supported_gremlin_step": 186, "acid": [186, 232], "graph_nam": [188, 190, 201], "stored_procedure_1": 188, "flag": [188, 295, 296], "taken": [188, 446], "account": [188, 200, 230, 444, 477], "compile_onli": [188, 190], "procedure_nam": 188, "comma": [188, 295], "proc1": 188, "proc2": 188, "appear": [188, 193, 200, 212, 237, 351, 353, 355, 358, 360, 387, 388, 446, 472], "capit": [188, 205, 207], "aspect": [190, 200, 207, 212, 233], "entri": [190, 200, 210, 212, 219, 221, 310, 311, 358, 375, 377, 378, 403, 405, 406, 424, 466], "desc": [190, 210, 212], "input_fil": 190, "solid": [191, 414, 431, 432], "prerequisit": 191, "helm": [191, 193, 198, 199, 459, 470, 472], "entiti": [191, 207, 208, 212, 222, 227, 231, 295], "\u6807\u7b7e": 192, "\u8868\u793a\u67d0\u4e00\u7c7b\u9876\u70b9\u6216\u8005\u8fb9": 192, "\u5c5e\u6027": [192, 477, 479], "\u8868\u793a\u9876\u70b9\u6216\u8fb9\u6240\u5173\u8054\u7684\u6570\u636e": 192, "\u539f\u59cbid": 192, "oid": [192, 236, 238, 239], "\u539f\u59cb\u6570\u636e\u96c6\u4e2d\u7684id": 192, "\u4e0d\u540c\u6807\u7b7e\u7684\u9876\u70b9\u5141\u8bb8\u6709\u76f8\u540c\u7684oid": 192, "\u5b50\u56feid": 192, "fid": [192, 236, 239, 271, 455], "\u5b50\u56fe\u7684\u552f\u4e00\u7f16\u53f7": 192, "\u5206\u533a\u5668": 192, "\u80fd\u591f\u786e\u5b9a\u9876\u70b9oid\u5230\u5206\u533aid": 192, "\u7684\u6620\u5c04": 192, "\u5b50\u56fe": 192, "\u901a\u8fc7\u5207\u8fb9\u5f97\u5230\u7684\u5b50\u56fe": 192, "\u5b58\u50a8\u4e86\u9876\u70b9": 192, "\u8fb9": [192, 469], "\u9876\u70b9\u6570\u636e": 192, "\u8fb9\u6570\u636e\u7b49\u4fe1\u606f": 192, "\u5185\u90e8\u70b9": 192, "\u5c5e\u4e8e\u672cfragment\u7684\u9876\u70b9": 192, "\u5916\u90e8\u70b9": 192, "\u4e0d\u5c5e\u4e8e\u672cfragment\u7684\u9876\u70b9": 192, "\u672c\u5730id": 192, "lid": [192, 236, 271], "\u53ea\u5728\u67d0\u4e2afragment\u5185\u90e8\u6709\u610f\u4e49": 192, "\u5168\u5c40id": 192, "gid": [192, 236, 271], "\u80fd\u591f\u8868\u793a\u4efb\u610f\u4e00\u4e2a\u9876\u70b9": 192, "\u88abfragment\u5171\u8bc6": 192, "\u7528\u4e8e\u5b58\u50a8gid": 192, "oid\u7684\u6620\u5c04\u5173\u7cfb": 192, "\u7684\u8282\u70b9": 192, "\u5b58\u5728\u4ee5\u4e0b\u7f16\u7801\u65b9\u5f0f": 192, "gid\u7f16\u7801": 192, "\u5176\u4e2d": [192, 469, 474], "\u548c": [192, 300, 469, 471, 472, 473, 474, 476, 477, 478, 479], "\u5171\u540c\u7ec4\u6210": 192, "\u67d0\u4e00\u7c7b\u9876\u70b9\u5728\u67d0\u4e2a": 192, "\u7684\u9876\u70b9": 192, "\u5e8f\u53f7": 192, "lid\u7f16\u7801": 192, "\u586b\u5145": 192, "\u603b\u662f": 192, "\u6309\u7167\u6267\u884c\u6d41\u7a0b\u7f16\u53f7": 192, "\u63cf\u8ff0\u4e86\u8f7d\u56fe\u7684\u4e3b\u8981\u903b\u8f91": 192, "\u5206\u4e3ahashpartitioner\u548csegmentedpartition": 192, "\u521d\u59cb\u5316\u4ed6\u4eec\u9700\u8981\u7ed9\u51fafragment\u7684\u6570\u91cf": 192, "segmentedpartitioner\u8fd8\u9700\u7ed9\u51fa\u5168\u90e8\u7684oid": 192, "\u6bcf\u4e2a\u8fdb\u7a0b\u8bfb\u53d6\u4e00\u90e8\u5206\u70b9": 192, "\u8fb9\u6587\u4ef6": 192, "\u5f97\u5230\u591a\u4e2avertex": 192, "\u548cedg": 192, "etabl": 192, "\u5176\u4e2dvtable\u6309\u7167\u9876\u70b9\u6807\u7b7e": 192, "\u5206\u7ec4": 192, "etable\u5148\u6309\u7167\u8fb9\u6807\u7b7e": 192, "\u540c\u4e00\u4e2a\u8fb9\u6807\u7b7e\u4e0b\u9762\u53c8\u6309\u7167src\u548cdst\u7684\u9876\u70b9\u6807\u7b7e\u5206\u7ec4": 192, "\u539f\u59cb\u7684\u9876\u70b9\u8868": 192, "\u8fb9\u8868": 192, "\u6bcf\u4e2a\u8fdb\u7a0b\u6301\u6709\u90e8\u5206\u7684\u6570\u636e": 192, "partial_v_t": 192, "partial_e_t": 192, "table\u5305\u542boid": 192, "table\u5305\u62ecsrc\u548cdst\u7684oid": 192, "\u8bbf\u95eevtable\u7684oid\u5217": 192, "\u6839\u636eoid\u67e5\u8be2partit": 192, "\u5c06\u8868\u4e2d\u7684\u8bb0\u5f55\u5206\u53d1\u7ed9\u9876\u70b9\u7684\u62e5\u6709\u8005": 192, "\u4eceshuffle\u540e\u7684vtable\u53d6\u51faoid\u6267\u884cal": 192, "gather\u64cd\u4f5c": 192, "\u4f7f\u5f97\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u80fd\u591f\u83b7\u53d6\u7684\u6240\u6709oid": 192, "\u6839\u636efrag\u6570\u91cf": 192, "label\u6570\u91cf\u548c\u5168\u90e8oid": 192, "\u6bcf\u4e2a\u8fdb\u7a0b\u6784\u5efavertex": 192, "fid_t": [192, 236], "fnum_": 192, "label_id_t": [192, 236], "label_num_": 192, "hashmapbuild": 192, "cur_gid": 192, "id_parser_": 192, "generateid": 192, "\u8d77\u59cbgid": 192, "vnum": 192, "\u904d\u5386\u5168\u90e8\u5185\u90e8\u70b9": 192, "\u751f\u6210gid": 192, "emplac": 192, "getview": 192, "\u6309\u7167elabel\u904d\u5386\u6bcf\u4e00\u5f20edg": 192, "\u83b7\u53d6\u5230src\u548cdst\u7684label": 192, "\u8bbf\u95ee\u6bcf\u4e2asrc\u7684oid": 192, "\u6839\u636epartitioner\u83b7\u53d6fid": 192, "\u6839\u636efid": 192, "id\u548coid\u67e5\u8be2gid": 192, "\u751f\u6210gid\u6570\u7ec4": 192, "\u5904\u7406dst\u7684\u903b\u8f91\u540c\u7406": 192, "\u5f97\u5230src\u548cdst\u4e24\u4e2agid\u6570\u7ec4\u540e": 192, "\u66ff\u6362\u6389\u539fetable\u7684oid\u6570\u7ec4": 192, "\u5bf9etable\u6267\u884cshuffl": 192, "\u5c06\u76f8\u5e94\u7684\u884c\u4f20\u8f93\u7ed9\u6b63\u786e\u7684\u8fdb\u7a0b": 192, "\u5c06shuffle\u8fc7\u7684vtable\u548cetable\u9001\u7ed9basicarrowfragmentbuilder\u6784\u5efacsr": 192, "\u5904\u7406\u9876\u70b9": 192, "\u521d\u59cb\u5316id": 192, "parser": [192, 200, 223], "\u521d\u59cb\u5316ivnum": 192, "ovnum\u548ctvnum\u6570\u7ec4": 192, "\u6309\u7167vertex": 192, "label\u5206\u7ec4": 192, "\u904d\u5386\u6bcf\u4e00\u79cd\u9876\u70b9": 192, "\u5411vertex": 192, "map\u67e5\u8be2\u672cfragment\u7684\u5185\u90e8\u70b9\u6570\u91cf": 192, "\u5e76\u8bbe\u7f6e\u5bf9\u5e94\u7684ivnum": 192, "\u5c06vertex": 192, "table\u5408\u5e76\u6210\u4e00\u4e2achunk\u4fbf\u4e8e\u540e\u7eed\u8bbf\u95ee": 192, "vid_parser_": 192, "vertex_label_num_": 192, "resiz": 192, "ivnums_": 192, "ovnums_": 192, "tvnums_": 192, "combinechunk": 192, "default_memory_pool": 192, "vm_ptr_": 192, "getinnervertexs": [192, 236], "fid_": 192, "\u5904\u7406\u8fb9\u5305\u62ec\u4ee5\u4e0b5\u4e2a\u6b65\u9aa4": 192, "\u904d\u5386\u6bcf\u4e00\u79cd\u8fb9": 192, "\u901a\u8fc7src": 192, "gid\u5217\u548cdst": 192, "gid\u5217\u67e5\u8be2\u51fa\u672cfragment\u6240\u6709\u7684\u5916\u90e8\u70b9": 192, "\u5e76\u6309\u7167vertex": 192, "edge_t": [192, 295, 306], "table\u5408\u5e76\u6210\u4e00\u4e2achunk": 192, "\u627e\u51fa\u672cfragment\u5168\u90e8\u5916\u90e8\u70b9\u7684gid": 192, "collect_outer_vertic": 192, "dynamic_pointer_cast": [192, 460], "converttoarrowtyp": [192, 236], "arraytyp": [192, 236], "chunk": [192, 281, 308, 457], "\u6839\u636e\u5916\u90e8\u70b9\u7684gid": 192, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u6784\u5efagid\u5230lid\u7684\u6620\u5c04\u4e0e\u53bb\u91cd\u7684gid\u6570\u7ec4": 192, "\u5916\u90e8\u70b9\u7684lid\u7531label": 192, "id\u548c\u9876\u70b9\u5e8f\u53f7\u7ec4\u6210": 192, "\u9876\u70b9\u5e8f\u53f7\u4eceivnum\u5f00\u59cb\u8ba1\u6570": 192, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u586b\u5145ovnum\u548ctvnum": 192, "ovg2l_maps_": 192, "ovgid_lists_": 192, "cur_list": 192, "collected_ovgids_": 192, "\u6392\u5e8fgid": 192, "cur_map": 192, "buildertyp": 192, "vec_build": 192, "\u751f\u6210\u5916\u90e8\u70b9\u7684lid": 192, "\u5176\u4e2dfid\u4e3a0": 192, "offset\u4eceivnum\u5f00\u59cb\u7f16\u53f7": 192, "cur_id": 192, "\u5904\u7406\u7b2c\u4e00\u4e2a\u5143\u7d20": 192, "cur_list_length": 192, "\u627e\u5230\u4e0d\u91cd\u590d\u7684\u4e24\u4e2agid": 192, "\u6839\u636e\u4e0a\u4e00\u6b65\u6784\u6210\u7684gid\u5230lid\u7684\u6620\u5c04": 192, "\u5c06src\u548cdst\u7684gid\u90fd\u8f6c\u6362\u6210lid": 192, "\u5220\u9664edg": 192, "table\u7684src\u5217\u548cdst\u5217": 192, "gid\u5230lid\u8f6c\u6362\u51fd\u6570": 192, "generate_local_id_list": 192, "gid_list": 192, "lid_list": 192, "vec": 192, "getfid": 192, "\u751f\u6210\u5185\u90e8\u70b9lid": 192, "getlabelid": 192, "getoffset": 192, "\u67e5\u8be2g2l": 192, "\u901a\u8fc7gid\u627e\u5230\u5916\u90e8\u70b9lid": 192, "\u6839\u636esrc\u548cdst\u5217\u7684gid\u751f\u6210lid": 192, "edge_src_": 192, "edge_dst_": 192, "table\u7684src\u5217\u548cgid\u5217": 192, "\u53ea\u4fdd\u7559\u5c5e\u6027": 192, "tmp_table0": 192, "removecolumn": 192, "\u6784\u5efacsr": 192, "\u5bf9\u4e8e\u6709\u5411\u56fe": 192, "\u6784\u5efa\u51fa\u8fb9\u548c\u5165\u8fb9\u4e24\u4e2acsr": 192, "\u9996\u5148\u6784\u5efa\u51fa\u8fb9csr": 192, "\u7edf\u8ba1\u6bcf\u79cd\u6e90\u9876\u70b9\u7684\u51fa\u5ea6": 192, "\u6784\u5efarow": 192, "offset\u6570\u7ec4": 192, "\u8bbf\u95ee\u6bcf\u6761\u8fb9": 192, "\u4f7f\u7528row": 192, "offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u76ee\u7684\u9876\u70b9nbr\u7684\u5730\u5740": 192, "\u586b\u5145dst": 192, "lid\u548ceid\u5230nbr": 192, "\u6309\u7167\u76ee\u7684\u9876\u70b9\u7684lid": 192, "\u5c06\u6bcf\u4e00\u4e2a\u6e90\u9876\u70b9\u7684\u76ee\u7684\u9876\u70b9\u6392\u5e8f": 192, "generate_directed_csr": 192, "vid_array_t": [192, 236], "src_list": 192, "dst_list": 192, "fixedsizebinaryarrai": 192, "int64arrai": 192, "edge_offset": 192, "actual_edge_num": 192, "v_label": [192, 236, 455], "edge_num": [192, 271, 473, 477], "src_list_ptr": 192, "raw_valu": 192, "dst_list_ptr": 192, "\u8ba1\u7b97\u6e90\u9876\u70b9\u7684\u5ea6": 192, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u6784\u5efarow": 192, "tvnum": 192, "offset_vec": 192, "degree_vec": 192, "int64build": 192, "podarraybuild": 192, "nbr_unit_t": [192, 236], "edge_build": 192, "v_offset": 192, "\u83b7\u53d6\u76ee\u7684\u9876\u70b9\u6307\u9488": 192, "ptr": 192, "mutablepoint": 192, "\u586b\u5145\u76ee\u7684\u9876\u70b9lid": 192, "\u5176\u4e2deid\u7528\u4e8e\u4e4b\u540e\u83b7\u53d6\u8fb9\u4e0a\u7684\u5c5e\u6027": 192, "vid": [192, 236, 308], "eid_t": [192, 236], "\u66f4\u65b0offset": 192, "\u6307\u5411\u6e90\u9876\u70b9\u7684\u4e0b\u4e00\u6761\u51fa\u8fb9": 192, "\u5bf9\u4e34\u63a5\u70b9\u6309\u7167lid\u6392\u5e8f": 192, "offsets_ptr": 192, "lh": 192, "\u6784\u5efa\u5165\u8fb9csr\u548c\u51fa\u8fb9\u540c\u7406": 192, "\u5bf9\u4e8e\u65e0\u5411\u56fe": 192, "\u51fa\u8fb9\u548c\u5165\u8fb9\u5171\u7528\u4e00\u4e2acsr": 192, "\u903b\u8f91\u548c\u6709\u5411\u56fe\u7c7b\u4f3c": 192, "\u4f46\u662f\u8981\u540c\u65f6\u7edf\u8ba1\u6e90\u9876\u70b9\u548c\u76ee\u7684\u9876\u70b9\u7684\u5ea6\u6765\u6784\u5efarow": 192, "offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u6e90\u9876\u70b9\u7684nbr\u586b\u5145\u5165\u8fb9\u7684src": 192, "lid\u548ceid": 192, "\u540c\u65f6\u8fd8\u8981\u4f7f\u7528offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u76ee\u7684\u9876\u70b9\u7684nbr\u586b\u5145dst": 192, "\u5c01\u88c5": 192, "seal": [192, 215, 231], "\u51c6\u5907\u597d\u9876\u70b9\u6570\u91cf": 192, "ovgid\u548cg2l_map\u540e": 192, "\u5c06\u4ed6\u4eec\u5c01\u88c5\u6210\u5404\u79cdvineyardobject": 192, "\u6839\u636emetadata\u4ecevineyard\u67e5\u8be2\u548c\u6784\u5efa\u4ee5\u4e0b\u6570\u636e\u7ed3\u6784\u4f5c\u4e3aarrowfragment\u7684\u6210\u5458": 192, "\u4e5f\u5c31\u662f\u8bf4": [192, 470], "\u4ee5\u4e0b\u6570\u636e\u90fd\u662f\u5b58\u50a8\u5728vineyard\u4e2d\u7684": 192, "\u5f53\u524dfragment": 192, "fragment\u603b\u6570": 192, "directed_": 192, "\u662f\u5426\u4e3a\u6709\u5411\u56fe": 192, "\u9876\u70b9\u79cd\u7c7b\u6570\u91cf": 192, "edge_label_num_": 192, "\u8fb9\u79cd\u7c7b\u6570\u91cf": 192, "propertygraphschema": 192, "schema_": 192, "\u5185\u90e8\u548c\u5916\u90e8\u70b9\u603b\u6570": 192, "\u9876\u70b9\u5c5e\u6027\u8868": 192, "\u4e0d\u5305\u542bid\u5217": 192, "\u5916\u90e8\u70b9gid": 192, "gid\u5230lid\u6620\u5c04": 192, "\u8fb9\u5c5e\u6027": 192, "csr\u7ed3\u6784\u7684column": 192, "\u5bf9\u4e8e\u65e0\u5411\u56fe\u53ea\u6709oe_lists_\u88ab\u4f7f\u7528": 192, "csr\u7ed3\u6784\u7684row": 192, "vertex_map_t": [192, 236], "\u5269\u4e0b\u7684\u6210\u5458\u5c06\u6839\u636e\u4ee5\u4e0a\u4fe1\u606f\u6765\u6784\u5efa": 192, "edge_tables_columns_": 192, "\u6bcf\u4e00\u79cd\u8fb9\u7684\u5c5e\u6027\u5217\u5730\u5740": 192, "flatten_edge_tables_columns_": 192, "\u540c\u4e0a": 192, "vertex_tables_columns_": 192, "\u6bcf\u4e00\u79cd\u9876\u70b9\u7684\u5c5e\u6027\u5217\u5730\u5740": 192, "ie_ptr_lists_": 192, "oe_ptr_lists_": 192, "\u6bcf\u4e00\u79cd\u9876\u70b9\u7684\u6bcf\u4e00\u79cd\u5165": 192, "\u51fa\u8fb9\u7684\u8d77\u59cb\u5730\u5740": 192, "\u4e5f\u5c31\u662fcolumn": 192, "index\u7684\u8d77\u59cb\u5730\u5740": 192, "ie_offsets_ptr_lists_": 192, "oe_offsets_ptr_lists_": 192, "\u51fa\u8fb9\u7684row": 192, "offset\u8d77\u59cb\u5730\u5740": 192, "offset\u7684\u8d77\u59cb\u5730\u5740": 192, "\u4ee5\u4e0b\u662f\u6bcf\u4e00\u79cd\u9876\u70b9": 192, "\u6bcf\u4e00\u79cd\u8fb9\u7684\u6e90\u9876\u70b9fid": 192, "\u76ee\u7684\u9876\u70b9fid": 192, "\u6e90\u9876\u70b9\u548c\u76ee\u7684\u9876\u70b9fid\u6784\u6210\u7684csr\u7ed3\u6784": 192, "idst_": 192, "odst_": 192, "iodst_": 192, "idoffset_": 192, "odoffset_": 192, "iodoffset_": 192, "\u4ee5\u4e0b\u5185\u5bb9\u63cf\u8ff0\u4e86\u8bbf\u95ee\u9876\u70b9": 192, "\u9876\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e\u7684api\u548c\u5b9e\u73b0": 192, "\u5185\u90e8\u70b9\u8303\u56f4\u7531\u8d77\u59cblid\u548c\u7ec8\u6b62lid\u6784\u6210": 192, "lid\u7684\u7f16\u7801\u5305\u542b\u4e86\u9876\u70b9label": 192, "id\u548c\u9876\u70b9\u5e8f\u53f7": 192, "\u5185\u90e8\u70b9\u7684\u9876\u70b9\u5e8f\u53f7\u8303\u56f4\u4e3a": 192, "ivnum": 192, "\u5916\u90e8\u70b9\u5e8f\u53f7\u8303\u56f4\u4e3a": 192, "\u5168\u90e8\u9876\u70b9\u5e8f\u53f7\u4e3a": 192, "vertex_range_t": [192, 236], "label_id": [192, 236, 238, 239, 271], "\u751f\u6210lid\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u8303\u56f4": 192, "\u7ed3\u675f\u8303\u56f4\u662f\u5f00\u533a\u95f4": 192, "\u6839\u636e\u9876\u70b9lid\u83b7\u53d6\u9876\u70b9\u7c7b\u578b": 192, "\u5c5e\u6027id": 192, "\u5217\u53f7": 192, "\u83b7\u53d6\u5230\u5217\u6307\u9488": 192, "\u7136\u540e\u4ecelid\u83b7\u53d6\u5230\u9876\u70b9\u5e8f\u53f7": 192, "\u884c\u53f7": 192, "\u5373\u53ef\u8bbf\u95ee\u5230\u9876\u70b9\u7684\u67d0\u4e2a\u5c5e\u6027": 192, "getdata": [192, 236], "prop_id_t": [192, 236], "prop_id": 192, "property_graph_util": [192, 236], "valuegett": 192, "\u8bbf\u95ee\u51fa\u8fb9\u9700\u8981\u7ed9\u51fa\u6e90\u9876\u70b9lid\u548c\u67d0\u4e00\u79cd\u8fb9\u7684\u7c7b\u578b": 192, "\u800c\u6e90\u9876\u70b9\u7684\u7c7b\u578b\u5df2\u7ecf\u88ablid\u7f16\u7801\u6240\u5305\u542b": 192, "\u6240\u4ee5\u4e0d\u7528\u7ed9\u51fa": 192, "adj_list_t": [192, 236], "e_label": [192, 236], "\u83b7\u53d6\u6e90\u9876\u70b9lid": 192, "\u83b7\u53d6\u6e90\u9876\u70b9\u7c7b\u578b": 192, "\u83b7\u53d6\u6e90\u9876\u70b9\u5e8f\u53f7": 192, "offset_arrai": 192, "\u8bbf\u95eerow": 192, "oe": 192, "\u83b7\u53d6\u51fa\u8fb9\u8d77\u59cb\u5730\u5740": 192, "\u751f\u6210adjlist\u5bf9\u8c61": 192, "\u5206\u522b\u4e3a\u51fa\u8fb9\u8d77\u59cb\u5730\u5740": 192, "\u7ed3\u675f\u5730\u5740": 192, "\u8fb9\u5c5e\u6027\u5217\u5730\u5740": 192, "\u548c\u51fa\u8fb9\u540c\u7406": 192, "\u53ea\u9700\u8981\u628aoe\u76f8\u5173\u53d8\u91cf\u540d\u6362\u6210ie\u5373\u53ef": 192, "ie": 192, "\u56e0\u4e3a\u5728adjlist\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u51fa\u8fb9\u5c5e\u6027\u8868\u7684\u8d77\u59cb\u5730\u5740": 192, "\u6bcf\u6761\u51fa\u8fb9\u8fd8\u5305\u542b\u4e86\u8fb9id": 192, "\u5bf9\u5e94\u5230\u884c\u53f7": 192, "\u56e0\u6b64\u518d\u7ed9\u51fa\u5c5e\u6027\u7684\u5217\u53f7\u5c31\u80fd\u591f\u53bb\u5f97\u5230\u5177\u4f53\u7684\u6570\u636e": 192, "\u4f8b\u5982": [192, 469, 473, 477, 479], "\u83b7\u53d6edg": 192, "struct": [192, 236, 369, 402], "\u83b7\u53d6\u5c5e\u6027\u5217\u7684\u5730\u5740": 192, "\u548ceid\u5c31\u80fd\u591f\u83b7\u53d6\u5230\u5177\u4f53\u7684\u5c5e\u6027": 192, "edata_arrays_": 192, "nbr_": 192, "8g": [193, 223], "18": [193, 202, 212, 234, 296, 297, 299, 308, 311, 369, 418, 423, 427, 429, 432, 438, 457, 469, 472, 476], "silent": [193, 446, 467], "did": [193, 306], "role": [193, 200, 214, 223, 228, 296, 305, 311, 397, 435, 443, 459, 463, 467, 472], "rolebind": [193, 472], "uninstal": [193, 199, 472], "recycl": 193, "alloc": [193, 217, 221], "seem": [193, 212], "stuck": 193, "consumpt": 193, "poor": [193, 302], "acquir": [193, 203, 211], "mostli": [193, 201, 272], "visibl": [193, 239], "cloud": [193, 232, 233, 459], "k8s_vineyard_mem": [193, 223, 293, 453, 472], "shape": [193, 218, 219, 222, 227, 236, 238, 297, 298, 299, 300, 303, 306, 310, 368, 473], "forth": 193, "smaller": [193, 212, 234, 309, 311, 367, 368, 372], "shared_mem": [193, 472], "grpcio": [193, 472], "grpc_python_build_system_openssl": [193, 472], "scipi": [193, 393, 394, 395, 396, 446, 449, 472], "anaconda": [193, 472], "workaround": 193, "openbla": 193, "tri": [193, 196, 221, 230, 375, 381], "pkgconfig": 193, "cmake_prefix_path": 193, "brew": 193, "deni": [193, 245, 472], "kafka": [193, 455, 459, 472], "zookeep": [193, 472], "crashloopbackoff": [193, 472], "bitnami": [193, 472], "755": 193, "1001": [193, 459], "brutal": 193, "chmod": [193, 211, 472], "777": [193, 234, 472], "eleg": [193, 196], "grant": [193, 443], "rais": [193, 200, 237, 245, 247, 281, 293, 300, 308, 309, 311, 317, 326, 330, 331, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 380, 381, 385, 387, 390, 391, 392, 403, 406, 438, 441, 442, 446, 449, 453], "timeout_second": [193, 293, 453, 472], "600": [193, 234, 453, 472], "enterpris": 193, "proxi": [193, 472], "properli": [193, 208], "wrong": 193, "resolut": [193, 459], "occup": 193, "hostnam": [193, 472], "no_proxi": [193, 472], "suffix": [193, 210], "flush": 193, "forcibli": 193, "contact": 193, "slack": [193, 472], "dingtalk": [193, 472], "happi": 193, "90": [195, 234], "traffic": 196, "web": [196, 237, 311, 379, 393, 398, 439], "ever": [196, 219], "amount": [196, 211, 217, 231, 298, 300, 302], "hidden": [196, 228, 229, 231, 294, 478], "attract": 196, "attent": [196, 231, 300], "difficult": [196, 295, 305, 459], "obstacl": 196, "attempt": [196, 199, 229, 230, 233, 446], "curv": [196, 229], "hard": [196, 210, 220, 221, 407, 458], "complic": [196, 200, 212, 238], "sql": [196, 200, 207, 210, 212, 213], "deep": [196, 219, 226, 294, 299, 300, 302, 322, 325, 434, 446], "gnn": [196, 198, 216, 218, 219, 222, 226, 227, 232, 233, 294, 298, 299, 300, 302, 303, 453, 475, 478], "train": [196, 204, 216, 218, 219, 220, 226, 227, 232, 233, 235, 296, 299, 300, 302, 303, 306, 310, 453, 473, 478], "fist": 196, "interpret": [196, 226, 311], "mount_dataset": [196, 225], "ran": [196, 221], "p2p_network": 196, "embed": [196, 216, 222, 227, 231, 295, 302], "inter": [196, 307, 365, 368], "wherea": [196, 365, 458], "numpi": [196, 212, 216, 236, 238, 253, 264, 273, 297, 298, 300, 301, 302, 303, 306, 308, 310, 311, 438, 446, 449, 475], "datafram": [196, 225, 238, 252, 263, 273, 276, 308, 446, 469, 479], "head": [196, 199, 204, 210, 212], "creationd": [196, 210, 212, 225, 457, 474, 479], "locationip": [196, 225, 479], "browserus": [196, 212, 225, 479], "618475290625": 196, "2011": [196, 212, 379], "08": [196, 234, 311], "17t14": 196, "26": [196, 210, 212, 223, 234, 296, 297, 299, 395], "59": [196, 234], "961": 196, "210": [196, 234, 442], "17": [196, 212, 234, 296, 297, 299, 469], "chrome": [196, 212], "618475290626": 196, "17t11": 196, "570": 196, "comment_replyof_com": 196, "274877907301": 196, "274877907299": 196, "274877907302": 196, "pd": [196, 204, 225, 479], "df_v": [196, 225, 469, 479], "read_csv": [196, 204, 225, 479], "sep": [196, 204, 225, 308, 479], "df_e": [196, 225, 479], "graphcomput": [198, 477], "gl": [198, 219, 232, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307], "neural": [198, 216, 226, 227, 232, 233, 235, 294, 295, 298, 300, 302, 306], "posit": [198, 212, 231, 232, 294, 300, 311, 356, 375, 377, 378, 380, 381, 385, 393, 394, 395, 396, 397, 441, 444, 458, 461], "frequent": [198, 226, 229, 459], "groot": [198, 208, 226, 233], "graphar": [198, 308], "gart": 198, "gap": 198, "oltp": [198, 226, 228], "style": [198, 215, 226, 451], "wonder": 199, "throughout": [199, 200, 210], "smoothli": 199, "easiest": 199, "websit": [199, 229, 365], "untar": 199, "cp": [199, 201, 443, 458], "tree": [199, 228, 346, 348, 356, 376, 382, 384, 394, 395, 396, 409, 410, 447, 453, 479], "your_release_nam": 199, "cypherport": 199, "littl": [199, 210, 212], "v6d_modern_load": [199, 201], "data_path": [199, 460], "store_data_path": [199, 201], "thing": [199, 300, 466], "key1": 199, "key2": 199, "token": [199, 210], "column_typ": 199, "infer": [199, 225, 231, 232], "filed1": 199, "filed2": 199, "unexpect": 199, "troubl": 199, "correspondingli": [199, 219, 403, 406], "v6d_ldbc_loader": 199, "hdf": [199, 225, 273, 305, 308, 459, 469, 479], "pegasusworkernum": 199, "pegasustimeout": 199, "durat": [199, 205, 210], "pegasusbatchs": 199, "1024": [199, 201, 210, 457], "pegasusoutputcapac": 199, "frontendquerypersecondlimit": 199, "2147483647": [199, 459], "gremlinscriptlanguagenam": 199, "antlr_gremlin_travers": 199, "antlr_gremlin_calcit": 199, "inher": 200, "manufactur": 200, "upcom": 200, "sticki": 200, "shelv": 200, "intellig": [200, 212, 226, 233, 403, 406], "hybrid": [200, 458, 459], "dedupl": 200, "latenc": [200, 211, 226, 232, 233], "hope": [200, 212, 459], "trade": [200, 226, 459], "inevit": 200, "realist": [200, 438], "lengthi": 200, "verif": [200, 226], "80": [200, 234, 425], "decoupl": [200, 226, 233], "upper": [200, 210, 212, 216, 230, 365, 458], "briefli": [200, 231], "algebra": [200, 435], "edgeexpans": 200, "pathexpans": 200, "legal": 200, "predic": [200, 212], "arithmet": [200, 210, 212], "firstli": [200, 208, 212, 225, 233], "down": [200, 207, 224, 363], "cbo": 200, "statist": [200, 207, 212, 297], "glogu": 200, "shuffl": [200, 210, 223, 224, 300, 306, 310], "plu": [200, 210, 212, 349, 421], "unaccept": 200, "come": [200, 204, 212, 215, 225, 227, 228, 231, 232, 234, 297, 412, 449], "end2end": 201, "sf": [201, 212], "v6d_object_id": 201, "unsur": [201, 204], "vineyard_ipc_socket": [201, 460], "gie_test_hom": 201, "rpc": [201, 223, 236, 307, 453, 459], "1234": 201, "127": [201, 234, 459], "11234": 201, "pegasu": [201, 226], "gaia_executor": 201, "log4r": [201, 459], "yml": [201, 457, 459], "usernam": [201, 459], "password": [201, 459], "auth": [201, 203, 311, 459], "djna": 201, "kill": [201, 453], "pkill": 201, "gcc": [202, 234, 476], "64": [202, 211, 219, 299, 300, 377, 457, 477], "chip": [202, 476], "hereaft": [202, 212, 227], "q1": [202, 204, 212, 227], "q2": [202, 212, 227], "q3": [202, 212, 227], "453": 202, "xxx": [202, 204, 304, 308, 453, 469], "pppp": 202, "startup": 202, "600000": 202, "entr": 202, "ee": 202, "syntact": [202, 208, 213, 230], "sugar": [202, 208, 213, 230], "graphdatabas": 203, "routingcontrol": [203, 227], "print_top_10": 203, "execute_queri": 203, "routing_": [203, 227], "simpler": [203, 211, 212, 446], "nowadai": 204, "shortcom": [204, 208, 212], "gpt": 204, "materi": 204, "year": [204, 210, 212, 227, 229, 473], "mislead": 204, "hot": 204, "cold": 204, "workabl": 204, "significantli": [204, 207, 208, 229, 232], "openai": 204, "novic": 204, "dream": 204, "chamber": 204, "25": [204, 212, 218, 222, 227, 234, 296, 297, 299, 368, 370, 373, 392, 439, 473], "langchain": 204, "316": 204, "suchun": 204, "sv": 204, "nodes_set": 204, "stone_story_nodes_rel": 204, "vid_field": [204, 225, 308, 474], "edges_set": 204, "stone_story_edg": 204, "edges_sets_": 204, "src_field": [204, 225, 308, 474], "dst_field": [204, 225, 308, 474], "daughter_in_law_of_grandson_of": 204, "wife_of": 204, "api_kei": 204, "query_to_cyph": 204, "langchain_prompt": 204, "son": 204, "baoyu": 204, "jia": 204, "\u8d3e\u5b9d\u7389\u662f\u8c01\u7684\u513f\u5b50": 204, "cypher_sent": 204, "son_of": 204, "q": [204, 211, 298, 300, 306, 388, 392], "\u8d3e\u5b9d\u7389": 204, "lastli": 204, "\u8d3e\u653f": 204, "stori": 204, "compli": [205, 300], "unaddress": 205, "regard": [205, 212, 222, 458], "keyword": [205, 313, 314, 315, 382, 389, 393, 394, 395, 396, 397, 446, 449, 452, 453], "insensit": [205, 210], "lowercas": 205, "letter": [205, 440], "slightli": [205, 301, 365, 452], "elabor": [205, 233], "uint64": [205, 287, 308, 453], "byte_arrai": 205, "datetim": 205, "citizen": 205, "unsupport": [205, 208, 210], "conceiv": [205, 393], "inner_typ": 205, "mathemat": [205, 378, 380, 388, 390, 392, 401], "moment": [205, 241, 459], "averag": [205, 210, 222, 227, 237, 311, 365], "avg": [205, 210, 311], "summar": [205, 212, 216], "subtract": [205, 210], "divis": [205, 210], "modulo": [205, 210, 390], "exponenti": [205, 210, 212, 231, 393, 395, 396], "multipli": [205, 210, 433], "inequ": 205, "NOT": [205, 210, 458], "sensit": [205, 438], "WITH": [205, 210], "conjunct": 205, "AND": [205, 210, 227, 239], "disjunct": 205, "OR": [205, 208, 210, 239, 446], "xor": [205, 210], "negat": [205, 210], "bitopr": 205, "scalar": [205, 304, 311], "listliter": 205, "fold": [205, 458, 477], "mapliter": 205, "elementid": [205, 210], "interv": [205, 365, 397, 453], "notabl": 205, "AS": [205, 208, 443, 447], "BY": [205, 208], "interconnect": [206, 229, 296], "tcp": [206, 223], "llm": 206, "sentenc": [206, 207, 210, 212], "tradition": 207, "accommod": [207, 233], "heurist": [207, 230, 373], "coexist": 207, "sophist": [207, 228], "cardin": 207, "primarili": [207, 212, 230, 458], "stem": 207, "atc": 207, "instrument": 207, "efficaci": 207, "alias": [207, 210], "p1": [207, 212], "p2": [207, 212], "id1": [207, 477], "id2": [207, 477], "expedit": 207, "intent": 207, "k1": [207, 210], "k2": [207, 210], "p3": 207, "retain": [207, 210, 387, 460], "constrain": 207, "simultan": [207, 227, 233, 455], "necessit": [207, 226], "lai": 207, "groundwork": 207, "conform": 207, "nonexist": 207, "kno": 207, "mismatch": 207, "websocket": [208, 477], "worth": [208, 222, 300, 308, 446], "mutat": 208, "lambda": [208, 212, 294, 300, 306, 311, 382, 393, 395, 396, 397, 478], "groovi": 208, "currenttimemilli": [208, 459, 477], "expr": [208, 210, 212, 477], "transact": [208, 226, 232, 233, 234, 455, 459, 469], "secondari": 208, "rocksdb": [208, 459], "isol": [208, 311, 407, 459], "therein": 208, "council": [208, 234], "birthdai": [208, 225, 479], "differenti": 208, "123456": [208, 216, 231, 459], "hasid": 208, "expos": [208, 214, 298, 309, 453, 463], "secondli": [208, 233], "path_expand": 208, "concret": [208, 237, 238, 308], "endv": [208, 212, 230, 477], "repeat": [208, 230, 231, 300, 306, 380, 385, 388, 408, 411, 477], "path_opt": [208, 210, 212, 230, 477], "pathexpand": 208, "marko": [208, 210, 212], "27": [208, 210, 212, 234, 296, 297, 299, 427], "hasstep": 208, "groupcount": [208, 477], "age_cnt": 208, "age_sum": 208, "scan": [208, 458], "propertyidvalu": 208, "moreov": [208, 210, 226, 230, 232, 458], "propertyidvalue1": 208, "propertyidvalue2": 208, "inE": [208, 300, 477], "conquer": 209, "meant": [210, 212], "vertexid": 210, "inject": 210, "edgeid": 210, "histori": [210, 212, 230], "propertykei": 210, "accessor": 210, "eq": [210, 212, 230, 237, 477], "neq": [210, 477], "gt": [210, 212, 477], "lt": [210, 212, 477], "gte": [210, 212, 227, 473, 477], "lte": [210, 227, 473, 477], "outsid": [210, 477], "textp": [210, 477], "startingwith": [210, 477], "endingwith": [210, 477], "rko": 210, "ark": 210, "notstartingwith": [210, 477], "notendingwith": [210, 477], "notcontain": [210, 477], "unequ": 210, "wheretravers": 210, "act": [210, 294, 443, 446, 466, 478], "startkei": 210, "alter": [210, 446], "opposit": [210, 300, 374, 421], "nottravers": 210, "duplic": [210, 212, 373, 375, 377, 446, 447], "deduplabel": 210, "composit": [210, 212], "de": [210, 221], "impli": 210, "flat": 210, "br": 210, "selectkei": 210, "roll": [210, 212, 215], "accompani": 210, "aggregatefunc": 210, "emit": [210, 212, 294, 297, 300, 306, 478], "ascend": [210, 212], "asc": [210, 212], "bias": 210, "toss": 210, "merg": [210, 300], "uniontravers": 210, "matchsent": 210, "binder": 210, "__": [210, 211, 212, 227, 300, 473, 477], "graphnam": 210, "unrol": 210, "linear": [210, 380, 382, 438, 458], "result_opt": [210, 212, 477], "all_v": [210, 212, 477], "lengthrang": 210, "keyvaluepair": 210, "end_v": [210, 212, 477], "all_v_": 210, "vada": 210, "josh": 210, "ongo": 210, "liter": 210, "0f": 210, "0d": 210, "2l": 210, "IN": [210, 228], "isnul": 210, "month": 210, "1000": [210, 237, 296, 311, 443, 446, 459], "bitwis": 210, "startswith": 210, "ma": 210, "endswith": 210, "ko": 210, "substr": [210, 477], "preced": [210, 446, 459], "parenthes": 210, "unari": 210, "modulu": 210, "membership": [210, 446], "lop": 210, "rippl": 210, "peter": 210, "34": [210, 212, 234, 296, 297, 299, 439], "729": 210, "1225": 210, "841": 210, "v2": [210, 212, 218, 230, 294, 424, 478], "35": [210, 212, 234, 296, 297, 299, 306, 373, 423, 439], "29": [210, 212, 296, 297, 299], "simplepath": [210, 477], "latter": [210, 212, 229], "mix": [210, 237, 458], "sack": [210, 477], "guidanc": 211, "gremlinpython": [211, 459], "sy": [211, 306], "gremlin_python": [211, 459], "graph_travers": 211, "driver_remote_connect": 211, "driverremoteconnect": [211, 459], "gremlin_endpoint": [211, 459], "remoteconn": [211, 459], "withremot": [211, 459], "assert": [211, 237, 458], "oom": 211, "vast": 211, "mitig": 211, "risk": [211, 226], "queue": [211, 239], "graph_url": [211, 309, 459, 477], "stopiter": 211, "resultiterationbatchs": 211, "addcontactpoint": [211, 459], "resultset": [211, 459], "hasnext": 211, "dlcdn": 211, "your_endpoint_address": 211, "your_endpoint_port": 211, "classnam": [211, 477], "ser": [211, 477], "gryomessageserializerv1d0": [211, 477], "serializeresulttostr": [211, 477], "realm": 212, "audit": 212, "toolsuit": 212, "simul": [212, 271, 306], "confid": 212, "permit": [212, 446], "3k": 212, "gremlin_queri": 212, "190376": 212, "787074": 212, "sf1": 212, "432345564227583365": 212, "504403158265495622": 212, "576460752303435306": 212, "432345564227579434": 212, "hastyp": 212, "504403158265495612": 212, "144115188075855941": 212, "issubclassof": 212, "504403158265495553": 212, "confus": [212, 394, 395, 396], "mechan": [212, 228, 231, 233, 455, 463], "belong": [212, 231, 237, 238, 239, 308, 436, 439, 446, 452, 459], "distinguish": [212, 226, 294, 295, 296, 458], "worri": 212, "havelabel": 212, "216172782113783808": 212, "216172782113784710": 212, "label1": 212, "label2": 212, "forum": 212, "72057594037936036": 212, "360287970189718653": 212, "360287970189718655": 212, "joseph": 212, "yacin": 212, "01t00": 212, "curiou": 212, "38416": 212, "mayb": 212, "pyplot": 212, "plt": 212, "comment_cont": 212, "comment_length": 212, "histogram": 212, "hist": [212, 320], "50": [212, 234, 393, 395, 396], "607c8e": 212, "grid": [212, 439], "axi": [212, 236, 237, 238, 253, 277, 306, 452], "xlabel": 212, "ylabel": 212, "gender": [212, 225, 479], "person_gend": 212, "male": 212, "femal": 212, "male_count": 212, "female_count": 212, "216172782113784483": 212, "around": [212, 309], "432345564227569033": 212, "288230376151712472": 212, "144115188075856168": 212, "144115188075860911": 212, "72057594037934114": 212, "hasmoder": 212, "studyat": 212, "workat": 212, "islocatedin": 212, "432345564227582847": 212, "hasinterest": 212, "504403158265496227": 212, "864691128455136658": 212, "1008806316530991636": 212, "360287970189645858": 212, "en": [212, 229, 237, 408, 412, 413, 414, 415, 417, 418, 419, 425, 426, 427, 428, 430, 431, 432, 433], "e1": 212, "citi": [212, 216, 229, 231], "ispartof": 212, "countri": 212, "288230376151711797": 212, "216172782113784555": 212, "14": [212, 234, 296, 297, 299, 351, 411, 419, 431, 446], "exactli": [212, 216, 230, 237, 311, 356, 365, 379, 424, 452, 459], "432345564227569357": 212, "432345564227570524": 212, "288230376151712984": 212, "144115188075861043": 212, "replyof": [212, 457, 474], "54336": 212, "33411": 212, "360287970189700805": 212, "59465": 212, "33403": 212, "awai": 212, "ineffect": 212, "illeg": 212, "simple_path": 212, "unfold": [212, 237], "hascreat": 212, "nation": 212, "china": 212, "np": [212, 297, 300, 306, 310, 461], "market": 212, "japan": 212, "browsers_us": 212, "browser_list": 212, "firefox": 212, "safari": 212, "browser_count": 212, "autopct": 212, "1f": 212, "univers": [212, 226, 311, 344, 345, 392, 402, 434, 438], "person1": 212, "person2": 212, "university1": 212, "university2": 212, "studi": [212, 222, 227, 233, 392, 394], "216172782113784481": 212, "216172782113784279": 212, "144115188075858884": 212, "216172782113784361": 212, "216172782113784291": 212, "144115188075858879": 212, "216172782113784642": 212, "216172782113784473": 212, "216172782113784328": 212, "144115188075858700": 212, "216172782113784700": 212, "216172782113784331": 212, "144115188075860619": 212, "216172782113784375": 212, "216172782113784333": 212, "144115188075858813": 212, "216172782113784593": 212, "216172782113784688": 212, "144115188075860870": 212, "216172782113784047": 212, "216172782113784692": 212, "144115188075862429": 212, "isomorph": [212, 231, 296, 300, 425, 447], "22": [212, 234, 296, 297, 299, 308, 439, 457], "23": [212, 296, 297, 299], "216172782113784192": 212, "216172782113784107": 212, "216172782113784171": 212, "regular": [212, 385, 390, 391, 392, 414, 419, 422, 427, 430, 431, 432, 433], "squar": [212, 373, 392, 420, 421, 424, 439], "butterfli": 212, "notion": 212, "matchanalyticsalgorithm": 212, "matchoptimizationalgorithm": 212, "216172782113784587": 212, "216172782113784363": 212, "144115188075860919": 212, "216172782113784532": 212, "216172782113784400": 212, "144115188075861858": 212, "216172782113784491": 212, "216172782113784401": 212, "144115188075858086": 212, "216172782113784598": 212, "216172782113784629": 212, "144115188075858881": 212, "216172782113783931": 212, "216172782113784657": 212, "144115188075858708": 212, "repli": 212, "pa": 212, "pb": 212, "216172782113783809": 212, "216172782113784011": 212, "360287970189640007": 212, "360287970189640008": 212, "360287970189640009": 212, "2012": [212, 405], "216172782113783812": 212, "216172782113783882": 212, "36": [212, 234, 296, 297, 299, 351, 431, 439, 471], "360287970189640010": 212, "37": [212, 234, 296, 297, 299, 311, 439, 471], "216172782113784105": 212, "38": [212, 234, 296, 297, 299, 439, 471], "41": [212, 234, 296, 297, 299, 386, 439], "43": [212, 296, 297, 299, 311, 413, 439, 469], "216172782113783814": 212, "216172782113783962": 212, "360287970189640135": 212, "52": [212, 439], "216172782113784199": 212, "54": [212, 234, 386, 439], "216172782113784038": 212, "56": [212, 234, 345, 439], "216172782113783816": 212, "216172782113784144": 212, "175": 212, "360287970189640462": 212, "72057594037927936": 212, "144115188075855872": 212, "288230376151711744": 212, "432345564227567616": 212, "504403158265495555": 212, "india": 212, "hasmemb": 212, "8248": 212, "8101": 212, "imposs": 212, "2822": 212, "tag1": 212, "tag2": 212, "37164": 212, "432": 212, "property1": 212, "property2": 212, "donati": 212, "luigi": 212, "hall": 212, "costa": 212, "carlo": 212, "khan": 212, "meera": 212, "mahinda": 212, "eli": 212, "94": 212, "228": [212, 234], "emb": [212, 294, 478], "th": [212, 298, 311, 424], "dom": 212, "pedro": 212, "ii": 212, "condariuc": 212, "bonomi": 212, "anyth": 212, "david": [212, 347, 358, 423], "silva": 212, "guliyev": 212, "tagclass": 212, "504403158265495552": 212, "504403158265495554": 212, "504403158265495556": 212, "504403158265495557": 212, "504403158265495558": 212, "504403158265495559": 212, "504403158265495560": 212, "504403158265495561": 212, "504403158265495562": 212, "504403158265495563": 212, "504403158265495564": 212, "504403158265495565": 212, "504403158265495566": 212, "504403158265495567": 212, "504403158265495568": 212, "504403158265495569": 212, "504403158265495570": 212, "504403158265495571": 212, "504403158265495572": 212, "504403158265495573": 212, "504403158265495574": 212, "504403158265495575": 212, "504403158265495576": 212, "504403158265495577": 212, "504403158265495578": 212, "504403158265495579": 212, "504403158265495580": 212, "504403158265495581": 212, "504403158265495582": 212, "504403158265495583": 212, "504403158265495584": 212, "504403158265495585": 212, "504403158265495586": 212, "504403158265495587": 212, "504403158265495588": 212, "504403158265495589": 212, "504403158265495590": 212, "504403158265495591": 212, "504403158265495592": 212, "504403158265495593": 212, "504403158265495594": 212, "504403158265495595": 212, "504403158265495596": 212, "504403158265495597": 212, "504403158265495598": 212, "504403158265495599": 212, "504403158265495600": 212, "504403158265495601": 212, "504403158265495602": 212, "504403158265495603": 212, "504403158265495604": 212, "504403158265495605": 212, "504403158265495606": 212, "504403158265495607": 212, "504403158265495608": 212, "504403158265495609": 212, "504403158265495610": 212, "504403158265495611": 212, "504403158265495613": 212, "504403158265495614": 212, "504403158265495615": 212, "504403158265495616": 212, "504403158265495617": 212, "504403158265495618": 212, "504403158265495619": 212, "504403158265495620": 212, "504403158265495621": 212, "q4": 212, "690": 212, "134313148716225": 212, "216172782113783811": 212, "216172782113783813": 212, "216172782113784707": 212, "216172782113784708": 212, "216172782113784709": 212, "216172782113783910": 212, "216172782113784104": 212, "216172782113784207": 212, "216172782113784318": 212, "216172782113784305": 212, "216172782113784597": 212, "216172782113784693": 212, "216172782113784018": 212, "216172782113784092": 212, "216172782113784108": 212, "216172782113784161": 212, "216172782113784162": 212, "73": [212, 234, 392], "216172782113783875": 212, "216172782113783932": 212, "216172782113784057": 212, "216172782113784068": 212, "216172782113784065": 212, "216172782113784235": 212, "216172782113784247": 212, "meaning": [212, 225, 238, 308], "449": 212, "454": [212, 234], "216172782113783810": 212, "descend": [212, 440], "216172782113784082": 212, "216172782113784169": 212, "216172782113784267": 212, "216172782113784368": 212, "216172782113784376": 212, "216172782113783938": 212, "216172782113784405": 212, "216172782113783980": 212, "216172782113783844": 212, "216172782113783901": 212, "216172782113783935": 212, "216172782113784439": 212, "216172782113784315": 212, "216172782113784374": 212, "216172782113784601": 212, "216172782113784431": 212, "216172782113783815": 212, "216172782113783817": 212, "216172782113783971": 212, "216172782113784154": 212, "216172782113784381": 212, "216172782113783933": 212, "earlier": [212, 397, 459], "216172782113783819": 212, "216172782113783826": 212, "216172782113783836": 212, "bi": [212, 229, 232], "query2": 212, "09": [212, 234], "07": [212, 221, 234, 365, 373], "hastag": 212, "count1": 212, "count2": 212, "jet_li": 212, "zhang_yim": 212, "faye_wong": 212, "tsui_hark": 212, "bruce_le": 212, "johnny_depp": 212, "tom_cruis": 212, "jackie_chan": 212, "query3": 212, "moder": 212, "infinit": [212, 407], "seriou": 212, "song": 212, "containerof": 212, "message_count": 212, "824633725780": 212, "08t02": 212, "334": [212, 234], "album": 212, "hao": 212, "wang": [212, 378, 380], "19791209300479": 212, "755914248304": 212, "02t20": 212, "03": [212, 234, 467], "344": 212, "wall": 212, "lin": 212, "lei": 212, "24189255811275": 212, "824633725045": 212, "02": [212, 373], "03t18": 212, "633": 212, "893353201782": 212, "28t23": 212, "53": [212, 234, 439], "251": 212, "1030792152809": 212, "03t09": 212, "47": [212, 223, 224, 234, 296, 297, 299], "414": 212, "chen": 212, "32985348833887": 212, "07t07": 212, "30": [212, 234, 296, 297, 299, 370, 415, 417, 422, 459, 477], "038": 212, "zhang": [212, 469], "yang": [212, 469], "15393162789707": 212, "query4": 212, "membercount": 212, "country_count": 212, "personcount": 212, "72057594037932503": 212, "72057594037932473": 212, "72057594037932489": 212, "72057594037932494": 212, "72057594037932501": 212, "72057594037934803": 212, "72057594037934804": 212, "72057594037935005": 212, "72057594037928132": 212, "72057594037935879": 212, "288230376151711799": 212, "country_top100_forums_dict": 212, "personcountforum": 212, "72057594037935702": 212, "72057594037930685": 212, "72057594037932114": 212, "72057594037934231": 212, "72057594037935703": 212, "72057594037935730": 212, "72057594037935734": 212, "72057594037932509": 212, "72057594037935707": 212, "72057594037935708": 212, "72057594037935711": 212, "72057594037935714": 212, "72057594037935719": 212, "72057594037935729": 212, "72057594037935731": 212, "72057594037935724": 212, "72057594037929560": 212, "72057594037931546": 212, "72057594037931545": 212, "72057594037932479": 212, "72057594037932485": 212, "72057594037932505": 212, "72057594037932511": 212, "72057594037935710": 212, "72057594037935722": 212, "72057594037929246": 212, "72057594037928266": 212, "72057594037935713": 212, "72057594037934308": 212, "72057594037934313": 212, "72057594037934302": 212, "72057594037930430": 212, "72057594037934303": 212, "72057594037932482": 212, "72057594037935147": 212, "72057594037935148": 212, "72057594037935157": 212, "72057594037927973": 212, "72057594037929386": 212, "72057594037934315": 212, "72057594037935720": 212, "72057594037935015": 212, "72057594037934300": 212, "72057594037930861": 212, "72057594037934319": 212, "72057594037931542": 212, "72057594037929583": 212, "72057594037933324": 212, "72057594037929182": 212, "72057594037929739": 212, "72057594037934829": 212, "72057594037935658": 212, "72057594037935660": 212, "72057594037935674": 212, "72057594037935682": 212, "72057594037935683": 212, "72057594037935672": 212, "72057594037927978": 212, "72057594037935163": 212, "72057594037935014": 212, "72057594037931544": 212, "72057594037934297": 212, "72057594037927979": 212, "72057594037932474": 212, "72057594037934384": 212, "72057594037932639": 212, "72057594037934380": 212, "72057594037935146": 212, "72057594037935152": 212, "72057594037928134": 212, "72057594037928674": 212, "72057594037929248": 212, "72057594037931240": 212, "72057594037931247": 212, "72057594037931256": 212, "72057594037930958": 212, "72057594037930963": 212, "72057594037931259": 212, "72057594037931260": 212, "72057594037931262": 212, "72057594037929365": 212, "72057594037929419": 212, "72057594037929421": 212, "72057594037929431": 212, "72057594037929434": 212, "72057594037929437": 212, "72057594037929446": 212, "72057594037929447": 212, "72057594037929449": 212, "72057594037929450": 212, "72057594037935166": 212, "72057594037929519": 212, "72057594037929451": 212, "72057594037929452": 212, "72057594037935046": 212, "72057594037932339": 212, "72057594037932481": 212, "72057594037934294": 212, "72057594037932389": 212, "72057594037932976": 212, "72057594037930870": 212, "72057594037931266": 212, "72057594037928092": 212, "72057594037928495": 212, "72057594037929510": 212, "72057594037929517": 212, "72057594037929961": 212, "72057594037929965": 212, "72057594037930242": 212, "72057594037930248": 212, "72057594037930250": 212, "72057594037930313": 212, "72057594037931547": 212, "72057594037935686": 212, "72057594037929052": 212, "72057594037929053": 212, "72057594037929055": 212, "72057594037929057": 212, "72057594037929060": 212, "72057594037934811": 212, "72057594037934813": 212, "72057594037934816": 212, "72057594037934821": 212, "72057594037934822": 212, "72057594037934823": 212, "72057594037934828": 212, "72057594037934835": 212, "72057594037934837": 212, "72057594037934975": 212, "72057594037934976": 212, "72057594037935032": 212, "72057594037935038": 212, "72057594037935045": 212, "72057594037935664": 212, "72057594037935673": 212, "72057594037935678": 212, "72057594037935685": 212, "72057594037931549": 212, "72057594037931550": 212, "72057594037931552": 212, "72057594037931554": 212, "72057594037931557": 212, "72057594037931560": 212, "72057594037931566": 212, "72057594037935671": 212, "72057594037935670": 212, "72057594037934977": 212, "72057594037931543": 212, "72057594037929518": 212, "72057594037935679": 212, "72057594037931575": 212, "72057594037932438": 212, "72057594037932878": 212, "72057594037932886": 212, "72057594037932888": 212, "72057594037927982": 212, "72057594037930526": 212, "72057594037930535": 212, "72057594037930546": 212, "72057594037930976": 212, "72057594037930536": 212, "72057594037931358": 212, "72057594037930366": 212, "72057594037931574": 212, "72057594037932435": 212, "72057594037935020": 212, "72057594037935864": 212, "72057594037933861": 212, "72057594037932440": 212, "72057594037927981": 212, "72057594037931349": 212, "72057594037931366": 212, "72057594037932885": 212, "72057594037927980": 212, "72057594037930529": 212, "72057594037930532": 212, "72057594037931304": 212, "72057594037932433": 212, "72057594037932441": 212, "72057594037934547": 212, "query11": 212, "live": 212, "startdat": 212, "enddat": 212, "216172782113784091": 212, "216172782113784250": 212, "216172782113784403": 212, "216172782113784537": 212, "216172782113784122": 212, "query14": 212, "country1": 212, "country2": 212, "subscor": 212, "award": [212, 469], "chile": 212, "case1": 212, "case2": 212, "case3": 212, "case4": 212, "216172782113784153": 212, "216172782113784100": 212, "216172782113783956": 212, "216172782113784673": 212, "216172782113784252": 212, "216172782113784263": 212, "216172782113784193": 212, "216172782113784242": 212, "216172782113784623": 212, "216172782113784498": 212, "216172782113784251": 212, "216172782113784538": 212, "216172782113784167": 212, "216172782113783864": 212, "216172782113784613": 212, "216172782113784116": 212, "faq": 213, "javasdk": [214, 463], "creation": [215, 296, 370], "transit": [215, 415, 443], "magnitud": [215, 228], "superior": [215, 227, 229, 233], "rich": [215, 226, 229, 231, 296, 298], "neg": [215, 216, 294, 298, 300, 302, 306, 311, 330, 408], "gsl": [215, 216, 226, 296, 297, 298, 299, 303, 310], "gat": [215, 231, 294, 302, 478], "deepwalk": [215, 294, 478], "trans": [215, 294, 478], "pyg": [215, 216, 219, 220, 231, 232, 233], "flexibli": [215, 226, 231, 233], "pytorch": [215, 216, 223, 226, 231, 300, 302], "onlin": [215, 228, 231, 232, 455, 459], "fed": [215, 227, 231], "dockerfil": [215, 301], "ek": 215, "aw": [215, 234, 470], "ack": 215, "failov": [215, 233], "concentr": [215, 233, 350], "secur": [216, 231, 232], "industri": [216, 226, 231, 233, 234], "feasibl": [216, 231], "preprocess": [216, 306], "uniformli": [216, 383, 384, 385, 393, 394, 395, 396, 397, 441], "lookup": [216, 231, 306, 446], "topolog": [216, 296], "nn": [216, 218, 221, 222, 223, 224, 227, 231, 237, 294, 306, 473, 478], "ego": [216, 231, 302, 447, 478], "dimension": [216, 222, 227, 231, 295, 297, 298], "conv": [216, 219, 231], "edge_index": [216, 219, 223, 224], "carri": 216, "predict": [216, 222, 226, 227, 231], "asynchron": 216, "tensor": [216, 219, 236, 237, 238, 277, 294, 298, 302, 304, 450, 452], "plaintext": 216, "clearli": [216, 231], "space": [216, 231, 295, 296, 300, 311, 345, 393, 394, 395, 396, 397], "dimens": [216, 218, 221, 222, 227, 231, 295, 393, 394, 395, 396, 438, 473], "batchgraph": 216, "mini": [216, 231], "loss": [216, 218, 221, 222, 223, 224, 227, 231, 306, 473, 478], "mind": 216, "classif": [216, 220, 227, 231, 235, 294, 295, 306], "trainer": [216, 218, 221, 222, 227, 294, 473, 478], "hk": 217, "rm": [217, 306], "4g": 217, "aarch64": 218, "processor": 218, "egographsag": [218, 221, 227, 473], "349": [218, 222, 227, 473], "venu": [218, 227], "confer": [218, 227, 298, 469], "www": [218, 221, 222, 227, 311, 365, 419, 428, 431, 459, 473], "tf": [218, 219, 221, 222, 227, 294, 295, 300, 301, 306, 473, 478], "disable_v2_behavior": [218, 221, 222, 227, 473], "importerror": [218, 221, 222, 227, 473], "load_ogbn_mag": [218, 221, 222, 225, 227, 473, 479], "egosagesuperviseddataload": [218, 222, 227, 473], "localtrain": [218, 221, 222, 227, 473], "node_typ": [218, 221, 222, 227, 294, 296, 297, 300, 303, 306, 310, 473, 478], "class_num": [218, 222, 227, 294, 473, 478], "features_num": [218, 221, 222, 227, 294, 473, 478], "hops_num": [218, 222, 227, 294, 473, 478], "nbrs_num": [218, 221, 222, 227, 473], "epoch": [218, 219, 221, 222, 223, 224, 227, 294, 299, 457, 473, 478], "hidden_dim": [218, 221, 222, 227, 294, 306, 473, 478], "256": [218, 222, 223, 224, 227, 234, 375, 435, 459, 473], "in_drop_r": [218, 222, 227, 473], "learning_r": [218, 221, 222, 227, 306, 473], "reset_default_tf_graph": [218, 222, 227, 473], "act_func": [218, 222, 227, 473], "relu": [218, 222, 227, 473], "dropout": [218, 221, 222, 227, 306, 473], "train_data": [218, 221, 222, 227, 473], "mask": [218, 222, 227, 310, 473], "train_embed": [218, 222, 227, 473], "src_ego": [218, 221, 222, 227, 473], "train_label": [218, 222, 227, 473], "reduce_mean": [218, 222, 227, 294, 306, 473, 478], "sparse_softmax_cross_entropy_with_logit": [218, 222, 227, 294, 306, 473, 478], "logit": [218, 222, 227, 306, 473], "adamoptim": [218, 221, 222, 227, 306, 473], "test_embed": [218, 222, 227, 473], "test_label": [218, 222, 227, 473], "test_indic": [218, 222, 227, 473], "argmax": [218, 222, 223, 224, 227, 473], "output_typ": [218, 222, 227, 281, 450, 473], "test_acc": [218, 222, 223, 224, 227, 473], "div": [218, 222, 227, 473], "reduce_sum": [218, 222, 227, 473], "cast": [218, 222, 225, 227, 306, 458, 473], "float32": [218, 222, 223, 224, 227, 297, 306, 473], "obgn": [218, 222], "mag": [218, 222, 227, 473], "paper_featur": [218, 227, 473], "feat_": [218, 221, 222, 223, 224, 227, 473], "128": [218, 221, 222, 223, 224, 227, 306, 473], "lg": [218, 221, 222, 227, 289, 453, 467, 473], "cite": [218, 221, 222, 227, 473], "gen_label": [218, 221, 222, 227, 289, 453, 473], "val": [218, 221, 222, 227, 294, 310, 453, 473, 478], "85": [218, 221, 222, 227, 234, 237, 453, 473], "seed": [219, 294, 302, 306, 365, 368, 369, 370, 371, 373, 375, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 393, 394, 395, 396, 397, 400, 401, 402, 403, 406, 438, 441, 443], "sampler": [219, 221, 299, 302, 304], "perceptu": 219, "unsupervis": [219, 221, 235, 294, 300, 302, 303, 453], "mainstream": [219, 298, 299], "putback": 219, "outofrangeerror": [219, 299, 300, 306], "evolv": [219, 226, 459], "neighborsampl": [219, 298], "edge_weight": [219, 298, 300], "random_with_replac": 219, "topk": [219, 298, 300], "pad": [219, 298], "expand_factor": [219, 298, 303], "sparsenod": [219, 297, 298, 300], "sparseedg": [219, 297, 298, 300], "layer1": [219, 298], "layer2": [219, 298], "neighbor_sampl": [219, 298], "bui": [219, 226, 297, 298, 299, 300, 303, 306], "i2i": [219, 298, 300], "layer_nod": [219, 298], "int_attr": [219, 297, 298, 299, 303, 306], "layer_edg": [219, 298], "float_attr": [219, 297, 298, 299, 303, 306], "egograph": [219, 231, 294, 302, 478], "negativesampl": [219, 303], "node_weight": [219, 300, 303], "edge_sampl": [219, 299, 303], "negative_sampl": [219, 294, 303, 478], "neg_nod": [219, 303], "heterogen": [219, 222, 227, 229, 231, 295, 296, 297, 298, 300], "randomli": [219, 300, 365, 371, 375, 377, 386, 388, 393, 396, 401, 443], "outv": [219, 294, 298, 300, 306, 477, 478], "overs": 219, "citat": [220, 222, 223, 224, 227, 235, 306, 473], "revisit": [220, 221, 235], "ho2": 220, "with_dataset": [221, 223, 293, 453, 479], "k8s_service_typ": [221, 223, 293, 453, 473], "loadbalanc": [221, 453, 473], "k8s_image_pull_polici": [221, 223, 293, 453], "cell": [221, 439], "metainfo": 221, "obgn_mag": 221, "ogbn_mag_smal": [221, 225, 473, 479], "chose": [221, 222], "i_featur": [221, 222], "argpars": [221, 223], "tfg": 221, "egosageunsuperviseddataload": 221, "parse_arg": [221, 223], "argumentpars": [221, 223], "egosag": 221, "add_argu": [221, 223], "output_dim": [221, 294, 478], "neg_num": 221, "0001": 221, "agg_typ": 221, "drop_out": 221, "neg_sampl": 221, "temperatur": 221, "dim": [221, 223, 224, 393, 394, 395, 396], "src_emb": [221, 294, 478], "dst_emb": 221, "dst_ego": 221, "neg_dst_emb": 221, "neg_dst_ego": 221, "unsupervised_softmax_cross_entropy_loss": 221, "ogbn": [222, 223, 224, 227, 473], "academ": [222, 227, 473], "microsoft": [222, 227, 473], "institut": [222, 227, 473], "accomplish": [222, 227, 365], "word2vec": [222, 227, 473], "load_ogbn_arxiv": [223, 224], "num_server_nod": 223, "num_client_nod": 223, "ogbn_arxiv": [223, 224], "8gi": 223, "ifnotpres": [223, 453], "0a20240115": 223, "glt_graph": [223, 224], "graphlearn_torch": [223, 224], "node_featur": [223, 224], "node_label": [223, 224, 453], "edge_dir": [223, 224], "random_node_split": [223, 224], "num_val": [223, 224], "num_test": [223, 224], "num_client": [223, 224], "manifest_path": 223, "client_folder_path": 223, "kubeflow": [223, 305], "pytorchjob": 223, "torch": [223, 224], "pytorchreplicaspec": 223, "restartpolici": 223, "onfailur": 223, "imagepullpolici": 223, "node_rank": 223, "master_addr": [223, 224], "volumemount": 223, "medium": 223, "sizelimit": 223, "num_worker_replica": 223, "my_pod_nam": 223, "group_mast": 223, "valuefrom": 223, "fieldref": 223, "fieldpath": 223, "distributeddataparallel": 223, "torch_geometr": [223, 224], "glt": [223, 224], "gl_torch_graph": 223, "gltorchgraph": 223, "no_grad": [223, 224], "test_load": [223, 224], "dataset_nam": [223, 224], "eval": [223, 224, 450], "y_true": [223, 224], "enumer": [223, 224, 236], "devic": [223, 224, 234], "del": [223, 224, 308, 446], "y_pred": [223, 224], "keepdim": [223, 224], "run_client_proc": 223, "num_serv": [223, 224], "client_rank": [223, 224], "server_rank_list": 223, "training_pg_master_port": 223, "init_cli": [223, 224], "master_port": [223, 224], "server_client_master_port": [223, 224], "num_rpc_thread": [223, 224], "client_group_nam": 223, "k8s_glt_client": 223, "is_dynam": [223, 224], "current_ctx": 223, "get_context": 223, "init_process_group": 223, "gloo": 223, "world_siz": 223, "init_method": 223, "train_load": [223, 224], "distneighborload": [223, 224], "num_neighbor": [223, 224], "input_nod": [223, 224], "collect_featur": [223, 224], "to_devic": [223, 224], "worker_opt": [223, 224], "remotedistsamplingworkeropt": [223, 224], "server_rank": 223, "worker_devic": [223, 224], "worker_concurr": [223, 224], "buffer_s": [223, 224], "256mb": 223, "prefetch_s": [223, 224], "workload_typ": [223, 224], "in_channel": [223, 224], "hidden_channel": [223, 224], "num_lay": [223, 224], "out_channel": [223, 224], "device_id": 223, "adam": [223, 224], "lr": [223, 224], "001": 223, "arxiv": [223, 224, 311, 354, 369, 370, 371, 385, 438], "zero_grad": [223, 224], "log_softmax": [223, 224], "nll_loss": [223, 224], "backward": [223, 224, 231, 300, 397, 453], "03d": [223, 224], "04f": 223, "barrier": 223, "accuraci": [223, 224, 231], "4f": [223, 224], "shutdown": 223, "shutdown_cli": [223, 224], "__name__": [223, 306], "__main__": [223, 306], "supervis": [223, 227, 235, 295, 298, 306, 453, 473], "sage": 223, "9997": 223, "train_loader_master_port": 223, "9998": 223, "test_loader_master_port": 223, "9999": 223, "9001": 223, "9002": 223, "9003": 223, "9004": 223, "k8s_launch": 223, "ogb": 224, "nodeproppr": 224, "unsqueez": 224, "acc": 224, "512": [224, 300], "1gb": 224, "shut": 224, "trivial": [225, 233, 362], "bucket": [225, 453, 469], "_e": [225, 308, 455, 479], "ldbc_sampl": [225, 459, 477, 479], "person_0_0": [225, 459, 474, 479], "didn": [225, 234], "person_knows_person_0_0": [225, 459, 474, 479], "comment_0_0": [225, 474, 479], "person_likes_comment_0_0": [225, 479], "deal": [225, 229, 298], "unseen": [225, 231, 461], "person_likes_post_0_0": [225, 479], "post_0_0": [225, 479], "ndarrai": [225, 238, 253, 264, 297, 298, 300, 303, 308, 310, 446, 479], "apart": [225, 393], "comment_replyof_comment_0_0": [225, 474, 479], "datasourc": [225, 479], "col_0": [225, 479], "col_1": [225, 479], "coo": [225, 457, 479], "array_v": [225, 479], "col": [225, 479], "array_": [225, 479], "s3": [225, 308, 479], "hood": 225, "distributedli": [225, 296, 302, 304, 305, 306], "fsspec": [225, 479], "kwarg": [225, 237, 238, 245, 256, 268, 272, 273, 290, 293, 303, 308, 309, 310, 453], "ds1": [225, 479], "datafil": [225, 479], "ds2": [225, 479], "graphscope_bucket": [225, 479], "hangzhou": [225, 295, 479], "ds3": [225, 479], "9000": [225, 459, 479], "extra_conf": [225, 479], "conf1": [225, 479], "d34": [225, 479], "client_kwarg": [225, 479], "region_nam": [225, 479], "east": [225, 479], "ossf": [225, 479], "subclass": [225, 236, 446], "abstractfilesystem": [225, 479], "abstractbufferfil": 225, "_upload_chunk": [225, 479], "_initiate_upload": [225, 479], "_fetch_rang": [225, 479], "register_implement": [225, 479], "protocol_nam": [225, 479], "protocol_file_system": [225, 479], "direction": 225, "exce": [225, 404, 405], "super": [225, 237, 296, 300], "precis": [225, 231, 438], "modular": [226, 438], "rapidli": [226, 298], "seller": 226, "buyer": [226, 230], "fraudul": 226, "sell": 226, "suspici": 226, "fraud": [226, 233], "feed": [226, 289, 294, 297, 300, 306, 310, 453, 478], "webui": 226, "diversifi": 226, "ingest": [226, 459], "rapid": 226, "parti": [226, 426], "analyst": 226, "gaia": [226, 477], "resembl": [226, 438, 443, 445], "olap": 226, "gen": [226, 300], "dataflow": [226, 228], "arriv": 226, "financi": 226, "billion": [226, 229, 233], "preval": 226, "miniconda": 227, "scientif": 227, "field_of_studi": [227, 473], "subject": 227, "4307": [227, 473], "n1": 227, "n2": 227, "proven": 227, "2014": [227, 311, 473], "2020": [227, 473], "ret1": [227, 473], "k_core": [227, 237, 311, 447, 469, 473], "ret2": [227, 473], "kcore": [227, 473], "downstream": [227, 300], "train_sag": 227, "130": [227, 473], "conduit": 227, "icde2023": 228, "sigmod2017": [228, 469, 475], "gra": 228, "ph": 228, "arallel": 228, "ngine": 228, "opensourc": 228, "raph": 228, "nalysi": 228, "elat": 228, "ransact": 228, "loos": [228, 233, 455], "mysql": [228, 455], "nutshel": [228, 455], "exploit": [228, 455], "ahead": [228, 455], "wal": [228, 455], "etriev": 228, "terfac": 228, "portabl": [228, 458], "rust": [228, 458, 459], "handler": [228, 453], "chive": 228, "guardian": 228, "galaxi": 228, "steal": 228, "tackl": [228, 229], "imbal": 228, "nvlink": 228, "acut": 228, "asymmetr": 228, "holist": 228, "innov": 228, "speedup": 228, "cncf": 228, "sandbox": 228, "soon": [228, 232, 233, 234, 297], "amplifi": 228, "dissoci": 228, "ly": 228, "dag": [228, 237, 238, 256, 308, 446, 450, 453], "laptop": 228, "loop": [228, 311, 321, 334, 373, 375, 377, 379, 385, 393, 394, 395, 396, 397, 403, 406, 446, 447, 477], "correl": [228, 311], "subtask": 228, "earli": 228, "nsdi": [228, 475], "legaci": 228, "interchang": 228, "memoiz": 228, "vldb2021": 228, "artial": 228, "ncrement": 228, "transport": 229, "protein": [229, 387], "uncov": 229, "vari": [229, 295], "unless": [229, 298, 446], "discov": 229, "discoveri": [229, 231, 453, 459], "rough": 229, "accordingli": [229, 286], "snap": 229, "stanford": [229, 437], "cs224w": 229, "constitu": 229, "bellman": [229, 311], "ford": [229, 311], "wiki": [229, 237, 408, 412, 413, 414, 415, 417, 418, 419, 425, 426, 427, 428, 430, 431, 432, 433], "s_algorithm": 229, "towardsdatasci": 229, "9bd8951e7da": 229, "road": [229, 461], "logist": 229, "deliveri": 229, "media": 229, "nontrivi": [229, 418], "steep": 229, "sought": 229, "monei": [230, 233], "launder": [230, 233], "exact": [230, 375, 377, 473], "exclud": 230, "purchas": 230, "bolder": 230, "border": 230, "sens": [230, 438, 453], "worst": 230, "embrac": 230, "grasp": 230, "drug": 231, "likelihood": 231, "biologi": 231, "valuabl": 231, "bioinformat": 231, "chemic": 231, "promis": 231, "driven": [231, 438, 458], "carefulli": 231, "rewind": 231, "stack": 231, "convolut": [231, 302], "weigh": 231, "choic": [231, 458, 459], "huge": [231, 461], "gradient": 231, "recal": 231, "f1": [231, 308], "assess": [231, 306, 423], "irregular": 231, "unstructur": 231, "pool": 231, "hardwar": [231, 462], "undergo": 231, "perceiv": 231, "maxgraph": [232, 475], "2x": 232, "excel": 232, "elast": [232, 459], "encrypt": 232, "geminigraph": [233, 234], "plato": [233, 234], "empir": 233, "enjoi": 233, "janusgraph": 233, "nebula": 233, "dbm": 233, "relaunch": [233, 459], "recoveri": 233, "coars": 233, "grain": 233, "invest": 233, "trace": [233, 237], "dgl": 233, "nebular": 233, "movement": [233, 300], "grade": 234, "r6": 234, "8xlarg": 234, "alibabacloud": 234, "ec": 234, "xl": 234, "a038f97": 234, "170e7d3": 234, "21009d6": 234, "v4": 234, "mpich": 234, "fair": 234, "huge_pag": 234, "jemalloc": 234, "o3": 234, "stub": [234, 240, 242, 375, 403, 406], "determinist": [234, 239, 453, 459], "cdlp": [234, 237, 469], "load_direct": 234, "load_undirected_from_direct": 234, "reformat": 234, "mark": [234, 311], "datagen": 234, "9_0": 234, "fb": 234, "62": 234, "9_1": 234, "78": [234, 365, 439], "9_2": 234, "zf": 234, "88": [234, 378, 380], "60": [234, 311, 439, 459], "61": 234, "176": [234, 402], "graph500": 234, "71": [234, 311, 383, 387, 393], "79": [234, 378, 380], "friendster": 234, "97": 234, "39": [234, 296, 297, 299, 311, 439, 469, 471], "86": 234, "57": 234, "126": [234, 379], "98": 234, "83": 234, "66": 234, "1695": 234, "2742": 234, "3600": 234, "425": 234, "55": [234, 345], "lcc": 234, "521": 234, "51": [234, 439], "296": 234, "1859": 234, "201": [234, 442], "842": 234, "68": 234, "competitor": 234, "pagerank_loc": 234, "65": 234, "72": 234, "84": 234, "63": [234, 382, 384], "gunrock": 234, "0c9a96": 234, "grout": 234, "5ce160": 234, "v7": 234, "v10": 234, "gn6v": 234, "c8g1": 234, "16xlarg": 234, "8x": 234, "16gb": 234, "nvidia": 234, "v100": 234, "gb": 234, "soc": [234, 366, 367], "livejournal1": 234, "89": 234, "9345": 234, "215": [234, 435], "560": 234, "3029": 234, "129": [234, 401], "389": 234, "155": 234, "0549": 234, "sinaweibo": 234, "1649": 234, "647": 234, "orkut": 234, "105": [234, 366, 367], "121": 234, "193": 234, "658": 234, "3201": 234, "7677": 234, "137": [234, 373], "2139": 234, "319": 234, "261": 234, "69": [234, 433, 439], "235": 234, "567": 234, "283": 234, "073": 234, "6619": 234, "45": [234, 296, 297, 299, 375], "150": 234, "87299": 234, "162": 234, "60403": 234, "9676": 234, "141": 234, "347": 234, "7772": 234, "0118": 234, "306": 234, "8618": 234, "9134": 234, "467": 234, "60801": 234, "8666": 234, "3501": 234, "870": 234, "6451": 234, "198": 234, "829": 234, "5036": 234, "229": 234, "024": 234, "483": 234, "178": 234, "5593": 234, "807": 234, "367": 234, "6946": 234, "2339": 234, "jupyt": [235, 453], "notebook": [235, 453], "jupyterlab": 235, "playground": [235, 480], "bipartit": [235, 294, 296, 352, 400, 401, 402, 434, 478], "grapeengin": 236, "vineyardserv": 236, "grapeinst": 236, "graphscopeserv": 236, "inlin": 236, "dag_fil": 236, "dagfil": 236, "rundagfil": 236, "subscrib": 236, "charg": 236, "commspec": [236, 455, 458, 460], "comm_spec": [236, 455, 458, 460], "vineyard_socket": 236, "bl": 236, "dispatchresult": 236, "onrec": 236, "commanddetail": 236, "gsobject": 236, "objectmanag": 236, "appentri": 236, "icontextwrapp": 236, "ifragmentwrapp": 236, "projector": 236, "propertygraphutil": 236, "objecttyp": 236, "putobject": 236, "obj": 236, "removeobject": 236, "getobject": [236, 459, 460], "hasobject": 236, "analyticalserv": 236, "startserv": 236, "stopserv": 236, "engineconfig": 236, "tojsonstr": 236, "vineyard_rpc_endpoint": 236, "enable_java_sdk": 236, "setcommand": 236, "enum": 236, "aggregatepolici": 236, "kpickfirst": 236, "kpickfirstnonempti": 236, "krequireconsist": 236, "kconcat": 236, "kpickfirstnonemptygraphdef": 236, "kmergegraphdef": 236, "worker_id": 236, "error_cod": 236, "set_error": 236, "has_large_data": 236, "set_graph_def": 236, "graphdefpb": 236, "graph_def": 236, "set_data": 236, "large_data": 236, "inarch": 236, "arc": 236, "aggregate_polici": 236, "fragmentwrapp": 236, "addcolumn": 236, "vdata_t": 236, "edata_t": 236, "arrowvertexmap": 236, "internaltyp": 236, "arrowprojectedfragmentbas": 236, "bareregist": 236, "internal_oid_t": 236, "property_graph_typ": 236, "eid_typ": 236, "vertexrang": [236, 239], "inner_vertices_t": 236, "outer_vertices_t": 236, "vertices_t": 236, "sub_vertices_t": 236, "nbr_t": 236, "arrow_projected_fragment_impl": 236, "compact_nbr_t": 236, "compactnbr": 236, "nbrunit": 236, "compact_adj_list_t": 236, "compactadjlist": 236, "const_adj_list_t": 236, "const_compact_adj_list_t": 236, "property_vertex_map_t": 236, "arrowprojectedvertexmap": 236, "label_id_typ": 236, "prop_id_typ": 236, "property_graph_t": 236, "eid_array_t": 236, "data_t": 236, "inner_vertex_array_t": 236, "outer_vertex_array_t": 236, "objectmeta": 236, "preparetorunapp": 236, "prepareconf": 236, "fnum": [236, 239], "vertex_prop_id": 236, "edge_prop_id": 236, "mirrorvertic": 236, "getid": 236, "getinternalid": 236, "getfragid": 236, "typedarrai": 236, "value_typ": 236, "gid2vertex": 236, "vertex2gid": 236, "getinnerverticesnum": 236, "getouterverticesnum": 236, "getverticesnum": 236, "getedgenum": [236, 460], "getinedgenum": [236, 460], "getoutedgenum": [236, 460], "getoutgoingedgenum": 236, "getincomingedgenum": 236, "gettotalverticesnum": 236, "isinnervertex": 236, "getoutervertex": 236, "getinnervertexid": 236, "getinnervertexinternalid": 236, "getoutervertexid": 236, "getoutervertexinternalid": 236, "gid2oid": 236, "oid2gid": 236, "innervertexgid2vertex": 236, "outervertexgid2vertex": 236, "getoutervertexgid": 236, "getinnervertexgid": 236, "compact_": 236, "enable_if": 236, "getincominginnervertexadjlist": 236, "getoutgoinginnervertexadjlist": 236, "getincomingoutervertexadjlist": 236, "getoutgoingoutervertexadjlist": 236, "src_fid": 236, "dst_fid": 236, "getlocaloutdegre": 236, "getlocalindegre": 236, "destlist": 236, "iedest": 236, "oedest": 236, "ioedest": 236, "getvertexmap": 236, "get_out_edges_ptr": 236, "get_in_edges_ptr": 236, "get_oe_offsets_begin_ptr": 236, "get_oe_offsets_end_ptr": 236, "get_ie_offsets_begin_ptr": 236, "get_ie_offsets_end_ptr": 236, "get_edata_array_accessor": 236, "get_vdata_array_accessor": 236, "get_arrow_frag": 236, "vertex_map_id": 236, "local_vertex_map": [236, 460], "getoid": 236, "getgid": 236, "offset2lid": 236, "getoffsetfromlid": 236, "getlidfromgid": 236, "getfidfromgid": 236, "oid_t_": 236, "vid_t_": 236, "arrowfragmentload": 236, "efil": [236, 460], "vfile": [236, 460], "graph_info": 236, "leaf": [236, 238, 283, 311, 356, 440], "table_vec_t": 236, "loadvertexedget": 236, "loadvertext": 236, "loadedget": 236, "loadfrag": 236, "loadfragmentasfragmentgroup": 236, "addlabelstofrag": 236, "frag_id": [236, 455, 460], "adddatatoexistedvlabel": 236, "adddatatoexistedelabel": 236, "addlabelstofragmentasfragmentgroup": 236, "extendlabeldata": 236, "extend_typ": 236, "initpartition": 236, "doxygenclass": 236, "arrowfragmentappend": 236, "doxygen": 236, "runner": [236, 469], "_build": 236, "appbas": 236, "defaultmessagemanag": 236, "need_split_edg": 236, "konlyout": 236, "propertyappbas": 236, "propertymessagemanag": 236, "propertyautoappbas": 236, "propertyautomessagemanag": 236, "app_t": 236, "defaultwork": 236, "parallelenginespec": 236, "pe_spec": 236, "defaultparallelenginespec": 236, "getcontext": 236, "ostream": 236, "parallelpropertywork": 236, "parallelpropertymessagemanag": 236, "propertyautowork": 236, "pointer": 236, "appfram": 236, "creatework": 236, "deletework": 236, "lib_path": 236, "worker_handl": 236, "queryarg": 236, "query_arg": [236, 281, 450], "context_kei": 236, "frag_wrapp": 236, "functiontyp": 236, "argsnum": 236, "argsunpack": 236, "proto": [236, 256, 281], "datatyp": 236, "argtypeat": 236, "defaultpropertywork": 236, "ctx_t": 236, "ctxwrapperbuild": 236, "contextwrapp": 236, "vertexpropertycontext": [236, 469], "contextbas": 236, "labeledvertexdatacontext": 236, "contextdatatyp": 236, "icolumn": 236, "get_column": 236, "get_typed_column": 236, "vertex_properti": [236, 237, 239], "properties_map": 236, "vertexdatacontextwrapp": 236, "ivertexdatacontextwrapp": 236, "fragment_wrapp": 236, "unique_ptr": 236, "tondarrai": 236, "todatafram": 236, "tovineyardtensor": 236, "tovineyarddatafram": 236, "toarrowarrai": 236, "tensorcontext": [236, 238], "set_shap": 236, "tensor_t": 236, "tensorcontextwrapp": 236, "itensorcontextwrapp": 236, "cmake_extra_opt": 237, "asset": 237, "labeled_vertex_data": 237, "dynamic_vertex_data": 237, "labeled_vertex_properti": 237, "cpp_pregel": 237, "cython_pi": 237, "cython_pregel": 237, "appdagnod": [237, 272, 278], "__init__": [237, 294, 301, 308, 309, 310, 446, 447, 449, 453, 459, 478], "bytesio": [237, 245], "is_compat": 237, "graphdagnod": [237, 249, 263, 264, 280, 287, 289, 308, 309, 453], "invalidargumenterror": [237, 453], "scannererror": 237, "incorrect": 237, "signatur": [237, 300, 446], "full_jar_path": [237, 469], "java_app_class": [237, 469], "neccessari": 237, "resouc": 237, "__call__": 237, "qualifi": [237, 469], "app_asset": [237, 249, 255], "app_nod": 237, "__del__": 237, "unload": [237, 260, 278, 280], "attribute_assortativity_coeffici": [237, 469], "assort": 237, "ref": [237, 458], "joint": [237, 403, 404, 405, 406, 447], "newman": [237, 311, 375, 377, 438], "026126": 237, "2003": [237, 311, 368, 375, 386, 394], "numeric_assortativity_coeffici": [237, 469], "analog": 237, "k_": [237, 347, 411], "rac": 237, "s_i": 237, "sum_": [237, 311, 379], "w_": [237, 311, 379], "ij": [237, 311], "k_j": 237, "valueerror": [237, 293, 308, 311, 385, 442, 453], "barrat": 237, "barth\u00e9lemi": 237, "pastor": 237, "satorra": 237, "vespignani": 237, "pna": 237, "101": [237, 475], "3747": 237, "3752": 237, "2004": [237, 400], "average_shortest_path_length": [237, 311, 447, 469], "frac": [237, 311, 321, 379], "vertexdatacontextdagnod": [237, 238], "avg_clust": [237, 469], "degree_threshold": 237, "threshold": [237, 393, 394, 395, 396], "1e9": 237, "unweight": [237, 311], "foster": 237, "grassberg": 237, "paczuski": 237, "107": [237, 399], "10815": 237, "1e": [237, 306, 311, 365], "06": [237, 311], "html": [237, 311, 395, 398, 407, 411, 413, 415, 416, 417, 418, 419, 420, 421, 422, 426, 428], "gv": 237, "hits_algorithm": 237, "vertexpropertycontextdagnod": [237, 238], "is_simple_path": [237, 469], "nonempti": 237, "biject": [237, 441], "smallest": [237, 398, 418, 428], "pairwis": 237, "k_shell": [237, 469], "katz_centrality_numpi": [237, 311], "auttenu": 237, "maximun": 237, "min_progress": 237, "progress_tri": 237, "progress": [237, 390], "met": 237, "blondel": 237, "et": [237, 443], "al": [237, 443], "stat": [237, 393, 395], "mech": 237, "10008": 237, "2008": [237, 365, 388], "sotera": 237, "lpa_u2i": [237, 469], "labeledvertexpropertycontextdagnod": [237, 238], "pagerank_nx": [237, 469], "max_it": [237, 311, 365], "tol": [237, 311, 365], "solver": 237, "voterank": [237, 469], "unsign": [237, 459], "basecontextdagnod": [238, 308], "bound_app": [238, 255], "contextdagnod": 238, "to_vineyard_tensor": [238, 452, 469], "to_vineyard_datafram": [238, 452, 469], "lazi": [238, 308, 453], "sg": 238, "resultdagnod": [238, 273], "r4": [238, 461], "62586": 238, "comparis": 238, "alphabet": [238, 452], "tensorcontextdagnod": 238, "quer": 238, "labeledvertexdatacontextdagnod": 238, "label_nam": [238, 452], "column_nam": [238, 452], "labeld": 238, "context_nod": 238, "result_schema": 238, "referenc": 238, "dynamicvertexdatacontext": 238, "dag_nod": 238, "get_str": 239, "get_doubl": 239, "edge_label_id": 239, "edge_label_nam": 239, "incoming_edg": 239, "register_aggreg": 239, "pregelaggregatortyp": 239, "aggr_typ": 239, "get_aggregated_valu": 239, "get_total_vertices_num": 239, "vertex_property_num": 239, "vertex_label_nam": 239, "vertex_label_id": 239, "edge_property_num": 239, "get_vertex_label_by_id": 239, "get_vertex_label_id_by_nam": 239, "get_edge_label_by_id": 239, "get_edge_label_id_by_nam": 239, "edge_properti": 239, "get_vertex_property_id_by_nam": 239, "vertex_property_nam": [239, 458], "get_vertex_property_by_id": 239, "vertex_property_id": 239, "get_edge_property_id_by_nam": 239, "edge_property_nam": 239, "get_edge_property_by_id": 239, "edge_property_id": 239, "kboolandaggreg": 239, "kbooloraggreg": 239, "kbooloverwriteaggreg": 239, "overwritten": 239, "kdoubleminaggreg": 239, "kdoublemaxaggreg": 239, "kdoublesumaggreg": 239, "kdoubleproductaggreg": 239, "kdoubleoverwriteaggreg": 239, "kint64minaggreg": 239, "kint64maxaggreg": 239, "kint64sumaggreg": 239, "kint64productaggreg": 239, "kint64overwriteaggreg": 239, "ktextappendaggreg": 239, "kalongoutgoingedgetooutervertex": 239, "kalongincomingedgetooutervertex": 239, "kalongedgetooutervertex": 239, "get_total_nodes_num": 239, "get_nodes_num": 239, "get_inner_nodes_num": 239, "get_outer_nodes_num": 239, "outer_nod": 239, "get_node_fid": 239, "is_inner_nod": 239, "is_outer_nod": 239, "get_nod": [239, 297], "get_outer_nod": 239, "get_node_id": 239, "get_incoming_edg": 239, "has_child": 239, "child": [239, 348, 440], "has_par": 239, "parent": [239, 241, 281, 286, 440], "get_indegre": 239, "get_outdegre": 239, "kmaxaggreg": 239, "ksumaggreg": 239, "kproductaggreg": 239, "koverwriteaggreg": 239, "subproject": 241, "scratch": 241, "never": [241, 446], "hopefulli": 241, "dmaven": 241, "antrun": 241, "jni": 241, "gae_java": 242, "graphscope_typ": 244, "graphscopetyp": 244, "myalgorithm": 244, "filenotfounderror": 245, "typeerror": [245, 281, 453], "arrowproperti": [246, 308], "subrang": 246, "loader_op": 247, "notimplementederror": 247, "run_app": [252, 253, 268, 276, 277], "copy_typ": 254, "session_id": [256, 260, 281, 308, 309, 446, 450], "graph_typ": [256, 446], "graphtyp": [256, 446, 455, 460], "view_typ": 257, "vertex_or_edge_label_list": 258, "graph_util": 258, "vertexlabel": 258, "op_typ": [260, 281, 450], "uiliti": 260, "interactive_queri": [265, 453], "gremlin_script": [265, 309], "request_opt": [265, 309], "interactivequerydagnod": 265, "modify_typ": [266, 267], "attr": [266, 267, 281, 300, 313, 314, 315, 446, 449], "type_pb2": [266, 267, 271], "nx_add_edg": 266, "nx_del_edg": 266, "nx_update_edg": 266, "nx_add_nod": 267, "nx_del_nod": 267, "nx_update_nod": 267, "fd": [268, 273, 469], "storage_opt": [268, 273], "write_opt": [268, 273], "adaptor": 268, "result_path": [268, 273], "vertex_collect": 269, "edge_collect": 269, "report_typ": 271, "variati": 271, "node_num": [271, 473, 477], "has_nod": [271, 446], "has_edg": [271, 446], "node_data": 271, "neighbors_by_nod": 271, "succs_by_nod": 271, "preds_by_nod": 271, "neighbors_by_loc": 271, "succs_by_loc": 271, "preds_by_loc": 271, "deg_by_nod": 271, "in_deg_by_nod": 271, "out_deg_by_nod": 271, "deg_by_loc": 271, "in_deg_by_loc": 271, "out_deg_by_loc": 271, "nodes_by_loc": 271, "loc": 271, "multigraph": [271, 311, 313, 321, 325, 334, 339, 340, 366, 367, 375, 377, 390, 391, 392, 446, 449], "multidigraph": [271, 313, 325, 334, 339, 340, 377, 385, 386, 444, 446], "large_attr": [281, 450], "types_pb2": [281, 446], "operationtyp": 281, "opdef": [281, 285], "attrvalu": [281, 308, 477], "largeattrvalu": 281, "op_def_pb2": 285, "incoming_data": [287, 308, 453], "as_default": [287, 453], "alia": [292, 294, 300, 446, 453, 478], "k8s_gs_imag": [293, 453, 471], "k8s_etcd_imag": 293, "k8s_image_pull_secret": [293, 453], "k8s_coordinator_cpu": [293, 453], "k8s_coordinator_mem": [293, 453], "k8s_vineyard_cpu": [293, 453], "k8s_mars_worker_cpu": [293, 453], "k8s_mars_worker_mem": [293, 453], "k8s_mars_scheduler_cpu": [293, 453], "k8s_mars_scheduler_mem": [293, 453], "with_mar": [293, 453], "k8s_waiting_for_delet": [293, 453], "dataset_download_retri": 293, "k8s_deploy_mod": [293, 453], "kv": 293, "cooper": [294, 308], "\u02bbegograph": 294, "\u02bbegotensor": 294, "sample_se": [294, 478], "positive_sampl": [294, 478], "receptive_fn": [294, 478], "egotensor": [294, 302, 478], "egoflow": [294, 302, 478], "cora": [294, 306, 478], "convers": [294, 295, 455], "node_t": [294, 295, 306, 478], "edge_table_with_self_loop": [294, 478], "train_tabl": [294, 478], "val_tabl": [294, 478], "test_tabl": [294, 478], "dataset_fold": [294, 478], "decod": [294, 295, 296, 306, 478], "attr_typ": [294, 295, 296, 306, 478], "1433": [294, 306, 478], "attr_delimit": [294, 295, 296, 478], "learningbasedmodel": [294, 478], "categorical_attrs_desc": [294, 478], "_sample_se": [294, 478], "_positive_sampl": [294, 478], "_receptive_fn": [294, 478], "ego_flow": [294, 478], "src_ego_spec": [294, 478], "pos_src_ego_tensor": [294, 478], "identityencod": [294, 478], "widendeepencod": [294, 478], "feature_encod": [294, 478], "gcnconv": [294, 478], "sparseegographencod": [294, 478], "_encod": [294, 478], "conv_lay": [294, 478], "_supervised_loss": [294, 478], "full_graph_mod": [294, 478], "localtftrain": [294, 478], "model_fn": [294, 306, 478], "load_graph": [294, 478], "server_id": [294, 478], "server_count": [294, 296, 306, 478], "tracker": [294, 306, 478], "bought": 295, "saturdai": 295, "morn": 295, "bigint": 295, "dst_id": [295, 296, 297, 299, 300, 306, 310], "shanghai": 295, "localfilesystem": 295, "pai": [295, 300, 301], "tab": 295, "s2": [295, 411], "215340": 295, "933091": 295, "grei": 295, "362519": 295, "097545": 295, "chapter": [295, 296, 298, 392, 429], "dscript": 295, "dentryfil": 295, "dtabl": 295, "prj": 295, "define_str": 295, "node_sourc": 295, "edge_sourc": 295, "hash": [295, 308], "bucket_s": 295, "greatli": [295, 296, 458], "your_attr_typ": 295, "you_delimit": 295, "scr_id": 295, "10001": [295, 296, 297, 299], "feature1": 295, "10002": [295, 296, 297, 299], "feature2": 295, "10003": [295, 296, 297, 299], "feature3": 295, "124": 295, "\u02bbitem_node_decod": 295, "\u02bbuser_node_decod": 295, "\u02bbedge_decod": 295, "item_node_decod": 295, "user_node_decod": 295, "edge_decod": [295, 306], "graph_object": 295, "commod": 296, "swing": [296, 297], "30001": [296, 297, 299], "30002": [296, 297, 299], "30003": [296, 297, 299], "table_1": 296, "table_2": 296, "dest": 296, "10004": [296, 297], "20001": [296, 297, 299], "20003": [296, 297, 299], "20004": [296, 297, 299], "46": [296, 297, 299, 311, 433], "ui_decod": 296, "uv_decod": 296, "table_3": 296, "table_4": 296, "click_v": 296, "task_index": [296, 306], "task_count": 296, "atyp": 296, "job_nam": [296, 306], "worker_host": 296, "respond": 296, "necessarili": [296, 408], "serious": 296, "decreas": [296, 375, 377], "speak": 296, "client_count": [296, 306], "wait_for_clos": [296, 306], "matter": [296, 452], "get_topologi": 297, "dst_type": 297, "figure1": 297, "topo": 297, "print_al": 297, "string_attr": 297, "src_node": 297, "dst_node": 297, "dense_shap": 297, "__next__": 297, "table1": 297, "u_nod": 297, "table2": 297, "table3": 297, "click_edg": 297, "table4": 297, "conduc": 298, "recept": [298, 302], "ai": 298, "meta_path": 298, "layer_id": 298, "famili": [298, 311, 349, 407, 435], "random_without_replac": 298, "ueri": 298, "default_neighbor_id": 298, "set_default_neighbor_id": [298, 307], "xx": 298, "set_padding_mod": 298, "circular": [298, 300, 350], "throw": 299, "nodesampl": 299, "node_sampl": 299, "by_ord": 299, "node_from": [299, 310], "edge_src": [299, 310], "edge_dst": [299, 310], "edgesampl": 299, "matur": 300, "dl": 300, "sheer": 300, "sink": 300, "generatortyp": [300, 310], "won": [300, 461], "cursor": 300, "ingo": 300, "query\u5bf9\u8c61": 300, "outneg": [300, 303], "inneg": [300, 303, 306], "candid": [300, 303], "u2i": 300, "ouv": 300, "func": 300, "edeg": 300, "src_1hop": 300, "dst_1hop": 300, "neg_i": 300, "neg_i_1hop": 300, "params_list": 300, "arrang": 300, "anonym": [300, 438], "src_attr": 300, "neg_attr": 300, "encode_fn": [300, 306], "src_atr": 300, "outnegv": 300, "gen1": 300, "gen2": 300, "circumst": 300, "foewa": 300, "from_gener": [300, 306], "make_one_shot_iter": [300, 306], "get_next": [300, 306], "zhangjiak": 301, "cp27": 301, "cp27mu": 301, "linux_x86_64": 301, "autoconf": 301, "automak": 301, "libtool": 301, "submodul": [301, 304, 458], "your_wheel_nam": [301, 304], "test_cpp_ut": 301, "test_python_ut": 301, "fastgcn": [302, 478], "graphsaint": 302, "amd": 302, "object_typ": 303, "oprequest": 304, "req": 304, "oprespons": 304, "params_": 304, "tensors_": 304, "redirect": [304, 384], "rewrit": 304, "till": [304, 453], "happen": [304, 458, 461], "stitch": 304, "myoper": 304, "register_oper": 304, "opnam": 304, "randomsampl": 304, "xxxsampler": 304, "reader": 305, "litestr": 305, "getfiles": 305, "getrecordcount": 305, "register_file_system": 305, "myfilesystem": 305, "registr": 305, "ppi": 306, "train_supervis": 306, "gen_test_data": 306, "getopt": 306, "argv": 306, "cur_path": 306, "elif": 306, "102": [306, 442], "dirnam": 306, "rf": 306, "\u4f60\u9700\u8981\u628agen_test_data": 306, "py\u653e\u5230shell\u811a\u672c\u540c\u4e00\u76ee\u5f55\u4e0b": 306, "fi": 306, "sleep": 306, "case_bas": 306, "genetic_algorithm": 306, "neural_network": 306, "probabilistic_method": 306, "reinforcement_learn": 306, "rule_learn": 306, "bag": 306, "1033": 306, "103482": 306, "103515": 306, "31336": 306, "1061127": 306, "05882353": 306, "1106406": 306, "n_featur": 306, "node_decod": 306, "n_class": 306, "140": [306, 369], "n_hop": 306, "n_epoch": 306, "tripl": 306, "graph_object_cn": 306, "sample_gen": 306, "input_fn": 306, "sample_input_fn": 306, "float64": 306, "tensorshap": 306, "layer_featur": 306, "aggregate_fn": 306, "self_vec": 306, "neigh_vec": 306, "raw_feat_layer_index": 306, "layer_index": 306, "variable_scop": 306, "_layer": 306, "auto_reus": 306, "neigh_weight": 306, "get_vari": 306, "self_weight": 306, "output_shap": 306, "get_shap": 306, "neigh_mean": 306, "from_neigh": 306, "matmul": 306, "from_self": 306, "add_n": 306, "leaky_relu": 306, "depth_to_encod": 306, "h_self_vec": 306, "h_neighbor_vec": 306, "features_column": 306, "feature_column": 306, "numeric_column": 306, "loss_fn": 306, "train_op": 306, "global_step": 306, "get_global_step": 306, "estimatorspec": 306, "modekei": 306, "set_xxx": 307, "set_yyi": 307, "other_model": 307, "fill": [307, 347, 358, 368, 402], "nbr_id": 307, "set_default_int_attribut": 307, "set_default_float_attribut": 307, "set_default_string_attribut": 307, "set_inter_threadnum": 307, "intra": [307, 365, 368], "set_intra_threadnum": 307, "16mb": 307, "reset": 307, "enlarg": 307, "set_rpc_message_max_s": 307, "objectnam": 308, "degener": 308, "unspecifi": [308, 323], "consolidate_column": 308, "result_column": 308, "consolid": [308, 460, 467], "weight0": 308, "weight1": 308, "graph_nod": 308, "detach": 308, "varaibl": 308, "lexic": 308, "classmethod": 308, "graphar_store_in_loc": [308, 457], "save_to": [308, 457], "graphar_graph_nam": [308, 457], "graphar_file_typ": [308, 457], "parquet": [308, 457], "orc": [308, 457], "graphar_vertex_chunk_s": [308, 457], "graphar_edge_chunk_s": [308, 457], "graphschema": [308, 446], "schema_path": 308, "currrent": 308, "object_id": [308, 309, 310], "filetyp": 308, "ordinari": 308, "graph_build": 308, "deprec": [308, 326, 424], "group_id": 308, "member_s": 308, "leader_student_id": 308, "student": 308, "member_student_id": 308, "group_for_teacher_stud": 308, "group_nam": 308, "establish_d": 308, "teacher_in_charge_id": 308, "teacher": 308, "lesson_num": 308, "avg_scor": 308, "student_id": 308, "salari": 308, "teacher_id": 308, "both_in_out": 308, "unambigu": 308, "orign": 308, "interactivequeri": [309, 451, 453, 477], "frontend_gremlin_endpoint": 309, "frontend_cypher_endpoint": 309, "gremlin_url": 309, "lifetim": 309, "traversal_sourc": 309, "graphtraversalsourc": 309, "cypher_driv": 309, "cypher_url": 309, "gremlin_cli": 309, "runtimeerror": [309, 453], "modern_graph_data_dir": 309, "tolist": [309, 459], "dtype": 310, "pywrap": 310, "nodefrom": 310, "get_handl": 310, "worker_count": 310, "base64": 310, "nstart": 311, "poweriterationfailedconverg": 311, "langvil": 311, "meyer": 311, "survei": [311, 399], "cites": 311, "ist": 311, "psu": 311, "edu": 311, "713792": 311, "jon": 311, "kleinberg": 311, "authorit": 311, "journal": [311, 380, 388, 405, 436, 439, 443], "acm": [311, 386, 437, 469], "604": 311, "1999": [311, 366, 367], "doi": [311, 381, 388, 423], "1145": 311, "324133": 311, "324140": 311, "cornel": 311, "kleinber": 311, "pdf": [311, 393, 395, 396], "load_centr": 311, "in_degree_centr": [311, 447], "networkxnotimpl": 311, "out_degree_centr": [311, 447], "equat": 311, "ax": 311, "eigenvalu": [311, 391], "virtu": 311, "perron": 311, "frobeniu": 311, "theorem": [311, 390, 402], "0e": 311, "strength": 311, "2f": 311, "networkxpointlessconcept": [311, 441], "networkxerror": [311, 317, 324, 326, 330, 331, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 381, 387, 390, 391, 392, 403, 406, 438, 446, 449], "eigenvector_centrality_numpi": 311, "discern": 311, "phillip": 311, "bonacich": 311, "american": 311, "sociologi": 311, "1170": 311, "1182": 311, "1986": [311, 435], "leonidzhukov": 311, "net": [311, 365], "hse": 311, "socialnetwork": 311, "oxford": [311, 344, 345, 394, 438], "press": [311, 344, 345, 392, 434, 437, 438], "usa": [311, 398, 399, 445], "pp": [311, 375, 378, 379, 380, 393, 399, 400, 437, 443], "169": 311, "x_i": 311, "a_": 311, "x_j": 311, "lambda_": 311, "distant": 311, "penal": 311, "strictli": [311, 365], "invers": [311, 390], "phi": 311, "sqrt": [311, 391], "adjacency_spectrum": 311, "720": 311, "leo": 311, "sociometr": 311, "psychometrika": 311, "1953": 311, "springer": [311, 400], "1007": [311, 345, 381], "bf02289026": 311, "has_path": [311, 447], "djikstra": 311, "floyd": 311, "warshal": 311, "bfs_edg": [311, 447], "depth_limit": 311, "core_numb": 311, "vladimir": 311, "batagelj": 311, "matjaz": 311, "zaversnik": 311, "ab": [311, 369, 370, 371, 385, 393, 397, 438, 440], "0310049": 311, "c_u": 311, "deg": [311, 365, 379, 446], "geometr": [311, 433, 447], "vw": 311, "hat": 311, "uv": [311, 379], "uw": 311, "tot": 311, "2deg": 311, "leftrightarrow": 311, "complete_graph": [311, 317, 446], "saram\u00e4ki": 311, "kivel\u00e4": 311, "onnela": 311, "kaski": 311, "kert\u00e9sz": 311, "027105": 311, "2007": [311, 393, 439], "jponnela": 311, "web_docu": 311, "a9": 311, "intens": 311, "coher": 311, "motif": 311, "065103": 311, "2005": [311, 387, 393], "sign": 311, "costantini": 311, "perugini": 311, "plo": 311, "e88669": 311, "fagiolo": 311, "76": 311, "026107": 311, "average_clust": [311, 447], "count_zero": 311, "c_v": 311, "nonzero": [311, 375, 392], "marcu": 311, "kaiser": 311, "0802": 311, "2512": 311, "g_to_add_to": [313, 314, 315], "nodes_for_cycl": 313, "add_path": [313, 315, 446], "add_star": [313, 314], "nodes_for_path": 314, "add_cycl": [314, 315], "nodes_for_star": 315, "star": [315, 352, 361], "middl": 315, "cnbor": 317, "with_data": 318, "empty_graph": [318, 359], "frequenc": 320, "width": 320, "2m": [321, 399], "prevent": 324, "frozen": [324, 329], "unfreez": 324, "frozen_graph": 324, "unfrozen_graph": 324, "is_frozen": 324, "neighbour": 326, "freez": [329, 447], "nodelist": [334, 373], "selfloop_edg": [334, 339, 375, 377], "number_of_selfloop": [334, 340], "selfloop": [339, 340, 373, 379], "nloop": 339, "nodes_with_selfloop": [339, 340], "datadict": [340, 446], "datavalu": 340, "attrnam": [340, 477], "edgeit": 340, "ekei": 340, "graph_atlas_g": 344, "linearli": [344, 360], "ronald": [344, 345, 435], "robin": [344, 345], "wilson": [344, 345], "1998": [344, 345], "111223": 345, "112222": 345, "automorph": [345, 418], "graph_atla": 345, "expens": 345, "popul": [345, 346, 348, 349, 351, 353, 356, 358, 360, 361, 364, 375, 377, 378, 380, 382, 383, 384, 390, 391, 392, 398, 399, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 432, 433, 441, 448], "book": 345, "violat": 345, "lexicograph": 345, "nondecreas": 345, "001111": 345, "000112": 345, "1008": 345, "3333444": 345, "3333336": 345, "1012": 345, "1213": 345, "1244555": 345, "1244456": 345, "perfectli": 346, "ari": [346, 356], "height": 346, "children": [346, 356, 440], "barbel": [347, 358], "bell": 347, "p_": [347, 379, 393], "mere": [347, 358], "aldou": [347, 358], "jim": [347, 358], "binomi": 348, "leftmost": 348, "ci_n": 349, "x_1": 349, "x_2": 349, "x_m": 349, "mod": [349, 363, 392, 411], "subfamili": 349, "ladder": [350, 357], "cl_n": 350, "k_n": 351, "is_direct": [351, 446], "subset_s": 352, "multipartit": [352, 363], "tripartit": 352, "bc": 352, "complete_bipartite_graph": 352, "c_n": 353, "hierarch": 354, "dorogovtsev": 354, "goltsev": 354, "mend": 354, "mat": 354, "0112143": 354, "kw": [355, 453], "unknown": [355, 458], "abc": 355, "rightmost": 356, "jame": 356, "andrew": 356, "storer": 356, "birkhaus": 356, "boston": 356, "2001": [356, 369, 377, 382, 384, 392, 401, 459], "225": [356, 446], "lollipop": 358, "k_m": 358, "p_n": [358, 360], "etext": 358, "turan": 363, "disjoint": [363, 374, 412], "2r": 363, "tau1": 365, "tau2": 365, "mu": 365, "average_degre": 365, "min_degre": 365, "max_degre": 365, "min_commun": 365, "max_commun": 365, "lfr": 365, "mathrm": 365, "expon": 365, "reassign": [365, 403], "affili": [365, 473], "random_st": [365, 368, 369, 370, 371, 373, 375, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 393, 394, 395, 396, 397, 400, 401, 402, 406, 438, 441, 443], "exceededmaxiter": 365, "250": 365, "frozenset": [365, 448], "rewir": [365, 367, 371, 403, 406], "wire": 365, "robust": 365, "somewhat": 365, "narrow": 365, "andrea": 365, "lancichinetti": 365, "santo": [365, 369, 370, 371], "fortunato": [365, 369, 370, 371], "filippo": 365, "radicchi": 365, "phy": [365, 377, 382, 383, 384, 387], "rev": [365, 377, 382, 383, 384, 387], "046110": 365, "santofortunato": 365, "caveman": [366, 367, 371], "unclear": [366, 367], "connected_caveman_graph": [366, 372], "watt": [366, 367, 377], "phenomenon": [366, 367], "amer": [366, 367], "493": [366, 367], "527": [366, 367], "caveman_graph": 367, "p_in": [368, 369, 370], "p_out": [368, 369, 370], "gaussian": [368, 394, 395, 396], "drawn": [368, 396], "varianc": 368, "probabilti": [368, 371], "random_partition_graph": [368, 373], "ulrik": 368, "brand": 368, "marco": 368, "gaertler": 368, "dorothea": 368, "wagner": 368, "11th": 368, "europ": 368, "symp": 368, "plant": [369, 370], "random_partition_model": 369, "condon": 369, "karp": 369, "algor": 369, "116": 369, "486": [369, 370, 371], "174": [369, 370, 371], "0906": [369, 370, 371], "0612": [369, 370, 371], "relax": 371, "februari": 371, "num_cliqu": 372, "clique_s": 372, "ring": 372, "stochast": [373, 447], "densiti": [373, 375, 393, 395], "symmetr": [373, 392, 415, 419, 425, 427, 438], "300": [373, 442], "prob": 373, "450": 373, "quotient_graph": 373, "relabel": 373, "245": 373, "348": 373, "405": 373, "051": 373, "022": 373, "planted_partition_graph": 373, "gaussian_random_partition_graph": 373, "gnp_random_graph": [373, 400, 401, 402], "holland": 373, "laskei": 373, "leinhardt": 373, "blockmodel": 373, "109": 373, "1983": 373, "windmil": 374, "contract": 374, "wd": 374, "deg_sequ": [375, 376, 377, 378, 380], "pseudograph": [375, 377], "nonneg": [375, 377], "is_graph": [375, 381], "graphic": [375, 377, 380, 381], "realiz": [375, 377, 380, 403, 404, 405, 406, 433, 458], "tend": 375, "poisson": 375, "constant": [375, 477], "siam": [375, 380, 386], "167": 375, "random_sequ": 375, "random_powerlaw_tree_sequ": 375, "5000": [375, 459], "actual_degre": 375, "in_degree_sequ": 377, "out_degree_sequ": 377, "directed_random": 377, "configuration_model": [377, 378, 381], "finit": [377, 379, 392], "strogatz": 377, "026118": 377, "din": 377, "dout": 377, "in_deg_sequ": 378, "out_deg_sequ": 378, "kleitman": [378, 380], "valenc": [378, 380], "1973": [378, 380], "w_0": 379, "w_1": 379, "ldot": 379, "w_u": [379, 393, 396], "w_v": [379, 393, 396], "sum_k": 379, "w_k": 379, "z": [379, 392, 393, 397], "mathcal": 379, "ne": 379, "uu": 379, "fan": [379, 393, 469], "chung": [379, 393], "lu": [379, 469], "ann": 379, "combinator": [379, 439], "145": 379, "2002": 379, "joel": 379, "miller": 379, "aric": [379, 393], "hagberg": [379, 393], "waw": [379, 393], "alan": 379, "friez": 379, "paul": 379, "horn": 379, "pawe\u0142": 379, "pra\u0142at": 379, "lnc": 379, "6732": 379, "115": 379, "havel": 380, "hakimi": 380, "networkxexcept": 380, "resort": 380, "496": 380, "506": 380, "1962": [380, 398, 399, 445], "d_m": 381, "uniform": [381, 393, 402], "networkxunfeas": 381, "moshen": 381, "bayati": 381, "jeong": 381, "han": 381, "kim": 381, "amin": 381, "saberi": 381, "algorithmica": 381, "58": 381, "860": 381, "910": 381, "s00453": 381, "009": 381, "9340": 381, "gn": [382, 445], "a_k": 382, "krapivski": [382, 383, 384, 387], "redner": [382, 383, 384], "066123": [382, 384], "gnc": 383, "growth": [383, 443], "036118": 383, "2005k": 383, "gnr": 384, "probabilii": 384, "self_loop": 385, "preferenti": 385, "proport": 385, "peterson": [385, 428], "nichola": 385, "bori": 385, "pittel": 385, "preprint": 385, "1311": 385, "5961": 385, "2013": [385, 405], "gamma": 386, "delta_in": 386, "delta_out": 386, "bia": 386, "bollob\u00e1": 386, "borg": 386, "chay": 386, "riordan": 386, "fourteenth": 386, "annual": 386, "symposium": 386, "132": [386, 401], "139": 386, "diverg": [387, 447], "retent": 387, "disallow": 387, "ispolatov": 387, "yuryev": 387, "061911": 387, "inclus": 388, "knudsen": 388, "michael": 388, "carsten": 388, "wiuf": 388, "markov": 388, "chain": 388, "1155": 388, "190836": 388, "radiu": [389, 394, 395, 396], "chordal": 390, "chord": [390, 404], "mildli": 390, "lubotzki": 390, "invari": 390, "birkh\u00e4us": 390, "verlag": 390, "basel": 390, "1994": 390, "marguli": 391, "gabber": 391, "galil": 391, "palei": 392, "pz": 392, "f_q": 392, "odd": 392, "bolloba": 392, "cambridg": 392, "theta": [393, 396], "po": [393, 394, 395, 396, 397], "p_dist": [393, 395], "geograph": [393, 396], "rectangular": [393, 397], "ge": [393, 397], "prone": 393, "le": [393, 397, 437], "euclidean": [393, 394, 395, 396, 397], "taxicab": [393, 397], "expovari": [393, 396], "masuda": 393, "miwa": 393, "konno": 393, "036108": 393, "milan": 393, "bradonji\u0107": 393, "allon": 393, "percu": 393, "giant": 393, "antoni": 393, "bonato": 393, "209": 393, "216": 393, "cube": [394, 395, 396, 414, 431], "kdtree": [394, 395, 396], "minkowski": [394, 395, 396], "infin": [394, 395, 396], "erd\u0151": [394, 395, 396], "r\u00e9nyi": [394, 395, 396], "twenti": 394, "2d": [394, 395, 396, 446, 449], "deviat": [394, 395, 396], "gauss": [394, 395, 396], "penros": [394, 395], "mathew": [394, 395], "soft": 395, "exp": [395, 397], "annal": 395, "2016": 395, "986": 395, "1028": 395, "summat": 396, "nodethr": 396, "cole": 396, "maclean": 396, "blog": 396, "thesi": [396, 402], "waxman": 397, "x_min": 397, "y_min": 397, "x_max": 397, "y_max": 397, "Their": 397, "incompat": [397, 458], "rout": 397, "multipoint": 397, "ieee": [397, 405, 406, 438, 443], "1988": 397, "1617": 397, "1622": 397, "harari": [398, 399, 447], "h_": [398, 399], "ceil": 398, "kn": 398, "hnm_harary_graph": 398, "weisstein": 398, "eric": 398, "mathworld": [398, 407, 411, 413, 415, 416, 417, 418, 419, 420, 421, 422, 426], "wolfram": [398, 407, 411, 413, 415, 416, 417, 418, 419, 420, 421, 422, 426], "hararygraph": 398, "nat": [398, 399, 445], "acad": [398, 399, 445], "sci": [398, 399, 445], "1142": [398, 399, 445], "1146": [398, 399, 445], "floor": 399, "hkn_harary_graph": 399, "boesch": 399, "satyanarayana": 399, "suffel": 399, "reliabl": 399, "synthesi": 399, "99": [399, 477], "2009": [399, 439], "uniform_random_intersection_graph": [400, 401], "nikoletsea": 400, "raptopoulo": 400, "spiraki": 400, "icalp": 400, "\u0131az": 400, "karhum": 400, "aki": 400, "lepist": 400, "sannella": 400, "vol": [400, 443], "3142": 400, "lectur": 400, "1029": 400, "1040": 400, "godehardt": 401, "jaworski": 401, "electron": [401, 439], "singer": 402, "cohen": 402, "1995": 402, "phd": 402, "john": [402, 419], "hopkin": 402, "scheinerman": 402, "evolut": 402, "2000": 402, "156": 402, "nkk": [403, 404], "degree_seq": 403, "n_edges_add": 403, "li": [403, 406], "unsatur": 403, "proof": 403, "tillman": [403, 404, 406], "markopoul": [403, 404, 405, 406, 438], "butt": [403, 404, 438], "gjoka": [403, 404, 405, 406], "2k": [403, 404], "kdd": [403, 404], "seconnd": 404, "joint_degre": [405, 406], "diagon": [405, 421], "joint_degree_graph": 405, "kurant": 405, "5k": 405, "infocom": [405, 406, 438], "stanton": 405, "pinar": 405, "prescrib": 405, "experiment": [405, 453], "n_th": 407, "m_1": 407, "singleton": [407, 446], "m_2": 407, "m_i": 407, "mycielskian": 407, "m_": 407, "mycielskigraph": 407, "p_2": 407, "chromat": [408, 439], "2n": 408, "bigcup": 408, "nonisomporph": 409, "adjanc": 409, "matric": [409, 438], "nonisomorph": 410, "shift_list": 411, "cubic": [411, 414, 415, 418, 419, 425, 427, 428, 433], "lcf": [411, 413, 415, 417, 419, 425, 427], "lederberg": 411, "coxet": 411, "frucht": [411, 418], "hamiltonian": [411, 413, 418, 419, 422, 427, 433], "symmetri": [411, 418], "dodecahedral_graph": 411, "desargues_graph": 411, "heawood_graph": 411, "pappus_graph": 411, "s1": 411, "sk": 411, "v_current": 411, "shiftlist": 411, "heawood": [411, 419], "lcfnotat": 411, "bull": 412, "planar": [412, 415, 416, 418], "pendant": 412, "leg": 412, "chv\u00e1tal": 413, "370": 413, "chv": 413, "c3": [413, 425, 426], "a1tal_graph": 413, "chvatalgraph": 413, "platon": [414, 417, 422, 426, 430, 432], "hypercub": 414, "aris": 414, "desargu": 415, "desarguesgraph": 415, "kite": [416, 423], "diamondgraph": 416, "dodecahedr": 417, "dodecahedron": 417, "regular_dodecahedron": 417, "dodecahedralgraph": 417, "fruchtgraph": 418, "cage": 419, "perci": 419, "nonplanar": 419, "girth": 419, "heawoodgraph": 419, "win": [419, 428], "tue": [419, 428], "nl": [419, 428], "aeb": [419, 428], "housegraph": [420, 421], "pentatop": 421, "icosahedr": 422, "icosahedron": 422, "icosahedralgraph": 422, "krackhardt": 423, "andr": 423, "beverlei": 423, "carol": 423, "dian": 423, "fernando": 423, "garth": 423, "heather": 423, "ik": 423, "jane": 423, "polit": 423, "landscap": 423, "cognit": 423, "quarterli": 423, "342": [423, 446], "369": 423, "2307": 423, "2393394": 423, "jstor": 423, "june": 423, "1990": 423, "graph_descript": 424, "ltype": 424, "adjacencylist": 424, "from_dict_of_list": 424, "from_edgelist": 424, "xlist": 424, "c_4": 424, "w2": 424, "vk": 424, "wk": 424, "vj": 424, "wj": 424, "moebiu": 425, "kantor": 425, "m\u00f6biu": 425, "petersen": [425, 428], "b6biu": 425, "93kantor_graph": 425, "octahedr": 426, "octahedron": 426, "shake": 426, "hi": [426, 436, 445], "her": 426, "partner": 426, "handshak": 426, "cocktail": 426, "octahedralgraph": 426, "tur": 426, "a1n_graph": 426, "special_cas": 426, "pappu": 427, "juliu": 428, "counterexampl": [428, 433], "bridgeless": 428, "colour": 428, "drg": 428, "maze": 429, "sedgewick": 429, "3rd": 429, "tetrahedr": 430, "k4": 430, "w4": 430, "grpah": 430, "tetrahedron": [430, 432, 433], "archimedean": [431, 432], "octagon": 431, "triangular": 431, "truncated_cub": 431, "coolmath": 431, "polyhedra": 431, "hexagon": 432, "equilater": 432, "truncated_tetrahedron": 432, "tutt": 433, "polyhedr": 433, "tait": 433, "conjectur": 433, "polyhedron": 433, "davi": 434, "southern": 434, "women": 434, "gardner": 434, "1941": 434, "south": 434, "chicago": 434, "il": 434, "florentin": 435, "breiger": 435, "philippa": 435, "pattison": 435, "cumul": 435, "dualiti": 435, "septemb": 435, "zachari": 436, "karat": 436, "club": 436, "mr": [436, 439], "offic": 436, "wayn": 436, "fission": 436, "anthropolog": 436, "452": 436, "473": 436, "1977": 436, "coappear": 437, "novel": 437, "miser": 437, "knuth": 437, "1993": 437, "graphbas": 437, "combinatori": 437, "york": 437, "spectral": [438, 447], "forg": 438, "sgf": 438, "eigenstructur": 438, "synthes": 438, "percentag": 438, "telecommun": 438, "bernoulli": 438, "baldesi": 438, "1801": 438, "01715": 438, "karate_club_graph": 438, "sud": 439, "81": 439, "810": 439, "herzberg": 439, "murti": 439, "polynomi": 439, "am": 439, "708": 439, "717": 439, "sander": 439, "torsten": 439, "7pp": 439, "2529816": 439, "encyclopedia": 439, "dec": 439, "nil": 440, "arboresc": 440, "downward": 440, "synthet": 440, "trie": 440, "recov": [440, 453], "pr\u00fcfer": 441, "from_prufer_sequ": 441, "forest_str": 441, "triad_nam": 442, "003": 442, "012": 442, "021d": 442, "021u": 442, "021c": 442, "111d": 442, "111u": 442, "030t": 442, "030c": 442, "120d": 442, "120u": 442, "120c": 442, "triadic_censu": 442, "autonom": [443, 445], "elmokashfi": 443, "tier": 443, "mid": 443, "adv": 443, "bidirect": 443, "peer": 443, "commerci": 443, "agreement": 443, "kvalbein": 443, "dovroli": 443, "bgp": 443, "1250": 443, "1261": 443, "octob": 443, "reweight": 444, "mathematician": 445, "frank": 445, "incoming_graph_data": [446, 449], "default_label": [446, 449], "to_networkx_graph": 446, "110": 446, "protect": 446, "bracket": 446, "shortcut": 446, "nbrsdict": 446, "miscellan": 446, "__contains__": 446, "__getitem__": 446, "adj_dict": 446, "atlasview": 446, "__iter__": 446, "niter": 446, "__len__": 446, "nnode": 446, "u_of_edg": 446, "v_of_edg": 446, "ebunch_to_add": 446, "wn2898": 446, "node_for_ad": 446, "nodes_for_ad": 446, "hello": 446, "k3": 446, "attrdict": 446, "behav": 446, "idiom": 446, "foovalu": 446, "adj_it": 446, "nbrdict": 446, "adjlist_inner_dict_factori": 446, "neighbordict": 446, "adjlist_outer_dict_factori": 446, "adjlistdict": 446, "clear_edg": 446, "deepcopi": 446, "fresh": [446, 455], "__class__": 446, "degreeview": 446, "nd_view": 446, "edge_attr_dict_factori": 446, "neighborattrdict": 446, "edge_subgraph": 446, "edgeview": 446, "edgedataview": 446, "ddict": 446, "get_edge_data": 446, "edge_dict": 446, "safe": 446, "graph_attr_dict_factori": 446, "graph_cache_factori": 446, "keyerror": 446, "edge_ind": 446, "data_dictionari": 446, "is_multigraph": 446, "corespond": 446, "nbunch_it": 446, "exhaust": 446, "possibli": 446, "node_attr_dict_factori": 446, "nodeattrdict": 446, "node_dict_factori": 446, "nodedict": 446, "nodeview": 446, "nodedataview": 446, "nodedata": 446, "bar": 446, "nedg": 446, "Will": 446, "nodes_for_remov": 446, "set_edge_data": 446, "set_node_data": 446, "set_item": 446, "adjedgeattr": 446, "dd": 446, "nodeattr": 446, "netowrkx": 446, "to_undirected_class": 446, "itertool": 446, "mg": 446, "nd_iter": 446, "outedgeview": 446, "in_edg": 446, "outedgedataview": 446, "has_predecessor": 446, "has_successor": 446, "indegreeview": 446, "inedgeview": 446, "outdegreeview": 446, "pred": 446, "succ": 446, "_convert_arrow_to_dynam": [447, 449], "atla": 447, "triad": 447, "mycielski": 447, "sudoku": 447, "utf": [448, 459], "filenam": [448, 459], "rb": 448, "bz2": 448, "uncompress": 448, "whitespac": 448, "obsolet": 448, "write_edgelist": 448, "fh": 448, "textlin": 448, "parse_edgelist": 448, "read_adjlist": 448, "marker": 448, "v_0": 449, "v_1": 449, "add_label": 450, "talk": 452, "output_to_cli": [452, 469], "person_id": [452, 459], "deregist": 453, "256mi": 453, "4gi": 453, "5gi": 453, "__enter__": 453, "__exit__": 453, "exc_typ": 453, "exc_valu": 453, "exc_tb": 453, "unregist": 453, "preemptiv": 453, "burstabl": 453, "qo": 453, "preempt": 453, "k8s_vineyard_imag": 453, "fallback": 453, "512mi": 453, "etcd_addr": 453, "etcd01": 453, "etcd02": 453, "etcd03": 453, "4mi": 453, "k8s_coordinator_pod_node_selector": 453, "tinyurl": 453, "3nx6k7ph": 453, "k8s_engine_pod_node_selector": 453, "path1": 453, "path2": 453, "claimnam": 453, "dangling_timeout_second": 453, "heartbeat": 453, "dangl": 453, "config_fil": 453, "resource_nam": 453, "sigint": 453, "sigterm": 453, "signal": 453, "get_vineyard_object_mapping_t": 453, "with_cyph": 453, "recreat": 453, "restore_from_pvc": 453, "kubeconfig": 453, "run_fetch": 453, "lock": 453, "store_to_pvc": 453, "backup": [453, 459], "maxwel": 455, "binlog": 455, "buildgartfrag": 455, "etcd_endpoint": 455, "gartfrag": 455, "etcd_client": 455, "make_shar": 455, "mpi_comm_world": 455, "schema_kei": 455, "gart_schema_p": 455, "to_str": 455, "edge_config_str": 455, "as_str": 455, "gart_blob_m": 455, "_p": 455, "config_str": 455, "edge_config": 455, "inner_vertices_it": 455, "elabel": [455, 460], "edge_it": 455, "hive": 457, "ordered_by_sourc": 457, "ordered_by_dest": 457, "textual": 457, "unix": [457, 472], "ldbc_graphar": 457, "4096": 457, "ldbc_subgraph_graphar": 457, "ldbc_subgraph": 457, "ldbc__graphar": 457, "test_graphar": 457, "broader": 458, "ffi": 458, "agnost": 458, "grin_": 458, "partitioned_graph": 458, "edge_type_nam": 458, "boundari": 458, "sync_properti": 458, "grin_partitioned_graph": 458, "grin_partit": 458, "grin_graph": 458, "grin_get_local_graph_from_partit": 458, "grin_edge_typ": 458, "etyp": 458, "grin_get_edge_type_by_nam": 458, "grin_vertex_type_list": 458, "src_vtype": 458, "grin_get_src_types_from_edge_typ": 458, "dst_vtype": 458, "grin_get_dst_types_from_edge_typ": 458, "src_vtypes_num": 458, "grin_get_vertex_type_list_s": 458, "dst_vtypes_num": 458, "grin_vertex_typ": 458, "grin_get_vertex_type_from_list": 458, "grin_vertex_properti": 458, "dst_vp": 458, "grin_get_vertex_property_by_nam": 458, "grin_null_vertex_properti": 458, "grin_vertex_property_t": 458, "dst_vpt": 458, "grin_get_vertex_property_table_by_typ": 458, "grin_datatyp": 458, "dst_vp_dt": 458, "grin_get_vertex_property_data_typ": 458, "grin_vertex_list": 458, "__src_vl": 458, "grin_get_vertex_list": 458, "_src_vl": 458, "grin_select_type_for_vertex_list": 458, "src_vl": 458, "grin_select_master_for_vertex_list": 458, "src_vl_num": 458, "grin_get_vertex_list_s": 458, "grin_vertex": 458, "grin_get_vertex_from_list": 458, "ifdef": 458, "grin_trait_select_edge_type_for_adjacent_list": 458, "grin_adjacent_list": 458, "_adj_list": 458, "grin_get_adjacent_list": 458, "grin_direct": 458, "adj_list": 458, "grin_select_edge_type_for_adjacent_list": 458, "adj_lsit": 458, "endif": 458, "al_sz": 458, "grin_get_adjacent_list_s": 458, "ifndef": 458, "grin_edg": 458, "grin_get_edge_from_adjacent_list": 458, "grin_get_edge_typ": 458, "grin_equal_edge_typ": 458, "grin_get_neighbor_from_adjacent_list": 458, "grin_get_value_from_vertex_property_t": 458, "grin_vertex_ref": 458, "uref": 458, "grin_get_vertex_ref_for_vertex": 458, "recogn": [458, 459], "u_master_partit": 458, "grin_get_master_partition_from_vertex_ref": 458, "send_valu": 458, "fragment_group_id": [458, 460], "get_partitioned_graph_by_object_id": 458, "local_partit": 458, "grin_get_local_partition_list": 458, "pnum": 458, "grin_get_partition_list_s": 458, "grin_get_partition_from_list": 458, "disclaim": 458, "sacrif": 458, "boilerpl": 458, "ineffici": 458, "enorm": 458, "grin_assume_all_vertex_property_local_complet": 458, "grin_assume_master_vertex_property_local_complet": 458, "grin_assume_by_type_all_vertex_property_local_complet": 458, "grin_assume_by_type_master_vertex_property_local_complet": 458, "assumpt": 458, "wider": 458, "undefin": 458, "granular": 458, "grin_frag": 458, "storagespecif": 458, "vertexhandl": 458, "goe": 458, "grin_edge_list": 458, "grin_partition_list": 458, "grin_enable_": 458, "_list_arrai": 458, "vertexlist": 458, "grin_enable_vertex_list_arrai": 458, "vl": 458, "idx": 458, "sz": 458, "caller": 458, "_list_iter": 458, "grin_enable_vertex_list_iter": 458, "grin_vertex_list_iter": 458, "grin_get_vertex_list_begin": 458, "grin_get_next_vertex_list_it": 458, "vli": 458, "grin_is_vertex_list_end": 458, "grin_get_vertex_from_it": 458, "grin_get_vertex_type_by_nam": 458, "vtype": 458, "grin_vertex_property_list": 458, "grin_get_vertex_properties_by_nam": 458, "vprop": 458, "vpl": 458, "separatedli": 458, "with_vertex_label": 458, "with_edge_label": 458, "grin_serialize_vertex_ref": 458, "grin_deserialize_to_vertex_ref": 458, "grin_get_vertex_from_vertex_ref": 458, "vref": 458, "deseri": 458, "borrow": 458, "vertexcut": 458, "edgecut": 458, "judgement": 458, "columnar": 459, "gear": 459, "compromis": 459, "strict": 459, "multitud": 459, "exemplifi": 459, "said": 459, "grpc_port": 459, "grpc_endpoint": 459, "conn": 459, "add_vertex_label": 459, "v_label_nam": 459, "add_primary_kei": 459, "pk_name": 459, "prop_name_1": 459, "prop_name_2": 459, "add_edge_label": 459, "e_label_nam": 459, "prop_name_3": 459, "add_properti": 459, "xmln": 459, "xsi": 459, "w3": 459, "xmlschema": 459, "schemaloc": 459, "xsd": 459, "modelvers": 459, "gremlinexampl": 459, "codehau": 459, "mojo": 459, "classpath": 459, "mainclass": 459, "compliancelevel": 459, "killaft": 459, "credenti": 459, "valuemap": [459, 477], "javascript": 459, "data_load": 459, "load_tool": 459, "xzvf": 459, "alic": 459, "person_id_1": 459, "20210611151923": 459, "mapreduc": 459, "data_output": 459, "55555": 459, "propertiescolmap": 459, "srcpkcolmap": 459, "dstpkcolmap": 459, "mb": 459, "columnidx": 459, "_success": 459, "xxxxx": 459, "sst": 459, "00000": 459, "00001": 459, "00002": 459, "load_data": 459, "test_store_servic": 459, "insert_vertex": 459, "vertexrecordkei": 459, "insert_vertic": 459, "update_vertex_properti": 459, "vertex_pk": 459, "delete_vertic": 459, "insert_edg": 459, "edgerecordkei": 459, "update_edge_properti": 459, "edge_pk": 459, "remote_flush": 459, "snapshot_id": 459, "src_vertex_kei": 459, "dst_vertex_kei": 459, "realtimewrit": 459, "unus": 459, "current_timestamp": 459, "replay_record": 459, "grootclient": 459, "grootclientbuild": 459, "replayrecord": 459, "provis": 459, "lapp": 459, "reinstal": 459, "pv_name": 459, "pod_nam": [459, 467, 472], "logback": 459, "zk": 459, "storegcintervalm": 459, "try_catch_up_with_primari": 459, "otel": 459, "arrowfragmentgroup": 460, "spread": 460, "ipc": 460, "docket": 460, "string_oid": 460, "ipcclient": 460, "writeout": 460, "nb": 460, "fragmentloc": 460, "gettotalnodesnum": 460, "labeltyp": 460, "vlabel": 460, "vertex_data_t": 460, "edge_data_t": 460, "willing": 461, "implic": 461, "polymorph": 461, "instant": 461, "aka": 461, "pygrap": [461, 462], "frist": 461, "from_numpi": 461, "bind_sssp1": 461, "delai": 461, "screen": 461, "bind_sssp2": 461, "vertex_bal": 462, "vcut": 462, "ecut": 462, "repo_hom": 466, "flexbuild": 466, "graph_identifi": 466, "syoov": 467, "79b44f7b58": 467, "ctmqb": 467, "10m": 467, "9m53": 467, "9m46": 467, "6dd67c65fc": 467, "gn4mb": 467, "15334625083466732": 467, "33d": 467, "\u7684\u56fe\u5206\u6790\u5f15\u64ce\u7ee7\u627f\u4e86": 469, "\u8be5\u7cfb\u7edf\u4e8e": 469, "\u4e0a\u9996\u6b21\u63d0\u51fa\u5e76\u83b7\u5f97\u6700\u4f73\u8bba\u6587\u5956": 469, "\u4e0e\u4ee5\u5f80\u7684\u7cfb\u7edf\u7684\u4e0d\u540c": 469, "\u652f\u6301\u5c06\u4e32\u884c\u56fe\u7b97\u6cd5\u81ea\u52a8\u5e76\u884c\u5316": 469, "\u5728": [469, 470, 471, 472, 473, 476, 477, 478, 479], "\u4e2d": [469, 471, 472, 473, 479], "\u53ea\u9700\u8fdb\u884c\u5f88\u5c0f\u7684\u66f4\u6539\u5373\u53ef\u8f7b\u677e\u5730\u5c06\u4e32\u884c\u7b97\u6cd5\u5373\u63d2\u5373\u7528": 469, "\u4f7f\u5176\u5e76\u884c\u5316\u7684\u8fd0\u884c\u5728\u5206\u5e03\u5f0f\u73af\u5883": 469, "\u5e76\u9ad8\u6548\u5730\u5904\u7406\u5927\u89c4\u6a21\u56fe\u6570\u636e": 469, "\u9664\u4e86\u6613\u4e8e\u7f16\u7a0b\u5916": 469, "\u8fd8\u88ab\u8bbe\u8ba1\u4e3a\u9ad8\u6548\u4e14\u53ef\u62d3\u5c55\u7684\u7cfb\u7edf": 469, "\u53ef\u7075\u6d3b\u5e94\u5bf9\u73b0\u5b9e\u4e2d\u56fe\u5e94\u7528\u591a\u53d8\u7684\u89c4\u6a21": 469, "\u591a\u6837\u6027\u548c\u590d\u6742\u6027": 469, "\u56fe\u5206\u6790\u5f15\u64ce\u5185\u7f6e\u4e86\u8bb8\u591a\u5e38\u7528\u7684\u56fe\u5206\u6790\u7b97\u6cd5": 469, "\u5305\u62ec\u8fde\u901a\u6027\u5206\u6790\u7b97\u6cd5": 469, "\u8def\u5f84\u5206\u6790\u7b97\u6cd5": 469, "\u793e\u533a\u68c0\u6d4b\u548c\u4e2d\u5fc3\u5ea6\u8ba1\u7b97\u7b49\u7c7b\u578b": 469, "\u5185\u7f6e\u7b97\u6cd5\u53ef\u4ee5\u5728\u56fe\u4e0a\u8f7b\u677e\u8c03\u7528": 469, "\u521b\u5efa\u9ed8\u8ba4": 469, "\u5e76\u52a0\u8f7d\u5c5e\u6027\u56fe": 469, "\u5927\u591a\u6570\u5185\u7f6e\u7b97\u6cd5\u53ea\u652f\u6301\u5728\u7b80\u5355\u56fe\u4e0a\u8fdb\u884c\u8ba1\u7b97": 469, "\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5148\u901a\u8fc7\u9876\u70b9\u548c\u8fb9\u7684\u7c7b\u578b\u6765\u751f\u6210\u4e00\u4e2a\u7b80\u5355\u56fe": 469, "result_lpa": 469, "result_sssp": 469, "\u5185\u7f6e\u7b97\u6cd5\u7684\u5b8c\u6574\u5217\u8868\u5982\u4e0b\u6240\u793a": 469, "\u5177\u4f53\u67d0\u4e2a\u7b97\u6cd5\u662f\u5426\u652f\u6301\u5c5e\u6027\u56fe\u4e5f\u5728\u5176\u6587\u6863\u8fdb\u884c\u4e86\u63cf\u8ff0": 469, "\u7b97\u6cd5\u7684\u652f\u6301\u5217\u8868\u4f1a\u968f\u7740\u4e0d\u65ad\u589e\u52a0\u6301\u7eed\u66f4\u65b0\u4e2d": 469, "\u5f53\u5b8c\u6210\u4e00\u6b21\u56fe\u8ba1\u7b97": 469, "\u8ba1\u7b97\u7ed3\u679c\u4f1a\u88ab\u5305\u88c5\u6210": 469, "\u7c7b": [469, 479], "\u4fdd\u5b58\u5728\u5206\u5e03\u5f0f\u96c6\u7fa4\u7684\u5185\u5b58\u4e2d": 469, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u5c06\u7ed3\u679c\u4f20\u5230\u5ba2\u6237\u7aef\u8fdb\u884c\u5904\u7406": 469, "\u6216\u662f\u5199\u5165\u4e91\u4e2d\u67d0\u4f4d\u7f6e\u6216\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf": 469, "\u652f\u6301\u7528\u6237\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u6765\u83b7\u53d6\u7ed3\u679c\u6570\u636e": 469, "\u8f6c\u5316\u4e3a\u76f8\u5e94\u6570\u636e\u7c7b\u578b": 469, "\u6216\u5199\u5165": 469, "\u6216\u672c\u5730\u76ee\u5f55\u4e2d": 469, "pod\u4e2d\u7684\u672c\u5730\u76ee\u5f55": 469, "\u6216\u5199\u5165\u672c\u5730\u7684": 469, "lpa_result": 469, "\u6570\u636e\u7ed3\u6784": 469, "\u6b64\u5916": [469, 473], "\u5982": [469, 472, 475, 477], "\u5feb\u901f\u4e0a\u624b": [469, 475], "\u4e2d\u6240\u793a": 469, "\u7528\u6237\u53ef\u4ee5\u5c06\u8ba1\u7b97\u7ed3\u679c\u52a0\u56de\u5230\u8be5\u56fe\u6570\u636e\u4e2d\u4f5c\u4e3a\u9876\u70b9": 469, "\u7684\u65b0\u5c5e\u6027": 469, "\u5217": 469, "\u5c06\u7ed3\u679c\u4f5c\u4e3a\u65b0\u5217\u6dfb\u52a0\u56de\u5c5e\u6027\u56fe": 469, "\u5217\u540d\u4e3a": 469, "\u5e76\u751f\u6210\u4e00\u5f20\u65b0\u56fe": 469, "new_graph": [469, 474], "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u5668": 469, "\u6765\u5b9a\u4e49\u5c06\u8ba1\u7b97\u7ed3\u679c\u4e2d\u7684\u54ea\u4e9b\u90e8\u5206\u5199\u56de\u56fe\u6570\u636e": 469, "\u9009\u62e9\u5668\u6307\u5b9a\u4e86\u8ba1\u7b97\u7ed3\u679c\u4e2d\u7684\u54ea\u4e00\u90e8\u5206\u4f1a\u88ab\u5904\u7406": 469, "\u7c7b\u4f3c\u7684": 469, "\u56fe\u6570\u636e\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u88ab\u5904\u7406\u6570\u636e\u7684\u4e00\u90e8\u5206": 469, "\u4f8b\u5982\u9876\u70b9id": 469, "\u6211\u4eec\u4e3a\u9009\u62e9\u5668\u4fdd\u7559\u4e86\u4e09\u4e2a\u5173\u952e\u5b57": 469, "\u4ee3\u8868\u7ed3\u679c": 469, "\u5206\u522b\u4ee3\u8868\u9876\u70b9\u548c\u8fb9": 469, "\u4ee5\u4e0b\u662f\u7ed3\u679c\u5904\u7406\u4e2d\u9009\u62e9\u5668\u7684\u4e00\u4e9b\u793a\u4f8b": 469, "\u83b7\u53d6\u9876\u70b9\u4e0a\u7684\u7ed3\u679c": 469, "\u8f6c\u6362\u4e3a": [469, 478], "\u4f7f\u7528\u9876\u70b9\u7684": 469, "\u4f5c\u4e3a\u540d\u4e3a": 469, "\u7684\u5217": 469, "df_vd": 469, "\u4f7f\u7528\u7ed3\u679c\u5217\u4f5c\u4e3a\u540d\u4e3a": 469, "df_result": 469, "property0": 469, "label0": 469, "\u5bf9\u4e8e\u5c5e\u6027\u56fe\u7684\u7ed3\u679c": 469, "\u4f5c\u4e3av\u548ce\u7684\u6807\u7b7e\u9009\u62e9\u5668": 469, "\u5c06": [469, 478], "\u9876\u70b9\u7684": 469, "\u4f5c\u4e3a": [469, 470, 479], "\u4f7f\u7528\u5199\u5728\u5e26\u6709label0\u7684\u9876\u70b9\u4e0a\u7684property0\u4f5c\u4e3a": 469, "gs_data": 469, "\u53ef\u4ee5\u67e5\u770b": 469, "\u83b7\u53d6\u66f4\u591a\u7ec6\u8282": 469, "\u5982\u679c\u5185\u7f6e\u7b97\u6cd5\u65e0\u6cd5\u6ee1\u8db3\u9700\u6c42": 469, "\u7528\u6237\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u7b97\u6cd5": 469, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7": 469, "\u5728\u7eaf": 469, "\u6a21\u5f0f": [469, 477], "\u4e0b\u4f7f\u7528": 469, "\u7f16\u7a0b\u6a21\u578b\u7f16\u5199\u7b97\u6cd5": 469, "\u4e3a\u4e86\u5b9e\u73b0\u81ea\u5df1\u7684\u7b97\u6cd5": 469, "\u7528\u6237\u9700\u8981\u5b9e\u73b0\u6b64\u7c7b": 469, "\u5982\u4ee3\u7801\u6240\u793a": 469, "\u7528\u6237\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u4ee5": 469, "\u88c5\u9970\u7684\u7c7b": 469, "\u5e76\u63d0\u4f9b\u4e09\u4e2a\u4e32\u884c": 469, "\u56fe\u7b97\u6cd5\u51fd\u6570": 469, "\u51fd\u6570\u7528\u4e8e\u8bbe\u7f6e\u7b97\u6cd5\u521d\u59cb\u72b6\u6001": 469, "\u51fd\u6570\u5b9a\u4e49\u7b97\u6cd5\u7684\u5c40\u90e8\u8ba1\u7b97": 469, "\u51fd\u6570\u5b9a\u4e49\u5bf9\u5206\u533a\u6570\u636e\u7684\u589e\u91cf\u8ba1\u7b97": 469, "\u4e0e": 469, "\u76f8\u5173\u7684\u5b8c\u6574": 469, "\u53ef\u4ee5\u53c2\u8003": 469, "\u4ee5\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5": 469, "\u4e3a\u4f8b": [469, 473], "\u7528\u6237\u5728": 469, "\u6a21\u578b\u4e2d\u5b9a\u4e49\u7684": 469, "\u7b97\u6cd5\u53ef\u5982\u4e0b\u6240\u793a": 469, "\u521d\u59cb\u5316\u6bcf\u4e2a\u9876\u70b9\u7684\u8ddd\u79bb": 469, "\u4ececontext\u4e2d\u83b7\u53d6\u6e90\u9876\u70b9": 469, "\u5728\u6e90\u9876\u70b9\u6240\u5728\u5206\u533a\u4e2d": 469, "\u8fd0\u884cdijkstra\u7b97\u6cd5\u4f5c\u4e3a\u90e8\u5206\u8ba1\u7b97": 469, "\u4f7f\u7528\u8fb9\u4e0a\u7b2c\u4e09\u5217\u6570\u636e\u4f5c\u4e3a\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb": 469, "\u589e\u91cf\u8ba1\u7b97": 469, "\u66f4\u65b0\u6700\u77ed\u8ddd\u79bb": 469, "\u7528\u6237\u4ec5\u9700\u8981\u8bbe\u8ba1\u548c\u5b9e\u73b0\u5355\u5206\u533a\u7684\u4e32\u884c\u7b97\u6cd5": 469, "\u800c\u4e0d\u9700\u8981\u8003\u8651\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\u7684\u5206\u533a\u901a\u4fe1\u548c\u6d88\u606f\u4f20\u9012": 469, "\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b": [469, 479], "\u7ecf\u5178\u7684": 469, "\u7b97\u6cd5\u53ca\u5176\u589e\u91cf\u7248\u672c\u5c31\u53ef\u4ee5\u7528\u4e8e\u5728\u96c6\u7fa4\u4e0a\u7684\u5927\u89c4\u6a21\u56fe\u6570\u636e\u8ba1\u7b97": 469, "\u9664\u4e86\u57fa\u4e8e\u5b50\u56fe\u7684": 469, "\u6a21\u578b\u4e4b\u5916": 469, "\u4e5f\u652f\u6301\u4ee5\u9876\u70b9\u4e3a\u4e2d\u5fc3\u7684": 469, "\u7f16\u7a0b\u6a21\u578b": 469, "\u60a8\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u4ee5\u4e0b\u7b97\u6cd5\u7c7b\u6765\u5728": 469, "\u6a21\u578b\u4e2d\u5f00\u53d1\u7b97\u6cd5": 469, "\u6a21\u578b\u4e0d\u540c": 469, "\u7b97\u6cd5\u7c7b\u7684\u88c5\u9970\u5668\u4e3a": 469, "\u8be5\u7c7b\u65b9\u6cd5\u662f": 469, "\u5b9a\u4e49\u5728\u9876\u70b9\u4e0a\u7684": 469, "\u800c\u4e0d\u540c\u4e8e": 469, "\u6a21\u578b\u4e2d\u5b9a\u4e49\u5728\u56fe\u5206\u533a\u4e0a": 469, "\u8fd8\u662f\u4ee5": 469, "\u6a21\u578b\u4e0b\u7684\u7b97\u6cd5\u5982\u4e0b\u6240\u793a": 469, "\u88c5\u9970\u5668": 469, "\u5b9a\u4e49\u9876\u70b9\u6570\u636e\u548c\u6d88\u606f\u6570\u636e\u7684\u7c7b\u578b": 469, "\u652f\u6301\u7528\u6237\u5728\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u901a\u8fc7": 469, "\u4e0a\u7684\u63a5\u53e3\u6765\u4f7f\u7528\u5b9a\u4e49\u5728": 469, "\u4e2d\u7684": [469, 470, 472], "\u51fd\u6570": [469, 477], "\u4e0b\u5217\u4ee3\u7801": 469, "\u4f1a\u88ab\u7ffb\u8bd1\u6210\u5982\u4e0b\u7684": 469, "\u4ee3\u7801\u4ee5\u9ad8\u6548\u5730\u6267\u884c": 469, "\u7528\u6237\u9700\u8981\u5728\u5b9a\u4e49\u7b97\u6cd5\u540e\u8c03\u7528\u7b97\u6cd5": 469, "\u52a0\u8f7d\u81ea\u5df1\u7684\u7b97\u6cd5": 469, "\u5728\u56fe\u4e0a\u8fd0\u884c\u81ea\u5df1\u7684\u7b97\u6cd5": 469, "\u5f97\u5230\u8ba1\u7b97\u7ed3\u679c": 469, "\u8fd9\u91cc": [469, 470, 479], "\u662f\u4e0e": 469, "\u76f8\u5bf9\u5e94\u7684": 469, "\u5728\u5f00\u53d1\u548c\u6d4b\u8bd5\u4e4b\u540e": 469, "\u60a8\u53ef\u4ee5\u901a\u8fc7": 469, "\u65b9\u6cd5\u5c06\u7b97\u6cd5\u4fdd\u5b58\u6210": 469, "\u5305\u4ee5\u5907\u5c06\u6765\u4f7f\u7528": 469, "\u5728\u6b64\u4e4b\u540e": 469, "\u60a8\u53ef\u4ee5\u4ece": 469, "\u5305\u52a0\u8f7d\u81ea\u5b9a\u4e49\u7684\u7b97\u6cd5": 469, "\u4ecegar\u5305\u4e2d\u52a0\u8f7d\u81ea\u5df1\u7684\u7b97\u6cd5": 469, "\u652f\u6301\u7528\u6237\u7f16\u5199java\u7684pi": 469, "\u5e76\u4e14\u8fd0\u884c\u5728\u56fe\u5206\u6790\u5f15\u64ce\u4e0a": 469, "\u6211\u4eec\u9996\u5148\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u6f14\u793a\u5982\u679c\u5728graphscop": 469, "\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8fd0\u884c\u4e00\u4e2ajava\u7684\u56fe\u7b97\u6cd5": 469, "\u7136\u540e\u6211\u4eec\u5c06\u5c55\u793a\u5982\u679c\u5b9e\u73b0\u5e76\u8fd0\u884c\u81ea\u5b9a\u4e49\u7684java\u56fe\u7b97\u6cd5": 469, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7ecf\u5178\u56fe\u5206\u6790\u7b97\u6cd5\u7684\u793a\u4f8b\u5b9e\u73b0": 469, "\u901a\u8fc7\u4e0b\u9762\u5c55\u793a\u7684\u4f8b\u5b50": 469, "\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u5728graphscope\u7684\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8bd5\u7740\u8fd0\u884c\u4ed6\u4eec": 469, "\u9996\u5148\u4f60\u9700\u8981\u4ece\u4e0b\u8f7d\u6211\u4eec\u63d0\u4f9b\u7684\u793a\u4f8bapp\u7684\u5408\u96c6": 469, "\u65e0\u9700\u4efb\u4f55\u66f4\u6539\u4f60\u5c31\u53ef\u4ee5\u5728": 469, "graphscope\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8fd0\u884c\u8fd9\u4e9b\u793a\u4f8b\u7b97\u6cd5": 469, "\u7136\u540e\u4f60\u9700\u8981\u6253\u5f00graphscope\u7684python": 469, "\u5c1d\u8bd5\u8f7d\u56fe\u5e76\u4e14\u8fd0\u884c\u4e00\u4e2a\u7b80\u5355\u7684bfs\u7684\u7b97\u6cd5": 469, "dist_0": 469, "\u4e3a\u4e86\u7f16\u5199java\u5b9e\u73b0\u7684\u56fe\u7b97\u6cd5": 469, "\u7528\u6237\u9700\u8981\u501f\u52a9\u4e8e": 469, "\u8bf7\u53c2\u8003": [469, 477], "\u6765\u5c06": 469, "\u5b89\u88c5\u5230\u4f60\u7684\u672c\u5730\u73af\u5883\u4e0a": 469, "\u5b89\u88c5\u5b8c\u6210\u540e": 469, "\u4f60\u9700\u8981\u5c06": 469, "\u7684\u4f9d\u8d56\u6dfb\u52a0\u5230\u4f60\u7684maven\u9879\u76ee\u4f9d\u8d56\u4e2d": 469, "\u7528\u6237\u5e94\u5f53\u6ce8\u610f\u5728": 469, "\u7684\u4f9d\u8d56\u914d\u7f6e\u4e0a\u5e94\u5f53\u6dfb\u52a0": 469, "\u6765\u786e\u4fdd": 469, "\u6240\u6709\u5fc5\u8981\u7684\u4f9d\u8d56\u90fd\u88ab\u5305\u62ec\u5230": 469, "\u7528\u6237\u5728\u5f00\u53d1\u81ea\u5df1\u7b97\u6cd5\u7684\u8fc7\u7a0b\u4e2d": 469, "\u53ef\u80fd\u4f1a\u7528\u5230\u5176\u4ed6\u7684\u7b2c\u4e09\u65b9jar\u5305": 469, "\u4e3a\u4e86\u89e3\u51b3\u4f9d\u8d56jar\u5305\u7684\u7248\u672c\u95ee\u9898": 469, "\u7528\u6237\u9700\u8981\u4f7f\u7528\u786e\u4fdd\u81ea\u5df1\u751f\u6210\u7684jar\u5305\u5305\u542b\u6240\u6709\u4f9d\u8d56\u7684jar\u5305": 469, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528maven\u63d2\u4ef6": 469, "\u7528\u6237\u5728\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5\u65f6": 469, "\u7528\u6237\u9700\u8981\u6309\u7167": 469, "\u6765\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7b97\u6cd5": 469, "\u5e76\u4e14\u9700\u8981\u6839\u636e\u9700\u8981\u7684app\u7c7b\u578b\u6765\u5b9e\u73b0": 469, "\u4e2d\u76f8\u5e94\u7684\u63a5\u53e3\u5e76\u4e14\u5b9e\u73b0\u63a5\u53e3": 469, "\u5982\u679c\u7528\u6237\u671f\u671b\u7b97\u6cd5\u8fd0\u884c\u5728\u5c5e\u6027\u56fe\u4e0a": 469, "\u90a3\u4e48\u5b9a\u4e49\u7684app\u5e94\u8be5\u5b9e\u73b0\u63a5\u53e3": 469, "defaultpropertyappbas": 469, "\u6216": [469, 470, 471, 472, 475, 477], "parallelpropertyappbas": 469, "\u5982\u679c\u7528\u6237\u671f\u671b\u7b97\u6cd5\u8fd0\u884c\u5728\u7b80\u5355\u56fe\u4e0a": 469, "\u90a3\u4e48\u5b9a\u4e49\u7684app\u5e94\u8be5\u5b9e\u73b0\u501f\u53e3": 469, "defaultappbas": 469, "\u540c\u65f6\u7528\u6237\u9700\u8981\u5b9e\u73b0app\u76f8\u5e94\u7684": 469, "\u6765\u4fdd\u5b58\u8de8superstep\u7684\u6570\u636e": 469, "\u5176\u5e94\u8be5\u662f": 469, "defaultpropertycontextbas": 469, "parallelpropertycontextbas": 469, "defaultcontextbas": 469, "\u6216\u8005": [469, 471, 478, 479], "\u7684\u7684\u5b50\u7c7b": 469, "\u901a\u8fc7\u7ee7\u627f": 469, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u5230\u4e0d\u540c\u7c7b\u578b\u7684context\u6240\u62e5\u6709\u7684\u7279\u6027": 469, "\u901a\u8fc7\u8fd9\u4e24\u79cdcontext\u63d0\u4f9b\u7684\u501f\u53e3\u6240\u5b58\u50a8\u7684\u6570\u636e\u5728\u7a0b\u5e8f\u6267\u884c\u5b8c\u4e4b\u540e\u53ef\u4ee5\u88ab\u7528\u6237\u8bbf\u95ee": 469, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5728python": 469, "client\u4e2dquery\u8fd4\u56de\u7684context": 469, "\u5bf9\u8c61\u6765\u8bbf\u95ee\u8fd9\u4e9b\u6570\u636e": 469, "\u8fd9\u91cc\u6211\u4eec\u5c55\u793a\u4e00\u4e2a\u7b80\u5355\u7684app\u7684\u5b9e\u73b0": 469, "\u5b83\u6240\u505a\u7684\u4e8b\u60c5\u53ea\u662f\u5bf9\u4e00\u4e2a\u7b80\u5355\u56fe\u7684\u6240\u6709\u8fb9\u8fdb\u884c\u4e86\u904d\u5386": 469, "\u8be5app\u5bf9\u5e94\u7684context\u7684\u5b9e\u73b0": 469, "\u5728\u5b9e\u73b0\u4e86\u81ea\u5df1\u7684\u7b97\u6cd5\u4e4b\u540e": 469, "\u7528\u6237\u53ef\u80fd\u4f1a\u60f3\u5728\u63d0\u4ea4\u5230graphscope\u7684\u56fe\u5206\u6790\u5f15\u64ce\u8fd0\u884c\u524d": 469, "\u5148\u5728\u672c\u5730\u9a8c\u8bc1\u7b97\u6cd5\u5b9e\u73b0\u7684\u6b63\u786e\u6027": 469, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u811a\u672c\u6765\u6ee1\u8db3\u7528\u6237\u7684": 469, "\u8fd9\u4e2a\u9700\u6c42": 469, "\u4e3a\u4e86\u9a8c\u8bc1\u7b97\u6cd5\u5b9e\u73b0\u7684\u6b63\u786e\u6027": 469, "\u7528\u6237\u53ea\u9700\u8981\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4": 469, "graphscope_repo": 469, "app_class_nam": 469, "java_path": 469, "path_to_your_jar": 469, "param_str": 469, "params_str": 469, "\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u7684java": 469, "app\u7684\u7c7b\u7684\u5168\u540d": 469, "\u6307\u5411\u5305\u542b\u7528\u6237\u60f3\u8981\u8fd0\u884c\u7684\u7b97\u6cd5\u7684jar\u5305": 469, "\u53ef\u4ee5\u901a\u8fc7": 469, "\u6765\u5236\u5b9acontext\u521d\u59cb\u5316\u9700\u8981\u7684\u53c2\u6570": 469, "\u4f8b\u5982\u5bf9\u4e8ebfs\u7b97\u6cd5\u53ef\u4ee5\u4f7f\u7528": 469, "\u6765\u6807\u8bb0\u521d\u59cb\u8282\u70b9\u662f6": 469, "\u5e76\u884c\u7ebf\u7a0b\u6570\u4e3a1": 469, "\u53ef\u4ee5": 469, "\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u6765\u8fd0\u884ctravers": 469, "jar_path": 469, "\u5728\u672c\u5730\u9a8c\u8bc1\u81ea\u5b9a\u4e49\u7b97\u6cd5\u7684\u6b63\u786e\u6027\u4e4b\u540e": 469, "\u4f60\u53ef\u4ee5\u901a\u8fc7graphscope\u7684python": 469, "client\u6765\u63d0\u4ea4\u8fd0\u884cjar\u5305": 469, "\u4e00\u4e2ajar\u5305\u4e2d\u53ef\u4ee5\u5305\u542b\u4e0d\u540c\u7684app\u5b9e\u73b0": 469, "\u7528\u6237\u53ef\u4ee5\u591a\u6b21\u63d0\u4ea4\u76f8\u540c\u7684jar\u5305\u4f46\u662f\u8fd0\u884c\u4e0d\u540c": 469, "\u7684app": 469, "\u8bf7\u8010\u5fc3\u7b49\u5f85\u8ba1\u7b97\u5b8c\u6210": 469, "\u5f53\u8ba1\u7b97\u5b8c\u6210\u540e": 469, "\u4f60\u53ef\u4ee5\u901a\u8fc7": [469, 470, 472], "\u5bf9\u8c61\u6765\u83b7\u53d6\u8ba1\u7b97\u7ed3\u679c": 469, "\u76f8\u5173\u8bba\u6587": 469, "wenfei": 469, "jingbo": 469, "xu": 469, "wenyuan": 469, "yu": 469, "jingren": 469, "zhou": 469, "xiaojian": 469, "luo": 469, "qiang": 469, "yin": 469, "cao": 469, "ruiqi": 469, "tod": [469, 475], "yinghui": 469, "wu": 469, "jiaxin": 469, "jiang": 469, "43rd": 469, "zeyu": 469, "zheng": 469, "bohan": 469, "chao": 469, "tian": 469, "\u4ee5": [470, 473, 474, 476, 479], "\u955c\u50cf\u7684\u65b9\u5f0f\u5206\u53d1\u5f15\u64ce\u7b49\u7ec4\u4ef6": 470, "\u9ed8\u8ba4\u60c5\u51b5\u4e0b": [470, 472], "\u5982\u679c\u8fd0\u884c": 470, "\u7684\u96c6\u7fa4\u673a\u5668\u4e0a\u4e0d\u5b58\u5728\u8be5\u955c\u50cf": 470, "\u5219\u4f1a\u62c9\u53d6\u5bf9\u5e94\u7248\u672c\u7684\u6700\u65b0\u955c\u50cf": 470, "\u56e0\u6b64": [470, 471, 473], "\u8bf7\u786e\u4fdd\u60a8\u7684\u96c6\u7fa4\u53ef\u4ee5\u8bbf\u95ee\u516c\u5171\u955c\u50cf\u4ed3\u5e93": 470, "\u4f1a\u8bdd": [470, 473], "\u5ba2\u6237\u7aef": [470, 471, 475], "\u5b83\u5c01\u88c5": 470, "\u7ba1\u7406\u7740": 470, "\u5f15\u64ce\u7684\u5404\u79cd\u7ec4\u4ef6": 470, "\u5e76": 470, "\u8fde\u63a5": 470, "\u64cd\u4f5c\u7528\u6237\u5728": 470, "\u96c6\u7fa4\u4e0a\u7684": 470, "\u5f15\u64ce": 470, "\u5982\u4e0a\u8ff0\u4ee3\u7801\u6240\u793a": 470, "\u7528\u6237\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u901a\u8fc7\u4f1a\u8bdd\u6765\u62c9\u8d77\u4e00\u4e2a": 470, "\u5b9e\u4f8b": 470, "\u7528\u6237\u6709\u65f6\u9700\u8981\u4f7f\u7528\u5728\u672c\u673a\u78c1\u76d8\u4e0a\u7684\u6570\u636e": 470, "\u6211\u4eec\u63d0\u4f9b\u4e86\u9009\u9879\u4f9b\u7528\u6237\u5c06\u672c\u673a\u7684\u76ee\u5f55\u6302\u8f7d\u5230\u96c6\u7fa4\u4e0a": 470, "\u5047\u5b9a\u6211\u4eec\u8981\u5c06\u672c\u673a\u7684": 470, "\u7684\u8def\u5f84\u6302\u8f7d\u5230": 470, "\u8def\u5f84": [470, 479], "\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5982\u4e0b\u4e00\u4e2a\u5b57\u5178": 470, "\u7136\u540e": [470, 478], "\u5c06\u5176\u901a\u8fc7": 470, "\u7684\u53c2\u6570\u4f20\u7ed9\u4f1a\u8bdd\u7684\u6784\u9020\u51fd\u6570": 470, "\u6ce8\u610f\u8fd9\u91cc\u7684\u672c\u673a\u8def\u5f84\u662f\u76f8\u5bf9\u4e8e": 470, "\u8282\u70b9\u7684\u6982\u5ff5": 470, "\u5982\u679c\u4f60\u662f\u901a\u8fc7": 470, "\u521b\u5efa\u7684\u96c6\u7fa4": 470, "\u90a3\u4e48\u4f60\u9700\u8981\u5c06\u8fd9\u4e2a\u76ee\u5f55\u62f7\u8d1d\u5230": 470, "\u7684\u865a\u62df\u4e3b\u673a\u7684\u76f8\u5e94\u8def\u5f84\u4e0a": 470, "\u6216\u8005\u5728\u914d\u7f6e\u4e2d\u5c06\u8def\u5f84\u63d0\u524d\u6302\u8f7d\u5230\u865a\u62df\u4e3b\u673a\u4e0a\u53bb": 470, "\u67e5\u770b\u66f4\u591a\u7ec6\u8282": 470, "\u4e0a\u7684\u4e00\u4e2a": 470, "\u5b9e\u4f8b\u5305\u542b": 470, "\u4e00\u4e2a\u8fd0\u884c": 470, "\u7684": [470, 471, 472, 475, 480], "\u8d1f\u8d23\u5143\u4fe1\u606f\u7684\u540c\u6b65": 470, "\u8d1f\u8d23\u5bf9": 470, "\u5f15\u64ce\u5bb9\u5668\u7684\u7ba1\u7406": 470, "\u4ee5\u53ca\u4e00\u7ec4\u8fd0\u884c": 470, "\u5f15\u64ce\u5bb9\u5668\u7684": 470, "replicaset": 470, "\u5bf9\u8c61": 470, "\u540e\u7aef\u670d\u52a1\u7684\u5165\u53e3": 470, "\u901a\u8fc7": [470, 473], "\u63a5\u6536\u6765\u81ea": 470, "\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u548c\u547d\u4ee4": 470, "\u5e76\u7ba1\u7406\u7740\u56fe\u5206\u6790\u5f15\u64ce": 470, "\u56fe\u67e5\u8be2\u5f15\u64ce": 470, "\u56fe\u5b66\u4e60\u5f15\u64ce": [470, 475], "\u7684\u751f\u547d\u5468\u671f": 470, "\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u914d\u7f6e\u5f15\u64ce\u955c\u50cf\u5730\u5740\u7b49\u53c2\u6570": 470, "\u8bf7\u5728": 470, "\u4e2d\u53c2\u9605\u66f4\u591a\u7684\u8be6\u7ec6\u4fe1\u606f": 470, "\u83b7\u53d6\u5e76\u6dfb\u52a0\u4ed3\u5e93\u4fe1\u606f": 470, "\u5b89\u88c5": [470, 475], "release_nam": 470, "\u68c0\u6d4bgraphscope\u670d\u52a1\u53ef\u7528\u6027": 470, "\u53c2\u8003": 470, "\u8be5\u94fe\u63a5": 470, "\u4ee5\u901a\u8fc7python\u5ba2\u6237\u7aef\u8fde\u63a5\u5230\u9884\u542f\u52a8\u7684graphscope\u670d\u52a1": 470, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u5728aws\u6216\u963f\u91cc\u4e91\u4e0a\u521b\u5efa": 470, "\u96c6\u7fa4\u7684\u4ea4\u4e92\u5f0f\u811a\u672c": 470, "\u8fd9\u4e00\u811a\u672c\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u4f7f\u7528\u5df2\u6709\u7684\u96c6\u7fa4\u6216\u521b\u5efa\u65b0\u7684": 470, "\u96c6\u7fa4": [470, 472, 476], "\u7136\u540e\u8f93\u51fa\u96c6\u7fa4\u7684\u914d\u7f6e\u6587\u4ef6": 470, "\u7528\u6cd5\u5982\u4e0b": 470, "\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7": 470, "launch_clust": 470, "\u83b7\u5f97\u66f4\u8be6\u7ec6\u7684\u5e2e\u52a9\u4fe1\u606f": 470, "pyyaml": 470, "boto3": 470, "your_access_key_id": 470, "your_access_key_secret": 470, "region": 470, "your_region_nam": 470, "kube_config_path": 470, "alibabacloud_cs20151215": 470, "alibabacloud_ecs20140526": 470, "alibabacloud_vpc20160428": 470, "your_region_id": 470, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u5728\u672c\u5730\u5b89\u88c5graphscope\u76f8\u5173\u4f9d\u8d56\u7684\u811a\u672c": 470, "\u8be5\u811a\u672c\u53ef\u4ee5\u8fd0\u884c\u5728": 470, "\u5e73\u53f0\u4e0a": 470, "\u4e3b\u8981\u7684\u7528\u6cd5\u5982\u4e0b": 470, "\u83b7\u53d6\u66f4\u8be6\u7ec6\u7684\u5e2e\u52a9\u4fe1\u606f": 470, "\u5f00\u53d1\u76f8\u5173\u4f9d\u8d56": 470, "\u672c\u5730\u90e8\u7f72": 470, "graphscope_env": [470, 471], "\u7684\u80cc\u540e\u6709\u4e00\u7fa4\u6d3b\u8dc3\u7684\u5de5\u7a0b\u4eba\u5458\u548c\u7814\u7a76\u4eba\u5458\u56e2\u961f\u6765\u63a8\u8fdb\u65e5\u5e38\u7684\u5f00\u53d1\u548c\u7ef4\u62a4": 471, "\u6211\u4eec\u70ed\u5ff1\u6b22\u8fce\u6765\u81ea\u5f00\u6e90\u793e\u533a\u7684": 471, "\u4e3a\u6539\u5584\u8be5\u9879\u76ee\u6240\u505a\u7684\u4efb\u4f55\u8d21\u732e": 471, "\u9075\u5faa": 471, "\u7684\u5f00\u6e90\u534f\u8bae": 471, "\u9700\u8981\u4e00\u4e9b\u7b2c\u4e09\u65b9\u7684\u5de5\u5177\u548c\u4f9d\u8d56": 471, "\u4e3a\u4e86\u8ba9\u5f00\u53d1\u8005\u66f4\u5bb9\u6613\u4e0a\u624b": 471, "\u6211\u4eec\u63d0\u4f9b\u4e86\u5b89\u88c5\u4e86\u6240\u9700\u4f9d\u8d56\u7684": 471, "\u955c\u50cf": 471, "\u5f00\u53d1\u8005\u9700\u8981\u901a\u8fc7": 471, "\u7684\u547d\u4ee4\u4ece\u6211\u4eec\u7684\u5f00\u6e90\u4ee3\u7801\u5e93": 471, "\u4e2d\u83b7\u5f97\u6700\u65b0\u7248\u7684\u4ee3\u7801": 471, "\u5728\u6b64\u57fa\u7840\u4e0a\u505a\u5f00\u53d1\u6216\u4ee3\u7801\u7684\u66f4\u6539": 471, "\u7136\u540e\u5728\u4ee3\u7801\u7684\u6839\u76ee\u5f55": 471, "\u6267\u884c": 471, "10240m": 471, "minitest": 471, "unittest": 471, "\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u6784\u5efa\u547d\u4ee4\u5f00\u53d1\u5e76\u6d4b\u8bd5\u5176\u4e2d\u67d0\u4e00\u4e2a\u6a21\u5757": 471, "\u6bd4\u5982": [471, 479], "\u56fe\u5206\u6790\u5f15\u64ce": [471, 475], "\u6a21\u5757": 471, "\u7136\u540e\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u6784\u5efa": 471, "\u8be5\u547d\u4ee4\u4f1a\u5f00\u59cb": 471, "\u7684\u6784\u5efa\u8fc7\u7a0b": 471, "\u8be5\u8fc7\u7a0b\u5c06\u5728": 471, "\u7684\u5bb9\u5668\u4e2d\u6784\u5efa\u5f53\u524d\u6e90\u4ee3\u7801": 471, "\u5e76\u5c06\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u590d\u5236\u5230": 471, "\u8fd0\u884c\u65f6\u57fa\u7840\u955c\u50cf": 471, "\u751f\u6210\u7684\u955c\u50cf\u5c06\u88ab\u6807\u8bb0": 471, "\u4e3a": [471, 472, 473], "shortsha": 471, "\u5ba2\u6237\u7aef\u4e0d\u5305\u542b\u5728\u8be5\u955c\u50cf\u4e2d": 471, "\u6784\u5efa\u4e5f\u4e0e\u5f15\u64ce\u6709\u6240\u4e0d\u540c": 471, "\u5982\u679c\u5f00\u53d1\u8005\u6b63\u5728\u5f00\u53d1": 471, "\u5ba2\u6237\u7aef\u5e76\u4e14\u672a\u4fee\u6539\u5f15\u64ce\u76f8\u5173\u7684\u6587\u4ef6": 471, "\u90a3\u4e48": 471, "\u955c\u50cf\u662f\u4e0d\u9700\u8981\u91cd\u5efa\u7684": 471, "\u5f00\u53d1\u8005\u53ea\u9700\u8981\u5728\u672c\u5730\u91cd\u65b0\u5b89\u88c5": 471, "\u5ba2\u6237\u7aef\u5373\u53ef": 471, "\u6d4b\u8bd5\u65b0\u6784\u5efa\u7684\u955c\u50cf": 471, "\u7528\u6237\u53ef\u4ee5\u624b\u52a8\u6253\u5f00\u4e00\u4e2a\u4f1a\u8bdd": 471, "\u6307\u5b9a\u7528\u65b0\u7f16\u8bd1\u7684\u955c\u50cf": 471, "\u4e0b\u7684": 471, "\u5206\u53d1\u5305\u662f\u57fa\u4e8e": 471, "\u73af\u5883\u4e0b\u6784\u5efa\u7684": 471, "install_prefix": 471, "\u4e0b\u5206\u522b\u6784\u5efa": 471, "\u7531\u4e8e": 471, "\u4e0b\u7684\u6784\u5efa\u8fc7\u7a0b\u662f\u5728\u672c\u5730": 471, "\u975edocker": 471, "\u4e2d\u8fdb\u884c": 471, "\u56e0\u6b64\u9700\u8981\u672c\u5730\u4e8b\u5148\u5b89\u88c5": 471, "\u7684\u4f9d\u8d56": 471, "\u57fa\u4e8e\u5f53\u524d": 471, "\u73af\u5883\u4e0b\u7684": 471, "\u7248\u672c\u6784\u5efa": 471, "\u9700\u8981\u6ce8\u610f\u7684\u662f": [471, 473], "\u5982\u679c\u4f60\u9700\u8981\u8be5\u5206\u53d1\u5305\u80fd\u652f\u6301\u4e0d\u540c\u7684": 471, "\u7248\u672c": [471, 476], "\u4f60\u53ef\u80fd\u9700\u8981\u901a\u8fc7": 471, "conda": 471, "pyenv": 471, "\u5b89\u88c5\u591a\u4e2a": 471, "\u7684\u7248\u672c": 471, "\u98ce\u683c": 471, "\u5982\u679c\u4f60\u7684\u4ee3\u7801\u6ca1\u6709\u901a\u8fc7ci\u7684\u98ce\u683c\u68c0\u67e5": 471, "\u4f60\u53ef\u4ee5\u4f7f\u7528": 471, "\u683c\u5f0f\u5316\u4f60\u7684\u4ee3\u7801": 471, "\u6211\u4eec\u6536\u96c6\u4e86\u7528\u6237\u4f7f\u7528": 472, "\u8fc7\u7a0b\u4e2d\u7684\u5e38\u89c1\u95ee\u9898": 472, "\u5982\u679c\u5728\u4e0b\u9762\u7684\u5217\u8868\u4e2d\u4ecd\u7136\u65e0\u6cd5\u627e\u5230\u60a8\u9047\u5230\u7684\u95ee\u9898\u7684\u7b54\u6848": 472, "\u53ef\u901a\u8fc7\u63d0\u4ea4": 472, "\u6216\u8005\u5728": 472, "\u4e0e\u6211\u4eec\u8054\u7cfb": 472, "\u8fd0\u884c": 472, "\u7cfb\u7edf\u9700\u8981\u7684\u6700\u5c0f\u8d44\u6e90\u662f\u591a\u5c11": 472, "\u5728\u901a\u8fc7": 472, "\u5ba2\u6237\u7aef\u4f7f\u7528": 472, "\u8fc7\u7a0b\u4e2d": 472, "\u9700\u8981\u7684\u6700\u4f4e": 472, "\u7248\u672c\u662f3": 472, "\u6700\u4f4epip\u7248\u672c\u662f": 472, "\u7cfb\u7edf\u652f\u6301\u4ee5\u5355\u673a\u6216\u5206\u5e03\u5f0f\u7684\u65b9\u5f0f\u90e8\u7f72": 472, "\u5355\u673a\u60c5\u51b5\u4e0b": 472, "\u8d44\u6e90\u9700\u6c42": 472, "\u6838": 472, "\u5185\u5b58": 472, "\u5728\u652f\u6301\u4ee5\u4e0b\u73af\u5883\u4e2d\u8fd0\u884c": 472, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u90e8\u7f72": 472, "\u9700\u8981\u7528\u6237\u62e5\u6709\u4e00\u4e2a": 472, "\u7684\u73af\u5883\u4e0a\u6d4b\u8bd5\u901a\u8fc7": 472, "\u662f\u5426\u5f3a\u4f9d\u8d56": 472, "\u652f\u6301\u5728\u5355\u673a\u6a21\u5f0f\u5b89\u88c5\u8fd0\u884c": 472, "\u7684\u9884\u7f16\u8bd1\u5305\u4ee5": 472, "\u7684\u5f62\u5f0f\u5206\u53d1": 472, "\u53ef\u4ee5\u7528": 472, "\u5feb\u901f\u5b89\u88c5": 472, "\u5982\u4f55\u5982\u67e5\u770b": 472, "\u7684\u8fd0\u884c\u65f6\u4fe1\u606f": 472, "\u8fd0\u884c\u4e0d\u6253\u5370\u65e5\u5fd7\u4fe1\u606f": 472, "\u53c2\u6570\u5f00\u542f\u65e5\u5fd7\u8f93\u51fa": 472, "\u5982\u679c\u60a8\u7684graphscope\u8fd0\u884c\u5728k8s\u96c6\u7fa4\u4e0a": 472, "\u53ef\u4ee5\u4f7f\u7528": [472, 478], "\u6765\u67e5\u770b\u7cfb\u7edf\u7684\u5f53\u524d\u72b6\u6001": 472, "\u540c\u65f6\u5982\u679c\u4f60\u53ef\u4ee5\u8bbf\u95ee": 472, "\u7684\u78c1\u76d8": 472, "\u4e5f\u53ef\u5728": 472, "\u76ee\u5f55\u4e0b\u67e5\u770b\u8fd0\u884c\u65f6\u65e5\u5fd7": 472, "\u4e3a\u4ec0\u4e48\u5728\u4f7f\u7528": 472, "\u547d\u4ee4\u65f6": 472, "\u53d1\u73b0\u4e86\u4e00\u4e9b\u591a\u4f59\u7684": 472, "\u5bf9\u4e8e\u5176\u4e2d\u4e00\u4e9b\u5931\u8d25\u7684": 472, "\u53ea\u80fd\u901a\u8fc7\u624b\u52a8\u6267\u884c\u547d\u4ee4\u5982": 472, "\u8fdb\u884c\u5220\u9664": 472, "\u901a\u5e38\u60c5\u51b5\u4e0b": 472, "\u8be5\u95ee\u9898\u51fa\u73b0\u5728\u4f7f\u7528": 472, "\u90e8\u7f72": [472, 475], "\u65f6": [472, 473], "\u4f9d\u8d56\u4e00\u4e9b\u6743\u9650\u6765\u5220\u9664\u8fd0\u884c\u65f6\u7684\u8d44\u6e90": 472, "\u5982\u679c\u7528\u6237\u6ca1\u6709\u6b63\u786e\u8bbe\u7f6e": 472, "\u7b49\u6743\u9650": 472, "\u53ef\u80fd\u4e0d\u80fd\u6b63\u786e\u56de\u6536\u5206\u914d\u7684\u8d44\u6e90": 472, "\u8be6\u7ec6\u7ec6\u8282\u53ef\u4ee5\u67e5\u770b": 472, "\u662f\u56fe\u6570\u636e\u5e93\u5417": 472, "\u5e76\u4e0d\u662f\u4e00\u4e2a\u56fe\u6570\u636e\u5e93": 472, "\u4f46\u5176\u5305\u542b\u4e00\u4e2a\u6301\u4e45\u56fe\u5b58\u50a8\u7684\u7ec4\u4ef6": 472, "\u53ef\u4ee5\u88ab\u7528\u4f5c\u6570\u636e\u5e93": 472, "\u4e0a\u7684\u517c\u5bb9\u6027\u5982\u4f55": 472, "\u76ee\u524d": [472, 479], "graphscope\u652f\u6301gremlin\u8bed\u8a00\u4e2d\u7684\u5927\u90e8\u5206\u67e5\u8be2\u7b97\u5b50": 472, "\u53ef\u901a\u8fc7": 472, "\u8be5\u6587\u6863": 472, "\u67e5\u770b\u8be6\u7ec6\u7684\u652f\u6301\u4fe1\u606f": 472, "\u770b\u8d77\u6765\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5361\u4f4f\u4e86": 472, "\u5982\u679c": 472, "\u770b\u8d77\u6765\u50cf\u5361\u4f4f": 472, "\u53ef\u80fd\u7684\u539f\u56e0\u6709": 472, "\u5728\u4f1a\u8bdd\u7684\u62c9\u8d77\u9636\u6bb5": 472, "\u5982\u679c\u5f53\u524d\u7f51\u7edc\u4e0b\u8f7d\u955c\u50cf\u8fc7\u6162": 472, "\u6216\u5f53\u524d\u96c6\u7fa4\u8d44\u6e90\u65e0\u6cd5\u6ee1\u8db3\u8bf7\u6c42\u7684\u8d44\u6e90\u65f6": 472, "\u4f1a\u9020\u6210\u5361\u4f4f\u7684\u73b0\u8c61": 472, "\u8f7d\u56fe\u9636\u6bb5": 472, "\u53ef\u80fd\u4f1a\u7531\u4e8e\u6570\u636e\u91cf\u8fc7\u5927\u9020\u6210\u77ed\u6682\u7684\u5361\u4f4f\u73b0\u8c61": 472, "\u5728\u6267\u884c\u56fe\u7b97\u6cd5\u5206\u6790\u9636\u6bb5": 472, "\u6216\u8005\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u7b97\u6cd5": 472, "\u7f16\u8bd1\u6784\u5efa\u5e94\u7528\u7684\u5e93\u65f6\u4f1a\u82b1\u8d39\u4e00\u4e9b\u65f6\u95f4": 472, "\u4e3a\u4ec0\u4e48\u8f7d\u56fe\u65f6\u62a5\u627e\u4e0d\u5230\u6587\u4ef6\u7684\u9519\u8bef": 472, "\u8fd9\u901a\u5e38\u53d1\u751f\u5728\u4ee5\u96c6\u7fa4\u65b9\u5f0f\u90e8\u7f72\u8fd0\u884c": 472, "\u6570\u636e\u6587\u4ef6\u5fc5\u987b\u8981\u5bf9": 472, "\u53ef\u89c1": 472, "\u4f60\u4e5f\u8bb8\u9700\u8981\u6302\u8f7d\u78c1\u76d8\u6216\u8005\u4f7f\u7528\u4e91\u5b58\u50a8\u63d0\u4f9b\u5546\u7684\u670d\u52a1": 472, "\u5982\u679c\u4f60\u7684\u96c6\u7fa4\u662f\u4f7f\u7528": 472, "\u90e8\u7f72\u7684": 472, "\u4f60\u5e94\u8be5\u9700\u8981\u8bbe\u7f6e": 472, "\u6765\u628a\u672c\u673a\u76ee\u5f55\u6302\u8f7d\u5230": 472, "\u865a\u62df\u7684": 472, "\u6709\u4ec0\u4e48\u533a\u522b": 472, "\u5982\u4f55\u8bbe\u7f6e": 472, "\u5bb9\u5668\u5206\u914d\u7684\u5185\u5b58": 472, "\u5b83\u5b58\u50a8\u7531": 472, "\u7ba1\u7406\u7684\u539f\u59cb\u6570\u636e\u7684": 472, "\u7684\u5143\u4fe1\u606f": 472, "\u4f8b\u5982\u5f62\u72b6": 472, "\u540d\u79f0\u7b49": 472, "\u7531\u4e8e\u5143\u6570\u636e\u6bd4\u6570\u636e\u96c6\u5c0f\u5f97\u591a": 472, "\u56e0\u6b64\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u9ed8\u8ba4\u914d\u7f6e\u5c31\u8db3\u591f\u4e86": 472, "\u5b83\u76f8\u5f53\u4e8e": 472, "\u5b58\u50a8\u6570\u636e\u96c6\u7684\u5185\u5b58": 472, "\u6211\u4eec\u53d1\u73b0\u5c06\u5176\u8bbe\u7f6e\u4e3a\u6570\u636e\u96c6\u5728\u78c1\u76d8\u4e0a\u7684\u5927\u5c0f\u7684": 472, "\u500d\u901a\u5e38\u662f\u4e00\u4e2a\u5408\u7406\u7684\u503c": 472, "\u5bb9\u5668\u7684\u5185\u5b58\u5927\u5c0f": 472, "\u4e00\u822c\u5c06\u5176\u8bbe\u7f6e\u4e3a": 472, "\u7684\u540c\u6837\u5927\u5c0f": 472, "\u5bfc\u81f4\u5728": 472, "\u73af\u5883\u4e0b\u5b89\u88c5": 472, "\u5931\u8d25\u7684\u539f\u56e0\u53ef\u80fd\u6709\u54ea\u4e9b": 472, "\u7f16\u8bd1": 472, "\u5931\u8d25": 472, "\u6765\u5c1d\u8bd5\u4f7f\u7528\u7cfb\u7edf\u5b89\u88c5\u7684": 472, "\u8be6\u60c5\u53ef\u53c2\u8003": 472, "\u4f60\u53ef\u4ee5\u6839\u636e": 472, "\u6b64\u6559\u7a0b": 472, "\u6765\u6e90\u7801\u7f16\u8bd1": 472, "\u6216\u5c1d\u8bd5\u901a\u8fc7": 472, "\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898": 472, "\u4e0a\u5206\u914d": 472, "\u65f6\u9047\u5230\u4e86": 472, "\u95ee\u9898": 472, "\u5982\u4f55\u89e3\u51b3": 472, "\u901a\u5e38\u5f53\u4f7f\u7528": 472, "\u7684\u65b9\u5f0f\u5b89\u88c5": 472, "\u4f1a\u62a5": 472, "\u9519\u8bef": [472, 474], "\u6211\u4eec\u901a\u8fc7": 472, "\u6765\u67e5\u770b\u65e5\u5fd7": 472, "\u6b64\u65f6\u65e5\u5fd7\u663e\u793a": 472, "\u901a\u5e38\u6709\u4e24\u79cd\u89e3\u51b3\u65b9\u5f0f": 472, "\u5feb\u901f\u7684\u65b9\u5f0f\u662f\u5728\u6240\u6709\u76f8\u5173\u7684": 472, "\u76ee\u5f55\u4e0a\u4f7f\u7528": 472, "\u4f46\u4e0d\u5efa\u8bae\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528": 472, "\u4f18\u96c5\u7684\u65b9\u6cd5\u662f\u9996\u5148\u521b\u5efa": 472, "\u7528\u6237\u548c\u7528\u6237\u7ec4": 472, "\u7136\u540e\u5c06": 472, "\u4e0a\u7684\u8bbf\u95ee\u6743\u9650\u6388\u4e88\u76f8\u5173nfs\u76ee\u5f55": 472, "\u4e3a\u4ec0\u4e48\u5728": 472, "\u96c6\u7fa4\u4e0a\u62c9\u8d77": 472, "\u5b9e\u4f8b\u65f6": 472, "\u4ea7\u751f\u8d85\u65f6\u5f02\u5e38": 472, "\u5927\u591a\u6570\u60c5\u51b5\u4e0b": 472, "\u8d85\u65f6\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u5728": 472, "\u96c6\u7fa4\u62c9\u8d77": 472, "\u5b9e\u4f8b\u65f6\u9700\u8981\u4e0b\u8f7d\u5bf9\u5e94\u955c\u50cf": 472, "\u8fd9\u4e00\u6b65\u901a\u5e38\u9700\u8981\u51e0\u5206\u949f\u7684\u65f6\u95f4": 472, "\u9002\u5f53\u7684\u589e\u52a0\u8d85\u65f6\u7b49\u5f85\u65f6\u95f4\u6765\u89e3\u51b3\u8be5\u95ee\u9898": 472, "\u542f\u52a8graphscope\u65f6\u7531\u4e8e\u8fde\u63a5v6d": 472, "etcd\u7b49\u7ec4\u4ef6\u5931\u8d25\u800c\u5bfc\u81f4graphscope\u542f\u52a8\u5931\u8d25": 472, "\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u4f60\u6240\u4f7f\u7528\u7684\u673a\u5668": 472, "\u6216\u5bb9\u5668": 472, "\u6240\u5728\u7684\u4f01\u4e1a\u7f51\u7edc\u5185\u8981\u6c42\u76f8\u5e94\u7684\u4ee3\u7406\u8bbe\u7f6e\u65b9\u53ef\u6b63\u5e38\u4f7f\u7528\u7f51\u7edc": 472, "\u8fd9\u4e9b\u4ee3\u7406\u8bbe\u7f6e\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9519\u8bef\u7684\u5730\u5740\u89e3\u6790\u4ee5\u53ca\u7aef\u53e3\u5360\u7528": 472, "\u4e3a\u907f\u514d\u7c7b\u4f3c\u60c5\u51b5": 472, "\u53ef\u5728\u73af\u5883\u53d8\u91cf": 472, "\u4e2d\u52a0\u5165graphscope\u76f8\u5173\u7684\u5730\u5740": 472, "\u4ee5\u53ca": [472, 479], "\u8bf7\u6ce8\u610f": 472, "no_proxy\u7684\u524d\u540e\u7f00\u89c4\u5219": 472, "stackexchang": 472, "23452": 472, "\u5176\u4ed6\u95ee\u9898": 472, "\u60a8\u53ef\u4ee5\u63d0\u4ea4": 472, "\u63d0\u51fa\u4f60\u7684\u95ee\u9898": 472, "\u540c\u65f6": [472, 477], "\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528": 472, "\u505a\u4e3a\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": 473, "\u53ef\u4ee5\u5904\u7406\u56fe\u7684\u4ea4\u4e92\u5f0f\u67e5\u8be2": 473, "\u56fe\u5206\u6790\u548c\u56fe\u5b66\u4e60\u4efb\u52a1": 473, "\u5e76\u4e14\u5177\u6709\u6613\u4e8e\u4f7f\u7528": 473, "\u9ad8\u6027\u80fd\u548c\u826f\u597d\u7684\u53ef\u6269\u5c55\u6027\u7b49\u7279\u70b9": 473, "\u672c\u7ae0\u8282\u5c06\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u4ecb\u7ecd\u5982\u4f55\u57fa\u4e8e": 473, "\u4f7f\u7528": [473, 475, 478, 479, 480], "\u5e76\u5e2e\u52a9\u6570\u636e\u79d1\u5b66\u5bb6\u6765\u9ad8\u6548\u7684\u5206\u6790\u5927\u56fe": 473, "\u6570\u636e\u96c6": 473, "\u662f\u7531\u5fae\u8f6f\u5b66\u672f\u5173\u7cfb\u56fe": 473, "\u7684\u5b50\u96c6\u7ec4\u6210\u7684\u5f02\u6784\u56fe\u7f51\u7edc": 473, "\u8be5\u56fe\u4e2d\u5305\u542b4\u79cd\u7c7b\u578b\u7684\u5b9e\u4f53": 473, "\u5373\u8bba\u6587": 473, "\u4f5c\u8005": 473, "\u673a\u6784\u548c\u7814\u7a76\u9886\u57df": 473, "\u4ee5\u53ca\u8fde\u63a5\u4e24\u4e2a\u5b9e\u4f53\u7684\u56db\u79cd\u7c7b\u578b\u7684\u6709\u5411\u5173\u7cfb\u8fb9": 473, "\u6211\u4eec\u9700\u8981\u5904\u7406\u7684\u4efb\u52a1\u662f": 473, "\u7ed9\u51fa\u5f02\u6784\u7684": 473, "\u6570\u636e": 473, "\u5728\u8be5\u56fe\u4e0a\u9884\u6d4b\u6bcf\u7bc7\u8bba\u6587\u7684\u7c7b\u522b": 473, "\u8fd9\u662f\u4e00\u4e2a\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 473, "\u8be5\u4efb\u52a1\u53ef\u4ee5\u5f52\u7c7b\u5728\u5404\u4e2a\u9886\u57df": 473, "\u5404\u4e2a\u65b9\u5411\u6216\u7814\u7a76\u5c0f\u7ec4\u7684\u8bba\u6587": 473, "\u901a\u8fc7\u5bf9\u8bba\u6587\u5c5e\u6027\u548c\u5f15\u7528\u56fe\u4e0a\u7684\u7ed3\u6784\u4fe1\u606f\u5bf9\u8bba\u6587\u8fdb\u884c\u5206\u7c7b": 473, "\u5728\u8be5\u6570\u636e\u4e2d": 473, "\u6bcf\u4e2a\u8bba\u6587\u8282\u70b9\u5305\u542b\u4e86\u4e00\u4e2a\u4ece\u8bba\u6587\u6807\u9898": 473, "\u6458\u8981\u62bd\u53d6\u7684": 473, "\u7ef4": 473, "\u5411\u91cf\u4f5c\u4e3a\u8868\u5f81": 473, "\u8be5\u8868\u5f81\u662f\u7ecf\u8fc7": 473, "\u9884\u8bad\u7ec3\u63d0\u524d\u83b7\u53d6\u7684": 473, "\u800c\u7ed3\u6784\u4fe1\u606f\u662f\u5728\u4ee5\u4e0b\u8fc7\u7a0b\u4e2d\u5373\u65f6\u8ba1\u7b97\u7684": 473, "\u4e0a\u56fe\u8868\u793a\u4e86\u7528\u6237\u901a\u8fc7": 473, "\u5ba2\u6237\u7aef\u8c03\u7528": 473, "\u89e3\u51b3\u8be5\u95ee\u9898\u7684\u5de5\u4f5c\u6d41\u7a0b": 473, "\u6b65\u9aa4": 473, "\u5efa\u7acb\u4e00\u4e2a\u4f1a\u8bdd": 473, "\u521b\u5efa\u4e00\u4e2a\u5de5\u4f5c\u7a7a\u95f4": 473, "\u5b9a\u4e49\u548c\u8f7d\u5165\u56fe": 473, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u56fe": 473, "\u6267\u884c\u56fe\u7b97\u6cd5\u505a\u56fe\u5206\u6790": 473, "\u6267\u884c\u57fa\u4e8e\u56fe\u6570\u636e\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1": 473, "\u7684\u7b2c\u4e00\u6b65": 473, "\u6211\u4eec\u9700\u8981\u5728": 473, "\u4e2d\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 473, "\u5bf9\u4e8e": [473, 476], "\u521b\u5efa\u4f1a\u8bdd\u9700\u8981\u4f7f\u7528": 473, "\u670d\u52a1\u7c7b\u578b": 473, "\u9ed8\u8ba4\u662f": 473, "\u53e6\u5916": [473, 479], "\u6ce8\u610f": [473, 476], "\u662f": 473, "\u4e3b\u673a\u4e0a\u7684\u8def\u5f84": 473, "\u5f53\u5728": 473, "\u4e0a\u4f7f\u7528": 473, "\u9700\u8981\u9996\u5148\u5c06\u6b64\u8def\u5f84\u52a0\u5165\u5230": 473, "\u7684\u5171\u4eab\u76ee\u5f55\u4e2d": 473, "\u901a\u5e38\u4e3a": 473, "\u66f4\u8be6\u7ec6\u7684\u6307\u5f15\u8bf7\u53c2\u770b": 473, "\u7684\u5efa\u7acb\u8fc7\u7a0b\u4e2d": 473, "\u9996\u9009\u4f1a\u5728\u80cc\u540e\u5c1d\u8bd5\u62c9\u8d77\u4e00\u4e2a": 473, "\u4f5c\u4e3a\u540e\u7aef\u5f15\u64ce\u7684\u5165\u53e3": 473, "\u8be5": 473, "\u8d1f\u8d23\u7ba1\u7406\u8be5\u6b21\u4f1a\u8bdd\u7684": 473, "\u6240\u6709\u8d44\u6e90": 473, "\u4ee5\u53ca\u4ea4\u4e92\u5f0f\u67e5\u8be2": 473, "\u56fe\u5b66\u4e60\u5f15\u64ce\u7684\u751f\u547d\u5468\u671f": 473, "\u540e\u7eed\u62c9\u8d77\u7684\u5176\u4ed6\u6bcf\u4e2a": 473, "\u90fd\u6709\u4e00\u4e2a": 473, "\u5b9e\u4f8b\u4f5c\u4e3a\u5185\u5b58\u7ba1\u7406\u5c42": 473, "\u5206\u5e03\u5f0f\u7684\u7ba1\u7406\u56fe\u6570\u636e": 473, "\u8f7d\u56fe": [473, 474, 475], "\u4ee5\u5c5e\u6027\u56fe": 473, "\u5efa\u6a21\u56fe\u6570\u636e": [473, 479], "\u5c5e\u6027\u56fe\u4e2d": 473, "\u70b9\u548c\u8fb9\u90fd\u6709\u4e00\u4e2a\u6807\u7b7e": 473, "\u4e0d\u540c\u7684\u6807\u7b7e\u6709\u4e0d\u540c\u7684\u5c5e\u6027": 473, "\u4e0b\u56fe\u5c55\u793a\u4e86\u5c5e\u6027\u56fe\u7684\u6a21\u578b": 473, "\u8be5\u56fe\u5177\u6709\u56db\u79cd\u9876\u70b9": 473, "\u5206\u522b\u6807\u8bb0\u4e3a": 473, "\u8bba\u6587": 473, "\u673a\u6784": 473, "\u7814\u7a76\u9886\u57df": 473, "\u6709\u56db\u79cd\u8fde\u63a5\u5b83\u4eec\u7684\u8fb9": 473, "\u6bcf\u79cd\u8fb9\u90fd\u6709\u4e00\u4e2a\u6807\u7b7e": 473, "\u5e76\u4e14\u8fb9\u7684\u4e24\u7aef\u9876\u70b9\u7684\u6807\u7b7e\u4e5f\u662f\u786e\u5b9a\u7684": 473, "\u5f15\u7528": 473, "\u8fd9\u79cd\u6807\u7b7e\u7684\u8fb9\u8fde\u63a5\u4e24\u4e2a": 473, "\u9876\u70b9": 473, "\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f\u6807\u8bb0\u4e3a": 473, "\u64b0\u5199": 473, "\u7684\u8fb9": [473, 479], "\u5b83\u8981\u6c42\u8be5\u8d77\u59cb\u70b9\u7684\u6807\u8bb0\u4e3a": 473, "\u7ec8\u6b62\u70b9\u7684\u6807\u8bb0\u4e3a": 473, "\u6240\u6709\u7684\u9876\u70b9": 473, "\u548c\u8fb9\u90fd\u53ef\u4ee5\u5177\u6709\u5c5e\u6027": 473, "\u9876\u70b9\u5177\u6709\u8bf8\u5982\u53d1\u5e03\u5e74\u4efd": 473, "\u4e3b\u9898\u6807\u7b7e\u7b49\u5c5e\u6027": 473, "\u8981\u5c06\u6b64\u56fe\u52a0\u8f7d\u5230": 473, "\u53ef\u4ee5\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4e0e": 473, "\u6570\u636e\u6587\u4ef6": 473, "\u7ed3\u5408\u4f7f\u7528": 473, "\u8bf7\u4e0b\u8f7d\u6570\u636e\u5e76\u5c06\u5176\u89e3\u538b\u7f29\u5230\u672c\u5730\u7684\u6302\u8f7d\u76ee\u5f55": 473, "\u5728\u672c\u4f8b\u4e2d\u4e3a": 473, "author_affiliated_with_institut": 473, "paper_has_topic_field_of_studi": 473, "hastop": 473, "paper_cites_pap": 473, "author_writes_pap": 473, "\u4e5f\u53ef\u901a\u8fc7\u6211\u4eec\u63d0\u4f9b\u7684\u5185\u7f6e\u6570\u636e\u96c6\u51fd\u6570\u5e2e\u52a9\u5b8c\u6210\u8f7d\u56fe\u6d41\u7a0b": 473, "\u8fd9\u91cc\u7684": 473, "\u5df2\u7ecf\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u5b58\u50a8\u5728": 473, "\u4e2d\u7684\u56fe": 473, "\u56fe\u6570\u636e\u5206\u5e03\u5728\u8fd9\u4e2a\u4f1a\u8bdd\u80cc\u540e\u62c9\u8d77\u7684": 473, "\u66f4\u591a\u7ec6\u8282\u8bf7\u67e5\u770b": 473, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u5141\u8bb8\u7528\u6237\u4ee5": 473, "\u63a2\u7d22\u6027": 473, "\u65b9\u5f0f\u6765\u63a2\u7d22": 473, "\u67e5\u770b\u548c\u663e\u793a\u56fe\u6570\u636e": 473, "\u4ee5\u65b9\u4fbf\u7684\u5b9a\u4f4d\u548c\u6d1e\u5bdf\u7279\u5b9a\u7684\u6df1\u5165\u4fe1\u606f": 473, "\u91c7\u7528\u79f0\u4e3a": 473, "\u7684\u9ad8\u7ea7\u8bed\u8a00\u8fdb\u884c\u56fe\u904d\u5386": 473, "\u5e76\u63d0\u4f9b\u5927\u89c4\u6a21\u7684\u9ad8\u6548\u6267\u884c": 473, "\u5728\u6b64\u793a\u4f8b\u4e2d": 473, "\u6211\u4eec\u4f7f\u7528\u56fe\u904d\u5386\u6765\u67e5\u770b\u4e24\u4f4d\u7ed9\u5b9a\u4f5c\u8005\u5171\u540c\u64b0\u5199\u7684\u8bba\u6587\u6570\u91cf": 473, "\u4e3a\u4e86\u7b80\u5316\u67e5\u8be2": 473, "\u6211\u4eec\u5047\u8bbe\u4f5c\u8005\u53ef\u4ee5\u5206\u522b\u7531id": 473, "\u552f\u4e00\u6807\u8bc6": 473, "\u56fe\u5206\u6790\u662f\u5728\u771f\u5b9e\u573a\u666f\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u4e00\u7c7b\u56fe\u8ba1\u7b97": 473, "\u4e8b\u5b9e\u8bc1\u660e": 473, "\u8bb8\u591a\u7b97\u6cd5": 473, "\u4f8b\u5982\u793e\u533a\u68c0\u6d4b": 473, "\u8def\u5f84\u548c\u8fde\u63a5\u6027": 473, "\u96c6\u4e2d\u6027": 473, "\u5728\u5404\u79cd\u4e1a\u52a1\u4e2d\u90fd\u975e\u5e38\u6709\u6548": 473, "\u5185\u5efa\u4e86\u4e00\u7ec4\u9884\u7f6e\u5e38\u7528\u7b97\u6cd5": 473, "\u65b9\u4fbf\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u5206\u6790\u56fe\u6570\u636e": 473, "\u4e0b\u9762\u6211\u4eec\u9996\u5148\u901a\u8fc7\u5728\u7279\u5b9a\u5468\u671f\u5185\u4ece\u5168\u56fe\u4e2d\u63d0\u53d6\u8bba\u6587": 473, "\u80cc\u540e\u57fa\u4e8e": 473, "\u6765\u5bfc\u51fa\u4e00\u4e2a\u5b50\u56fe": 473, "\u7136\u540e\u8fd0\u884c": 473, "\u5206\u89e3\u548c\u4e09\u89d2\u5f62\u8ba1\u6570\u4ee5\u751f\u6210\u6bcf\u4e2a\u8bba\u6587\u8282\u70b9\u7684\u7ed3\u6784\u7279\u5f81": 473, "\u7531\u4e8e\u8bb8\u591a\u7b97\u6cd5\u53ef\u80fd\u4ec5\u9002\u7528\u4e8e\u540c\u6784\u56fe": 473, "\u53ea\u6709\u4e00\u7c7b\u70b9\u548c\u4e00\u7c7b\u8fb9\u800c\u4e0d\u533a\u5206\u6807\u7b7e": 473, "\u8981\u5728\u5c5e\u6027\u56fe\u4e0a\u4f7f\u7528\u8fd9\u4e9b\u7b97\u6cd5": 473, "\u6211\u4eec\u9996\u5148\u9700\u8981\u5c06\u5176\u6295\u5f71\u5230\u4e00\u4e2a\u7b80\u5355\u7684\u540c\u6784\u56fe\u4e2d": 473, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5728": 473, "\u4e2d\u7f16\u5199\u81ea\u5df1\u7684\u7b97\u6cd5": 473, "\u5f53\u524d": 473, "\u652f\u6301\u7528\u6237\u4ee5": 473, "\u6a21\u578b\u548c": 473, "\u6a21\u578b\u81ea\u5b9a\u4e49\u56fe\u7b97\u6cd5": 473, "\u7ed3\u5408\u4e86\u56fe\u7ed3\u6784\u548c\u673a\u5668\u5b66\u4e60\u7684\u4f18\u52bf": 473, "\u53ef\u4ee5\u5c06\u56fe\u4e2d\u7684\u7ed3\u6784\u4fe1\u606f\u548c\u5c5e\u6027\u4fe1\u606f\u538b\u7f29\u4e3a\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7684\u4f4e\u7ef4\u5d4c\u5165\u5411\u91cf": 473, "\u8fd9\u4e9b\u5d4c\u5165\u548c\u8868\u5f81\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8f93\u5165\u5230\u4e0b\u6e38\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u4e2d": 473, "\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d": 473, "\u6211\u4eec\u8bad\u7ec3\u4e86": 473, "\u6a21\u578b": 473, "\u5c06\u8282\u70b9": 473, "\u5206\u7c7b\u4e3a349\u4e2a\u7c7b\u522b": 473, "\u6bcf\u4e2a\u7c7b\u522b\u4ee3\u8868\u4e00\u4e2a\u51fa\u5904": 473, "\u4f8b\u5982\u9884\u5370\u672c\u548c\u4f1a\u8bae": 473, "\u4e3a\u6b64": 473, "\u63a5\u7740\u4e0a\u4e00\u6b65": 473, "\u9996\u5148\u9700\u8981\u542f\u52a8\u5b66\u4e60\u5f15\u64ce\u5e76\u6784\u5efa\u4e00\u4e2a\u5177\u6709\u7279\u5f81\u7684\u6570\u636e\u56fe": 473, "\u7136\u540e\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u8bad\u7ec3\u8fc7\u7a0b\u5e76\u6267\u884c": 473, "train_gcn": 473, "\u6700\u540e": [473, 474, 477], "\u5f53\u6211\u4eec\u5b8c\u6210\u6240\u6709\u7684\u8ba1\u7b97\u8fc7\u7a0b\u540e": 473, "\u5173\u95ed\u5f53\u524d\u7684\u4f1a\u8bdd": 473, "\u8be5\u6b65\u9aa4\u4f1a\u544a\u77e5\u80cc\u540e\u7684": 473, "\u548c\u5f15\u64ce": 473, "\u91ca\u653e\u5f53\u524d\u6240\u6709\u7684\u8d44\u6e90": 473, "\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e00\u7cfb\u5217\u53ef\u4ee5\u5728\u56fe\u4e0a\u8fdb\u884c\u65b0\u589e": 474, "\u6295\u5f71\u7684\u65b9\u6cd5": 474, "\u4ee5\u53ca\u5982\u4f55\u5c06\u4e00\u4e2a\u590d\u6742\u7684\u56fe\u8f6c\u6362\u4e3a\u53ef\u4ee5\u9002\u914d\u666e\u901a\u7b97\u6cd5\u5e94\u7528\u7684\u65b9\u6cd5": 474, "\u6211\u4eec\u5c55\u793a\u5982\u4f55\u5c06\u7b97\u6cd5\u5f97\u5230\u7684\u7ed3\u679c\u52a0\u56de\u5230\u56fe\u4e2d\u53bb": 474, "\u5177\u4f53\u800c\u8a00": 474, "\u56fe": 474, "\u63d0\u4f9b\u4e86\u4e24\u4e2a\u589e\u52a0\u6807\u7b7e\u7684\u51fd\u6570": 474, "\u548c\u4e00\u4e2a\u6295\u5f71\u7684\u51fd\u6570": 474, "\u6211\u4eec\u5df2\u7ecf\u5728": 474, "\u4e00\u8282\u89c1\u5230\u8fc7": 474, "\u8fd9\u4e24\u4e2a\u51fd\u6570": 474, "\u5f53\u65f6\u6211\u4eec\u7528\u5b83\u6765\u6784\u5efa\u4e00\u5f20\u56fe": 474, "\u8fdb\u4e00\u6b65\u7684": 474, "\u5f53\u56fe\u6784\u5efa\u597d\u5e76\u8f7d\u5165\u4e86": 474, "\u4e2d\u4e4b\u540e": 474, "\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u7528\u5176\u589e\u52a0\u66f4\u591a\u7684\u6807\u7b7e": 474, "\u5f53\u7136\u8fd9\u4e00\u6b65\u5e76\u4e0d\u4f1a\u5728\u539f\u56fe\u4e0a\u4fee\u6539": 474, "\u800c\u662f\u4f1a\u8fd4\u56de\u57fa\u4e8e\u539f\u56fe\u4e4b\u4e0a": 474, "\u589e\u52a0\u4e86\u65b0\u7684\u6807\u7b7e\u7684\u65b0\u56fe": 474, "\u5c5e\u6027\u56fe\u4e3a\u4f8b": 474, "\u6211\u4eec\u73b0\u5728\u8f7d\u5165\u5176\u4e2d\u4e00\u90e8\u5206\u6807\u7b7e": 474, "\u4f5c\u4e3a\u63a5\u4e0b\u6765\u4e00\u7cfb\u5217\u8f6c\u6362\u64cd\u4f5c\u7684\u8d77\u59cb\u56fe": 474, "pathlib": 474, "\u5230\u8fd9\u91cc": 474, "\u6211\u4eec\u5df2\u7ecf\u8f7d\u5165\u4e86\u4e00\u5f20\u56fe": 474, "\u63a5\u4e0b\u6765\u6211\u4eec\u5728\u8fd9\u5f20\u56fe\u4e0a\u518d\u6dfb\u52a0\u51e0\u4e2a\u6807\u7b7e": 474, "graph1": 474, "graph2": 474, "\u53ef\u4ee5\u770b\u5230\u6bcf\u6b21": 474, "\u90fd\u4f1a\u4ea7\u751f\u4e00\u5f20\u65b0\u7684\u56fe": 474, "\u5728\u5e95\u5c42": 474, "\u4ed6\u4eec\u5171\u6709\u7684\u90e8\u5206\u4f1a\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58": 474, "\u6240\u4ee5\u5e76\u4e0d\u4f1a\u5c06\u539f\u56fe\u7684\u6570\u636e\u590d\u5236\u4e00\u4efd": 474, "\u5728\u67d0\u4e9b\u573a\u666f\u4e0b": 474, "\u6211\u4eec\u9700\u8981\u5c06\u4ece\u4e00\u5f20\u590d\u6742\u7684\u56fe\u63d0\u53d6\u51fa\u4e00\u4e2a\u5b50\u56fe": 474, "\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u501f\u52a9": 474, "\u6765\u5b8c\u6210": 474, "\u5305\u542b\u4e24\u4e2a\u53c2\u6570": 474, "\u5176\u503c\u4e3a\u4e00\u4e2a\u5b57\u5178": 474, "\u5b57\u5178\u7684\u952e\u662f\u6807\u7b7e\u540d": 474, "\u503c\u662f\u8981\u53d6\u7684\u5c5e\u6027\u7684\u5217\u8868": 474, "\u503c\u53ef\u4ee5\u4e3a": 474, "\u4ee3\u8868\u9009\u62e9\u6240\u6709\u7684\u5c5e\u6027": 474, "\u7684\u8fd4\u56de\u503c\u4e5f\u662f\u4e00\u4e2a\u5c5e\u6027\u56fe": 474, "\u5e76\u4e14\u53ef\u4ee5\u88ab\u8fdb\u4e00\u6b65": 474, "\u4ee5\u4e0b\u662f\u51e0\u4e2a\u4f8b\u5b50": 474, "\u5305\u542b\u4e00\u4e2a\u70b9\u6807\u7b7e": 474, "\u548c\u4e00\u4e2a\u8fb9\u6807\u7b7e": 474, "\u4ee5\u53ca\u6240\u9009\u62e9\u7684\u5c5e\u6027": 474, "sub_graph2": 474, "\u73b0\u5728\u70b9\u4e0a\u6ca1\u6709\u5c5e\u6027": 474, "\u8fb9\u4e0a\u6709\u4e00\u4e2a\u5c5e\u6027": 474, "\u5f53\u6267\u884c\u4e00\u4e2a\u4ec5\u53ef\u4ee5\u8dd1\u5728\u7b80\u5355\u56fe\u4e0a\u7684\u7b97\u6cd5\u65f6": 474, "\u5176\u4f1a\u9ed8\u8ba4\u5c06\u5176\u53c2\u6570\u4e2d\u7684\u5c5e\u6027\u56fe\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 474, "\u5982\u679c\u4e0d\u80fd\u8fdb\u884c\u8fd9\u79cd\u8f6c\u6362": 474, "\u5373\u591a\u4e8e\u4e00\u4e2a\u70b9\u6807\u7b7e\u548c\u4e00\u4e2a\u8fb9\u6807\u7b7e": 474, "\u6216\u591a\u4e8e\u4e00\u4e2a\u5c5e\u6027": 474, "\u90a3\u4e48\u5c31\u4f1a\u62a5\u9519": 474, "\u8f6c\u6362\u4e0d\u5408\u6cd5": 474, "\u591a\u4e8e\u4e00\u4e2a\u70b9": 474, "\u8fb9\u6807\u7b7e": 474, "\u591a\u4e8e\u4e00\u4e2a\u5c5e\u6027": 474, "\u4e0a\u4e00\u6b65\u7b97\u6cd5\u7684\u8fd0\u884c\u7ed3\u679c\u53ef\u4ee5\u88ab\u52a0\u5165\u4e00\u5f20\u56fe\u4e2d": 474, "\u4f5c\u4e3a\u70b9\u7684\u4e00\u4e2a\u5c5e\u6027": 474, "\u4e0d\u4ec5\u53ef\u4ee5\u52a0\u5165\u8fd0\u7b97\u7ed3\u679c\u5230\u76f4\u63a5\u88ab\u67e5\u8be2\u7684\u56fe\u4e0a": 474, "\u8fd8\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u67e5\u8be2\u7ed3\u679c\u52a0\u5230\u88ab": 474, "\u800c\u5f97\u5230\u88ab\u67e5\u8be2\u7684\u56fe\u4e0a": 474, "\u53ea\u8981\u88ab\u52a0\u5165\u5c5e\u6027\u7684\u70b9\u6807\u7b7e\u76f8\u540c": 474, "\u662f\u963f\u91cc\u5df4\u5df4\u8fbe\u6469\u9662\u667a\u80fd\u8ba1\u7b97\u5b9e\u9a8c\u5ba4\u7814\u53d1\u5e76\u5f00\u6e90\u7684\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u5e73\u53f0": 475, "\u4f9d\u6258\u4e8e\u963f\u91cc\u6d77\u91cf\u6570\u636e\u548c\u4e30\u5bcc\u573a\u666f": 475, "\u4e0e\u8fbe\u6469\u9662\u7684\u9ad8\u6c34\u5e73\u7814\u7a76": 475, "\u81f4\u529b\u4e8e\u9488\u5bf9\u5b9e\u9645\u751f\u4ea7\u573a\u666f\u4e2d\u56fe\u8ba1\u7b97\u7684\u6311\u6218": 475, "\u63d0\u4f9b\u4e00\u7ad9\u5f0f\u9ad8\u6548\u7684\u89e3\u51b3\u65b9\u6848": 475, "\u63d0\u4f9b\u4e86": 475, "\u80fd\u5341\u5206\u65b9\u4fbf\u7684\u5bf9\u63a5\u4e0a\u4e0b\u6e38\u5de5\u4f5c\u6d41": 475, "\u5177\u6709\u4e00\u7ad9\u5f0f": 475, "\u5f00\u53d1\u4fbf\u6377": 475, "\u6027\u80fd\u6781\u81f4\u7b49\u7279\u70b9": 475, "\u5b83\u6574\u5408\u4e86\u667a\u80fd\u8ba1\u7b97\u5b9e\u9a8c\u5ba4\u591a\u4e2a\u91cd\u8981\u7684\u521b\u65b0\u6027\u6280\u672f": 475, "\u5305\u62ec": [475, 478], "\u652f\u6301\u4e86\u56fe\u5206\u6790": 475, "\u56fe\u7684\u4ea4\u4e92\u5f0f\u67e5\u8be2\u548c\u56fe\u5b66\u4e60": 475, "\u5176\u4e2d\u6838\u5fc3\u4f18\u52bf\u5305\u62ec\u5728\u4e1a\u754c\u9996\u6b21\u652f\u6301\u4e86": 475, "\u5206\u5e03\u5f0f\u7f16\u8bd1\u4f18\u5316": 475, "\u652f\u6301\u4e86\u7b97\u6cd5\u7684\u81ea\u52a8\u5e76\u884c\u5316": 475, "\u63d0\u4f9b\u4e86\u4f01\u4e1a\u7ea7\u573a\u666f\u4e0b\u7684\u6781\u81f4\u6027\u80fd\u7b49": 475, "\u5728\u963f\u91cc\u5df4\u5df4\u5185\u5916\u90e8\u5e94\u7528\u4e2d": 475, "\u5df2\u7ecf\u8bc1\u660e\u5728\u591a\u4e2a\u5173\u952e\u4e92\u8054\u7f51\u9886\u57df": 475, "\u5982\u98ce\u63a7": 475, "\u7535\u5546\u63a8\u8350": 475, "\u5e7f\u544a": 475, "\u7f51\u7edc\u5b89\u5168": [475, 478], "\u77e5\u8bc6\u56fe\u8c31\u7b49": 475, "\u5b9e\u73b0\u4e86\u91cd\u8981\u7684\u4e1a\u52a1\u65b0\u4ef7\u503c": 475, "\u6574\u5408\u4e86\u8fbe\u6469\u9662\u7684\u591a\u9879\u5b66\u672f\u7814\u7a76\u6210\u679c": 475, "\u5176\u4e2d\u7684\u6838\u5fc3\u6280\u672f\u66fe\u83b7\u5f97\u6570\u636e\u5e93\u9886\u57df\u9876\u7ea7\u5b66\u672f\u4f1a\u8bae": 475, "\u6700\u4f73\u8bba\u6587\u5956": 475, "vldb2017": 475, "\u6700\u4f73\u6f14\u793a\u5956": 475, "vldb2020": 475, "\u6700\u4f73\u8bba\u6587\u5956\u4e9a\u519b": 475, "\u4e16\u754c\u4eba\u5de5\u667a\u80fd\u521b\u65b0\u5927\u8d5bsail\u5956\u7b49": 475, "\u7684\u4ea4\u4e92\u67e5\u8be2\u5f15\u64ce\u7684\u8bba\u6587\u5df2\u88ab": 475, "2021\u5f55\u7528": 475, "\u8fd8\u6709\u5176\u5b83\u56f4\u7ed5": 475, "\u7684\u5341\u591a\u9879\u7814\u7a76\u6210\u679c\u53d1\u8868\u5728\u9886\u57df\u9876\u7ea7\u7684\u5b66\u672f\u4f1a\u8bae\u6216\u671f\u520a\u4e0a": 475, "kdd\u7b49": 475, "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": 475, "\u57fa\u4e8e": [475, 480], "\u793a\u4f8b": 475, "\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 475, "\u521b\u5efa\u4f1a\u8bdd": 475, "\u4ea4\u4e92\u5f0f\u67e5\u8be2": 475, "\u56fe\u5206\u6790": 475, "\u56fe\u795e\u7ecf\u7f51\u7edc": 475, "\u5173\u95ed\u4f1a\u8bdd": 475, "\u4f7f\u7528helm\u90e8\u7f72graphscop": 475, "\u5728aw": 475, "\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": 475, "\u672c\u5730\u90e8\u7f72graphscop": 475, "\u5165\u95e8\u6559\u7a0b": 475, "\u8bba\u6587\u5f15\u7528\u5173\u7cfb\u7f51\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [475, 480], "\u4f7f\u7528\u517c\u5bb9": [475, 480], "\u8fdb\u884c\u56fe\u64cd\u4f5c": [475, 480], "\u7528": [475, 477, 480], "\u50cf": [475, 480], "\u4e00\u6837\u8fdb\u884c\u56fe\u5206\u6790": [475, 480], "\u8f7d\u5165\u56fe\u6570\u636e": [475, 480], "\u5185\u7f6e\u7684\u56fe\u5206\u6790\u7b97\u6cd5": [475, 480], "\u7f16\u5199\u81ea\u5b9a\u4e49\u56fe\u5206\u6790\u7b97\u6cd5": [475, 480], "\u4f7f\u7528\u67e5\u8be2\u8bed\u8a00": [475, 480], "\u8fdb\u884c\u4ea4\u4e92\u5f0f\u67e5\u8be2": [475, 480], "\u8fdb\u884c\u65e0\u76d1\u7763\u56fe\u5b66\u4e60": [475, 480], "bipartitegraphsag": [475, 480], "\u7684\u4e8c\u90e8\u56fe\u65e0\u76d1\u7763\u5b66\u4e60": [475, 480], "\u8fdb\u884c\u6709\u76d1\u7763\u56fe\u5b66\u4e60": [475, 480], "\u73af\u5883\u518d\u63a2\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [475, 480], "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": 475, "\u624b\u52a8\u914d\u7f6e\u56fe": 475, "\u9ad8\u7ea7\u7528\u6cd5": 475, "\u4ece": [475, 477], "\u4e2d\u8f7d\u56fe": 475, "\u7684\u53d8\u79cd": 475, "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": 475, "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": 475, "\u6295\u5f71": 475, "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 475, "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": 475, "\u5185\u7f6e\u7b97\u6cd5": 475, "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": 475, "\u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": 475, "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528": 475, "\u4e2d\u7684\u51fd\u6570": 475, "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": 475, "\u8fd0\u884cjava\u7f16\u5199\u7684\u7b97\u6cd5": 475, "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": 475, "\u5229\u7528python": 475, "\u8fde\u63a5graphscop": 475, "\u5229\u7528java": 475, "\u5f00\u53d1\u63a7\u5236\u53f0": 475, "gremlin\u7f16\u7a0b\u5165\u95e8": 475, "gremlin\u517c\u5bb9\u6027": 475, "\u5bf9\u6bd4tinkerpop": 475, "\u56fe\u5b66\u4e60\u6a21\u578b": 475, "\u81ea\u5b9a\u4e49\u7b97\u6cd5": 475, "\u5e38\u89c1\u95ee\u9898": 475, "\u5f00\u53d1\u8005\u6307\u5357": 475, "\u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5": 475, "\u6784\u5efa": 475, "\u4ee3\u7801\u98ce\u683c": 475, "\u76ee\u524d\u652f\u6301\u7684\u5e73\u53f0\u5982\u4e0b": 476, "monterei": 476, "\u7a0b\u5e8f\u5305": 476, "\u7684\u5f62\u5f0f\u53d1\u5e03": 476, "\u53ef\u76f4\u63a5\u901a\u8fc7": 476, "\u9700\u8981\u6ee1\u8db3": 476, "\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u672c\u6587\u6863\u7684\u4ee5\u4e0b\u6b65\u9aa4\u90e8\u7f72\u4e00\u4e2a\u672c\u5730": 476, "\u5e76\u52a0\u8f7d\u9884\u7f16\u8bd1\u597d\u7684\u955c\u50cf": 476, "\u73af\u5883\u4e0b\u8fd0\u884c": 476, "\u9996\u5148\u9700\u8981\u9884\u5148\u5b89\u88c5\u4ee5\u4e0b\u4f9d\u8d56": 476, "\u7684\u7528\u6237": 476, "\u53ef\u901a\u8fc7\u5b98\u65b9\u6587\u6863\u6765\u5b89\u88c5\u4e0a\u8ff0\u4f9d\u8d56": 476, "\u5e76\u5728": 476, "\u4e2d\u5f00\u542f": 476, "\u529f\u80fd": 476, "\u53d1\u884c\u7248\u7528\u6237": 476, "\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528": 476, "\u90e8\u7f72\u4e00\u4e2a\u672c\u5730\u7684": 476, "\u7684\u5b89\u88c5\u548c\u90e8\u7f72\u53ef\u4ee5\u53c2\u8003\u5b98\u7f51\u7684": 476, "\u60a8\u4e5f\u53ef\u4ee5\u5728": 476, "\u4e0a\u5b89\u88c5": 476, "wsl2": 476, "\u6765\u6a21\u62df": 476, "\u73af\u5883": [476, 480], "\u63a5\u4e0b\u6765": [476, 477, 478], "\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7": 476, "graphscope\u7684\u4ea4\u4e92\u67e5\u8be2\u5f15\u64ce": 477, "\u7b80\u79f0gie": 477, "\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf": 477, "\u5b83\u4e3a\u4e0d\u540c\u7ecf\u9a8c\u7684\u7528\u6237\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6613\u7528\u7684\u4ea4\u4e92\u5f0f\u73af\u5883": 477, "\u652f\u6301\u6d77\u91cf\u590d\u6742\u56fe\u6570\u636e\u4e0a\u7684": 477, "\u5b9e\u65f6\u5206\u6790\u4e0e\u4ea4\u4e92\u63a2\u7d22": 477, "\u8be5\u5f15\u64ce\u652f\u6301": 477, "\u8bed\u8a00\u8868\u8fbe\u7684\u4ea4\u4e92\u56fe\u67e5\u8be2": 477, "\u5e76\u63d0\u4f9b\u4e86\u81ea\u52a8\u5316\u548c\u7528\u6237\u900f\u660e\u7684\u5206\u5e03\u5f0f\u5e76\u884c\u6267\u884c": 477, "\u662f\u57fa\u4e8egremlin\u8bed\u8a00\u5f00\u53d1\u4ea4\u4e92\u5f0f\u56fe\u5e94\u7528\u7684\u4e00\u4e2a\u5f00\u6e90\u6846\u67b6\u548c\u4e8b\u5b9e\u6807\u51c6": 477, "gie\u901a\u8fc7tinkerpop\u63d0\u4f9b\u7684": 477, "\u63a5\u53e3": [477, 478], "\u5b9e\u73b0\u4e86\u4e0etinkerpop\u751f\u6001\u65e0\u7f1d\u96c6\u6210": 477, "\u4ece\u800c\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528\u8bf8\u5982": 477, "\u7684\u5f00\u53d1\u5de5\u5177\u6216\u901a\u8fc7java\u548cpython\u7b49\u591a\u79cd\u8bed\u8a00\u63a5\u53e3\u7f16\u5199\u5e94\u7528\u903b\u8f91": 477, "\u5982\u4e0b\u6240\u793a": 477, "\u7528\u6237\u53ef\u4ee5\u5f88\u7b80\u5355\u7684\u901a\u8fc7python\u8fde\u4e0a\u4e00\u4e2a\u8f7d\u5165graphscope\u7cfb\u7edf\u7684\u56fe\u5e76\u53d1\u8d77gremlin\u67e5\u8be2": 477, "\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4ea4\u4e92\u4f1a\u8bdd": 477, "\u8f7d\u5165ldbc\u793a\u4f8b\u56fe\u6570\u636e": 477, "\u968f\u540e\u8fd4\u56de\u4e00\u4e2agremlin\u67e5\u8be2\u63d0\u4ea4\u5165\u53e3": 477, "\u4e0b\u9762\u4e24\u53e5gremlin\u793a\u4f8b\u67e5\u8be2\u5206\u522b\u8ba1\u7b97\u56fe\u4e2d\u9876\u70b9\u548c\u8fb9\u7684\u603b\u6570": 477, "\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684": 477, "\u5bf9\u8c61\u4e8b\u5b9e\u4e0a\u662fpython\u7c7b": 477, "\u7684\u4e00\u4e2a\u5b9e\u4f8b": 477, "\u800c\u8fd9\u4e00\u7c7b\u5c01\u88c5\u4e86\u7528python\u5b9e\u73b0\u7684\u5b8c\u6574gremlin\u5ba2\u6237\u7aef\u7c7b\u5e93": 477, "\u6bcf\u4e00\u4e2a\u8f7d\u5165graphscope\u7684\u56fe\u90fd\u5305\u542b\u4e00\u4e2agremlin\u67e5\u8be2\u63d0\u4ea4\u5165\u53e3": 477, "\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u6837\u83b7\u5f97\u5177\u4f53\u7684\u8bbf\u95ee\u5730\u5740": 477, "\u4e0a\u9762\u7684\u8bed\u53e5\u4f1a\u4ea7\u751f\u5982\u4e0b": 477, "\u683c\u5f0f": 477, "\u7684\u8f93\u51fa": 477, "\u6709\u4e86\u8fd9\u4e00url\u4fe1\u606f": 477, "\u7528\u6237\u4e5f\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528gremlin": 477, "python\u8bbf\u95ee\u56fe\u6570\u636e": 477, "\u5177\u4f53\u53ef\u4ee5\u53c2\u8003": 477, "\u5b98\u65b9\u6587\u6863": 477, "tinkerpop\u540c\u65f6\u652f\u6301java\u8bed\u8a00\u6309\u7c7b\u4f3c\u65b9\u5f0f\u8bbf\u95ee": 477, "\u8be6\u89c1gremlin": 477, "java\u7684": 477, "\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0egraphscope\u5b58\u50a8\u7684\u56fe\u6570\u636e\u8fdb\u884c\u4ea4\u4e92\u7684\u63a7\u5236\u53f0": 477, "\u4e5f\u53eb\u505arepl\u73af\u5883": 477, "\u4e0b\u9762\u63cf\u8ff0\u5982\u4f55\u5229\u7528\u4e0a\u6587\u83b7\u5f97\u7684url": 477, "\u5b89\u88c5\u548c\u914d\u7f6egremlin": 477, "console\u4ee5\u8fde\u63a5graphscope\u7684\u6b65\u9aa4": 477, "\u5b89\u88c5gremlin": 477, "console\u4f9d\u8d56\u7684java\u8fd0\u884c\u65f6\u73af\u5883": 477, "\u7248\u672c\u9700\u8981\u6ee1\u8db3": 477, "\u4e0b\u8f7d\u9002\u5f53\u7248\u672c\u7684gremlin": 477, "\u89e3\u538b\u7f29\u4e0b\u8f7d\u7684\u6587\u4ef6": 477, "\u8fdb\u5165\u89e3\u538b\u7f29\u7684\u76ee\u5f55": 477, "\u5b50\u76ee\u5f55\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a": 477, "\u7684\u6587\u672c\u6587\u4ef6\u4ee5\u914d\u7f6eurl": 477, "\u5177\u4f53\u5185\u5bb9\u5982\u4e0b\u6240\u793a": 477, "\u5176\u4e2d\u7684": 477, "\u9700\u8981\u5206\u522b\u66ff\u6362\u4e3a\u4ecegraphscope\u4f1a\u8bdd\u5f97\u5230\u7684url\u4e2d\u5bf9\u5e94\u7684\u4e3b\u673a\u540d": 477, "\u6216ip": 477, "\u548c\u7aef\u53e3": 477, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u542f\u52a8gremlin": 477, "\u63d0\u793a\u7b26\u4e0b": 477, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u8fde\u63a5\u5230\u5bf9\u5e94\u7684graphscope\u4f1a\u8bdd": 477, "\u7b2c\u4e8c\u6761\u547d\u4ee4\u5207\u6362\u5230\u8fdc\u7a0b\u6a21\u5f0f": 477, "\u4ece\u800c\u63a5\u4e0b\u6765\u8f93\u5165\u7684\u6240\u6709gremlin\u67e5\u8be2\u90fd\u88ab\u81ea\u52a8\u4f20\u8f93\u5230": 477, "\u8fdc\u7a0b": 477, "graphscope\u6267\u884c": 477, "\u73b0\u5728\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e9b\u7b80\u5355\u7684gremlin\u67e5\u8be2\u4e86": 477, "\u5f53\u4f60\u5b8c\u6210\u4ea4\u4e92": 477, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u53ef\u4ee5\u9000\u51fagremlin": 477, "gie\u4ee5\u5fe0\u5b9e\u4fdd\u7559gremlin\u7f16\u7a0b\u6a21\u578b\u4e3a\u8bbe\u8ba1\u76ee\u6807": 477, "\u4ece\u800c\u8ba9\u5df2\u6709\u7684\u5e94\u7528\u53ea\u9700\u6700\u5c0f\u5316\u7684\u4fee\u6539\u5c31\u53ef\u4ee5\u6269\u5c55\u5230\u5927\u89c4\u6a21\u8ba1\u7b97\u96c6\u7fa4": 477, "\u5728\u6b64\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2agremlin\u7684\u603b\u4f53\u4ecb\u7ecd": 477, "\u7279\u522b\u662f\u5176\u4e2d\u5305\u542b\u7684\u56fe\u6570\u636e\u6a21\u578b\u548c\u67e5\u8be2\u8bed\u8a00\u7b49\u5173\u952e\u6982\u5ff5": 477, "\u66f4\u8be6\u7ec6\u548c\u5b8c\u6574\u7684\u4ecb\u7ecd": 477, "gremlin\u5141\u8bb8\u7528\u6237\u5728\u5c5e\u6027\u56fe\u6a21\u578b\u4e0a\u5b9a\u4e49\u7279\u8bbe": 477, "hoc": 477, "\u904d\u5386\u67e5\u8be2": 477, "\u4e00\u4e2a\u5c5e\u6027\u56fe\u662f\u4e00\u4e2a\u6709\u5411\u56fe": 477, "\u5176\u4e2d\u7684\u9876\u70b9\u548c\u8fb9\u53ef\u4ee5\u62e5\u6709\u4e00\u7ec4\u5c5e\u6027": 477, "\u56fe\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61": 477, "\u70b9\u6216\u8fb9": 477, "\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6": 477, "\u548c\u4e00\u4e2a\u7c7b\u522b\u540d\u79f0": 477, "\u6307\u5b9a\u5176\u7c7b\u578b\u6216\u89d2\u8272": 477, "\u6bcf\u4e2a\u5c5e\u6027\u662f\u4e00\u4e2a\u5305\u542b\u5c5e\u6027\u540d\u548c\u5c5e\u6027\u503c\u7684": 477, "\u952e": 477, "\u503c": 477, "\u5bf9": 477, "\u5176\u6240\u5c5e\u5bf9\u8c61\u7684": 477, "\u52a0\u4e0a\u5c5e\u6027\u540d\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u5c5e\u6027\u503c": 477, "\u4e0a\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u5c5e\u6027\u56fe\u6a21\u578b\u793a\u4f8b": 477, "\u5b83\u5305\u542b": 477, "\u7528\u6237": 477, "\u5546\u54c1": 477, "\u5730\u5740": 477, "\u4e09\u7c7b\u70b9": 477, "\u5b83\u4eec\u901a\u8fc7": 477, "\u8d2d\u4e70": 477, "\u9012\u9001": 477, "belongs_to": 477, "\u5c5e\u4e8e": 477, "home_of": 477, "\u5bb6\u5ead\u5730\u5740": 477, "\u56db\u7c7b\u8fb9\u76f8\u4e92\u5173\u8054": 477, "\u56fe\u4e2d\u865a\u7ebf\u5c55\u793a\u7684\u4e00\u6761": 477, "\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684": 477, "\u8def\u5f841": 477, "\u4ee3\u8868\u4e86\u4e00\u4e2a\u7528\u6237": 477, "\u4e70\u5bb6": 477, "tom": 477, "\u8d2d\u4e70\u4e86\u4e00\u4e2a\u5356\u5bb6": 477, "jack": 477, "\u63d0\u4f9b\u7684\u6807\u4ef7": 477, "\u7684\u5546\u54c1": 477, "gift": 477, "\u4e00\u4e2agremlin\u67e5\u8be2\u6216\u56fe\u904d\u5386\u7684\u6267\u884c": 477, "\u53ef\u4ee5\u7528\u4e00\u7ec4": 477, "\u904d\u5386\u5668": 477, "\u6807\u8bc6": 477, "\u5b83\u4eec\u4f9d\u636egremlin\u67e5\u8be2\u63d0\u4f9b\u7684\u7528\u6237\u6307\u4ee4\u5728\u8f93\u5165\u56fe\u4e2d\u6e38\u8d70": 477, "\u6700\u7ec8\u6240\u6709\u505c\u6b62\u7684\u904d\u5386\u5668\u96c6\u5408": 477, "\u5305\u542b\u5b83\u4eec\u7684\u4f4d\u7f6e": 477, "\u4ee3\u8868\u4e86\u67e5\u8be2\u7684\u7ed3\u679c": 477, "\u4e00\u4e2a\u904d\u5386\u5668\u662fgremlin\u5f15\u64ce\u5904\u7406\u7684\u6700\u5c0f\u6570\u636e\u5355\u5143": 477, "\u6bcf\u4e2a\u904d\u5386\u5668\u90fd\u7ef4\u62a4\u5b83\u5bf9\u5e94\u7684\u56fe\u4e2d\u7684\u5f53\u524d\u4f4d\u7f6e": 477, "\u53ef\u4ee5\u662f\u88ab\u8bbf\u95ee\u7684\u70b9": 477, "\u8fb9\u6216\u5c5e\u6027": 477, "\u53ef\u9009\u7684\u5b83\u4e5f\u53ef\u4ee5\u5305\u542b\u8d70\u8fc7\u7684\u5b8c\u6574\u8def\u5f84\u5386\u53f2\u751a\u81f3\u5e94\u7528\u72b6\u6001": 477, "gremlin\u8bed\u8a00\u4e30\u5bcc\u7075\u6d3b\u7684\u8868\u8fbe\u80fd\u529b\u4e3b\u8981\u6765\u81ea\u4e8e\u5b83\u5bf9": 477, "\u5d4c\u5957\u904d\u5386": 477, "\u7684\u652f\u6301": 477, "\u5b83\u5141\u8bb8\u4e00\u4e2a": 477, "\u5b50": 477, "\u67e5\u8be2\u6216\u904d\u5386\u88ab\u5305\u542b\u5728\u53e6\u4e00\u4e2a\u64cd\u4f5c\u4e2d": 477, "\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u8c03\u7528\u7684\u51fd\u6570\u88ab\u5305\u88f9\u64cd\u4f5c\u7528\u4e8e\u5904\u7406\u5176\u6bcf\u4e00\u4e2a\u8f93\u5165": 477, "\u51fd\u6570\u7684\u58f0\u660e\u548c\u4f5c\u7528\u90fd\u7531\u5305\u88f9\u64cd\u4f5c\u7684\u8bed\u4e49\u51b3\u5b9a": 477, "\u8fc7\u6ee4": 477, "\u64cd\u4f5c\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u5d4c\u5957\u67e5\u8be2": 477, "\u4f5c\u4e3a\u8fc7\u6ee4\u6761\u4ef6\u8c13\u8bcd": 477, "\u800c": 477, "\u6620\u5c04": 477, "\u6392\u5e8f": 477, "\u64cd\u4f5c\u5404\u81ea\u53ef\u4ee5\u901a\u8fc7\u5d4c\u5957\u67e5\u8be2\u8bb2\u6bcf\u4e00\u4e2a\u8f93\u5165\u5355\u72ec\u6620\u5c04\u5230\u4ece\u5b83\u5f00\u59cb\u7684\u5b50\u904d\u5386\u5f97\u5230\u7684\u7ed3\u679c": 477, "\u6216\u4f9d\u636e\u7ed3\u679c\u503c\u4f5c\u4e3a\u6392\u5e8f\u4f9d\u636e": 477, "\u5d4c\u5957\u904d\u5386\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u5e94\u7528\u662f\u8868\u8fbe\u5faa\u73af": 477, "\u5728gremlin\u4e2d\u901a\u8fc7": 477, "\u5faa\u73af": 477, "\u64cd\u4f5c\u548c\u968f\u540e\u7684": 477, "\u7ec8\u6b62\u6761\u4ef6": 477, "\u8868\u8fbe": 477, "\u64cd\u4f5c\u5305\u542b\u4e00\u4e2a\u5d4c\u5957\u904d\u5386\u4f5c\u4e3a\u5faa\u73af\u4f53": 477, "\u6bcf\u4e00\u4e2a\u8f93\u5165\u90fd\u4f1a\u91cd\u590d\u9001\u5165\u8fd9\u4e00\u5b50\u67e5\u8be2": 477, "\u76f4\u5230\u7ec8\u6b62\u6761\u4ef6\u6ee1\u8db3": 477, "\u6761\u4ef6\u7ec8\u6b62": 477, "\u64cd\u4f5c\u7c7b\u4f3c": 477, "\u53ef\u4ee5\u8868\u8fbe\u4e00\u4e2a\u6761\u4ef6\u8c13\u8bcd": 477, "\u5b83\u88ab\u72ec\u7acb\u5e94\u7528\u4e8e\u5faa\u73af\u4f53\u7684\u6bcf\u4e00\u4e2a\u8f93\u51fa\u904d\u5386\u5668": 477, "\u6ee1\u8db3\u6761\u4ef6\u7684\u904d\u5386\u5668\u5c31\u4f1a\u79bb\u5f00\u5faa\u73af": 477, "\u53e6\u4e00\u4e2a\u5e38\u7528\u7684": 477, "\u8fed\u4ee3\u8f6e\u6b21\u7ec8\u6b62": 477, "\u64cd\u4f5c\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u6574\u578b\u5e38\u91cf": 477, "\u8868\u8fbe\u56fa\u5b9a\u8fed\u4ee3\u8f6e\u6b21\u540e\u7ec8\u6b62\u5faa\u73af": 477, "\u4e0b\u9762\u5c55\u793a\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684gremlin\u793a\u4f8b": 477, "\u5b83\u5c1d\u8bd5\u4ece\u4e00\u4e2a\u7ed9\u5b9a\u8d26\u6237": 477, "\u70b9\u5f00\u59cb\u627e\u5230\u957f\u5ea6\u4e3a": 477, "\u7684\u6709\u5411\u73af\u8def": 477, "\u9996\u5148": [477, 479], "\u8f93\u5165\u56fe\u64cd\u4f5c": 477, "\u5305\u542b\u4e00\u4e2a": 477, "\u8868\u8fbe\u7684\u7b80\u5355\u8fc7\u6ee4": 477, "\u8fd4\u56de\u56fe\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684": 477, "\u70b9": 477, "\u5373\u552f\u4e00\u6807\u8bc6\u4e3a": 477, "\u7684\u70b9": 477, "\u7d27\u968f\u5176\u540e\u7684": 477, "\u64cd\u4f5c\u662f\u4e00\u4e2a": 477, "\u4fee\u9970\u7b26": 477, "\u5b83\u4e0d\u6539\u53d8\u8f93\u5165\u904d\u5386\u5668\u96c6\u5408": 477, "\u4f46\u5bf9\u5176\u4e2d\u6bcf\u4e00\u4e2a\u904d\u5386\u5668\u7684\u5f53\u524d\u4f4d\u7f6e": 477, "\u6253\u4e0a\u4e00\u4e2a\u6709\u540d\u6807\u7b7e": 477, "\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u7684": 477, "\u4ece\u800c\u4eca\u540e\u53ef\u4ee5\u5f15\u7528": 477, "\u67e5\u8be2\u6cbf\u7740": 477, "\u7c7b\u578b\u7684\u51fa\u8fb9\u5faa\u73af\u6e38\u8d70": 477, "\u6b21": 477, "\u8f93\u51fahops\u5728": 477, "\u8303\u56f4\u5185\u7684\u90bb\u70b9": 477, "\u4e14\u6bcf\u4e00\u6b21\u90fd\u8fc7\u6ee4\u6216\u8df3\u8fc7\u8def\u5f84\u4e2d\u7684\u91cd\u590d\u70b9": 477, "\u901a\u8fc7\u5728": 477, "\u5185\u914d\u7f6e": 477, "\u9009\u9879\u5b9e\u73b0": 477, "\u64cd\u4f5c\u68c0\u67e5\u6b64\u65f6\u904d\u5386\u8def\u5f84\u7684\u4e0b\u4e00\u8df3\u662f\u5426\u53ef\u4ee5\u56de\u5230\u8d77\u70b9": 477, "\u6307\u4ee3": 477, "\u4ece\u800c\u5f62\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a": 477, "\u7684\u73af": 477, "\u5bf9\u4e8e\u68c0\u6d4b\u5230\u7684\u73af": 477, "\u67e5\u8be2\u8fd8\u901a\u8fc7": 477, "\u64cd\u4f5c\u5c55\u793a\u6bcf\u4e2a\u904d\u5386\u5668\u7684\u5b8c\u6210\u8def\u5f84\u4fe1\u606f": 477, "\u64cd\u4f5c\u7c7b\u4f3csql\u4e2d\u7684top": 477, "\u5b83\u8868\u8fbe\u4e86\u67e5\u8be2\u7ed3\u679c\u4ec5\u9700\u8981\u5305\u542b\u4e00\u4e2a\u8fd9\u6837\u7684\u8def\u5f84": 477, "\u5982\u679c\u6709\u7684\u8bdd": 477, "gie\u652f\u6301apach": 477, "tinkerpop\u5b9a\u4e49\u7684\u5c5e\u6027\u56fe\u6a21\u578b\u548cgremlin\u904d\u5386\u67e5\u8be2": 477, "\u4e14\u5b9e\u73b0\u4e86\u4e00\u4e2a\u4e0etinkerpop": 477, "3\u548c3": 477, "4\u7248\u672c\u517c\u5bb9\u7684": 477, "\u670d\u52a1\u63a5\u53e3": 477, "\u9664\u6b64\u4e4b\u5916": 477, "\u6211\u4eec\u6269\u5c55\u4e86\u4e00\u4e9b\u8bed\u6cd5\u7cd6\u6765\u8fdb\u4e00\u6b65\u5f15\u5165\u4e00\u4e9b\u7b80\u6d01\u660e\u4e86\u7684expression\u8868\u793a": 477, "\u4e0b\u9762\u6211\u4eec\u5217\u51fa\u5f53\u524d\u5b9e\u73b0\u548capach": 477, "tinkerpop\u89c4\u8303\u7684\u4e3b\u8981\u5dee\u4e00\u70b9": 477, "\u5176\u4e2d\u4e00\u4e9b\u5dee\u5f02\u4f1a\u6709\u673a\u4f1a\u6d88\u9664": 477, "\u53e6\u4e00\u4e9b\u662f\u76ee\u524dgraphscope\u5b9a\u4f4d\u7684\u573a\u666f\u5dee\u5f02\u9020\u6210\u7684\u4e0d\u540c\u8bbe\u8ba1\u9009\u62e9": 477, "\u76ee\u524d\u7684": 477, "\u6280\u672f\u9884\u89c8\u7248\u5229\u7528\u4e86": 477, "\u9879\u76ee\u63d0\u4f9b\u7684\u5206\u5e03\u5f0f\u5185\u5b58\u5b58\u50a8\u4f5c\u4e3a\u8f93\u5165\u56fe": 477, "\u5b83\u652f\u6301\u4e00\u6b21\u8f7d\u5165": 477, "\u4e0d\u53ef\u4fee\u6539": 477, "\u7684\u56fe\u6a21\u578b\u6570\u636e": 477, "\u548c\u56fe\u5206\u7247\u5b58\u50a8\u5728\u5206\u5e03\u5f0f\u96c6\u7fa4": 477, "\u5f53\u524d\u8bbe\u8ba1\u6709\u4e0b\u9762\u7684\u4e00\u4e9b\u9650\u5236": 477, "\u7ea6\u675f": 477, "\u6bcf\u4e2a\u56fe\u7684\u6570\u636e\u9700\u8981\u6ee1\u8db3\u4e8b\u5148\u5b9a\u4e49\u7684schema": 477, "\u5305\u62ec\u70b9": 477, "\u8fb9\u7684\u7c7b\u578b\u540d\u79f0": 477, "\u548c\u5c5e\u6027\u540d\u53ca\u503c\u7c7b\u578b": 477, "\u4e3b\u952e\u7ea6\u675f": 477, "\u6bcf\u4e2a\u9876\u70b9\u7c7b\u578b\u9700\u8981\u5305\u542b\u4e00\u4e2a\u7528\u6237\u53ef\u81ea\u5b9a\u4e49\u7684\u4e3b\u952e": 477, "\u540c\u65f6\u7cfb\u7edf\u4f1a\u4e3a\u6bcf\u4e2a\u70b9\u548c\u8fb9\u5bf9\u8c61": 477, "\u81ea\u52a8\u5206\u914d\u4ea7\u751f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u552f\u4e00\u6807\u8bc6": 477, "\u5bf9\u4e8e\u70b9\u6765\u8bf4": 477, "id\u7f16\u7801\u4e86\u7c7b\u578b": 477, "\u548c\u7528\u6237\u81ea\u5b9a\u4e49\u4e3b\u952e\u4fe1\u606f": 477, "\u6bcf\u4e2a\u70b9\u6216\u8fb9\u7684\u5c5e\u6027": 477, "\u53ef\u4ee5\u5305\u542b\u4e0b\u5217\u7c7b\u578b\u7684\u5c5e\u6027\u503c": 477, "\u56e0\u4e3a\u7cfb\u7edf\u7684\u5168\u5206\u5e03\u5f0f\u53ef\u6269\u5c55\u67b6\u6784": 477, "\u5f53\u524d\u5b9a\u4f4d\u7684\u573a\u666f\u548c\u5b9e\u73b0\u4e0d\u652f\u6301\u4e0b\u5217\u529f\u80fd": 477, "\u56fe\u4fee\u6539\u64cd\u4f5c": 477, "lambda\u548cgroovy\u8868\u8fbe\u5f0f\u6216\u81ea\u5b9a\u4e49\u51fd\u6570": 477, "\u7b49\u8868\u8fbe\u5f0f\u6216java\u8c03\u7528\u7b49\u7b49": 477, "\u5b9a\u5236gremlin\u56fe\u904d\u5386\u7b56\u7565": 477, "\u5373\u67e5\u8be2\u4f18\u5316\u7531graphscope\u7cfb\u7edf\u81ea\u52a8\u5b8c\u6210": 477, "\u4e8b\u52a1": 477, "\u4e8c\u7ea7\u7d22\u5f15\u76ee\u524d\u5c1a\u672a\u652f\u6301": 477, "\u7528\u6237\u5b9a\u4e49\u7684\u4e3b\u952e\u4f1a\u88ab\u81ea\u52a8\u7d22\u5f15": 477, "\u5f53\u524dgraphscope\u652f\u6301\u4e0b\u5217gremlin\u64cd\u4f5c": 477, "\u548c\u793a\u4f8b\u7528\u6cd5": 477, "\u8f93\u5165\u56fe": 477, "labelnam": 477, "labelname1": 477, "labelname2": 477, "\u901a\u8fc7expression\u5b9e\u73b0\u8fc7\u6ee4": 477, "\u8bed\u6cd5\u7cd6": 477, "\u4ee3\u8868head\u8282\u70b9\u7684age\u5c5e\u6027": 477, "\u4ee3\u8868": 477, "\u8282\u70b9\u7684age\u5c5e\u6027": 477, "head\u8282\u70b9\u7684a\u5c5e\u6027\u662f\u6574\u6570\u6570\u7ec4\u7c7b\u578b": 477, "\u901a\u8fc7expression\u5b9e\u73b0\u4f4d\u8fd0\u7b97": 477, "head\u8282\u70b9\u7684number\u5c5e\u6027\u662f\u6574\u578b": 477, "\u901a\u8fc7expression\u5b9e\u73b0\u7b97\u6570\u8fd0\u7b97": 477, "head\u8282\u70b9\u7684number\u548cage\u5c5e\u6027\u90fd\u662f\u6574\u578b": 477, "\u901a\u8fc7expression\u5b9e\u73b0\u6307\u6570\u8fd0\u7b97": 477, "dedup": 477, "aaa": 477, "otherv": 477, "flatmap": 477, "\u591a\u91cd\u6620\u5c04": 477, "bothv": 477, "\u627e\u5230\u6240\u6709\u4ece": 477, "\u5f00\u59cb\u901a\u8fc7": 477, "\u8fb9\u7c7b\u578b\u5411\u5916\u6269\u5c55": 477, "\u8df3\u7684\u6240\u6709\u7b80\u5355\u8def\u5f84": 477, "\u70b9\u4e0d\u91cd\u590d": 477, "\u5e76\u4e14\u53ea\u4fdd\u5b58path\u7684\u6700\u672b\u7aef\u70b9": 477, "\u8df3\u7684\u6240\u6709\u4efb\u610f\u8def\u5f84": 477, "\u70b9\u53ef\u91cd\u590d": 477, "\u8f93\u51fa\u6240\u6709\u5c5e\u6027": 477, "\u805a\u5408": 477, "groupbi": 477, "groupby\u591a\u4e2akei": 477, "\u5e76\u4e14\u4e3a\u6bcf\u4e2akey\u8bbe\u7f6e\u522b\u540d": 477, "groupby\u591a\u4e2avalu": 477, "\u5e76\u4e14\u4e3a\u6bcf\u4e2avalue\u8bbe\u7f6e\u522b\u540d": 477, "\u5373\u53d6\u524dk\u4e2a\u7ed3\u679c": 477, "graphscope\u6682\u65f6\u4e0d\u652f\u6301\u4e0b\u5217gremlin\u64cd\u4f5c": 477, "\u4f1a\u9010\u6b65\u652f\u6301": 477, "\u53ef\u4ee5\u901a\u8fc7path": 477, "expansion\u8bed\u6cd5\u7cd6\u5b9e\u73b0": 477, "\u57fa\u4e8e\u96c6\u5408\u7684local\u8ba1\u7b97": 477, "\u67e5\u8be2\u8ba1\u5212\u89e3\u91ca": 477, "\u67e5\u8be2\u6267\u884c\u6027\u80fd\u5206\u6790": 477, "\u81ea\u5b9a\u4e49\u72b6\u6001\u8ba1\u7b97": 477, "\u8ba1\u7b97\u5b50\u56fe": 477, "\u76ee\u524d\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5316\u7248\u672c": 477, "\u652f\u6301\u62bd\u53d6\u5b50\u56fe\u5199\u5165vineyard\u5b58\u50a8": 477, "cap": 477, "\u8bbf\u95ee\u81ea\u5b9a\u4e49\u72b6\u6001": 477, "\u4f8b\u5982pagerank\u548cshortestpath": 477, "\u8fd9\u90e8\u5206\u529f\u80fdgraphscope\u901a\u8fc7\u56fe\u5206\u6790\u5f15\u64ce\u548cnetworkx\u517c\u5bb9\u63a5\u53e3\u63d0\u4f9b": 477, "graphscope\u4e2d\u7684\u56fe\u5b66\u4e60\u5f15\u64ce": 478, "\u662f\u9762\u5411\u5927\u89c4\u6a21\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u7814\u53d1\u548c\u5e94\u7528\u800c\u8bbe\u8ba1\u7684\u4e00\u6b3e\u5206\u5e03\u5f0f\u6846\u67b6": 478, "\u5b83\u4ece\u5b9e\u9645\u95ee\u9898\u51fa\u53d1": 478, "\u63d0\u70bc\u548c\u62bd\u8c61\u4e86\u4e00\u5957\u9002\u5408\u4e8e\u5f53\u4e0b\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7684\u7f16\u7a0b\u8303\u5f0f": 478, "\u5e76\u5df2\u7ecf\u6210\u529f\u5e94\u7528\u5728\u963f\u91cc\u5df4\u5df4": 478, "\u5185\u90e8\u7684\u8bf8\u5982\u641c\u7d22\u63a8\u8350": 478, "\u77e5\u8bc6\u56fe\u8c31\u7b49\u4f17\u591a\u573a\u666f": 478, "gl\u6ce8\u91cd\u53ef\u79fb\u690d\u548c\u53ef\u6269\u5c55": 478, "\u5bf9\u4e8e\u5f00\u53d1\u8005\u66f4\u4e3a\u53cb\u597d": 478, "\u4e3a\u4e86\u5e94\u5bf9gnn\u5728\u5de5\u4e1a\u573a\u666f\u4e2d\u7684\u591a\u6837\u6027\u548c\u5feb\u901f\u53d1\u5c55\u7684\u9700\u6c42": 478, "\u57fa\u4e8egl": 478, "\u5f00\u53d1\u8005\u53ef\u4ee5\u5b9e\u73b0\u4e00\u79cdgnn\u7b97\u6cd5": 478, "\u6216\u8005\u9762\u5411\u5b9e\u9645\u573a\u666f\u5b9a\u5236\u5316\u4e00\u79cd\u56fe\u7b97\u5b50": 478, "\u4f8b\u5982\u56fe\u91c7\u6837": 478, "\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u5165\u95e8\u6559\u7a0b\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528": 478, "\u6765\u6784\u5efa\u7528\u6237\u81ea\u5df1\u7684cnn\u6a21\u578b": 478, "\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u5b9e\u73b0\u76ee\u524d\u4e3b\u8981\u6709\u4e24\u79cd\u65b9\u5f0f": 478, "\u7b2c\u4e00\u79cd\u662f\u76f4\u63a5\u4ee5\u5168\u56fe\u4e3a\u8ba1\u7b97\u5bf9\u8c61": 478, "\u539f\u59cb\u7684gcn": 478, "gat\u7b49\u7b97\u6cd5\u90fd\u662f\u8fd9\u79cd\u5b9e\u73b0\u601d\u8def": 478, "\u4e00\u822c\u4f1a\u76f4\u63a5\u7528\u90bb\u63a5\u77e9\u9635\u8fdb\u884c\u8ba1\u7b97": 478, "\u7136\u800c\u8fd9\u79cd\u65b9\u6cd5\u5728\u5927\u89c4\u6a21\u56fe\u4e0a\u4f1a\u6d88\u8017\u5927\u91cf\u5185\u5b58": 478, "\u5bfc\u81f4\u65e0\u6cd5\u9ad8\u6548\u8bad\u7ec3\u751a\u81f3\u65e0\u6cd5\u8bad\u7ec3": 478, "\u7b2c\u4e8c\u79cd\u601d\u8def\u662f\u5c06\u5168\u56fe\u5206\u6210\u82e5\u5e72\u5b50\u56fe": 478, "\u7528\u6df1\u5ea6\u5b66\u4e60\u91cc\u5e38\u7528\u7684\u6279\u6b21\u8bad\u7ec3\u65b9\u6cd5\u8fdb\u884c\u8bad\u7ec3": 478, "\u6bcf\u6b21\u8bad\u7ec3\u4e00\u4e2a\u5b50\u56fe": 478, "\u4ee3\u8868\u65b9\u6cd5\u662fgraphsag": 478, "graphsaint\u7b49": 478, "\u4e3b\u8981\u9762\u5411\u8d85\u5927\u89c4\u6a21\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u5f00\u53d1": 478, "\u5b83\u7531\u5e95\u5c42\u7684\u4e00\u4e2a\u56fe\u5f15\u64ce\u548c\u4e0a\u5c42\u7684": 478, "\u7b97\u6cd5\u6a21\u578b\u6784\u6210": 478, "\u56fe\u5f15\u64ce\u5206\u5e03\u5f0f\u5b58\u50a8\u56fe\u7684\u62d3\u6251\u548c\u5c5e\u6027\u4fe1\u606f\u5e76\u63d0\u4f9b\u9ad8\u6548\u7684\u56fe\u91c7\u6837\u67e5\u8be2": 478, "\u7b97\u6cd5\u6a21\u578b\u901a\u8fc7\u8c03\u7528\u56fe\u91c7\u6837\u548c\u67e5\u8be2\u63a5\u53e3\u83b7\u53d6\u5b50\u56fe\u5e76\u8fdb\u884c\u8ba1\u7b97": 478, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u7edf\u4e00\u7f16\u7a0b\u6846\u67b6": 478, "\u652f\u6301\u5e38\u89c1\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u5f00\u53d1": 478, "\u77e5\u8bc6\u56fe\u8c31\u6a21\u578b": 478, "\u56fe\u5d4c\u5165\u7b97\u6cd5\u7b49": 478, "\u5e76\u4e14\u548c\u4e3b\u6d41\u7684\u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5\u517c\u5bb9": 478, "\u5305\u62ectensorflow": 478, "\u548cpytorch": 478, "\u76ee\u524d\u6211\u4eec\u5b9e\u73b0\u4e86\u57fa\u4e8etensorflow\u7684\u6a21\u578b": 478, "\u57fa\u4e8epytorch\u7684\u6a21\u578b\u6b63\u5728\u5f00\u53d1\u4e2d": 478, "\u91c7\u7528\u91c7\u6837\u5b50\u56fe\u518d\u8ba1\u7b97\u7684\u65b9\u5f0f\u6784\u5efa\u548c\u8bad\u7ec3\u6a21\u578b": 478, "\u6211\u4eec\u9996\u5148\u4ecb\u7ecd\u4e00\u4e0b\u57fa\u672c\u7684\u6570\u636e\u6a21\u578b": 478, "\u662f\u56fe\u5b66\u4e60\u7b97\u6cd5\u7f16\u7a0b\u7684\u57fa\u672c\u6570\u636e\u5bf9\u8c61": 478, "\u5b83\u7531\u4e00\u4e2abatch\u7684\u79cd\u5b50\u70b9\u6216\u8005\u8fb9": 478, "\u79f0\u4e3a": 478, "\u4ee5\u53ca\u4ed6\u4eec\u7684": 478, "\u611f\u53d7\u91ce": 478, "\u591a\u8df3\u90bb\u5c45": 478, "\u7ec4\u6210": 478, "\u7531\u56fe\u91c7\u6837\u548c\u67e5\u8be2\u5230\u7684\u6570\u636e\u7ec4\u6210": 478, "\u6211\u4eec\u5b9e\u73b0": 478, "\u4e86\u5e38\u89c1\u7684\u90bb\u5c45\u91c7\u6837": 478, "\u56fe\u904d\u5386\u548c\u8d1f\u91c7\u6837\u65b9\u6cd5": 478, "\u91c7\u6837\u7684\u6570\u636e\u7ec4\u7ec7\u6210numpy\u683c\u5f0f\u7684": 478, "\u540e\u6839\u636e\u4e0d\u540c\u7684\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce\u8f6c\u6362\u6210\u5bf9\u5e94\u7684tensor\u683c\u5f0f": 478, "\u7136\u540e\u7528": 478, "\u7ba1\u7406": 478, "\u5230": 478, "\u7684\u8f6c\u6362": 478, "\u63d0\u4f9b\u8bad\u7ec3\u6240\u9700\u8981\u7684\u6570\u636e": 478, "\u6240\u6709\u7684\u56fe\u5b66\u4e60\u6a21\u578b\u53ef\u4ee5\u62bd\u8c61\u4e3a\u4f7f\u7528\u7f16\u7801\u5668\u5c06": 478, "\u7f16\u7801\u6210\u6700\u7ec8\u7684\u70b9": 478, "\u8fb9\u6216\u8005\u5b50\u56fe\u7684": 478, "\u5411\u91cf": 478, "\u9996\u5148\u5229\u7528\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801\u539f\u59cb\u7684\u70b9\u548c\u8fb9\u4e0a\u7684\u7279\u5f81": 478, "\u7136\u540e\u5c06\u7279\u5f81\u7f16\u7801\u5668\u7f16\u7801\u540e\u7684": 478, "\u539f\u59cb\u5411\u91cf\u7528\u4e0d\u540c\u7684\u56fe\u7f16\u7801\u5668\u8fdb\u884c\u7f16\u7801": 478, "\u5f97\u5230\u6700\u7ec8\u7684\u8f93\u51fa": 478, "\u5bf9\u4e8e\u5927\u591a\u6570gnn\u6a21\u578b": 478, "\u56fe\u7f16\u7801\u5668": 478, "\u63d0\u4f9b\u4e86\u5982\u4f55\u805a\u5408\u90bb\u5c45\u4fe1\u606f\u5230\u81ea\u8eab\u8282\u70b9\u6216\u8005\u8fb9\u7684\u62bd\u8c61": 478, "\u7528\u4e0d\u540c\u7684\u56fe\u5377\u79ef\u5c42\u5b9e\u73b0": 478, "\u57fa\u4e8e\u4e0a\u9762\u4ecb\u7ecd\u7684\u6570\u636e\u6a21\u578b\u548c\u7f16\u7801\u5668": 478, "\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5feb\u901f\u5730\u5b9e\u73b0\u4e0d\u540c\u7684\u56fe\u5b66\u4e60\u7b97\u6cd5": 478, "\u5728\u63a5\u4e0b\u6765\u4e00\u7ae0\u91cc": 478, "\u6211\u4eec\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u5f00\u53d1\u4e00\u4e2agnn\u6a21\u578b": 478, "\u8fd9\u7bc7\u6587\u6863\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u7528": 478, "\u63d0\u4f9b\u7684\u57fa\u672capi\u914d\u5408\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce": 478, "\u5982tensorflow": 478, "\u6765\u6784\u5efa\u56fe\u5b66\u4e60\u7b97\u6cd5": 478, "\u6211\u4eec\u4ee5\u56fe\u795e\u7ecf\u7f51\u7edc\u91cc\u6700\u6d41\u884c\u7684gcn\u6a21\u578b\u505a\u4e3a\u793a\u4f8b\u6765\u8bf4\u660e": 478, "\u901a\u5e38\u6765\u8bf4": 478, "\u5b9e\u73b0\u4e00\u4e2a\u7b97\u6cd5\u9700\u8981\u4e0b\u9762\u56db\u4e2a\u6b65\u9aa4": 478, "\u6307\u5b9a\u91c7\u6837\u6a21\u5f0f": 478, "\u7528\u56fe\u91c7\u6837": 478, "\u67e5\u8be2\u65b9\u6cd5\u91c7\u6837\u5b50\u56fe\u5e76\u7ec4\u7ec7\u6210": 478, "\u6211\u4eec\u62bd\u8c61\u4e864\u4e2a\u57fa\u672c\u7684\u51fd\u6570": 478, "\u7528\u6765\u904d\u5386\u56fe\u6570\u636e\u4ea7\u751f": 478, "\u4ee5\u8fd9\u4e9b": 478, "\u4e3a\u8f93\u5165\u4ea7\u751f": 478, "\u8bad\u7ec3\u7684\u6b63\u6837\u672c": 478, "\u5bf9\u4e8e\u65e0\u76d1\u7763\u5b66\u4e60": 478, "\u4ea7\u751f\u8d1f\u6837\u672c": 478, "gnns\u9700\u8981\u805a\u5408\u90bb\u5c45\u4fe1\u606f": 478, "\u6211\u4eec\u62bd\u8c61\u4e86": 478, "\u6765\u91c7\u6837\u90bb\u5c45": 478, "\u6700\u540e\u5c06": 478, "\u4ea7\u751f\u7684": 478, "\u4ee5\u53ca\u91c7\u6837\u51fa\u7684\u90bb\u5c45\u7ec4\u6210": 478, "\u6784\u5efa\u56fe\u6570\u636e\u6d41": 478, "\u7b97\u6cd5\u6a21\u578b\u57fa\u4e8e\u7c7b\u4f3ctensorflow\u7684\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce\u6784\u5efa": 478, "\u6240\u4ee5\u91c7\u6837\u51fa\u7684": 478, "\u9700\u8981\u5148\u8f6c\u6362\u6210tensor\u683c\u5f0f": 478, "\u624d\u80fd\u4f7f\u7528": 478, "\u6765\u5c01\u88c5\u8fd9\u4e00\u8f6c\u6362\u8fc7\u7a0b": 478, "\u53ef\u4ee5\u4ea7\u751f\u4e00\u4e2a\u8fed\u4ee3\u5668\u6765\u8fdb\u884c\u6279\u6b21\u8bad\u7ec3": 478, "\u5b9a\u4e49\u7f16\u7801\u5668": 478, "\u7f16\u7801\u5668\u548c\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801": 478, "\u5f97\u5230": 478, "\u540e": 478, "\u6211\u4eec\u9996\u5148\u5c06\u539f\u59cb\u7684\u70b9": 478, "\u8fb9\u7279\u5f81\u7528\u4e00\u4e9b\u5e38\u89c1\u7279\u5f81\u7f16\u7801\u5668\u7f16\u7801\u6210\u539f\u59cb\u5411\u91cf": 478, "\u505a\u4e3agnns\u6a21\u578b\u7684\u7279\u5f81\u8f93\u5165": 478, "\u7136\u540e\u7528\u56fe\u7f16\u7801\u5668\u5904\u7406": 478, "\u5c06\u90bb\u5c45\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u6c47\u805a\u5e76": 478, "\u548c\u81ea\u8eab\u7279\u5f81\u8fdb\u884c\u7ec4\u5408": 478, "\u5f97\u5230\u6700\u540e\u7684\u70b9\u6216\u8005\u8fb9\u7684\u5411\u91cf": 478, "\u7f16\u5199\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": 478, "\u9009\u62e9\u9002\u5f53\u7684\u635f\u5931\u51fd\u6570": 478, "\u5e76\u7f16\u5199\u8bad\u7ec3\u8fc7\u7a0b": 478, "\u5185\u7f6e\u4e86\u4e00\u4e9b\u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570\u548c\u4f18\u5316\u5668": 478, "\u5e76\u5bf9\u8bad\u7ec3\u8fc7\u7a0b\u8fdb\u884c\u4e86\u5c01\u88c5": 478, "\u540c\u65f6\u652f\u6301\u5355\u673a\u548c\u5206\u5e03\u5f0f\u8bad\u7ec3": 478, "\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u635f\u5931\u51fd\u6570": 478, "\u4f18\u5316\u5668\u548c\u8bad\u7ec3\u8fc7\u7a0b": 478, "\u4e0b\u9762\u6211\u4eec\u6309\u7167\u4e0a\u9762\u4ecb\u7ecd\u76844\u4e2a\u6b65\u9aa4\u6765\u4ecb\u7ecd\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2agcn\u6a21\u578b": 478, "\u6211\u4eec\u4f7f\u7528cora\u6570\u636e\u96c6\u4ee5\u70b9\u5206\u7c7b\u4efb\u52a1\u505a\u4e3a\u793a\u4f8b": 478, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u636e\u8f6c\u6362\u811a\u672c": 478, "\u6765": 478, "\u5c06\u539f\u59cbcora\u8f6c\u6362\u6210": 478, "\u9700\u8981\u7684\u683c\u5f0f": 478, "\u8fd0\u884c\u5b8c\u8fd9\u4e2a\u811a\u672c\u540e\u4f60\u53ef\u4ee5\u5f97\u5230\u4e0b\u97625\u4e2a\u6587\u4ef6": 478, "\u5206\u522b\u662f\u70b9\u8868": 478, "\u8fb9\u8868\u4ee5\u53ca\u7528\u6765\u533a\u5206\u8bad\u7ec3": 478, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u7684\u70b9\u8868": 478, "\u7136\u540e\u53ef\u4ee5\u7528\u4e0b\u9762\u4ee3\u7801\u6765\u6784\u5efa\u56fe": 478, "\u540e\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u5c06\u56fe\u52a0\u8f7d\u8fdb\u5185\u5b58": 478, "gcn\u6a21\u578b\u7ee7\u627f\u81ea\u57fa\u672c\u7684\u5b66\u4e60\u6a21\u578b\u7c7b": 478, "\u53ea\u9700\u8981\u91cd\u5199\u57fa\u7c7b\u7684\u91c7\u6837": 478, "\u6a21\u578b\u6784\u5efa\u7b49\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b8c\u6210gcn\u7684\u6784\u5efa": 478, "\u524d\u4e24\u4e2a\u51fd\u6570\u7528\u6765\u91c7\u6837\u79cd\u5b50\u8282\u70b9\u548c\u6b63\u6837\u672c": 478, "\u91c7\u6837\u90bb\u5c45\u5e76\u7ec4\u7ec7": 478, "\u56de\u4e00\u8df3\u90bb\u5c45": 478, "\u56e0\u6b64\u4e0a\u9762\u4ee3\u7801\u662f\u91c7\u6837\u4e8c\u8df3\u90bb\u5c45": 478, "\u8fd9\u91cc\u53ef\u4ee5\u9009\u62e9\u4e0d\u540c\u7684\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5": 478, "\u5bf9\u4e8e\u539f\u59cbgcn\u6765\u8bf4\u56e0\u4e3a\u8981\u83b7\u5f97\u6bcf\u4e2a\u70b9\u7684\u6240\u6709\u90bb\u5c45": 478, "\u56e0\u6b64\u9009\u62e9": 478, "\u91c7\u6837\u5b8c\u540e\u5c06\u7ed3\u679c\u7ec4\u7ec7": 478, "\u6210": 478, "\u8fd4\u56de": 478, "\u51fd\u6570\u91cc\u6211\u4eec\u4f7f\u7528\u5c01\u88c5\u7684": 478, "\u6765\u628a": 478, "\u8f6c\u6362\u6210\u5bf9\u5e94\u7684": 478, "\u5305\u542b\u4e00\u4e2a\u6570\u636e\u6d41\u8fed\u4ee3\u5668\u548c\u82e5\u5e72": 478, "\u4f60\u53ef\u4ee5\u4ece": 478, "\u83b7\u53d6\u548c\u524d\u9762": 478, "\u5bf9\u5e94\u7684": 478, "\u9996\u5148\u4f7f\u7528\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801\u539f\u59cb\u7279\u5f81": 478, "\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528": 478, "\u5373\u8fd4\u56de\u81ea\u8eab\u5373\u53ef": 478, "\u56e0\u4e3a": 478, "cora\u7684\u7279\u5f81\u5df2\u7ecf\u662f\u5904\u7406\u8fc7\u7684\u5411\u91cf\u683c\u5f0f\u4e86": 478, "\u5bf9\u4e8e\u65e2\u6709\u79bb\u6563\u7279\u5f81\u7531\u4e8e\u8fde\u7eed\u7279\u5f81\u7684\u60c5\u51b5": 478, "\u66f4\u591aencoder\u8bf7\u53c2\u8003": 478, "\u5c42\u6784\u5efa\u56fe\u7f16\u7801\u5668": 478, "gcn\u6bcf\u4e2a\u8282\u70b9\u91c7\u6837\u5168\u90e8\u90bb\u5c45": 478, "\u90bb\u5c45\u4ee5\u7a00\u758f\u683c\u5f0f\u7ec4\u7ec7": 478, "\u6240\u4ee5\u8fd9\u91cc\u4f7f\u7528": 478, "\u90bb\u5c45\u5bf9\u9f50\u7684\u6a21\u578b\u53ef\u4ee5\u53c2\u8003graphsage\u7684\u5b9e\u73b0": 478, "\u5bf9\u4e8ecora\u70b9\u5206\u7c7b\u6a21\u578b": 478, "\u6211\u4eec\u9009\u62e9\u5bf9\u5e94\u7684tensorflow\u91cc\u7684\u5206\u7c7b\u635f\u5931\u51fd\u6570\u5373\u53ef": 478, "\u7136\u540e\u5728": 478, "\u51fd\u6570\u91cc\u5c06\u7f16\u7801\u5668\u548c\u635f\u5931\u51fd\u6570\u7ec4\u7ec7\u8d77\u6765": 478, "\u6700\u7ec8\u8fd4\u56de\u4e00\u4e2a\u6570\u636e\u8fed\u4ee3\u5668\u548c\u635f\u5931\u51fd\u6570": 478, "\u63a5\u7740\u4f7f\u7528\u5c01\u88c5\u7684\u5355\u673a\u8bad\u7ec3\u8fc7\u7a0b": 478, "\u6765\u8fdb\u884c\u8bad\u7ec3": 478, "\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u4e00\u4e2agcn\u6a21\u578b\u7684\u7f16\u5199": 478, "\u5b8c\u6574\u4ee3\u7801\u8bf7\u53c2\u8003": 478, "\u76ee\u5f55": 478, "\u6211\u4eec\u5b9e\u73b0\u4e86gcn": 478, "gat\u7b49\u6a21\u578b": 478, "\u4f60\u53ef\u4ee5\u53c2\u8003\u76f8\u4f3c\u7684\u6a21\u578b\u4ee3\u7801\u505a\u4e3a\u5f00\u59cb": 478, "\u5c5e\u6027\u56fe": 479, "\u56fe\u4e0a\u7684\u70b9": 479, "\u8fb9\u90fd\u5e26\u6709\u6807\u7b7e": 479, "\u6bcf\u4e2a\u6807\u7b7e\u90fd\u53ef\u80fd\u5e26\u6709\u8bb8\u591a\u5c5e\u6027": 479, "\u5185\u7f6e\u4e86\u4e00\u7ec4\u6d41\u884c\u7684\u6570\u636e\u96c6": 479, "\u4ee5\u53ca\u8f7d\u5165\u4ed6\u4eec\u7684\u5de5\u5177\u51fd\u6570": 479, "\u5e2e\u52a9\u7528\u6237\u66f4\u5bb9\u6613\u7684\u4e0a\u624b": 479, "\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50": 479, "\u5728\u5355\u673a\u6a21\u5f0f\u4e0b": 479, "\u4f1a\u5c06\u6570\u636e\u6587\u4ef6\u4e0b\u8f7d\u5230": 479, "\u5e76\u4e14\u4f1a\u4fdd\u7559\u4ee5\u4f9b\u5c06\u6765\u4f7f\u7528": 479, "\u96c6\u7fa4\u6a21\u5f0f\u4e0b": 479, "\u5c06\u6570\u636e\u6587\u4ef6\u4e0b\u8f7d\u5230": 479, "\u7684\u672c\u5730\u5b58\u50a8\u6bd4\u8f83\u590d\u6742": 479, "\u6240\u4ee5\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6302\u8f7d\u4e86": 479, "\u7684\u6570\u636e\u96c6\u6876\u7684\u4e00\u4e2a\u5bb9\u5668": 479, "\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u91cc": 479, "\u6211\u4eec\u5c06\u8f7d\u5165\u548c\u4e0a\u9762\u540c\u6837\u7684\u4e00\u5f20\u56fe": 479, "\u53ea\u4e0d\u8fc7\u8fd9\u6b21": 479, "\u90e8\u7f72\u5728\u96c6\u7fa4\u4e2d": 479, "\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 479, "\u7136\u540e\u5c06\u6570\u636e\u96c6\u6876\u6302\u8f7d\u5230": 479, "\u6b64\u8def\u5f84\u76f8\u5bf9\u4e8e": 479, "\u7684\u672c\u5730\u8def\u5f84": 479, "\u7136\u540e\u6211\u4eec\u5c06\u4f1a\u8bdd\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165": 479, "\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570": 479, "\u662f\u6211\u4eec\u901a\u8fc7": 479, "\u7684\u53c2\u6570\u6307\u5b9a\u7684\u6302\u8f7d\u8def\u5f84": 479, "\u662f\u8fd9\u4e2a\u6570\u636e\u96c6\u6240\u5728\u7684\u6587\u4ef6\u5939\u7684\u540d\u5b57": 479, "\u4f60\u53ef\u4ee5\u5728": 479, "\u627e\u5230\u6240\u6709\u76ee\u524d\u652f\u6301\u7684\u6570\u636e\u96c6": 479, "\u6587\u4ef6\u4e2d\u5305\u62ec\u8be6\u7ec6\u7684\u4ecb\u7ecd\u548c\u7528\u6cd5": 479, "\u7136\u800c": 479, "\u66f4\u5e38\u89c1\u7684\u60c5\u51b5\u662f\u7528\u6237\u9700\u8981\u4f7f\u7528\u81ea\u5df1\u7684\u6570\u636e\u96c6": 479, "\u5e76\u505a\u4e00\u4e9b\u6570\u636e\u5206\u6790\u7684\u5de5\u4f5c": 479, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u51fd\u6570\u7528\u6765\u5b9a\u4e49\u4e00\u4e2a\u5c5e\u6027\u56fe\u7684\u6a21\u578b": 479, "\u5e76\u4ee5\u5c06\u5c5e\u6027\u56fe\u8f7d\u5165": 479, "\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 479, "\u7136\u540e\u5728\u6b64\u4f1a\u8bdd\u5185\u521b\u5efa\u56fe": 479, "\u6709\u51e0\u4e2a\u65b9\u6cd5\u6765\u914d\u7f6e": 479, "\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u589e\u91cf\u7684\u6784\u5efa\u4e00\u4e2a\u5c5e\u6027\u56fe": 479, "\u6211\u4eec\u5c06\u4f7f\u7528": 479, "\u91cc\u7684\u6587\u4ef6\u505a\u5b8c\u6b64\u7bc7\u6559\u7a0b\u7684\u793a\u4f8b": 479, "\u627e\u5230\u6e90\u6570\u636e": 479, "\u4f60\u53ef\u4ee5\u968f\u65f6\u4f7f\u7528": 479, "\u6765\u67e5\u770b\u56fe\u7684\u6a21\u578b": 479, "\u6211\u4eec\u53ef\u4ee5\u5411\u56fe\u5185\u6dfb\u52a0\u4e00\u4e2a\u70b9\u6807\u7b7e": 479, "\u76f8\u5173\u7684\u53c2\u6570\u542b\u4e49\u5982\u4e0b": 479, "\u4ee3\u8868\u6570\u636e\u6e90": 479, "\u6307\u793a": 479, "\u53ef\u4ee5\u5728\u54ea\u91cc\u627e\u5230\u6e90\u6570\u636e": 479, "\u53ef\u4ee5\u4e3a\u6587\u4ef6\u8def\u5f84": 479, "\u6570\u7ec4\u7b49": 479, "\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50": 479, "\u8fd9\u5c06\u4f1a\u4ece\u6587\u4ef6": 479, "\u8f7d\u5165\u6570\u636e": 479, "\u5e76\u4e14\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a": 479, "\u4f46\u662f\u6709\u4e0d\u540c\u7684\u8d77\u59cb\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u6807\u7b7e": 479, "\u70b9\u6807\u7b7e\u7684\u540d\u5b57": 479, "\u9ed8\u8ba4\u4e3a": 479, "\u4e00\u5f20\u56fe\u4e2d\u4e0d\u80fd\u542b\u6709\u540c\u540d\u7684\u6807\u7b7e": 479, "\u6240\u4ee5\u82e5\u6709\u4e24\u4e2a\u6216\u4ee5\u4e0a\u7684\u6807\u7b7e": 479, "\u7528\u6237\u5fc5\u987b\u6307\u5b9a\u6807\u7b7e\u540d\u5b57": 479, "\u603b\u662f\u7ed9\u6807\u7b7e\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u540d\u5b57\u4e5f\u6709\u597d\u5904": 479, "\u53ef\u4ee5\u4e3a\u4efb\u4f55\u6807\u8bc6\u7b26": 479, "\u4e3e\u4e2a\u4f8b\u5b50": 479, "\u7ed3\u679c\u4e0e\u4e0a\u4e00\u6b65\u7ed3\u679c\u9664\u4e86\u6807\u7b7e\u540d\u5b8c\u5168\u4e00\u81f4": 479, "\u4e00\u7ec4\u5c5e\u6027\u540d\u5b57": 479, "\u53ef\u9009\u9879": 479, "\u5c5e\u6027\u540d\u5e94\u5f53\u4e0e\u6570\u636e\u4e2d\u7684\u9996\u884c\u8868\u5934\u4e2d\u7684\u540d\u5b57\u76f8\u4e00\u81f4": 479, "\u5982\u679c\u7701\u7565\u6216\u4e3a": 479, "\u9664id\u5217\u4e4b\u5916\u7684\u6240\u6709\u5217\u90fd\u5c06\u4f1a\u4f5c\u4e3a\u5c5e\u6027\u8f7d\u5165": 479, "\u5982\u679c\u4e3a\u7a7a\u5217\u8868": 479, "\u90a3\u4e48\u5c06\u4e0d\u4f1a\u8f7d\u5165\u4efb\u4f55\u5c5e\u6027": 479, "\u5176\u4ed6\u60c5\u51b5\u4e0b": 479, "\u53ea\u4f1a\u8f7d\u5165\u6307\u5b9a\u4e86\u7684\u5217\u4f5c\u4e3a\u5c5e\u6027": 479, "\u6bd4\u5982\u8bf4": 479, "\u5217\u7684\u5217\u540d": 479, "\u6b64\u5217\u5c06\u5728\u8f7d\u5165\u8fb9\u65f6\u88ab\u7528\u505a\u8d77\u59cb\u70b9": 479, "\u6216\u76ee\u6807\u70b9": 479, "\u5176\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32": 479, "\u6b64\u65f6\u6307\u4ee3\u5217\u540d": 479, "\u6216\u8005\u53ef\u4ee5\u662f\u4e00\u4e2a\u6b63\u6574\u6570": 479, "\u4ee3\u8868\u7b2c\u51e0\u5217": 479, "\u4ece0\u5f00\u59cb": 479, "\u9ed8\u8ba4\u4e3a\u7b2c0\u5217": 479, "\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5411\u56fe\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u8fb9\u6807\u7b7e": 479, "\u4e0e\u6784\u5efa\u70b9\u6807\u7b7e\u4e00\u8282\u4e2d\u7684": 479, "\u7c7b\u4f3c": 479, "\u4e3a\u6307\u793a\u53bb\u54ea\u91cc\u8bfb\u6570\u636e\u7684\u8def\u5f84": 479, "\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50": 479, "\u8fd9\u5c06\u4f1a\u8f7d\u5165\u4e00\u4e2a\u6807\u7b7e\u540d\u4e3a": 479, "\u6e90\u8282\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u8282\u70b9\u6807\u7b7e\u90fd\u4e3a": 479, "\u7b2c\u4e00\u5217\u4f5c\u4e3a\u8d77\u70b9\u7684\u70b9id": 479, "\u7b2c\u4e8c\u5217\u4f5c\u4e3a\u7ec8\u70b9\u7684\u70b9id": 479, "\u5176\u4ed6\u5217\u90fd\u4f5c\u4e3a\u5c5e\u6027": 479, "\u8fb9\u7684\u6807\u7b7e\u540d": 479, "\u63a8\u8350\u603b\u662f\u4f7f\u7528\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u6807\u7b7e\u540d": 479, "\u4e00\u5217\u5c5e\u6027": 479, "\u610f\u4e49\u4e0e\u884c\u4e3a\u90fd\u548c\u70b9\u4e2d\u7684\u4e00\u81f4": 479, "\u8d77\u70b9\u7684\u6807\u7b7e\u540d\u4e0e\u7ec8\u70b9\u7684\u6807\u7b7e\u540d": 479, "\u6211\u4eec\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u5df2\u7ecf\u770b\u5230\u8fc7\u4e86": 479, "\u5728\u90a3\u91cc\u5c06\u5176\u8d4b\u503c\u4e3a": 479, "\u8fd9\u4e24\u8005\u53ef\u4ee5\u53d6\u4e0d\u540c\u7684\u503c": 479, "\u4e3e\u4f8b\u6765\u8bf4": 479, "\u8d77\u70b9\u7684": 479, "\u5217\u540d\u4e0e\u7ec8\u70b9\u7684": 479, "\u5217\u540d": 479, "\u9ed8\u8ba4\u5206\u522b\u4e3a": 479, "\u610f\u4e49\u548c\u8868\u73b0\u4e0e\u70b9\u4e2d\u7684": 479, "\u4e0d\u540c\u7684\u662f\u9700\u8981\u4e24\u5217": 479, "\u4e00\u5217\u4e3a\u8d77\u70b9": 479, "\u4e00\u5217\u4e3a\u7ec8\u70b9": 479, "\u4ee5\u4e0b\u662f\u4e2a\u4f8b\u5b50": 479, "\u8fd9\u662f\u4e00\u4e9b\u7528\u6765\u5904\u7406\u7279\u522b\u7b80\u5355\u6216\u7279\u522b\u590d\u6742\u7684\u9ad8\u7ea7\u4e00\u4e9b\u7684\u7528\u6cd5": 479, "\u5982\u679c\u56fe\u4e2d\u53ea\u5b58\u5728\u4e00\u4e2a\u70b9\u6807\u7b7e": 479, "\u90a3\u4e48\u53ef\u4ee5\u7701\u7565\u6307\u5b9a\u70b9\u6807\u7b7e": 479, "\u5c06\u4f1a\u63a8\u65ad\u8d77\u59cb\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u6807\u7b7e\u4e3a\u8fd9\u4e00\u4e2a\u70b9\u6807\u7b7e": 479, "\u5982\u679c\u7528\u6237\u7684": 479, "\u53d6\u503c\u4e3a\u56fe\u4e2d\u4e0d\u5b58\u5728\u7684\u70b9\u6807\u7b7e": 479, "\u4f1a\u4ece\u8fb9\u7684\u7aef\u70b9\u4e2d\u805a\u5408\u51fa\u70b9\u8868": 479, "\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b": 479, "\u4e00\u79cd\u8fb9\u7684\u6807\u7b7e\u53ef\u80fd\u8fde\u63a5\u4e86\u4e24\u79cd\u53ca\u4ee5\u4e0a\u7684\u70b9": 479, "\u5728\u4e0b\u9762\u7684\u5c5e\u6027\u56fe\u4e2d": 479, "\u6709\u4e00\u4e2a\u540d\u4e3a": 479, "\u7684\u8fb9\u6807\u7b7e": 479, "\u8fde\u63a5\u4e86\u4e24\u79cd\u70b9\u6807\u7b7e": 479, "\u53ef\u4ee5\u6dfb\u52a0\u4e24\u6b21\u540d\u4e3a": 479, "\u53ef\u4ee5\u4ece\u8f93\u5165\u6587\u4ef6\u4e2d\u63a8\u65ad\u70b9\u7684\u7c7b\u578b": 479, "\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u5de5\u4f5c\u7684\u5f88\u597d": 479, "\u7528\u6237\u6709\u65f6\u9700\u8981\u66f4\u591a\u7684\u81ea\u5b9a\u4e49\u80fd\u529b": 479, "\u4e3a\u4e86\u6ee1\u8db3\u6b64\u79cd\u9700\u6c42": 479, "\u53ef\u4ee5\u5728\u5c5e\u6027\u540d\u4e4b\u540e\u52a0\u5165\u4e00\u4e2a\u989d\u5916\u7c7b\u578b\u7684\u53c2\u6570": 479, "\u50cf\u8fd9\u6837": 479, "\u8fd9\u5c06\u4f1a\u5c06\u5c5e\u6027\u7684\u7c7b\u578b\u8f6c\u6362\u4e3a\u6307\u5b9a\u7684\u7c7b\u578b": 479, "\u6ce8\u610f\u5c5e\u6027\u540d\u5b57\u548c\u7c7b\u578b\u9700\u8981\u5728\u540c\u4e00\u4e2a\u5143\u7ec4\u4e2d": 479, "\u5728\u8fd9\u91cc": 479, "\u7684\u7c7b\u578b\u5c06\u4f1a\u662f": 479, "\u800c\u9ed8\u8ba4\u4e0d\u6307\u5b9a\u7684\u8bdd\u4e3a": 479, "\u5e38\u89c1\u7684\u4f7f\u7528\u573a\u666f\u662f\u6307\u5b9a": 479, "\u7b49\u7c7b\u578b": 479, "\u6709\u4e09\u4e2a\u914d\u7f6e\u5143\u4fe1\u606f\u7684\u53c2\u6570": 479, "\u5206\u522b\u4e3a": 479, "\u53ef\u4ee5\u4e3a": 479, "\u4f1a\u6709\u66f4\u5feb\u7684\u901f\u5ea6": 479, "\u548c\u4f7f\u7528\u66f4\u5c11\u7684\u5185\u5b58": 479, "\u5f53id\u4e0d\u80fd\u7528": 479, "\u8868\u793a\u65f6": 479, "\u624d\u5e94\u8be5\u4f7f\u7528": 479, "\u5982\u679c\u786e\u5b9a\u56fe\u70b9id\u8303\u56f4\u4e0d\u4f1a\u8d85\u8fc7": 479, "\u5efa\u8bae\u4f7f\u7528": 479, "\u6765\u964d\u4f4e\u5185\u5b58\u5f00\u9500": 479, "\u6307\u793a\u8f7d\u5165\u65e0\u5411\u56fe\u8fd8\u662f\u6709\u5411\u56fe": 479, "\u6307\u793a\u662f\u5426\u4e3a\u6bcf\u6761\u8fb9\u5206\u914d\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u7684id": 479, "\u6307\u793a\u662f\u5426\u662f\u5426\u5c06\u70b9\u539f\u59cbid\u4fdd\u7559\u4e3a\u5c5e\u6027": 479, "\u8ba9\u6211\u4eec\u5199\u4e00\u4e2a\u5b8c\u6574\u7684\u56fe\u7684\u5b9a\u4e49": 479, "\u8fd9\u91cc\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u8f7d\u5165": 479, "\u5c5e\u6027\u56fe\u7684": 479, "\u4f8b\u5b50": 479, "\u4e0a\u6587\u63d0\u5230\u7684\u6570\u636e\u6e90\u662f\u4e00\u4e2a": 479, "\u7684\u7c7b": 479, "\u5305\u542b\u6587\u4ef6\u8def\u5f84\u6216\u8005\u6570\u636e\u672c\u8eab": 479, "\u652f\u6301\u4ece": 479, "\u8fd9\u53ef\u4ee5\u4f7f\u7528\u6237\u4ec5\u901a\u8fc7": 479, "\u63a7\u5236\u53f0\u4fbf\u53ef\u4ee5\u521b\u5efa\u56fe": 479, "\u9664\u4e86": 479, "\u5916": 479, "\u5176\u4ed6\u5c5e\u6027": 479, "id\u5217": 479, "\u6807\u7b7e\u8bbe\u7f6e\u7b49\u90fd\u548c\u4e4b\u524d\u63d0\u5230\u7684\u4fdd\u6301\u4e00\u81f4": 479, "\u6ce8\u610f\u6bcf\u4e2a\u6570\u7ec4\u90fd\u4ee3\u8868\u4e00\u5217": 479, "\u6211\u4eec\u5c06\u5176\u4ee5": 479, "\u77e9\u9635\u7684\u65b9\u5f0f\u4f20\u5165": 479, "\u5f53": 479, "\u5305\u542b\u6587\u4ef6\u8def\u5f84\u65f6": 479, "\u5b83\u53ef\u80fd\u4ec5\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u4e32": 479, "\u6587\u4ef6\u8def\u5f84\u5e94\u9075\u5faa": 479, "\u6807\u51c6": 479, "\u5f53\u6536\u5230\u5305\u542b\u6587\u4ef6\u8def\u5f84\u7684\u8f7d\u56fe\u8bf7\u6c42\u65f6": 479, "\u5c06\u4f1a\u89e3\u6790": 479, "\u8c03\u7528\u76f8\u5e94\u7684\u8f7d\u56fe\u6a21\u5757": 479, "\u652f\u6301\u591a\u79cd\u6570\u636e\u6e90": 479, "\u672c\u5730": 479, "\u6570\u636e\u7531": 479, "\u8d1f\u8d23\u8f7d\u5165": 479, "\u89e3\u6790\u4e0d\u540c\u7684\u6570\u636e\u683c\u5f0f\u4ee5\u53ca\u53c2\u6570": 479, "\u4efb\u4f55\u989d\u5916\u7684\u5177\u4f53\u7684\u914d\u7f6e\u90fd\u53ef\u4ee5\u5728loader\u7684\u53ef\u53d8\u53c2\u6570\u5217\u8868\u4e2d\u4f20\u5165": 479, "\u8fd9\u4e9b\u53c2\u6570\u4f1a\u76f4\u63a5\u88ab\u4f20\u9012\u5230\u5bf9\u5e94\u7684\u5b58\u50a8\u7c7b\u4e2d": 479, "\u4e4b\u4e8e": 479, "\u6216\u8005\u662f": 479, "\u7528\u6237\u53ef\u4ee5\u65b9\u4fbf\u7684\u5b9e\u73b0\u81ea\u5df1\u7684driver\u6765\u652f\u6301\u66f4\u591a\u7684\u6570\u636e\u6e90": 479, "\u6bd4\u5982\u53c2\u7167": 479, "driver\u7684\u5b9e\u73b0\u65b9\u5f0f": 479, "\u7528\u6237\u9700\u8981\u7ee7\u627f": 479, "\u7c7b\u7528\u6765\u505ascheme\u5bf9\u5e94\u7684resolv": 479, "abstractbufferedfil": 479, "\u7528\u6237\u4ec5\u9700\u8981\u5b9e\u73b0": 479, "\u8fd9\u51e0\u4e2a\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b9e\u73b0\u57fa\u672c\u7684read": 479, "write\u529f\u80fd": 479, "\u6700\u540e\u901a\u8fc7": 479, "\u6ce8\u518c\u81ea\u5b9a\u4e49\u7684resolv": 479, "\u6211\u4eec\u4e3agraphscope\u7684\u7528\u6237\u51c6\u5907\u4e86\u4e00\u7cfb\u5217\u8be6\u5c3d\u7684\u5165\u95e8\u6559\u7a0b": 480, "\u4ece\u8fd9\u4e9b\u5165\u95e8\u6559\u7a0b\u4e2d\u4f60\u53ef\u4ee5\u4e86\u89e3\u5230\u5982\u4f55\u542f\u52a8\u4e00\u4e2agraphscope\u4f1a\u8bdd": 480, "\u5982\u4f55\u8f7d\u56fe": 480, "\u4ee5\u53ca\u5982\u4f55\u5206\u522b": 480, "\u4f7f\u7528graphscope\u4e2d\u7684ga": 480, "gle\u5f15\u64ce\u6765\u5b8c\u6210\u56fe\u5206\u6790\u4efb\u52a1": 480, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u548c\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7684\u8bad\u7ec3": 480, "\u6211\u4eec\u7528jupyt": 480, "notebook\u6765\u7ec4\u7ec7\u8fd9\u4e9b\u6559\u7a0b": 480, "\u7528\u6237\u53ef\u4ee5\u5728\u4efb\u4f55\u4e00\u4e2ajupyt": 480, "notebook\u670d\u52a1\u4e2d\u5c1d\u8bd5\u6267\u884c": 480, "\u6211\u4eec\u8fd8\u63d0\u4f9b\u4e86\u5df2\u7ecf\u51c6\u5907\u597d\u7684jupyt": 480, "lab": 480, "\u4ee5\u4fbf\u4e8e\u7528\u6237\u66f4\u5feb\u5730\u4e0a\u624bgraphscop": 480, "\u5165\u95e8\u6559\u7a0b\u5305\u62ec\u5982\u4e0b\u8fd9\u4e9b\u5185\u5bb9": 480}, "objects": {"": [[236, 0, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase"], [236, 1, 1, "_CPPv4N2gs7AppBase7AppBaseEv", "gs::AppBase::AppBase"], [236, 2, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase::CONTEXT_T"], [236, 2, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase::FRAG_T"], [236, 1, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval"], [236, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::context"], [236, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::graph"], [236, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::messages"], [236, 1, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval"], [236, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::context"], [236, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::graph"], [236, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::messages"], [236, 4, 1, "_CPPv4N2gs7AppBase13load_strategyE", "gs::AppBase::load_strategy"], [236, 5, 1, "_CPPv4N2gs7AppBase17message_manager_tE", "gs::AppBase::message_manager_t"], [236, 4, 1, "_CPPv4N2gs7AppBase16message_strategyE", "gs::AppBase::message_strategy"], [236, 4, 1, "_CPPv4N2gs7AppBase16need_split_edgesE", "gs::AppBase::need_split_edges"], [236, 1, 1, "_CPPv4N2gs7AppBaseD0Ev", "gs::AppBase::~AppBase"], [236, 0, 1, "_CPPv4N2gs8AppEntryE", "gs::AppEntry"], [236, 1, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry"], [236, 3, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry::id"], [236, 3, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry::lib_path"], [236, 1, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker"], [236, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::comm_spec"], [236, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::fragment"], [236, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::spec"], [236, 1, 1, "_CPPv4N2gs8AppEntry4InitEv", "gs::AppEntry::Init"], [236, 1, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query"], [236, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::context_key"], [236, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::frag_wrapper"], [236, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::query_args"], [236, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::worker_handler"], [236, 0, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt"], [236, 2, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt::FunctionType"], [236, 2, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt::index"], [236, 0, 1, "_CPPv4I0EN2gs7ArgsNumE", "gs::ArgsNum"], [236, 2, 1, "_CPPv4I0EN2gs7ArgsNumE", "gs::ArgsNum::FunctionType"], [236, 0, 1, "_CPPv4I0EN2gs12ArgsUnpackerE", "gs::ArgsUnpacker"], [236, 2, 1, "_CPPv4I0EN2gs12ArgsUnpackerE", "gs::ArgsUnpacker::T"], [236, 0, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader"], [236, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedELabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedELabel"], [236, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedELabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedELabel::frag_id"], [236, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedELabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedELabel::label_id"], [236, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedVLabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedVLabel"], [236, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedVLabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedVLabel::frag_id"], [236, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedVLabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedVLabel::label_id"], [236, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragment"], [236, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragment::frag_id"], [236, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragmentAsFragmentGroup"], [236, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragmentAsFragmentGroup::frag_id"], [236, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader"], [236, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader"], [236, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::client"], [236, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::client"], [236, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::comm_spec"], [236, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::comm_spec"], [236, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::compact_edges"], [236, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::directed"], [236, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::efiles"], [236, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::generate_eid"], [236, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::graph_info"], [236, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::retain_oid"], [236, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::use_perfect_hash"], [236, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::vfiles"], [236, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader15ExtendLabelDataEN8vineyard8ObjectIDEi", "gs::ArrowFragmentLoader::ExtendLabelData"], [236, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader15ExtendLabelDataEN8vineyard8ObjectIDEi", "gs::ArrowFragmentLoader::ExtendLabelData::extend_type"], [236, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader15ExtendLabelDataEN8vineyard8ObjectIDEi", "gs::ArrowFragmentLoader::ExtendLabelData::frag_id"], [236, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader14LoadEdgeTablesEv", "gs::ArrowFragmentLoader::LoadEdgeTables"], [236, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader12LoadFragmentEv", "gs::ArrowFragmentLoader::LoadFragment"], [236, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader27LoadFragmentAsFragmentGroupEv", "gs::ArrowFragmentLoader::LoadFragmentAsFragmentGroup"], [236, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader20LoadVertexEdgeTablesEv", "gs::ArrowFragmentLoader::LoadVertexEdgeTables"], [236, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader16LoadVertexTablesEv", "gs::ArrowFragmentLoader::LoadVertexTables"], [236, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::OID_T"], [236, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::VERTEX_MAP_T"], [236, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::VID_T"], [236, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader15initPartitionerEv", "gs::ArrowFragmentLoader::initPartitioner"], [236, 1, 1, "_CPPv4N2gs19ArrowFragmentLoaderD0Ev", "gs::ArrowFragmentLoader::~ArrowFragmentLoader"], [236, 0, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment"], [236, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::COMPACT"], [236, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedFragment::Construct"], [236, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedFragment::Construct::meta"], [236, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment6CreateEv", "gs::ArrowProjectedFragment::Create"], [236, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::EDATA_T"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t", "gs::ArrowProjectedFragment::GetData"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t", "gs::ArrowProjectedFragment::GetData::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10GetEdgeNumEv", "gs::ArrowProjectedFragment::GetEdgeNum"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t", "gs::ArrowProjectedFragment::GetFragId"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t", "gs::ArrowProjectedFragment::GetFragId::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t", "gs::ArrowProjectedFragment::GetId"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t", "gs::ArrowProjectedFragment::GetId::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12GetInEdgeNumEv", "gs::ArrowProjectedFragment::GetInEdgeNum"], [236, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList"], [236, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList"], [236, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList"], [236, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::COMPACT_"], [236, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::COMPACT_"], [236, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::COMPACT_"], [236, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::src_fid"], [236, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::v"], [236, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::v"], [236, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingEdgeNumEv", "gs::ArrowProjectedFragment::GetIncomingEdgeNum"], [236, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingInnerVertexAdjList"], [236, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingInnerVertexAdjList::COMPACT_"], [236, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingInnerVertexAdjList::v"], [236, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingOuterVertexAdjList"], [236, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingOuterVertexAdjList::COMPACT_"], [236, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingOuterVertexAdjList::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex::oid"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexGid"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexGid::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexId"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexId::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexInternalId"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexInternalId::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetInnerVerticesNumEv", "gs::ArrowProjectedFragment::GetInnerVerticesNum"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInternalId"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInternalId::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalInDegree"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalInDegree::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalOutDegree"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalOutDegree::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetOutEdgeNumEv", "gs::ArrowProjectedFragment::GetOutEdgeNum"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex::oid"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexGid"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexGid::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexId"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexId::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexInternalId"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexInternalId::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetOuterVerticesNumEv", "gs::ArrowProjectedFragment::GetOuterVerticesNum"], [236, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList"], [236, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList"], [236, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList"], [236, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::COMPACT_"], [236, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::COMPACT_"], [236, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::COMPACT_"], [236, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::dst_fid"], [236, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::v"], [236, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::v"], [236, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingEdgeNumEv", "gs::ArrowProjectedFragment::GetOutgoingEdgeNum"], [236, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingInnerVertexAdjList"], [236, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingInnerVertexAdjList::COMPACT_"], [236, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingInnerVertexAdjList::v"], [236, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingOuterVertexAdjList"], [236, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingOuterVertexAdjList::COMPACT_"], [236, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingOuterVertexAdjList::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetTotalVerticesNumEv", "gs::ArrowProjectedFragment::GetTotalVerticesNum"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex::oid"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex::v"], [236, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment12GetVertexMapEv", "gs::ArrowProjectedFragment::GetVertexMap"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12GetVertexMapEv", "gs::ArrowProjectedFragment::GetVertexMap"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetVerticesNumEv", "gs::ArrowProjectedFragment::GetVerticesNum"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t", "gs::ArrowProjectedFragment::Gid2Oid"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t", "gs::ArrowProjectedFragment::Gid2Oid::gid"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex::gid"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IEDests"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IEDests::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IOEDests"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IOEDests::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex::gid"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13InnerVerticesEv", "gs::ArrowProjectedFragment::InnerVertices"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsInnerVertex"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsInnerVertex::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsOuterVertex"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsOuterVertex::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t", "gs::ArrowProjectedFragment::MirrorVertices"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t", "gs::ArrowProjectedFragment::MirrorVertices::fid"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t", "gs::ArrowProjectedFragment::OEDests"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t", "gs::ArrowProjectedFragment::OEDests::v"], [236, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::OID_T"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t", "gs::ArrowProjectedFragment::Oid2Gid"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid::gid"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t", "gs::ArrowProjectedFragment::Oid2Gid::oid"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid::oid"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex::gid"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t", "gs::ArrowProjectedFragment::OuterVertices"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesEv", "gs::ArrowProjectedFragment::OuterVertices"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t", "gs::ArrowProjectedFragment::OuterVertices::fid"], [236, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp"], [236, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp::comm_spec"], [236, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp::conf"], [236, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project"], [236, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::e_label"], [236, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::e_prop"], [236, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::fragment"], [236, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::v_label"], [236, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::v_prop"], [236, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VDATA_T"], [236, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VERTEX_MAP_T"], [236, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VID_T"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t", "gs::ArrowProjectedFragment::Vertex2Gid"], [236, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t", "gs::ArrowProjectedFragment::Vertex2Gid::v"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8VerticesEv", "gs::ArrowProjectedFragment::Vertices"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10adj_list_tE", "gs::ArrowProjectedFragment::adj_list_t"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment18compact_adj_list_tE", "gs::ArrowProjectedFragment::compact_adj_list_t"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13compact_edgesEv", "gs::ArrowProjectedFragment::compact_edges"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment13compact_nbr_tE", "gs::ArrowProjectedFragment::compact_nbr_t"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16const_adj_list_tE", "gs::ArrowProjectedFragment::const_adj_list_t"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment24const_compact_adj_list_tE", "gs::ArrowProjectedFragment::const_compact_adj_list_t"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8directedEv", "gs::ArrowProjectedFragment::directed"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment7edata_tE", "gs::ArrowProjectedFragment::edata_t"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10edge_labelEv", "gs::ArrowProjectedFragment::edge_label"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12edge_prop_idEv", "gs::ArrowProjectedFragment::edge_prop_id"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment11eid_array_tE", "gs::ArrowProjectedFragment::eid_array_t"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5eid_tE", "gs::ArrowProjectedFragment::eid_t"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment3fidEv", "gs::ArrowProjectedFragment::fid"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment4fnumEv", "gs::ArrowProjectedFragment::fnum"], [236, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment18get_arrow_fragmentEv", "gs::ArrowProjectedFragment::get_arrow_fragment"], [236, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment24get_edata_array_accessorEv", "gs::ArrowProjectedFragment::get_edata_array_accessor"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24get_ie_offsets_begin_ptrEv", "gs::ArrowProjectedFragment::get_ie_offsets_begin_ptr"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment22get_ie_offsets_end_ptrEv", "gs::ArrowProjectedFragment::get_ie_offsets_end_ptr"], [236, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment16get_in_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv", "gs::ArrowProjectedFragment::get_in_edges_ptr"], [236, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment16get_in_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv", "gs::ArrowProjectedFragment::get_in_edges_ptr::COMPACT_"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24get_oe_offsets_begin_ptrEv", "gs::ArrowProjectedFragment::get_oe_offsets_begin_ptr"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment22get_oe_offsets_end_ptrEv", "gs::ArrowProjectedFragment::get_oe_offsets_end_ptr"], [236, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment17get_out_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv", "gs::ArrowProjectedFragment::get_out_edges_ptr"], [236, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment17get_out_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv", "gs::ArrowProjectedFragment::get_out_edges_ptr::COMPACT_"], [236, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment24get_vdata_array_accessorEv", "gs::ArrowProjectedFragment::get_vdata_array_accessor"], [236, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE", "gs::ArrowProjectedFragment::inner_vertex_array_t"], [236, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE", "gs::ArrowProjectedFragment::inner_vertex_array_t::DATA_T"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16inner_vertices_tE", "gs::ArrowProjectedFragment::inner_vertices_t"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14internal_oid_tE", "gs::ArrowProjectedFragment::internal_oid_t"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10label_id_tE", "gs::ArrowProjectedFragment::label_id_t"], [236, 4, 1, "_CPPv4N2gs22ArrowProjectedFragment13load_strategyE", "gs::ArrowProjectedFragment::load_strategy"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16local_vertex_mapEv", "gs::ArrowProjectedFragment::local_vertex_map"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5nbr_tE", "gs::ArrowProjectedFragment::nbr_t"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10nbr_unit_tE", "gs::ArrowProjectedFragment::nbr_unit_t"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5oid_tE", "gs::ArrowProjectedFragment::oid_t"], [236, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE", "gs::ArrowProjectedFragment::outer_vertex_array_t"], [236, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE", "gs::ArrowProjectedFragment::outer_vertex_array_t::DATA_T"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16outer_vertices_tE", "gs::ArrowProjectedFragment::outer_vertices_t"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment9prop_id_tE", "gs::ArrowProjectedFragment::prop_id_t"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16property_graph_tE", "gs::ArrowProjectedFragment::property_graph_t"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment21property_vertex_map_tE", "gs::ArrowProjectedFragment::property_vertex_map_t"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14sub_vertices_tE", "gs::ArrowProjectedFragment::sub_vertices_t"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16use_perfect_hashEv", "gs::ArrowProjectedFragment::use_perfect_hash"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment7vdata_tE", "gs::ArrowProjectedFragment::vdata_t"], [236, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE", "gs::ArrowProjectedFragment::vertex_array_t"], [236, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE", "gs::ArrowProjectedFragment::vertex_array_t::DATA_T"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12vertex_labelEv", "gs::ArrowProjectedFragment::vertex_label"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13vertex_map_idEv", "gs::ArrowProjectedFragment::vertex_map_id"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment12vertex_map_tE", "gs::ArrowProjectedFragment::vertex_map_t"], [236, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14vertex_prop_idEv", "gs::ArrowProjectedFragment::vertex_prop_id"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14vertex_range_tE", "gs::ArrowProjectedFragment::vertex_range_t"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment8vertex_tE", "gs::ArrowProjectedFragment::vertex_t"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10vertices_tE", "gs::ArrowProjectedFragment::vertices_t"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment11vid_array_tE", "gs::ArrowProjectedFragment::vid_array_t"], [236, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5vid_tE", "gs::ArrowProjectedFragment::vid_t"], [236, 1, 1, "_CPPv4N2gs22ArrowProjectedFragmentD0Ev", "gs::ArrowProjectedFragment::~ArrowProjectedFragment"], [236, 0, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap"], [236, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedVertexMap::Construct"], [236, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedVertexMap::Construct::meta"], [236, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap6CreateEv", "gs::ArrowProjectedVertexMap::Create"], [236, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetFidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetFidFromGid"], [236, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetFidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetFidFromGid::gid"], [236, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid"], [236, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid"], [236, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::fid"], [236, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::gid"], [236, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::gid"], [236, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::oid"], [236, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::oid"], [236, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap18GetInnerVertexSizeE5fid_t", "gs::ArrowProjectedVertexMap::GetInnerVertexSize"], [236, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap18GetInnerVertexSizeE5fid_t", "gs::ArrowProjectedVertexMap::GetInnerVertexSize::fid"], [236, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetLidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetLidFromGid"], [236, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetLidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetLidFromGid::gid"], [236, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap16GetOffsetFromLidE5vid_t", "gs::ArrowProjectedVertexMap::GetOffsetFromLid"], [236, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap16GetOffsetFromLidE5vid_t", "gs::ArrowProjectedVertexMap::GetOffsetFromLid::lid"], [236, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid"], [236, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid::gid"], [236, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid::oid"], [236, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap19GetTotalVerticesNumEv", "gs::ArrowProjectedVertexMap::GetTotalVerticesNum"], [236, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::OID_T"], [236, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap10Offset2LidERK5vid_t", "gs::ArrowProjectedVertexMap::Offset2Lid"], [236, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap10Offset2LidERK5vid_t", "gs::ArrowProjectedVertexMap::Offset2Lid::offset"], [236, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project"], [236, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project::v_label"], [236, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project::vm"], [236, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::VERTEX_MAP_T"], [236, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::VID_T"], [236, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap16use_perfect_hashEv", "gs::ArrowProjectedVertexMap::use_perfect_hash"], [236, 0, 1, "_CPPv4I00EN2gs17CtxWrapperBuilderE", "gs::CtxWrapperBuilder"], [236, 2, 1, "_CPPv4I00EN2gs17CtxWrapperBuilderE", "gs::CtxWrapperBuilder::CTX_T"], [236, 0, 1, "_CPPv4I0EN2gs21DefaultPropertyWorkerE", "gs::DefaultPropertyWorker"], [236, 2, 1, "_CPPv4I0EN2gs21DefaultPropertyWorkerE", "gs::DefaultPropertyWorker::APP_T"], [236, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker"], [236, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker::app"], [236, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker::graph"], [236, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker8FinalizeEv", "gs::DefaultPropertyWorker::Finalize"], [236, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker10GetContextEv", "gs::DefaultPropertyWorker::GetContext"], [236, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init"], [236, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init::comm_spec"], [236, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init::pe_spec"], [236, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE", "gs::DefaultPropertyWorker::Output"], [236, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE", "gs::DefaultPropertyWorker::Output::os"], [236, 1, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query"], [236, 2, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query::Args"], [236, 3, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query::args"], [236, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker9context_tE", "gs::DefaultPropertyWorker::context_t"], [236, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker10fragment_tE", "gs::DefaultPropertyWorker::fragment_t"], [236, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker17message_manager_tE", "gs::DefaultPropertyWorker::message_manager_t"], [236, 1, 1, "_CPPv4N2gs21DefaultPropertyWorkerD0Ev", "gs::DefaultPropertyWorker::~DefaultPropertyWorker"], [236, 0, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker"], [236, 0, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker"], [236, 2, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker::APP_T"], [236, 2, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker::APP_T"], [236, 1, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker"], [236, 1, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker"], [236, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::app"], [236, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::app"], [236, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::graph"], [236, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::graph"], [236, 1, 1, "_CPPv4N2gs13DefaultWorker8FinalizeEv", "gs::DefaultWorker::Finalize"], [236, 1, 1, "_CPPv4N2gs13DefaultWorker8FinalizeEv", "gs::DefaultWorker::Finalize"], [236, 1, 1, "_CPPv4N2gs13DefaultWorker10GetContextEv", "gs::DefaultWorker::GetContext"], [236, 1, 1, "_CPPv4N2gs13DefaultWorker10GetContextEv", "gs::DefaultWorker::GetContext"], [236, 1, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init"], [236, 1, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init"], [236, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::comm_spec"], [236, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::comm_spec"], [236, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::pe_spec"], [236, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::pe_spec"], [236, 1, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output"], [236, 1, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output"], [236, 3, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output::os"], [236, 3, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output::os"], [236, 1, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query"], [236, 1, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query"], [236, 2, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::Args"], [236, 2, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::Args"], [236, 3, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::args"], [236, 3, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::args"], [236, 5, 1, "_CPPv4N2gs13DefaultWorker9context_tE", "gs::DefaultWorker::context_t"], [236, 5, 1, "_CPPv4N2gs13DefaultWorker9context_tE", "gs::DefaultWorker::context_t"], [236, 5, 1, "_CPPv4N2gs13DefaultWorker10fragment_tE", "gs::DefaultWorker::fragment_t"], [236, 5, 1, "_CPPv4N2gs13DefaultWorker10fragment_tE", "gs::DefaultWorker::fragment_t"], [236, 5, 1, "_CPPv4N2gs13DefaultWorker17message_manager_tE", "gs::DefaultWorker::message_manager_t"], [236, 5, 1, "_CPPv4N2gs13DefaultWorker17message_manager_tE", "gs::DefaultWorker::message_manager_t"], [236, 1, 1, "_CPPv4N2gs13DefaultWorkerD0Ev", "gs::DefaultWorker::~DefaultWorker"], [236, 1, 1, "_CPPv4N2gs13DefaultWorkerD0Ev", "gs::DefaultWorker::~DefaultWorker"], [236, 0, 1, "_CPPv4N2gs14DispatchResultE", "gs::DispatchResult"], [236, 6, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicyE", "gs::DispatchResult::AggregatePolicy"], [236, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE", "gs::DispatchResult::AggregatePolicy::kConcat"], [236, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE", "gs::DispatchResult::AggregatePolicy::kMergeGraphDef"], [236, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE", "gs::DispatchResult::AggregatePolicy::kPickFirst"], [236, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE", "gs::DispatchResult::AggregatePolicy::kPickFirstNonEmpty"], [236, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE", "gs::DispatchResult::AggregatePolicy::kPickFirstNonEmptyGraphDef"], [236, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE", "gs::DispatchResult::AggregatePolicy::kRequireConsistent"], [236, 1, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult"], [236, 1, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEv", "gs::DispatchResult::DispatchResult"], [236, 3, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult::error_code"], [236, 3, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult::worker_id"], [236, 1, 1, "_CPPv4NK2gs14DispatchResult16aggregate_policyEv", "gs::DispatchResult::aggregate_policy"], [236, 1, 1, "_CPPv4NK2gs14DispatchResult4dataEv", "gs::DispatchResult::data"], [236, 1, 1, "_CPPv4NK2gs14DispatchResult10error_codeEv", "gs::DispatchResult::error_code"], [236, 1, 1, "_CPPv4N2gs14DispatchResult9graph_defEv", "gs::DispatchResult::graph_def"], [236, 1, 1, "_CPPv4NK2gs14DispatchResult9graph_defEv", "gs::DispatchResult::graph_def"], [236, 1, 1, "_CPPv4NK2gs14DispatchResult14has_large_dataEv", "gs::DispatchResult::has_large_data"], [236, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE", "gs::DispatchResult::kConcat"], [236, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE", "gs::DispatchResult::kMergeGraphDef"], [236, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE", "gs::DispatchResult::kPickFirst"], [236, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE", "gs::DispatchResult::kPickFirstNonEmpty"], [236, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE", "gs::DispatchResult::kPickFirstNonEmptyGraphDef"], [236, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE", "gs::DispatchResult::kRequireConsistent"], [236, 1, 1, "_CPPv4N2gs14DispatchResult7messageEv", "gs::DispatchResult::message"], [236, 1, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data"], [236, 1, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data"], [236, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::arc"], [236, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::data"], [236, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::large_data"], [236, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::large_data"], [236, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::policy"], [236, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::policy"], [236, 1, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error"], [236, 3, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error::error_code"], [236, 3, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error::message"], [236, 1, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def"], [236, 3, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def::graph_def"], [236, 3, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def::policy"], [236, 1, 1, "_CPPv4NK2gs14DispatchResult9worker_idEv", "gs::DispatchResult::worker_id"], [236, 0, 1, "_CPPv4N2gs10DispatcherE", "gs::Dispatcher"], [236, 1, 1, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::Dispatch"], [236, 3, 1, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::Dispatch::cmd"], [236, 1, 1, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE", "gs::Dispatcher::Dispatcher"], [236, 3, 1, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE", "gs::Dispatcher::Dispatcher::comm_spec"], [236, 1, 1, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::SetCommand"], [236, 3, 1, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::SetCommand::cmd"], [236, 1, 1, "_CPPv4N2gs10Dispatcher5StartEv", "gs::Dispatcher::Start"], [236, 1, 1, "_CPPv4N2gs10Dispatcher4StopEv", "gs::Dispatcher::Stop"], [236, 1, 1, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE", "gs::Dispatcher::Subscribe"], [236, 3, 1, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE", "gs::Dispatcher::Subscribe::subscriber"], [236, 0, 1, "_CPPv4N2gs12EngineConfigE", "gs::EngineConfig"], [236, 1, 1, "_CPPv4NK2gs12EngineConfig12ToJsonStringEv", "gs::EngineConfig::ToJsonString"], [236, 4, 1, "_CPPv4N2gs12EngineConfig15enable_java_sdkE", "gs::EngineConfig::enable_java_sdk"], [236, 4, 1, "_CPPv4N2gs12EngineConfig8networkxE", "gs::EngineConfig::networkx"], [236, 4, 1, "_CPPv4N2gs12EngineConfig21vineyard_rpc_endpointE", "gs::EngineConfig::vineyard_rpc_endpoint"], [236, 4, 1, "_CPPv4N2gs12EngineConfig15vineyard_socketE", "gs::EngineConfig::vineyard_socket"], [236, 0, 1, "_CPPv4I0EN2gs15FragmentWrapperE", "gs::FragmentWrapper"], [236, 2, 1, "_CPPv4I0EN2gs15FragmentWrapperE", "gs::FragmentWrapper::FRAG_T"], [236, 0, 1, "_CPPv4N2gs8GSObjectE", "gs::GSObject"], [236, 1, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject"], [236, 3, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject::id"], [236, 3, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject::type"], [236, 1, 1, "_CPPv4NK2gs8GSObject8ToStringEv", "gs::GSObject::ToString"], [236, 1, 1, "_CPPv4NK2gs8GSObject2idEv", "gs::GSObject::id"], [236, 1, 1, "_CPPv4NK2gs8GSObject4typeEv", "gs::GSObject::type"], [236, 1, 1, "_CPPv4N2gs8GSObjectD0Ev", "gs::GSObject::~GSObject"], [236, 0, 1, "_CPPv4N2gs11GrapeEngineE", "gs::GrapeEngine"], [236, 1, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE", "gs::GrapeEngine::GrapeEngine"], [236, 1, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine"], [236, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE", "gs::GrapeEngine::GrapeEngine::dag_file"], [236, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine::host"], [236, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine::port"], [236, 1, 1, "_CPPv4N2gs11GrapeEngine10RunDAGFileEv", "gs::GrapeEngine::RunDAGFile"], [236, 1, 1, "_CPPv4N2gs11GrapeEngine5StartEv", "gs::GrapeEngine::Start"], [236, 1, 1, "_CPPv4N2gs11GrapeEngine4StopEv", "gs::GrapeEngine::Stop"], [236, 0, 1, "_CPPv4N2gs13GrapeInstanceE", "gs::GrapeInstance"], [236, 1, 1, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE", "gs::GrapeInstance::GrapeInstance"], [236, 3, 1, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE", "gs::GrapeInstance::GrapeInstance::comm_spec"], [236, 1, 1, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE", "gs::GrapeInstance::Init"], [236, 3, 1, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE", "gs::GrapeInstance::Init::vineyard_socket"], [236, 1, 1, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE", "gs::GrapeInstance::OnReceive"], [236, 3, 1, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE", "gs::GrapeInstance::OnReceive::cmd"], [236, 0, 1, "_CPPv4N2gs13ObjectManagerE", "gs::ObjectManager"], [236, 1, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject"], [236, 1, 1, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE", "gs::ObjectManager::GetObject"], [236, 2, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject::T"], [236, 3, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject::id"], [236, 3, 1, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE", "gs::ObjectManager::GetObject::id"], [236, 1, 1, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE", "gs::ObjectManager::HasObject"], [236, 3, 1, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE", "gs::ObjectManager::HasObject::id"], [236, 1, 1, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE", "gs::ObjectManager::PutObject"], [236, 3, 1, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE", "gs::ObjectManager::PutObject::obj"], [236, 1, 1, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE", "gs::ObjectManager::RemoveObject"], [236, 3, 1, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE", "gs::ObjectManager::RemoveObject::id"], [236, 0, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker"], [236, 0, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker"], [236, 2, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker::APP_T"], [236, 2, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker::APP_T"], [236, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv", "gs::ParallelPropertyWorker::Finalize"], [236, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv", "gs::ParallelPropertyWorker::Finalize"], [236, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv", "gs::ParallelPropertyWorker::GetContext"], [236, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv", "gs::ParallelPropertyWorker::GetContext"], [236, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init"], [236, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init"], [236, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::comm_spec"], [236, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::comm_spec"], [236, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::pe_spec"], [236, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::pe_spec"], [236, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output"], [236, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output"], [236, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output::os"], [236, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output::os"], [236, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker"], [236, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker"], [236, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::app"], [236, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::app"], [236, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::graph"], [236, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::graph"], [236, 1, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query"], [236, 1, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query"], [236, 2, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::Args"], [236, 2, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::Args"], [236, 3, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::args"], [236, 3, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::args"], [236, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker9context_tE", "gs::ParallelPropertyWorker::context_t"], [236, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker9context_tE", "gs::ParallelPropertyWorker::context_t"], [236, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE", "gs::ParallelPropertyWorker::fragment_t"], [236, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE", "gs::ParallelPropertyWorker::fragment_t"], [236, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE", "gs::ParallelPropertyWorker::message_manager_t"], [236, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE", "gs::ParallelPropertyWorker::message_manager_t"], [236, 1, 1, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev", "gs::ParallelPropertyWorker::~ParallelPropertyWorker"], [236, 1, 1, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev", "gs::ParallelPropertyWorker::~ParallelPropertyWorker"], [236, 0, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase"], [236, 2, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase::CONTEXT_T"], [236, 2, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase::FRAG_T"], [236, 1, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval"], [236, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::context"], [236, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::graph"], [236, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::messages"], [236, 1, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval"], [236, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::context"], [236, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::graph"], [236, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::messages"], [236, 1, 1, "_CPPv4N2gs15PropertyAppBase15PropertyAppBaseEv", "gs::PropertyAppBase::PropertyAppBase"], [236, 4, 1, "_CPPv4N2gs15PropertyAppBase13load_strategyE", "gs::PropertyAppBase::load_strategy"], [236, 5, 1, "_CPPv4N2gs15PropertyAppBase17message_manager_tE", "gs::PropertyAppBase::message_manager_t"], [236, 4, 1, "_CPPv4N2gs15PropertyAppBase16message_strategyE", "gs::PropertyAppBase::message_strategy"], [236, 4, 1, "_CPPv4N2gs15PropertyAppBase16need_split_edgesE", "gs::PropertyAppBase::need_split_edges"], [236, 1, 1, "_CPPv4N2gs15PropertyAppBaseD0Ev", "gs::PropertyAppBase::~PropertyAppBase"], [236, 0, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase"], [236, 2, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase::CONTEXT_T"], [236, 2, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase::FRAG_T"], [236, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval"], [236, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval::context"], [236, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval::graph"], [236, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval"], [236, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval::context"], [236, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval::graph"], [236, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase19PropertyAutoAppBaseEv", "gs::PropertyAutoAppBase::PropertyAutoAppBase"], [236, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase13load_strategyE", "gs::PropertyAutoAppBase::load_strategy"], [236, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase16message_strategyE", "gs::PropertyAutoAppBase::message_strategy"], [236, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase16need_split_edgesE", "gs::PropertyAutoAppBase::need_split_edges"], [236, 1, 1, "_CPPv4N2gs19PropertyAutoAppBaseD0Ev", "gs::PropertyAutoAppBase::~PropertyAutoAppBase"], [236, 0, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker"], [236, 0, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker"], [236, 2, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker::APP_T"], [236, 2, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker::APP_T"], [236, 1, 1, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv", "gs::PropertyAutoWorker::Finalize"], [236, 1, 1, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv", "gs::PropertyAutoWorker::Finalize"], [236, 1, 1, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv", "gs::PropertyAutoWorker::GetContext"], [236, 1, 1, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv", "gs::PropertyAutoWorker::GetContext"], [236, 1, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init"], [236, 1, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init"], [236, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::comm_spec"], [236, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::comm_spec"], [236, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::pe_spec"], [236, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::pe_spec"], [236, 1, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output"], [236, 1, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output"], [236, 3, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output::os"], [236, 3, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output::os"], [236, 1, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker"], [236, 1, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker"], [236, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::app"], [236, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::app"], [236, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::graph"], [236, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::graph"], [236, 1, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query"], [236, 1, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query"], [236, 2, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::Args"], [236, 2, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::Args"], [236, 3, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::args"], [236, 3, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::args"], [236, 5, 1, "_CPPv4N2gs18PropertyAutoWorker9context_tE", "gs::PropertyAutoWorker::context_t"], [236, 5, 1, "_CPPv4N2gs18PropertyAutoWorker9context_tE", "gs::PropertyAutoWorker::context_t"], [236, 5, 1, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE", "gs::PropertyAutoWorker::fragment_t"], [236, 5, 1, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE", "gs::PropertyAutoWorker::fragment_t"], [236, 5, 1, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE", "gs::PropertyAutoWorker::message_manager_t"], [236, 5, 1, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE", "gs::PropertyAutoWorker::message_manager_t"], [236, 1, 1, "_CPPv4N2gs18PropertyAutoWorkerD0Ev", "gs::PropertyAutoWorker::~PropertyAutoWorker"], [236, 1, 1, "_CPPv4N2gs18PropertyAutoWorkerD0Ev", "gs::PropertyAutoWorker::~PropertyAutoWorker"], [236, 0, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext"], [236, 2, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext::DATA_T"], [236, 2, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext::FRAG_T"], [236, 1, 1, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t", "gs::TensorContext::TensorContext"], [236, 3, 1, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t", "gs::TensorContext::TensorContext::fragment"], [236, 1, 1, "_CPPv4N2gs13TensorContext6assignERK6data_t", "gs::TensorContext::assign"], [236, 1, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign"], [236, 3, 1, "_CPPv4N2gs13TensorContext6assignERK6data_t", "gs::TensorContext::assign::data"], [236, 3, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign::data"], [236, 3, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign::shape"], [236, 5, 1, "_CPPv4N2gs13TensorContext6data_tE", "gs::TensorContext::data_t"], [236, 1, 1, "_CPPv4N2gs13TensorContext8fragmentEv", "gs::TensorContext::fragment"], [236, 1, 1, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE", "gs::TensorContext::set_shape"], [236, 3, 1, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE", "gs::TensorContext::set_shape::shape"], [236, 1, 1, "_CPPv4NK2gs13TensorContext5shapeEv", "gs::TensorContext::shape"], [236, 1, 1, "_CPPv4N2gs13TensorContext6tensorEv", "gs::TensorContext::tensor"], [236, 0, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper"], [236, 2, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper::DATA_T"], [236, 2, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper::FRAG_T"], [236, 1, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper"], [236, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::ctx"], [236, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::frag_wrapper"], [236, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::id"], [236, 1, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays"], [236, 3, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays::comm_spec"], [236, 3, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays::selectors"], [236, 1, 1, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE", "gs::TensorContextWrapper::ToDataframe"], [236, 3, 1, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE", "gs::TensorContextWrapper::ToDataframe::comm_spec"], [236, 1, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray"], [236, 3, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray::axis"], [236, 3, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray::comm_spec"], [236, 1, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe"], [236, 3, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe::client"], [236, 3, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe::comm_spec"], [236, 1, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor"], [236, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::axis"], [236, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::client"], [236, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::comm_spec"], [236, 1, 1, "_CPPv4N2gs20TensorContextWrapper12context_typeEv", "gs::TensorContextWrapper::context_type"], [236, 1, 1, "_CPPv4N2gs20TensorContextWrapper16fragment_wrapperEv", "gs::TensorContextWrapper::fragment_wrapper"], [236, 0, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper"], [236, 2, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper::DATA_T"], [236, 2, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper::FRAG_T"], [236, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays"], [236, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays::comm_spec"], [236, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays::selectors"], [236, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe"], [236, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::comm_spec"], [236, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::range"], [236, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::selectors"], [236, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray"], [236, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::comm_spec"], [236, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::range"], [236, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::selector"], [236, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe"], [236, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::client"], [236, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::comm_spec"], [236, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::range"], [236, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::selectors"], [236, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor"], [236, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::client"], [236, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::comm_spec"], [236, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::range"], [236, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::selector"], [236, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper"], [236, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::ctx"], [236, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::frag_wrapper"], [236, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::id"], [236, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper12context_typeEv", "gs::VertexDataContextWrapper::context_type"], [236, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper16fragment_wrapperEv", "gs::VertexDataContextWrapper::fragment_wrapper"], [236, 0, 1, "_CPPv4I0EN2gs21VertexPropertyContextE", "gs::VertexPropertyContext"], [236, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContextE", "gs::VertexPropertyContext::FRAG_T"], [236, 1, 1, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t", "gs::VertexPropertyContext::VertexPropertyContext"], [236, 3, 1, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t", "gs::VertexPropertyContext::VertexPropertyContext::fragment"], [236, 1, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column"], [236, 3, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column::name"], [236, 3, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column::type"], [236, 1, 1, "_CPPv4N2gs21VertexPropertyContext8fragmentEv", "gs::VertexPropertyContext::fragment"], [236, 5, 1, "_CPPv4N2gs21VertexPropertyContext10fragment_tE", "gs::VertexPropertyContext::fragment_t"], [236, 1, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t", "gs::VertexPropertyContext::get_column"], [236, 1, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE", "gs::VertexPropertyContext::get_column"], [236, 3, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t", "gs::VertexPropertyContext::get_column::index"], [236, 3, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE", "gs::VertexPropertyContext::get_column::name"], [236, 1, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column"], [236, 1, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column"], [236, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column::DATA_T"], [236, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column::DATA_T"], [236, 3, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column::index"], [236, 3, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column::name"], [236, 5, 1, "_CPPv4N2gs21VertexPropertyContext5oid_tE", "gs::VertexPropertyContext::oid_t"], [236, 5, 1, "_CPPv4N2gs21VertexPropertyContext9prop_id_tE", "gs::VertexPropertyContext::prop_id_t"], [236, 1, 1, "_CPPv4N2gs21VertexPropertyContext14properties_mapEv", "gs::VertexPropertyContext::properties_map"], [236, 1, 1, "_CPPv4N2gs21VertexPropertyContext17vertex_propertiesEv", "gs::VertexPropertyContext::vertex_properties"], [236, 5, 1, "_CPPv4N2gs21VertexPropertyContext8vertex_tE", "gs::VertexPropertyContext::vertex_t"], [236, 0, 1, "_CPPv4N2gs3rpc16AnalyticalServerE", "gs::rpc::AnalyticalServer"], [236, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer"], [236, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::dispatcher"], [236, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::host"], [236, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::port"], [236, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer11StartServerEv", "gs::rpc::AnalyticalServer::StartServer"], [236, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer10StopServerEv", "gs::rpc::AnalyticalServer::StopServer"], [0, 8, 1, "", "all_pairs_shortest_path_length"], [0, 8, 1, "", "attribute_assortativity"], [0, 8, 1, "", "average_degree_connectivity"], [0, 8, 1, "", "betweenness_centrality"], [0, 8, 1, "", "bfs"], [0, 8, 1, "id0", "cdlp"], [0, 8, 1, "", "closeness_centrality"], [0, 8, 1, "id1", "clustering"], [0, 8, 1, "", "degree_assortativity_coefficient"], [0, 8, 1, "", "degree_centrality"], [0, 8, 1, "", "dfs"], [0, 8, 1, "", "eigenvector_centrality"], [0, 8, 1, "", "hits"], [0, 8, 1, "", "katz_centrality"], [0, 8, 1, "", "kkore"], [0, 8, 1, "", "kshell"], [0, 8, 1, "id2", "lcc"], [0, 8, 1, "", "lpa"], [0, 8, 1, "id3", "pagerank"], [0, 8, 1, "", "sampling_path"], [0, 8, 1, "", "sssp"], [0, 8, 1, "id4", "voterank"], [0, 8, 1, "id5", "wcc"]], "graphscope": [[453, 9, 1, "", "Session"], [243, 12, 1, "", "Vertex"], [237, 8, 1, "", "attribute_assortativity_coefficient"], [237, 8, 1, "", "average_degree_connectivity"], [237, 8, 1, "", "average_shortest_path_length"], [237, 8, 1, "", "avg_clustering"], [237, 8, 1, "", "bfs"], [237, 8, 1, "", "cdlp"], [237, 8, 1, "", "clustering"], [244, 8, 1, "", "declare"], [237, 8, 1, "", "degree_assortativity_coefficient"], [237, 8, 1, "", "degree_centrality"], [237, 8, 1, "", "eigenvector_centrality"], [287, 8, 1, "", "g"], [288, 8, 1, "", "get_default_session"], [289, 8, 1, "", "graphlearn"], [290, 8, 1, "", "gremlin"], [291, 8, 1, "", "has_default_session"], [237, 8, 1, "", "hits"], [237, 8, 1, "", "is_simple_path"], [237, 8, 1, "", "k_core"], [237, 8, 1, "", "k_shell"], [237, 8, 1, "", "katz_centrality"], [237, 8, 1, "", "louvain"], [237, 8, 1, "", "lpa"], [237, 8, 1, "", "lpa_u2i"], [237, 8, 1, "", "numeric_assortativity_coefficient"], [237, 8, 1, "", "pagerank"], [237, 8, 1, "", "pagerank_nx"], [292, 14, 1, "", "session"], [293, 8, 1, "", "set_option"], [237, 8, 1, "", "sssp"], [237, 8, 1, "", "triangles"], [237, 8, 1, "", "voterank"], [237, 8, 1, "", "wcc"]], "graphscope.Session": [[453, 10, 1, "", "__enter__"], [453, 10, 1, "", "__exit__"], [453, 10, 1, "", "__init__"], [453, 10, 1, "", "add_lib"], [453, 10, 1, "", "as_default"], [453, 10, 1, "", "close"], [453, 10, 1, "", "connected"], [453, 11, 1, "", "engine_config"], [453, 10, 1, "", "g"], [453, 10, 1, "", "get_config"], [453, 10, 1, "", "get_vineyard_object_mapping_table"], [453, 10, 1, "", "graphlearn"], [453, 11, 1, "", "info"], [453, 10, 1, "", "interactive"], [453, 10, 1, "", "load_from"], [453, 10, 1, "", "restore_from_pvc"], [453, 10, 1, "", "run_fetches"], [453, 10, 1, "", "store_to_pvc"]], "graphscope.analytical.app": [[237, 9, 1, "", "JavaApp"]], "graphscope.analytical.app.JavaApp": [[237, 10, 1, "", "__call__"], [237, 10, 1, "", "__init__"], [237, 10, 1, "", "is_compatible"], [237, 10, 1, "", "signature"]], "graphscope.framework.app": [[237, 9, 1, "", "App"], [237, 9, 1, "", "AppAssets"], [237, 9, 1, "", "AppDAGNode"], [245, 8, 1, "", "load_app"]], "graphscope.framework.app.App": [[237, 10, 1, "", "__del__"], [237, 10, 1, "", "__init__"], [237, 11, 1, "", "key"], [237, 11, 1, "", "signature"]], "graphscope.framework.app.AppAssets": [[237, 10, 1, "", "__init__"], [237, 11, 1, "", "algo"], [237, 11, 1, "", "context_type"], [237, 11, 1, "", "gar"], [237, 10, 1, "", "is_compatible"], [237, 11, 1, "", "signature"], [237, 11, 1, "", "type"]], "graphscope.framework.context": [[238, 9, 1, "", "BaseContextDAGNode"], [238, 9, 1, "", "Context"], [238, 9, 1, "", "DynamicVertexDataContext"], [238, 9, 1, "", "LabeledVertexDataContextDAGNode"], [238, 9, 1, "", "LabeledVertexPropertyContextDAGNode"], [238, 9, 1, "", "ResultDAGNode"], [238, 9, 1, "", "TensorContextDAGNode"], [238, 9, 1, "", "VertexDataContextDAGNode"], [238, 9, 1, "", "VertexPropertyContextDAGNode"]], "graphscope.framework.context.BaseContextDAGNode": [[238, 10, 1, "", "to_dataframe"], [238, 10, 1, "", "to_numpy"], [238, 10, 1, "", "to_vineyard_dataframe"], [238, 10, 1, "", "to_vineyard_tensor"]], "graphscope.framework": [[450, 13, 0, "-", "dag_utils"]], "graphscope.framework.dag_utils": [[246, 8, 1, "", "add_column"], [247, 8, 1, "", "add_labels_to_graph"], [248, 8, 1, "", "arrow_to_dynamic"], [249, 8, 1, "", "bind_app"], [250, 8, 1, "", "clear_edges"], [251, 8, 1, "", "clear_graph"], [252, 8, 1, "", "context_to_dataframe"], [253, 8, 1, "", "context_to_numpy"], [254, 8, 1, "", "copy_graph"], [255, 8, 1, "", "create_app"], [256, 8, 1, "", "create_graph"], [257, 8, 1, "", "create_graph_view"], [258, 8, 1, "", "create_loader"], [259, 8, 1, "", "create_subgraph"], [260, 8, 1, "", "create_unload_op"], [261, 8, 1, "", "dynamic_to_arrow"], [262, 8, 1, "", "get_context_data"], [263, 8, 1, "", "graph_to_dataframe"], [264, 8, 1, "", "graph_to_numpy"], [265, 8, 1, "", "gremlin_to_subgraph"], [266, 8, 1, "", "modify_edges"], [267, 8, 1, "", "modify_vertices"], [268, 8, 1, "", "output"], [269, 8, 1, "", "project_arrow_property_graph"], [270, 8, 1, "", "project_to_simple"], [271, 8, 1, "", "report_graph"], [272, 8, 1, "", "run_app"], [273, 8, 1, "", "to_data_sink"], [274, 8, 1, "", "to_directed"], [275, 8, 1, "", "to_undirected"], [276, 8, 1, "", "to_vineyard_dataframe"], [277, 8, 1, "", "to_vineyard_tensor"], [278, 8, 1, "", "unload_app"], [279, 8, 1, "", "unload_context"], [280, 8, 1, "", "unload_graph"]], "graphscope.framework.graph": [[308, 9, 1, "", "Graph"], [308, 9, 1, "", "GraphDAGNode"]], "graphscope.framework.graph.Graph": [[308, 10, 1, "", "__init__"], [308, 10, 1, "", "add_column"], [308, 10, 1, "", "add_edges"], [308, 10, 1, "", "add_vertices"], [308, 10, 1, "", "consolidate_columns"], [308, 10, 1, "", "detach"], [308, 11, 1, "", "key"], [308, 10, 1, "", "load_from"], [308, 10, 1, "", "loaded"], [308, 10, 1, "", "project"], [308, 10, 1, "", "save_to"], [308, 11, 1, "", "schema"], [308, 11, 1, "", "schema_path"], [308, 11, 1, "", "session_id"], [308, 10, 1, "", "to_dataframe"], [308, 10, 1, "", "to_directed"], [308, 10, 1, "", "to_numpy"], [308, 10, 1, "", "to_undirected"], [308, 11, 1, "", "vineyard_id"]], "graphscope.framework.graph.GraphDAGNode": [[308, 10, 1, "", "__init__"], [308, 10, 1, "", "add_column"], [308, 10, 1, "", "add_edges"], [308, 10, 1, "", "add_vertices"], [308, 10, 1, "", "consolidate_columns"], [308, 10, 1, "", "project"]], "graphscope.framework.graph_builder": [[308, 8, 1, "", "load_from"]], "graphscope.framework.loader": [[308, 9, 1, "", "Loader"]], "graphscope.framework.loader.Loader": [[308, 10, 1, "", "__init__"]], "graphscope.framework.operation": [[450, 9, 1, "", "Operation"]], "graphscope.framework.operation.Operation": [[281, 10, 1, "", "__init__"], [282, 10, 1, "", "as_op_def"], [283, 10, 1, "", "eval"], [284, 11, 1, "", "evaluated"], [285, 11, 1, "", "key"], [286, 11, 1, "", "signature"]], "graphscope.interactive.query": [[309, 9, 1, "", "InteractiveQuery"]], "graphscope.interactive.query.InteractiveQuery": [[309, 10, 1, "", "__init__"], [309, 10, 1, "", "close"], [309, 11, 1, "", "cypher_driver"], [309, 11, 1, "", "cypher_url"], [309, 10, 1, "", "execute"], [309, 11, 1, "", "graph_url"], [309, 11, 1, "", "gremlin_client"], [309, 11, 1, "", "gremlin_url"], [309, 11, 1, "", "object_id"], [309, 11, 1, "", "session"], [309, 11, 1, "", "session_id"], [309, 10, 1, "", "subgraph"], [309, 10, 1, "", "submit"], [309, 10, 1, "", "traversal_source"]], "graphscope.learning.graph": [[310, 9, 1, "", "Graph"]], "graphscope.learning.graph.Graph": [[310, 10, 1, "", "E"], [310, 10, 1, "", "V"], [310, 10, 1, "", "__init__"], [310, 10, 1, "", "get_handle"]], "graphscope.nx": [[446, 9, 1, "", "DiGraph"], [446, 9, 1, "", "Graph"], [448, 8, 1, "", "read_adjlist"], [448, 8, 1, "", "read_edgelist"]], "graphscope.nx.DiGraph": [[446, 10, 1, "", "__contains__"], [446, 10, 1, "", "__getitem__"], [446, 10, 1, "", "__init__"], [446, 10, 1, "", "__iter__"], [446, 10, 1, "", "__len__"], [446, 10, 1, "", "add_edge"], [446, 10, 1, "", "add_edges_from"], [446, 10, 1, "", "add_node"], [446, 10, 1, "", "add_nodes_from"], [446, 10, 1, "", "add_weighted_edges_from"], [446, 11, 1, "", "adj"], [446, 10, 1, "", "adjacency"], [446, 14, 1, "", "adjlist_inner_dict_factory"], [446, 14, 1, "", "adjlist_outer_dict_factory"], [446, 10, 1, "", "clear"], [446, 10, 1, "", "clear_edges"], [446, 10, 1, "", "copy"], [446, 11, 1, "", "degree"], [446, 14, 1, "", "edge_attr_dict_factory"], [446, 10, 1, "", "edge_subgraph"], [446, 11, 1, "", "edges"], [446, 10, 1, "", "get_edge_data"], [446, 14, 1, "", "graph_attr_dict_factory"], [446, 14, 1, "", "graph_cache_factory"], [446, 11, 1, "", "graph_type"], [446, 10, 1, "", "has_edge"], [446, 10, 1, "", "has_node"], [446, 10, 1, "", "has_predecessor"], [446, 10, 1, "", "has_successor"], [446, 11, 1, "", "in_degree"], [446, 11, 1, "", "in_edges"], [446, 10, 1, "", "is_directed"], [446, 10, 1, "", "is_multigraph"], [446, 11, 1, "", "key"], [446, 11, 1, "", "name"], [446, 10, 1, "", "nbunch_iter"], [446, 10, 1, "", "neighbors"], [446, 14, 1, "", "node_attr_dict_factory"], [446, 14, 1, "", "node_dict_factory"], [446, 11, 1, "", "nodes"], [446, 10, 1, "", "number_of_edges"], [446, 10, 1, "", "number_of_nodes"], [446, 11, 1, "", "op"], [446, 10, 1, "", "order"], [446, 11, 1, "", "out_degree"], [446, 11, 1, "", "out_edges"], [446, 11, 1, "", "pred"], [446, 10, 1, "", "predecessors"], [446, 10, 1, "", "remove_edge"], [446, 10, 1, "", "remove_edges_from"], [446, 10, 1, "", "remove_node"], [446, 10, 1, "", "remove_nodes_from"], [446, 10, 1, "", "reverse"], [446, 11, 1, "", "schema"], [446, 11, 1, "", "session"], [446, 11, 1, "", "session_id"], [446, 10, 1, "", "set_edge_data"], [446, 10, 1, "", "set_node_data"], [446, 11, 1, "", "signature"], [446, 10, 1, "", "size"], [446, 10, 1, "", "subgraph"], [446, 11, 1, "", "succ"], [446, 10, 1, "", "successors"], [446, 10, 1, "", "to_directed"], [446, 10, 1, "", "to_undirected"], [446, 10, 1, "", "to_undirected_class"], [446, 10, 1, "", "update"]], "graphscope.nx.Graph": [[446, 10, 1, "", "__contains__"], [446, 10, 1, "", "__getitem__"], [449, 8, 1, "", "__init__"], [446, 10, 1, "", "__iter__"], [446, 10, 1, "", "__len__"], [449, 8, 1, "", "_convert_arrow_to_dynamic"], [446, 10, 1, "", "add_edge"], [446, 10, 1, "", "add_edges_from"], [446, 10, 1, "", "add_node"], [446, 10, 1, "", "add_nodes_from"], [446, 10, 1, "", "add_weighted_edges_from"], [446, 11, 1, "", "adj"], [446, 10, 1, "", "adjacency"], [446, 14, 1, "", "adjlist_inner_dict_factory"], [446, 14, 1, "", "adjlist_outer_dict_factory"], [446, 10, 1, "", "clear"], [446, 10, 1, "", "clear_edges"], [446, 10, 1, "", "copy"], [446, 11, 1, "", "degree"], [446, 14, 1, "", "edge_attr_dict_factory"], [446, 10, 1, "", "edge_subgraph"], [446, 11, 1, "", "edges"], [446, 10, 1, "", "get_edge_data"], [446, 14, 1, "", "graph_attr_dict_factory"], [446, 14, 1, "", "graph_cache_factory"], [446, 11, 1, "", "graph_type"], [446, 10, 1, "", "has_edge"], [446, 10, 1, "", "has_node"], [446, 10, 1, "", "is_directed"], [446, 10, 1, "", "is_multigraph"], [446, 11, 1, "", "key"], [446, 11, 1, "", "name"], [446, 10, 1, "", "nbunch_iter"], [446, 10, 1, "", "neighbors"], [446, 14, 1, "", "node_attr_dict_factory"], [446, 14, 1, "", "node_dict_factory"], [446, 11, 1, "", "nodes"], [446, 10, 1, "", "number_of_edges"], [446, 10, 1, "", "number_of_nodes"], [446, 11, 1, "", "op"], [446, 10, 1, "", "order"], [446, 10, 1, "", "remove_edge"], [446, 10, 1, "", "remove_edges_from"], [446, 10, 1, "", "remove_node"], [446, 10, 1, "", "remove_nodes_from"], [446, 11, 1, "", "schema"], [446, 11, 1, "", "session"], [446, 11, 1, "", "session_id"], [446, 10, 1, "", "set_edge_data"], [446, 10, 1, "", "set_node_data"], [446, 11, 1, "", "signature"], [446, 10, 1, "", "size"], [446, 10, 1, "", "subgraph"], [446, 10, 1, "", "to_directed"], [446, 10, 1, "", "to_undirected"], [446, 10, 1, "", "to_undirected_class"], [446, 10, 1, "", "update"]], "graphscope.nx.builtin": [[311, 8, 1, "", "average_clustering"], [311, 8, 1, "", "average_shortest_path_length"], [311, 8, 1, "", "bfs_edges"], [311, 8, 1, "", "clustering"], [311, 8, 1, "", "degree_centrality"], [311, 8, 1, "", "eigenvector_centrality"], [311, 8, 1, "", "has_path"], [311, 8, 1, "", "hits"], [311, 8, 1, "", "in_degree_centrality"], [311, 8, 1, "", "k_core"], [311, 8, 1, "", "katz_centrality"], [311, 8, 1, "", "out_degree_centrality"], [311, 8, 1, "", "triangles"]], "graphscope.nx.classes": [[312, 13, 0, "-", "function"]], "graphscope.nx.classes.function": [[313, 8, 1, "", "add_cycle"], [314, 8, 1, "", "add_path"], [315, 8, 1, "", "add_star"], [316, 8, 1, "", "all_neighbors"], [317, 8, 1, "", "common_neighbors"], [318, 8, 1, "", "create_empty_copy"], [319, 8, 1, "", "degree"], [320, 8, 1, "", "degree_histogram"], [321, 8, 1, "", "density"], [322, 8, 1, "", "edge_subgraph"], [323, 8, 1, "", "edges"], [324, 8, 1, "", "freeze"], [325, 8, 1, "", "induced_subgraph"], [326, 8, 1, "", "info"], [327, 8, 1, "", "is_directed"], [328, 8, 1, "", "is_empty"], [329, 8, 1, "", "is_frozen"], [330, 8, 1, "", "is_negatively_weighted"], [331, 8, 1, "", "is_weighted"], [332, 8, 1, "", "neighbors"], [333, 8, 1, "", "nodes"], [334, 8, 1, "", "nodes_with_selfloops"], [335, 8, 1, "", "non_edges"], [336, 8, 1, "", "non_neighbors"], [337, 8, 1, "", "number_of_edges"], [338, 8, 1, "", "number_of_nodes"], [339, 8, 1, "", "number_of_selfloops"], [340, 8, 1, "", "selfloop_edges"], [341, 8, 1, "", "subgraph"], [342, 8, 1, "", "to_directed"], [343, 8, 1, "", "to_undirected"]], "graphscope.nx.generators": [[445, 13, 0, "-", "atlas"], [445, 13, 0, "-", "classic"], [445, 13, 0, "-", "community"], [445, 13, 0, "-", "degree_seq"], [445, 13, 0, "-", "directed"], [445, 13, 0, "-", "duplication"], [445, 13, 0, "-", "ego"], [445, 13, 0, "-", "expanders"], [445, 13, 0, "-", "geometric"], [445, 13, 0, "-", "harary_graph"], [445, 13, 0, "-", "intersection"], [445, 13, 0, "-", "joint_degree_seq"], [445, 13, 0, "-", "mycielski"], [445, 13, 0, "-", "nonisomorphic_trees"], [445, 13, 0, "-", "small"], [445, 13, 0, "-", "social"], [445, 13, 0, "-", "spectral_graph_forge"], [445, 13, 0, "-", "sudoku"], [445, 13, 0, "-", "trees"], [445, 13, 0, "-", "triads"]], "graphscope.nx.generators.atlas": [[344, 8, 1, "", "graph_atlas"], [345, 8, 1, "", "graph_atlas_g"]], "graphscope.nx.generators.classic": [[346, 8, 1, "", "balanced_tree"], [347, 8, 1, "", "barbell_graph"], [348, 8, 1, "", "binomial_tree"], [349, 8, 1, "", "circulant_graph"], [350, 8, 1, "", "circular_ladder_graph"], [351, 8, 1, "", "complete_graph"], [352, 8, 1, "", "complete_multipartite_graph"], [353, 8, 1, "", "cycle_graph"], [354, 8, 1, "", "dorogovtsev_goltsev_mendes_graph"], [355, 8, 1, "", "empty_graph"], [356, 8, 1, "", "full_rary_tree"], [357, 8, 1, "", "ladder_graph"], [358, 8, 1, "", "lollipop_graph"], [359, 8, 1, "", "null_graph"], [360, 8, 1, "", "path_graph"], [361, 8, 1, "", "star_graph"], [362, 8, 1, "", "trivial_graph"], [363, 8, 1, "", "turan_graph"], [364, 8, 1, "", "wheel_graph"]], "graphscope.nx.generators.community": [[365, 8, 1, "", "LFR_benchmark_graph"], [366, 8, 1, "", "caveman_graph"], [367, 8, 1, "", "connected_caveman_graph"], [368, 8, 1, "", "gaussian_random_partition_graph"], [369, 8, 1, "", "planted_partition_graph"], [370, 8, 1, "", "random_partition_graph"], [371, 8, 1, "", "relaxed_caveman_graph"], [372, 8, 1, "", "ring_of_cliques"], [373, 8, 1, "", "stochastic_block_model"], [374, 8, 1, "", "windmill_graph"]], "graphscope.nx.generators.degree_seq": [[375, 8, 1, "", "configuration_model"], [376, 8, 1, "", "degree_sequence_tree"], [377, 8, 1, "", "directed_configuration_model"], [378, 8, 1, "", "directed_havel_hakimi_graph"], [379, 8, 1, "", "expected_degree_graph"], [380, 8, 1, "", "havel_hakimi_graph"], [381, 8, 1, "", "random_degree_sequence_graph"]], "graphscope.nx.generators.directed": [[382, 8, 1, "", "gn_graph"], [383, 8, 1, "", "gnc_graph"], [384, 8, 1, "", "gnr_graph"], [385, 8, 1, "", "random_k_out_graph"], [386, 8, 1, "", "scale_free_graph"]], "graphscope.nx.generators.duplication": [[387, 8, 1, "", "duplication_divergence_graph"], [388, 8, 1, "", "partial_duplication_graph"]], "graphscope.nx.generators.ego": [[389, 8, 1, "", "ego_graph"]], "graphscope.nx.generators.expanders": [[390, 8, 1, "", "chordal_cycle_graph"], [391, 8, 1, "", "margulis_gabber_galil_graph"], [392, 8, 1, "", "paley_graph"]], "graphscope.nx.generators.geometric": [[393, 8, 1, "", "geographical_threshold_graph"], [394, 8, 1, "", "random_geometric_graph"], [395, 8, 1, "", "soft_random_geometric_graph"], [396, 8, 1, "", "thresholded_random_geometric_graph"], [397, 8, 1, "", "waxman_graph"]], "graphscope.nx.generators.harary_graph": [[398, 8, 1, "", "hkn_harary_graph"], [399, 8, 1, "", "hnm_harary_graph"]], "graphscope.nx.generators.intersection": [[400, 8, 1, "", "general_random_intersection_graph"], [401, 8, 1, "", "k_random_intersection_graph"], [402, 8, 1, "", "uniform_random_intersection_graph"]], "graphscope.nx.generators.joint_degree_seq": [[403, 8, 1, "", "directed_joint_degree_graph"], [404, 8, 1, "", "is_valid_directed_joint_degree"], [405, 8, 1, "", "is_valid_joint_degree"], [406, 8, 1, "", "joint_degree_graph"]], "graphscope.nx.generators.mycielski": [[407, 8, 1, "", "mycielski_graph"], [408, 8, 1, "", "mycielskian"]], "graphscope.nx.generators.nonisomorphic_trees": [[409, 8, 1, "", "nonisomorphic_trees"], [410, 8, 1, "", "number_of_nonisomorphic_trees"]], "graphscope.nx.generators.small": [[411, 8, 1, "", "LCF_graph"], [412, 8, 1, "", "bull_graph"], [413, 8, 1, "", "chvatal_graph"], [414, 8, 1, "", "cubical_graph"], [415, 8, 1, "", "desargues_graph"], [416, 8, 1, "", "diamond_graph"], [417, 8, 1, "", "dodecahedral_graph"], [418, 8, 1, "", "frucht_graph"], [419, 8, 1, "", "heawood_graph"], [420, 8, 1, "", "house_graph"], [421, 8, 1, "", "house_x_graph"], [422, 8, 1, "", "icosahedral_graph"], [423, 8, 1, "", "krackhardt_kite_graph"], [424, 8, 1, "", "make_small_graph"], [425, 8, 1, "", "moebius_kantor_graph"], [426, 8, 1, "", "octahedral_graph"], [427, 8, 1, "", "pappus_graph"], [428, 8, 1, "", "petersen_graph"], [429, 8, 1, "", "sedgewick_maze_graph"], [430, 8, 1, "", "tetrahedral_graph"], [431, 8, 1, "", "truncated_cube_graph"], [432, 8, 1, "", "truncated_tetrahedron_graph"], [433, 8, 1, "", "tutte_graph"]], "graphscope.nx.generators.social": [[434, 8, 1, "", "davis_southern_women_graph"], [435, 8, 1, "", "florentine_families_graph"], [436, 8, 1, "", "karate_club_graph"], [437, 8, 1, "", "les_miserables_graph"]], "graphscope.nx.generators.spectral_graph_forge": [[438, 8, 1, "", "spectral_graph_forge"]], "graphscope.nx.generators.sudoku": [[439, 8, 1, "", "sudoku_graph"]], "graphscope.nx.generators.trees": [[440, 8, 1, "", "prefix_tree"], [441, 8, 1, "", "random_tree"]], "graphscope.nx.generators.triads": [[442, 8, 1, "", "triad_graph"]], "networkx.generators": [[445, 13, 0, "-", "internet_as_graphs"], [445, 13, 0, "-", "stochastic"]], "networkx.generators.internet_as_graphs": [[443, 8, 1, "", "random_internet_as_graph"]], "networkx.generators.stochastic": [[444, 8, 1, "", "stochastic_graph"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:function", "2": "cpp:templateParam", "3": "cpp:functionParam", "4": "cpp:member", "5": "cpp:type", "6": "cpp:enum", "7": "cpp:enumerator", "8": "py:function", "9": "py:class", "10": "py:method", "11": "py:property", "12": "py:data", "13": "py:module", "14": "py:attribute"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "function", "C++ function"], "2": ["cpp", "templateParam", "C++ template parameter"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "member", "C++ member"], "5": ["cpp", "type", "C++ type"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "enumerator", "C++ enumerator"], "8": ["py", "function", "Python function"], "9": ["py", "class", "Python class"], "10": ["py", "method", "Python method"], "11": ["py", "property", "Python property"], "12": ["py", "data", "Python data"], "13": ["py", "module", "Python module"], "14": ["py", "attribute", "Python attribute"]}, "titleterms": {"built": [0, 6, 215, 225, 306, 459, 461], "algorithm": [0, 1, 2, 6, 9, 11, 15, 16, 17, 18, 19, 21, 22, 23, 34, 215, 294, 311, 461, 463], "all": [0, 31, 32, 36, 41], "pair": 0, "shortest": 0, "path": [0, 208, 210, 212], "length": 0, "attribut": [0, 20, 295, 312], "assort": 0, "averag": 0, "degre": [0, 319, 445], "connect": [0, 29, 30, 203, 211, 459, 466], "between": [0, 208, 455], "central": [0, 17], "breadth": 0, "first": [0, 199], "search": 0, "cdlp": 0, "close": [0, 466], "cluster": [0, 27, 30, 33, 41, 199, 221, 223], "coeffici": 0, "depth": 0, "eigenvector": 0, "hyperlink": 0, "induc": [0, 20], "topic": 0, "katz": 0, "k": 0, "core": 0, "shell": [0, 203], "label": [0, 210, 212, 225, 295, 458, 479], "propag": 0, "lcc": 0, "pagerank": 0, "sampl": [0, 42, 44, 210, 219, 231, 294, 298, 300, 303, 306], "singl": [0, 46, 196], "sourc": [0, 17, 31, 32, 44, 210, 241, 295, 301, 304, 305], "voterank": 0, "wcc": 0, "custom": [1, 23, 27, 42, 43, 46, 202, 459], "aggreg": [1, 208, 210, 212, 216], "local": [1, 7, 32, 36, 38, 41, 201, 202, 210, 217, 218, 222, 224, 458, 459], "vertex": [1, 10, 24, 44, 212, 225, 243, 452, 458, 479], "map": [1, 44, 192, 455], "support": [1, 11, 23, 44, 205, 210, 215], "deploy": [2, 27, 38, 46, 198, 199], "gae": [2, 34, 228, 463, 467], "prerequisit": [2, 16, 27, 29, 30, 32, 33, 185, 199, 459], "onli": [2, 37], "python": [2, 15, 18, 31, 35, 36, 181, 203, 211, 215, 235, 451, 459, 463, 471], "sdk": [2, 16, 34, 115, 181, 187, 211, 239], "helm": [2, 29, 46], "execut": [2, 34, 204, 226], "graph": [2, 9, 11, 13, 19, 20, 30, 33, 34, 43, 44, 45, 46, 186, 195, 196, 198, 204, 207, 208, 212, 215, 216, 219, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 294, 296, 297, 298, 299, 300, 302, 306, 308, 310, 312, 445, 446, 448, 449, 455, 457, 458, 459, 460, 461, 467], "analyt": [2, 3, 4, 7, 10, 13, 24, 31, 195, 198, 215, 226, 227, 229, 234, 236, 237, 467], "uninstal": [2, 29, 459], "design": [3, 9, 34, 200, 215, 216, 226, 304, 458], "engin": [3, 4, 7, 9, 10, 12, 24, 31, 36, 42, 198, 202, 215, 217, 218, 222, 223, 224, 226, 234, 236, 458, 467], "dev": [4, 32, 36, 41, 201, 217], "test": [4, 36, 37, 41, 181, 201, 217, 223, 224, 301], "setup": [4, 32], "understand": 4, "codebas": 4, "make": [4, 20], "modif": 4, "build": [4, 17, 32, 36, 41, 201, 217, 241, 294, 301, 459, 479], "faq": [5, 208], "program": [6, 12, 14, 34, 196, 304], "model": [6, 12, 14, 15, 16, 17, 24, 34, 45, 186, 216, 221, 222, 223, 224, 228, 231, 294, 302, 306, 458, 459], "flash": [6, 15, 228], "motiv": [6, 9, 200, 226, 458], "The": [6, 19, 30, 186, 190, 200, 457], "overview": [6, 9, 12, 182, 186, 190, 198, 302, 459], "api": [6, 9, 12, 19, 20, 115, 181, 182, 204, 236, 239, 240, 295, 306, 447, 451, 475], "strong": 6, "express": [6, 210, 212], "implement": [6, 15, 17, 37, 304, 458], "architectur": [6, 12, 200, 455], "optim": [6, 13, 207, 208, 224], "get": [7, 17, 37, 115, 181, 183, 194, 202, 218, 227, 301, 456], "start": [7, 43, 115, 181, 182, 183, 194, 201, 202, 212, 218, 227, 306, 456], "instal": [7, 27, 29, 30, 31, 32, 36, 37, 115, 181, 185, 198, 202, 217, 218, 301, 459, 466], "run": [7, 15, 16, 17, 18, 21, 22, 23, 37, 41, 183, 196, 202, 210, 218, 223, 301], "graphscop": [7, 10, 15, 16, 17, 19, 20, 22, 23, 26, 27, 28, 29, 30, 31, 32, 36, 41, 47, 48, 49, 187, 191, 196, 198, 202, 218, 226, 229, 231, 232, 233, 236, 239, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 455, 457, 467, 471, 475, 476], "what": [7, 14, 202, 208, 218, 229, 231, 232], "": [7, 202, 208, 218, 236], "next": [7, 202, 218, 232], "guid": [8, 35, 36, 47, 209, 220, 459, 463, 464], "exampl": [8, 17, 22, 23, 50, 51, 52, 53, 86, 87, 96, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 209, 210, 220, 463, 464], "ingress": [9, 228], "increment": [9, 12], "messag": [9, 216], "driven": 9, "differenti": 9, "flexibl": [9, 34], "memoiz": 9, "distribut": [9, 196, 296, 304], "runtim": [9, 34, 304], "kei": [10, 186, 204, 208, 215, 285], "concept": [10, 458], "loadstrategi": 10, "onlyout": 10, "onlyin": 10, "bothinout": 10, "partitionstrategi": 10, "edg": [10, 20, 44, 212, 225, 312, 323, 448, 458, 479], "cut": [10, 458], "vertic": [10, 212, 225, 479], "outervertex": 10, "innervertex": 10, "innervertexwithoutgoingedg": 10, "innervertexwithincomingedg": 10, "messagemanag": 10, "messagestrategi": 10, "alongoutgoingedgetooutervertex": 10, "alongincomingedgetooutervertex": 10, "alongedgetooutervertex": 10, "synconoutervertexastarget": 10, "synconoutervertexassourc": 10, "synconoutervertex": 10, "networkx": [11, 19, 20, 443, 444, 447], "compat": [11, 208], "convert": 11, "nx": [11, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "oper": [11, 20, 28, 205, 212, 281, 282, 283, 284, 285, 286, 304, 450], "storag": [12, 33, 34, 198, 226, 455, 458], "layer": [12, 226], "grape": [12, 17, 228, 241], "ffi": 12, "comput": [12, 196, 198, 226, 458], "applic": [12, 15, 22, 23, 212, 226, 461], "perform": [13, 19, 34, 208, 215, 234], "tune": 13, "memori": [13, 225, 460], "footprint": 13, "properti": [13, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 186, 205, 208, 210, 212, 225, 457, 458, 479], "data": [13, 43, 44, 45, 46, 115, 181, 196, 199, 205, 208, 225, 295, 302, 305, 306, 457, 459], "structur": [13, 115, 181, 205, 241, 312], "usag": [13, 181, 190, 208, 225], "estim": [13, 454], "pie": [14, 16, 17, 18, 228, 239, 469], "i": [14, 210, 229, 231, 232], "workflow": [14, 215, 455], "tutori": [15, 16, 17, 18, 19, 20, 21, 22, 23, 212, 214, 221, 222, 223, 224, 235], "develop": [15, 16, 17, 18, 22, 23, 36, 47, 182, 198, 294, 306, 459, 463], "your": [15, 16, 17, 18, 22, 37, 42, 199, 222, 224, 225, 294, 304, 463], "c": [15, 16, 35, 48, 463], "defin": [15, 16, 222, 223, 224, 304, 455], "A": [15, 186, 198, 207], "function": [15, 18, 223, 224, 237, 239, 294, 308, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 453], "integr": [15, 37, 196, 305], "client": [15, 27, 30, 36, 223, 296, 466], "step": [16, 43, 210, 212, 231], "1": [16, 43, 192, 204, 295, 296, 298, 306], "context": [16, 236, 238, 452], "class": [16, 304, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "2": [16, 43, 192, 204, 295, 296, 306, 459], "3": [16, 43, 192, 204, 295, 296, 306, 459], "packag": [16, 31, 32, 223, 301], "4": [16, 192, 204, 295, 306], "gar": 16, "file": [16, 27, 31, 44, 305, 457], "github": [16, 17, 25, 37], "templat": [16, 17], "java": [17, 35, 39, 115, 211, 214, 242, 459, 463], "jar": 17, "own": [17, 18, 22, 199, 225, 294, 304], "prepar": [17, 27, 30, 41, 183, 306], "jdk": [17, 241], "from": [17, 19, 20, 31, 32, 33, 44, 198, 204, 212, 225, 241, 301, 455, 459], "maven": [17, 115], "repositori": 17, "submit": [17, 22, 23, 37, 40], "javasdk": 17, "write": [18, 223, 459], "pregel": [18, 24, 239, 469], "us": [18, 20, 27, 32, 43, 199, 204, 208, 215, 232, 301, 304, 306, 452, 455, 459, 460], "math": [18, 469], "h": [18, 469], "how": [19, 37, 39, 40, 41, 197, 208, 217, 294, 304, 306, 467], "doe": 19, "analysi": [19, 226], "displai": 19, "speed": 19, "up": [19, 27, 30, 33], "over": 19, "creat": [20, 33, 37, 43, 48, 221, 224], "an": [20, 204, 304], "empti": 20, "ad": [20, 225], "node": [20, 46, 216, 221, 222, 223, 224, 312, 333, 459], "examin": 20, "element": 20, "remov": [20, 199], "constructor": 20, "access": 20, "neighbor": [20, 224, 332], "deepcopi": 20, "subgraph": [20, 208, 210, 216, 219, 231, 341], "edge_subgraph": [20, 322], "copi": [20, 31], "direct": [20, 382, 383, 384, 385, 386, 445], "analyz": 20, "object": [20, 237, 238, 296, 308, 450, 453], "transform": [20, 449], "builtin": [21, 237, 311, 450], "giraph": 22, "try": [22, 43, 306], "some": [22, 212], "app": [22, 23, 236, 237, 245], "graphx": 23, "deploi": [23, 26, 27, 28, 29, 30, 46, 199, 459], "along": 23, "spark": 23, "includ": 23, "depend": [23, 31, 32, 301], "toward": 23, "centric": [24, 216], "ga": 24, "simul": 24, "contact": 25, "u": 25, "slack": [25, 37], "discuss": [25, 37], "cloud": [26, 215, 295], "k8": [27, 221, 223, 467], "kubernet": [27, 30, 33, 38, 41, 221, 471, 476], "launch": [27, 222, 223, 224], "default": 27, "paramet": [27, 50, 51, 52, 53, 86, 87, 91, 96, 116, 117, 118, 119, 152, 153, 158, 162, 223, 225], "frequent": [27, 193], "imag": [27, 32, 41, 301, 459], "uri": 27, "specifi": [27, 225], "number": 27, "worker": [27, 236], "provid": 27, "kubeconfig": 27, "other": [27, 43, 115, 199, 225, 305, 459], "than": 27, "mount": 27, "volum": 27, "inspect": 27, "clean": [27, 30, 33], "coordin": [28, 36], "configur": [28, 29, 42, 44, 46, 199, 202, 223, 307, 459], "releas": [29, 37], "offlin": [29, 31, 459], "exist": 30, "vineyard": [30, 201, 228, 460], "lifecycl": 30, "load": [30, 44, 204, 212, 221, 222, 223, 224, 225, 455, 457, 459, 460], "dataset": [30, 204, 225, 459], "anoth": 30, "session": [30, 221, 292, 453], "environ": [31, 32, 36, 41, 201, 204, 217], "wheel": [31, 301, 471], "download": [31, 204], "destin": 31, "extract": [31, 212], "them": [31, 225], "locat": 31, "basic": [31, 212, 295], "gcc": 31, "g": [31, 287], "third": 31, "parti": 31, "stabl": 32, "version": 32, "preview": 32, "linux": [32, 471], "maco": [32, 471], "persist": [33, 459], "pv": 33, "pvc": 33, "store": [33, 48, 49, 184, 188, 201, 459], "retor": 33, "framework": [34, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "multi": [34, 452], "languag": [34, 186, 300], "high": [34, 215, 226, 459], "librari": [34, 215, 301], "code": [35, 37, 182, 304, 465], "style": [35, 37, 447, 458], "rust": 35, "script": [35, 223, 466], "linter": 35, "checker": 35, "contain": [36, 217], "dep": [36, 217], "target": [36, 41, 225], "compon": 36, "individu": 36, "contribut": 37, "conduct": 37, "commun": [37, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 445], "report": [37, 197], "bug": [37, 197], "request": [37, 40, 50, 51, 52, 53, 86, 87, 96, 116, 117, 118, 119, 152, 153, 162, 182], "featur": [37, 186, 215, 457, 459], "improv": 37, "document": [37, 115, 181, 182], "chang": [37, 466], "pre": 37, "commit": [37, 459], "minor": 37, "fix": 37, "fork": 37, "branch": [37, 210], "suit": 37, "format": [37, 295, 457, 459], "right": 37, "keep": 37, "pull": [37, 40], "updat": [37, 466], "merg": 37, "pr": 37, "maintain": 37, "ship": 37, "review": 37, "continu": 37, "debug": 38, "find": [38, 467], "log": [38, 455, 459, 467], "command": [38, 182, 190, 466], "techniqu": [38, 225], "instrument": 39, "automat": 39, "servic": [42, 43, 115, 181, 182, 183, 190, 199, 201, 459], "avail": [42, 459], "new": [43, 304], "import": [43, 44, 223, 459], "modern": 44, "csv": 44, "odp": 44, "tabl": [44, 192, 198, 295], "breakdown": 44, "entiti": 45, "primit": 45, "type": [45, 50, 51, 52, 53, 86, 87, 96, 116, 117, 118, 119, 152, 153, 162, 205, 207, 225, 233, 239, 295, 446, 457], "string": 45, "tempor": 45, "arrai": [45, 458], "docker": [46, 217, 301, 471], "quickstart": 46, "multipl": [46, 208, 212, 225], "valu": [46, 208, 210, 212], "yaml": 46, "interact": [47, 48, 49, 183, 185, 187, 191, 195, 198, 202, 227, 230, 234, 309, 467], "procedur": [48, 49, 184, 188, 190], "turn": 49, "cypher": [49, 183, 184, 186, 203, 205, 215, 230], "queri": [49, 183, 186, 188, 195, 200, 204, 208, 212, 226, 227, 297, 309, 459], "craft": 49, "compil": [49, 182, 184, 188, 301, 304], "enabl": [49, 182, 188], "invok": 49, "adminservicegraphmanagementapi": [50, 116], "createdataloadingjob": 50, "return": [50, 51, 52, 53, 86, 87, 96, 116, 117, 118, 119, 152, 153, 162], "author": [50, 51, 52, 53, 86, 87, 96, 115, 116, 117, 118, 119, 152, 153, 162, 181], "http": [50, 51, 52, 53, 86, 87, 96, 116, 117, 118, 119, 152, 153, 162, 182], "header": [50, 51, 52, 53, 86, 87, 96, 116, 117, 118, 119, 152, 153, 162], "respons": [50, 51, 52, 53, 86, 87, 96, 116, 117, 118, 119, 152, 153, 162, 182], "detail": [50, 51, 52, 53, 86, 87, 96, 116, 117, 118, 119, 152, 153, 162, 182, 190, 458], "creategraph": [50, 182], "deletegraph": [50, 182], "getgraph": 50, "getschema": 50, "listgraph": [50, 182], "adminservicejobmanagementapi": [51, 117], "deletejobbyid": 51, "getjobbyid": [51, 182], "listjob": 51, "adminserviceproceduremanagementapi": [52, 118], "createprocedur": [52, 182], "deleteprocedur": [52, 182], "getprocedur": [52, 182], "listprocedur": 52, "updateprocedur": [52, 182], "adminserviceservicemanagementapi": [53, 119], "getservicestatu": 53, "restartservic": [53, 182], "startservic": [53, 182], "stopservic": [53, 182], "baseedgetyp": [54, 120], "baseedgetypevertextypepairrelationsinn": [55, 121], "enum": [55, 56, 65, 79, 81, 83, 89, 92, 98, 102], "relationenum": 55, "baseedgetypevertextypepairrelationsinnerxcsrparam": [56, 122], "edgestoragestrategyenum": 56, "basepropertymeta": [57, 123], "basevertextyp": [58, 124], "basevertextypexcsrparam": [59, 125], "columnmap": [60, 126], "createedgetyp": [61, 127], "creategraphrequest": [62, 128], "creategraphrespons": [63, 129], "creategraphschemarequest": [64, 130], "createprocedurerequest": [65, 131], "typeenum": [65, 83, 102], "createprocedurerespons": [66, 132], "createpropertymeta": [67, 133], "createvertextyp": [68, 134], "datetyp": [69, 135], "edgedata": [70, 136], "edgemap": [71, 137], "edgemappingdestinationvertexmappingsinn": [72, 138], "edgemappingsourcevertexmappingsinn": [73, 139], "edgemappingsourcevertexmappingsinnercolumn": [74, 140], "edgemappingtypetriplet": [75, 141], "edgerequest": [76, 142], "fixedchar": [77, 143], "fixedcharchar": [78, 144], "gsdatatyp": [79, 145], "primitivetypeenum": [79, 92], "getedgetyp": [80, 146], "getgraphrespons": [81, 147], "storetypeenum": 81, "getgraphschemarespons": [82, 148], "getprocedurerespons": [83, 149], "getpropertymeta": [84, 150], "getvertextyp": [85, 151], "graphserviceedgemanagementapi": [86, 152], "addedg": 86, "deleteedg": 86, "getedg": 86, "updateedg": 86, "graphservicevertexmanagementapi": [87, 153], "addvertex": 87, "deletevertex": 87, "getvertex": 87, "updatevertex": 87, "jobrespons": [88, 154], "jobstatu": [89, 155], "statusenum": 89, "longtext": [90, 156], "primitivetyp": [92, 159], "propertyarrai": [94, 160], "queryrequest": [95, 161], "queryserviceapi": [96, 162], "proccal": 96, "schemamap": [97, 163], "schemamappingloadingconfig": [98, 164], "importoptionenum": 98, "schemamappingloadingconfigformat": [99, 165], "servicestatu": [100, 166, 182], "startservicerequest": [101, 167], "storedproceduremeta": [102, 168], "stringtyp": [103, 169], "stringtypestr": [104, 170], "temporaltyp": [105, 171], "temporaltypetempor": [106, 172], "timestamptyp": [107, 173], "typedvalu": [108, 174], "updateprocedurerequest": [109, 175], "varchar": [110, 176], "varcharvarchar": [111, 177], "vertexdata": [112, 178], "vertexmap": [113, 179], "vertexrequest": [114, 180], "refer": [115, 181, 198, 236, 240, 242, 451, 458], "requir": [115, 181], "user": [115, 214, 235, 295, 463, 464], "interactive_sdk": [116, 117, 118, 119, 152, 153, 162], "openapi": [116, 117, 118, 119, 152, 153, 162], "create_dataloading_job": 116, "create_graph": [116, 256], "delete_graph": 116, "get_graph": 116, "get_schema": 116, "list_graph": 116, "delete_job_by_id": 117, "get_job_by_id": 117, "list_job": 117, "create_procedur": 118, "delete_procedur": 118, "get_procedur": 118, "list_procedur": 118, "update_procedur": 118, "get_service_statu": 119, "restart_servic": 119, "start_servic": 119, "stop_servic": 119, "add_edg": 152, "delete_edg": 152, "get_edg": 152, "update_edg": 152, "add_vertex": 153, "delete_vertex": 153, "get_vertex": 153, "update_vertex": 153, "modelproperti": 157, "proc_cal": 162, "pip": [181, 301], "setuptool": 181, "For": [181, 206, 213, 458], "rest": 182, "introduct": [182, 192, 210, 298], "graphmanag": 182, "categori": 182, "descript": 182, "curl": 182, "expect": 182, "statu": [182, 183], "getgraphschema": 182, "getgraphmeta": 182, "importgraph": 182, "proceduremanag": 182, "listallprocedur": 182, "servicemanag": 182, "systemmetr": 182, "nodemetr": 182, "jobmanag": 182, "getalljob": 182, "canceljobbyid": 182, "adminservic": 182, "error": [182, 465], "manag": 183, "initi": 183, "stop": [183, 198, 227], "restart": [183, 459], "check": 183, "destroi": [183, 459], "gremlin": [183, 184, 186, 208, 210, 211, 212, 215, 230, 290, 477], "glossari": [184, 228], "solid": 186, "foundat": 186, "limit": [186, 210, 212, 232, 459], "disabl": 188, "view": [188, 459], "tool": [189, 190], "administr": 190, "root": 190, "databas": [190, 233], "arrowfrag": 192, "0": [192, 204], "\u672f\u8bed": 192, "\u8f7d\u56fe": [192, 479], "\u521d\u59cb\u5316partition": 192, "\u6784\u5efa\u539f\u59cbarrow": 192, "shuffl": 192, "vtabl": 192, "\u6784\u5efavertex": 192, "basicarrowvertexmapbuild": 192, "5": [192, 204, 295], "\u6784\u5efafragment\u51c6\u5907": 192, "\u5904\u7406edg": 192, "basicevfragmentload": 192, "fragmentbuilder\u6570\u636e\u521d\u59cb\u5316": 192, "basicarrowfragmentbuild": 192, "6": 192, "fragment\u6784\u5efa": 192, "\u8bbf\u95eefragment": 192, "\u8bbf\u95ee\u9876\u70b9": 192, "\u8bbf\u95ee\u5185\u90e8\u70b9": 192, "\u8303\u56f4\u5916\u90e8\u70b9": 192, "\u8bbf\u95ee\u5168\u90e8\u70b9": 192, "\u8bbf\u95ee\u9876\u70b9\u6570\u636e": 192, "\u8bbf\u95ee\u8fb9": 192, "\u8bbf\u95ee\u51fa\u8fb9": 192, "\u8bbf\u95ee\u5165\u8fb9": 192, "\u8bbf\u95ee\u8fb9\u4e0a\u7684\u6570\u636e": 192, "ask": 193, "question": [193, 204], "gle": [194, 216, 464, 467], "workload": [195, 229, 230, 231, 233, 455], "learn": [195, 198, 216, 217, 218, 222, 224, 226, 227, 231, 233, 294, 302, 310, 467], "scientist": 196, "challeng": [196, 229, 231], "handl": [196, 233], "solut": 196, "machin": [196, 222, 224], "pydata": 196, "ecosystem": [196, 206, 213], "One": [198, 227, 452], "larg": [198, 225, 229, 231], "scale": [198, 462], "system": [198, 233, 305, 307], "alibaba": [198, 295], "flex": [198, 240], "troubleshoot": [198, 459], "util": [198, 466], "indic": 198, "standalon": 199, "gie": [199, 200, 201, 202, 203, 204, 206, 207, 208, 211, 213, 228, 467], "process": [200, 222, 223, 227, 233, 294, 459], "manual": [201, 225], "instanc": [202, 459], "via": [203, 211], "driver": 203, "llm": 204, "assist": 204, "set": [204, 223], "endpoint": 204, "gener": [204, 207, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "sentenc": 204, "construct": [205, 306], "claus": 205, "neo4j": [206, 230], "tinkerpop": [206, 208, 213, 230, 477], "rule": 207, "base": [207, 216], "rbo": 207, "filtermatchrul": 207, "degreefusionrul": 207, "notmatchtoantijoinrul": 207, "fieldtrimrul": 207, "cost": 207, "cbo": 207, "infer": [207, 215], "constraint": 208, "differ": [208, 452], "inner": 208, "id": [208, 210, 212, 458], "expand": [208, 210, 390, 391, 392, 445], "filter": [208, 210, 212], "like": 208, "sql": 208, "group": [208, 210, 212], "appropri": 208, "index": 208, "standard": [210, 457], "v": 210, "e": 210, "out": [210, 212, 306], "inE": [210, 212], "both": [210, 212], "outv": [210, 212], "inv": [210, 212], "otherv": [210, 212], "bothv": [210, 212], "hasid": [210, 212], "haslabel": 210, "ha": 210, "hasnot": 210, "where": [210, 212], "travers": [210, 212, 215, 219, 230, 299], "predic": 210, "dedup": [210, 212], "project": [210, 212, 241], "constant": [210, 212], "valuemap": [210, 212], "elementmap": 210, "select": [210, 212], "count": 210, "fold": [210, 212], "sum": [210, 212], "min": [210, 212], "max": [210, 212], "mean": [210, 212], "groupcount": [210, 212], "h3": 210, "order": [210, 212, 458], "statist": 210, "coin": 210, "union": 210, "match": [210, 212, 230], "ident": 210, "unfold": 210, "syntact": [210, 212], "sugar": [210, 212], "pathexpand": 210, "endv": 210, "To": 210, "Will": 210, "Not": 210, "repeat": 210, "sideeffect": 210, "consol": [211, 477], "ldbc": 212, "retriev": [212, 458], "appli": [212, 231], "real": 212, "expans": 212, "mani": 212, "point": 212, "after": 212, "pattern": [212, 230], "relat": [212, 225, 455], "syntax": 212, "complex": 212, "bi2": 212, "bi3": 212, "bi4": 212, "left": 212, "part": 212, "bi11": 212, "bi14": 212, "apach": [213, 477], "eas": 215, "interfac": [215, 304, 305, 458], "extens": 215, "gnn": [215, 221, 231, 306, 473], "train": [215, 221, 222, 223, 224, 231, 294], "nativ": 215, "across": 215, "orchestr": 215, "paradigm": [216, 231], "egograph": 216, "pass": 216, "pipelin": 216, "neighborhood": 219, "neg": [219, 303], "gsl": [219, 300], "classif": [221, 222, 223, 224], "neural": [221, 231], "network": [221, 231, 445], "egographsag": 222, "pyg": [223, 224], "server": [223, 296, 466], "pod": 223, "loader": [223, 225, 308, 479], "main": 223, "evalu": [224, 284], "loaderfor": 224, "valid": 224, "graphsag": 224, "advanc": 225, "deduc": 225, "when": 225, "ambigu": 225, "put": [225, 295], "togeth": [225, 295], "panda": [225, 479], "numpi": [225, 479], "variant": 225, "tip": 225, "reduc": 225, "consumpt": 225, "unifi": [226, 458], "platform": 226, "disaggreg": 226, "divers": 226, "bi": 226, "qp": 226, "task": 227, "quick": [227, 306], "gart": [228, 455], "grin": [228, 458], "graphar": [228, 457], "groot": [228, 459, 467], "gum": 228, "maxgraph": 228, "deprec": 228, "v6d": 228, "gaia": 228, "pegasu": 228, "can": [229, 231], "do": [229, 231], "typic": 231, "introduc": 232, "why": 232, "ar": 232, "case": 232, "posit": 233, "compar": 233, "variou": 233, "benchmark": 234, "result": [234, 452], "gpu": 234, "reproduc": 234, "fragment": 236, "appasset": 237, "javaapp": 237, "cython": 239, "about": 241, "javadoc": 242, "declar": 244, "load_app": 245, "dag_util": [246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "add_column": 246, "add_labels_to_graph": 247, "arrow_to_dynam": 248, "bind_app": 249, "clear_edg": 250, "clear_graph": 251, "context_to_datafram": 252, "context_to_numpi": 253, "copy_graph": 254, "create_app": 255, "create_graph_view": 257, "create_load": 258, "create_subgraph": 259, "create_unload_op": 260, "dynamic_to_arrow": 261, "get_context_data": 262, "graph_to_datafram": 263, "graph_to_numpi": 264, "gremlin_to_subgraph": 265, "modify_edg": 266, "modify_vertic": 267, "output": 268, "project_arrow_property_graph": 269, "project_to_simpl": 270, "report_graph": 271, "run_app": 272, "to_data_sink": 273, "to_direct": [274, 342], "to_undirect": [275, 343], "to_vineyard_datafram": 276, "to_vineyard_tensor": 277, "unload_app": 278, "unload_context": 279, "unload_graph": 280, "__init__": 281, "as_op_def": 282, "eval": 283, "signatur": 286, "get_default_sess": 288, "graphlearn": 289, "has_default_sess": 291, "set_opt": 293, "encod": [294, 302], "loss": 294, "weight": 295, "maxcomput": 295, "describ": 296, "topologi": 296, "stand": 296, "alon": 296, "mode": [296, 466], "tensorflow": 301, "git": 301, "clone": 304, "regist": [304, 305], "bytestreamaccessfil": 305, "structuredaccessfil": 305, "writablefil": 305, "scheme": 305, "gl": 306, "self": 312, "loop": 312, "freez": [312, 324], "add_cycl": 313, "add_path": 314, "add_star": 315, "all_neighbor": 316, "common_neighbor": 317, "create_empty_copi": 318, "degree_histogram": 320, "densiti": 321, "induced_subgraph": 325, "info": 326, "is_direct": 327, "is_empti": 328, "is_frozen": 329, "is_negatively_weight": 330, "is_weight": 331, "nodes_with_selfloop": 334, "non_edg": 335, "non_neighbor": 336, "number_of_edg": 337, "number_of_nod": 338, "number_of_selfloop": 339, "selfloop_edg": 340, "atla": [344, 345, 445], "graph_atla": 344, "graph_atlas_g": 345, "classic": [346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 445], "balanced_tre": 346, "barbell_graph": 347, "binomial_tre": 348, "circulant_graph": 349, "circular_ladder_graph": 350, "complete_graph": 351, "complete_multipartite_graph": 352, "cycle_graph": 353, "dorogovtsev_goltsev_mendes_graph": 354, "empty_graph": 355, "full_rary_tre": 356, "ladder_graph": 357, "lollipop_graph": 358, "null_graph": 359, "path_graph": 360, "star_graph": 361, "trivial_graph": 362, "turan_graph": 363, "wheel_graph": 364, "lfr_benchmark_graph": 365, "caveman_graph": 366, "connected_caveman_graph": 367, "gaussian_random_partition_graph": 368, "planted_partition_graph": 369, "random_partition_graph": 370, "relaxed_caveman_graph": 371, "ring_of_cliqu": 372, "stochastic_block_model": 373, "windmill_graph": 374, "degree_seq": [375, 376, 377, 378, 379, 380, 381], "configuration_model": 375, "degree_sequence_tre": 376, "directed_configuration_model": 377, "directed_havel_hakimi_graph": 378, "expected_degree_graph": 379, "havel_hakimi_graph": 380, "random_degree_sequence_graph": 381, "gn_graph": 382, "gnc_graph": 383, "gnr_graph": 384, "random_k_out_graph": 385, "scale_free_graph": 386, "duplic": [387, 388, 445], "duplication_divergence_graph": 387, "partial_duplication_graph": 388, "ego": [389, 445], "ego_graph": 389, "chordal_cycle_graph": 390, "margulis_gabber_galil_graph": 391, "paley_graph": 392, "geometr": [393, 394, 395, 396, 397, 445], "geographical_threshold_graph": 393, "random_geometric_graph": 394, "soft_random_geometric_graph": 395, "thresholded_random_geometric_graph": 396, "waxman_graph": 397, "harary_graph": [398, 399], "hkn_harary_graph": 398, "hnm_harary_graph": 399, "intersect": [400, 401, 402, 445], "general_random_intersection_graph": 400, "k_random_intersection_graph": 401, "uniform_random_intersection_graph": 402, "joint_degree_seq": [403, 404, 405, 406], "directed_joint_degree_graph": 403, "is_valid_directed_joint_degre": 404, "is_valid_joint_degre": 405, "joint_degree_graph": 406, "mycielski": [407, 408, 445], "mycielski_graph": 407, "mycielskian": 408, "nonisomorphic_tre": [409, 410], "number_of_nonisomorphic_tre": 410, "small": [411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 445], "lcf_graph": 411, "bull_graph": 412, "chvatal_graph": 413, "cubical_graph": 414, "desargues_graph": 415, "diamond_graph": 416, "dodecahedral_graph": 417, "frucht_graph": 418, "heawood_graph": 419, "house_graph": 420, "house_x_graph": 421, "icosahedral_graph": 422, "krackhardt_kite_graph": 423, "make_small_graph": 424, "moebius_kantor_graph": 425, "octahedral_graph": 426, "pappus_graph": 427, "petersen_graph": 428, "sedgewick_maze_graph": 429, "tetrahedral_graph": 430, "truncated_cube_graph": 431, "truncated_tetrahedron_graph": 432, "tutte_graph": 433, "social": [434, 435, 436, 437, 445], "davis_southern_women_graph": 434, "florentine_families_graph": 435, "karate_club_graph": 436, "les_miserables_graph": 437, "spectral_graph_forg": 438, "sudoku": [439, 445], "sudoku_graph": 439, "tree": [440, 441, 445], "prefix_tre": 440, "random_tre": 441, "triad": [442, 445], "triad_graph": 442, "internet_as_graph": 443, "random_internet_as_graph": 443, "stochast": [444, 445], "stochastic_graph": 444, "diverg": 445, "sequenc": 445, "AS": 445, "spectral": 445, "non": 445, "isomorph": 445, "joint": 445, "harari": 445, "digraph": 446, "read": 448, "list": [448, 458], "adjac": 448, "selector": 452, "tensorcontext": 452, "vertexdatacontext": 452, "labeledvertexdatacontext": 452, "vertexpropertycontext": 452, "labeledvertexpropertycontext": 452, "method": 452, "dimension": 452, "rang": 452, "resourc": 454, "bridg": 455, "gap": 455, "oltp": 455, "inform": 457, "save": 457, "predefin": 458, "macro": 458, "partit": [458, 459, 462], "strategi": 458, "guidelin": 458, "handler": 458, "iter": 458, "master": 458, "mirror": 458, "complet": 458, "natur": 458, "trait": 458, "known": 459, "artifacthub": 459, "directori": 459, "common": 459, "modifi": 459, "j": 459, "realtim": 459, "secondari": 459, "trace": 459, "In": 460, "immut": 460, "bind": 461, "repartit": 462, "fennel": 462, "xtrapulp": 462, "hybrid": 462, "line": 466, "gsctl": 466, "scope": 466, "monitor": 468, "\u56fe\u5206\u6790\u5f15\u64ce": 469, "\u5185\u7f6e\u7b97\u6cd5": 469, "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": 469, "\u4f7f\u7528": 469, "\u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": 469, "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528": 469, "\u4e2d\u7684\u51fd\u6570": 469, "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": 469, "\u8fd0\u884cjava\u7f16\u5199\u7684\u7b97\u6cd5": 469, "\u8fd0\u884c\u793a\u4f8b\u7684java\u7b97\u6cd5": 469, "\u4f7f\u7528java\u7f16\u5199\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5": 469, "\u90e8\u7f72": 470, "\u4f7f\u7528helm\u90e8\u7f72graphscop": 470, "\u5728aw": 470, "\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": 470, "\u672c\u5730\u90e8\u7f72graphscop": 470, "\u5f00\u53d1\u8005\u6307\u5357": 471, "\u57fa\u4e8e": [471, 476], "\u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5": 471, "\u6784\u5efa": 471, "\u4ee3\u7801\u98ce\u683c": 471, "\u5e38\u89c1\u95ee\u9898": 472, "\u5feb\u901f\u4e0a\u624b": 473, "\u793a\u4f8b": 473, "\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 473, "\u521b\u5efa\u4f1a\u8bdd": 473, "\u4ea4\u4e92\u5f0f\u67e5\u8be2": 473, "\u56fe\u5206\u6790": 473, "\u56fe\u795e\u7ecf\u7f51\u7edc": 473, "\u5173\u95ed\u4f1a\u8bdd": 473, "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": 474, "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": 474, "\u6295\u5f71": 474, "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 474, "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": 474, "\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": 475, "\u76ee\u5f55": [475, 480], "\u53c2\u8003": 475, "\u7d22\u5f15": 475, "\u5b89\u88c5": 476, "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": 476, "\u5ba2\u6237\u7aef": 476, "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": 477, "\u5229\u7528python": 477, "\u8fde\u63a5graphscop": 477, "\u5229\u7528java": 477, "\u5f00\u53d1\u63a7\u5236\u53f0": 477, "gremlin\u7f16\u7a0b\u5165\u95e8": 477, "101": 477, "\u56fe\u6570\u636e\u6a21\u578b": 477, "\u67e5\u8be2\u8bed\u8a00": 477, "\u4e00\u4e2a\u4f8b\u5b50": 477, "gremlin\u517c\u5bb9\u6027": 477, "\u5bf9\u6bd4tinkerpop": 477, "\u5c5e\u6027\u56fe\u6a21\u578b\u7ea6\u675f": 477, "\u5c1a\u4e0d\u652f\u6301\u7684\u529f\u80fd\u7279\u6027": 477, "\u652f\u6301\u7684gremlin\u64cd\u4f5c": 477, "\u5df2\u77e5\u9650\u5236": 477, "\u56fe\u5b66\u4e60\u5f15\u64ce": 478, "\u56fe\u5b66\u4e60\u6a21\u578b": 478, "\u6570\u636e\u6a21\u578b": 478, "\u7f16\u7801\u5668": 478, "\u81ea\u5b9a\u4e49\u7b97\u6cd5": 478, "\u91c7\u6837": 478, "\u56fe\u6570\u636e\u6d41": 478, "\u6a21\u578b": 478, "\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": 478, "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": 479, "\u624b\u52a8\u914d\u7f6e\u56fe": 479, "vid_field": 479, "src_label": 479, "dst_label": 479, "src_field": 479, "dst_field": 479, "\u9ad8\u7ea7\u7528\u6cd5": 479, "\u6ca1\u6709\u6b67\u4e49\u65f6": 479, "\u81ea\u52a8\u63a8\u65ad\u70b9\u6807\u7b7e": 479, "\u4ece\u8fb9\u4e2d\u63a8\u65ad\u70b9": 479, "\u591a\u79cd\u8fb9\u5173\u7cfb": 479, "\u6307\u5b9a\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b": 479, "\u56fe\u7684\u5176\u4ed6\u53c2\u6570": 479, "\u5b8c\u6574\u7684\u793a\u4f8b": 479, "\u4ece": 479, "\u6216": 479, "\u4e2d\u8f7d\u56fe": 479, "\u7684\u53d8\u79cd": 479, "\u5165\u95e8\u6559\u7a0b": 480}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"Built-in Algorithms": [[0, "built-in-algorithms"], [6, "built-in-algorithms"]], "All Pairs Shortest Path Length": [[0, "all-pairs-shortest-path-length"]], "Attribute Assortativity": [[0, "attribute-assortativity"]], "Average Degree Connectivity": [[0, "average-degree-connectivity"]], "Betweenness Centrality": [[0, "betweenness-centrality"]], "Breadth-First Search": [[0, "breadth-first-search"]], "CDLP": [[0, "cdlp"]], "Closeness Centrality": [[0, "closeness-centrality"]], "Clustering": [[0, "clustering"]], "Degree Assortativity Coefficient": [[0, "degree-assortativity-coefficient"]], "Degree Centrality": [[0, "degree-centrality"]], "Depth-First Search": [[0, "depth-first-search"]], "Eigenvector Centrality": [[0, "eigenvector-centrality"]], "Hyperlink-Induced Topic Search": [[0, "hyperlink-induced-topic-search"]], "Katz Centrality": [[0, "katz-centrality"]], "K-Core": [[0, "k-core"]], "K-Shell": [[0, "k-shell"]], "Label Propagation Algorithm": [[0, "label-propagation-algorithm"]], "LCC": [[0, "lcc"]], "PageRank": [[0, "pagerank"]], "Sampling Path": [[0, "sampling-path"]], "Single-Source Shortest Paths": [[0, "single-source-shortest-paths"]], "VoteRank": [[0, "voterank"]], "WCC": [[0, "wcc"]], "Customized Algorithms": [[1, "customized-algorithms"]], "Aggregators": [[1, "aggregators"]], "Local Vertex Map support": [[1, "local-vertex-map-support"]], "Deployment for GAE": [[2, "deployment-for-gae"]], "Prerequisites": [[2, "prerequisites"], [27, "prerequisites"], [29, "prerequisites"], [30, "prerequisites"], [32, "prerequisites"], [33, "prerequisites"], [185, "prerequisites"], [199, "prerequisites"], [459, "prerequisites"]], "Deployment GAE only": [[2, "deployment-gae-only"]], "Deployment with Python SDK": [[2, "deployment-with-python-sdk"]], "Deployment with Helm": [[2, "deployment-with-helm"]], "Execute graph analytical algorithms": [[2, "execute-graph-analytical-algorithms"]], "Uninstall deployment": [[2, "uninstall-deployment"]], "Design of Analytical Engine": [[3, "design-of-analytical-engine"], [3, null]], "Dev and Test": [[4, "dev-and-test"], [201, "dev-and-test"], [217, "dev-and-test"]], "Setup": [[4, "setup"]], "Understanding the Codebase": [[4, "understanding-the-codebase"]], "Making Modifications": [[4, "making-modifications"]], "Building Analytical Engine": [[4, "building-analytical-engine"]], "Testing": [[4, "testing"]], "FAQs": [[5, "faqs"]], "Programming Model: FLASH": [[6, "programming-model-flash"]], "Motivation": [[6, "motivation"], [9, "motivation"], [226, "motivation"]], "The FLASH Programming Model": [[6, "the-flash-programming-model"]], "Overview": [[6, "overview"], [9, "overview"], [186, "overview"], [190, "overview"], [198, null], [302, "overview"], [459, "overview"]], "FLASH API": [[6, "flash-api"]], "Strong Expressiveness": [[6, "strong-expressiveness"]], "Implementation": [[6, "implementation"]], "Architecture": [[6, "architecture"], [12, "architecture"]], "Optimizations": [[6, "optimizations"]], "Getting Started": [[7, "getting-started"], [115, "getting-started"], [181, "getting-started"], [183, "getting-started"], [202, "getting-started"], [218, "getting-started"], [227, "getting-started"], [456, "getting-started"]], "Installation": [[7, "installation"], [29, "installation"], [115, "installation"], [185, "installation"], [202, "installation"], [218, "installation"], [459, "installation"]], "Running GraphScope Analytical Engine on Local": [[7, "running-graphscope-analytical-engine-on-local"]], "What\u2019s the Next": [[7, "whats-the-next"], [202, "whats-the-next"], [218, "whats-the-next"]], "Guide and Examples": [[8, "guide-and-examples"], [209, "guide-and-examples"], [220, "guide-and-examples"]], "Ingress: Incrementalize Graph Algorithms": [[9, "ingress-incrementalize-graph-algorithms"]], "Design of Ingress": [[9, "design-of-ingress"]], "Message-driven Differentiation": [[9, "message-driven-differentiation"]], "Flexible Memoization": [[9, "flexible-memoization"]], "Ingress API": [[9, "ingress-api"]], "Distributed Runtime Engine": [[9, "distributed-runtime-engine"]], "Key Concepts": [[10, "key-concepts"]], "LoadStrategy": [[10, "loadstrategy"]], "OnlyOut": [[10, "onlyout"]], "OnlyIn": [[10, "onlyin"]], "BothInOut": [[10, "bothinout"]], "PartitionStrategy": [[10, "partitionstrategy"]], "Edge Cut": [[10, "edge-cut"]], "Vertex Cut": [[10, "vertex-cut"]], "Vertices on GraphScope analytical engine": [[10, "vertices-on-graphscope-analytical-engine"]], "OuterVertex": [[10, "outervertex"]], "InnerVertex": [[10, "innervertex"]], "InnerVertexWithOutgoingEdge": [[10, "innervertexwithoutgoingedge"]], "InnerVertexWithIncomingEdge": [[10, "innervertexwithincomingedge"]], "MessageManager and MessageStrategy": [[10, "messagemanager-and-messagestrategy"]], "AlongOutgoingEdgeToOuterVertex": [[10, "alongoutgoingedgetooutervertex"]], "AlongIncomingEdgeToOuterVertex": [[10, "alongincomingedgetooutervertex"]], "AlongEdgeToOuterVertex": [[10, "alongedgetooutervertex"]], "SyncOnOuterVertexAsTarget": [[10, "synconoutervertexastarget"]], "SyncOnOuterVertexAsSource": [[10, "synconoutervertexassource"]], "SyncOnOuterVertex": [[10, "synconoutervertex"]], "NetworkX Compatibility": [[11, "networkx-compatibility"]], "Convert a Graph to a nx.Graph": [[11, "convert-a-graph-to-a-nx-graph"]], "Supported Graph Operations": [[11, "supported-graph-operations"]], "Supported Algorithms": [[11, "supported-algorithms"]], "Overview and Architecture": [[12, "overview-and-architecture"]], "Storage Layer": [[12, "storage-layer"]], "Engine Layer": [[12, "engine-layer"]], "GRAPE Engine": [[12, "grape-engine"]], "Programming Model APIs": [[12, "programming-model-apis"]], "FFIs": [[12, "ffis"]], "Incremental Computation Engine": [[12, "incremental-computation-engine"]], "Application Layer": [[12, "application-layer"]], "Performance Tuning": [[13, "performance-tuning"]], "Memory Footprint of Property Graphs": [[13, "memory-footprint-of-property-graphs"]], "Property graph data structure": [[13, "property-graph-data-structure"]], "Memory usage estimation": [[13, "memory-usage-estimation"]], "Optimizing Memory Usage": [[13, "optimizing-memory-usage"]], "Optimizing Performance of Graph Analytics": [[13, "optimizing-performance-of-graph-analytics"]], "Programming Model: PIE": [[14, "programming-model-pie"]], "What is the PIE Model?": [[14, "what-is-the-pie-model"]], "Workflow of PIE": [[14, "workflow-of-pie"]], "Tutorial: Develop Your Algorithms in C++ with FLASH Model": [[15, "tutorial-develop-your-algorithms-in-c-with-flash-model"]], "Developing Algorithms with FLASH Model": [[15, "developing-algorithms-with-flash-model"]], "Defining A FLASH Application": [[15, "defining-a-flash-application"]], "Implementing the Run Function": [[15, "implementing-the-run-function"]], "Integrating with the Python Client of GraphScope": [[15, "integrating-with-the-python-client-of-graphscope"]], "Running the FLASH Algorithms": [[15, "running-the-flash-algorithms"]], "Tutorial: Develop your Algorithm in C++ with PIE Model": [[16, "tutorial-develop-your-algorithm-in-c-with-pie-model"]], "Prerequisites:": [[16, "prerequisites"]], "Step 1: Define the context class": [[16, "step-1-define-the-context-class"]], "Step 2: Define the Algorithm class": [[16, "step-2-define-the-algorithm-class"]], "Step 3: Package the Algorithm": [[16, "step-3-package-the-algorithm"]], "Step 4: Run the .gar file on GraphScope": [[16, "step-4-run-the-gar-file-on-graphscope"]], "GraphScope C++ SDK with GitHub Template": [[16, "graphscope-c-sdk-with-github-template"]], "Tutorial: Develop your Algorithm in Java with PIE Model": [[17, "tutorial-develop-your-algorithm-in-java-with-pie-model"]], "Run example algorithms with example jar": [[17, "run-example-algorithms-with-example-jar"]], "Implement your own algorithms in Java.": [[17, "implement-your-own-algorithms-in-java"]], "Prepare GRAPE-jdk": [[17, "prepare-grape-jdk"]], "Get from Maven Central Repository": [[17, "get-from-maven-central-repository"]], "Build from source": [[17, "build-from-source"], [301, "build-from-source"]], "Implement your algorithm": [[17, "implement-your-algorithm"]], "Submit to GraphScope": [[17, "submit-to-graphscope"]], "GraphScope JavaSDK with GitHub Template": [[17, "graphscope-javasdk-with-github-template"]], "Tutorial: Develop algorithms in Python": [[18, "tutorial-develop-algorithms-in-python"]], "Writing Your Own Algorithms in PIE": [[18, "writing-your-own-algorithms-in-pie"]], "Writing Algorithms in Pregel": [[18, "writing-algorithms-in-pregel"]], "Using math.h Functions in Algorithms": [[18, "using-math-h-functions-in-algorithms"]], "Run Your Own Algorithms": [[18, "run-your-own-algorithms"]], "Tutorial: Graph Algorithms with NetworkX APIs": [[19, "tutorial-graph-algorithms-with-networkx-apis"]], "How does Networkx Perform Graph Analysis?": [[19, "how-does-networkx-perform-graph-analysis"]], "How to Perform Graph Analysis with NetworkX APIs from GraphScope": [[19, "how-to-perform-graph-analysis-with-networkx-apis-from-graphscope"]], "Graph Analysis": [[19, "graph-analysis"]], "Graph Display": [[19, "graph-display"]], "The Performance Speed-up of GraphScope over NetworkX": [[19, "the-performance-speed-up-of-graphscope-over-networkx"]], "Tutorial: Graph Operations with NetworkX APIs": [[20, "tutorial-graph-operations-with-networkx-apis"]], "Creating an Empty Graph": [[20, "creating-an-empty-graph"]], "Adding Nodes": [[20, "adding-nodes"]], "Adding Edges": [[20, "adding-edges"], [225, "adding-edges"]], "Examining Elements of a Graph": [[20, "examining-elements-of-a-graph"]], "Removing Elements from a Graph": [[20, "removing-elements-from-a-graph"]], "Using Graph Constructors": [[20, "using-graph-constructors"]], "Accessing Edges and Neighbors": [[20, "accessing-edges-and-neighbors"]], "Adding Attributes to Graphs, Nodes and Edges": [[20, "adding-attributes-to-graphs-nodes-and-edges"]], "Graph Attributes": [[20, "graph-attributes"]], "Node Attributes": [[20, "node-attributes"]], "Edge Attributes": [[20, "edge-attributes"]], "Induce deepcopy subgraph and edge_subgraph": [[20, "induce-deepcopy-subgraph-and-edge-subgraph"]], "Making Copies": [[20, "making-copies"]], "Directed Graphs": [[20, "directed-graphs"]], "Analyzing Graphs": [[20, "analyzing-graphs"]], "Create graph from GraphScope Graph Object": [[20, "create-graph-from-graphscope-graph-object"]], "Transform to GraphScope Graph Object": [[20, "transform-to-graphscope-graph-object"]], "Tutorial: Running Builtin Algorithms": [[21, "tutorial-running-builtin-algorithms"]], "Tutorial: Run Giraph Applications on GraphScope": [[22, "tutorial-run-giraph-applications-on-graphscope"]], "Try some example giraph apps": [[22, "try-some-example-giraph-apps"]], "Run your own Giraph apps.": [[22, "run-your-own-giraph-apps"]], "Develop Giraph algorithm": [[22, "develop-giraph-algorithm"]], "Submit to GraphScope.": [[22, "submit-to-graphscope"]], "Tutorial: Run GraphX Applications on GraphScope": [[23, "tutorial-run-graphx-applications-on-graphscope"]], "Deploy GraphScope along with Spark": [[23, "deploy-graphscope-along-with-spark"]], "Run example GraphX apps": [[23, "run-example-graphx-apps"]], "Submit to Spark": [[23, "submit-to-spark"]], "Run customized GraphX apps": [[23, "run-customized-graphx-apps"]], "Include dependency": [[23, "include-dependency"]], "Develop customized GraphX algorithm towards GraphScope.": [[23, "develop-customized-graphx-algorithm-towards-graphscope"]], "Run customized GraphX algorithms on Spark with GraphScope support": [[23, "run-customized-graphx-algorithms-on-spark-with-graphscope-support"]], "Vertex-Centric Model": [[24, "vertex-centric-model"]], "Pregel Model": [[24, "pregel-model"]], "GAS Model": [[24, "gas-model"]], "Simulation of Pregel Model in Analytical Engine": [[24, "simulation-of-pregel-model-in-analytical-engine"]], "Contact Us": [[25, "contact-us"]], "Slack": [[25, "slack"], [37, "slack"]], "Discussion on GitHub": [[25, "discussion-on-github"]], "Deploy GraphScope on Clouds": [[26, "deploy-graphscope-on-clouds"]], "Deploy on K8s Cluster": [[27, "deploy-on-k8s-cluster"]], "Install GraphScope Client": [[27, "install-graphscope-client"], [30, "install-graphscope-client"]], "Prepare a Kubernetes cluster": [[27, "prepare-a-kubernetes-cluster"], [30, "prepare-a-kubernetes-cluster"], [41, "prepare-a-kubernetes-cluster"]], "Deploying GraphScope": [[27, "deploying-graphscope"]], "Launch with default parameters": [[27, "launch-with-default-parameters"]], "Frequently used parameters": [[27, "frequently-used-parameters"]], "Customize image URI": [[27, "customize-image-uri"]], "Specify the number of workers": [[27, "specify-the-number-of-workers"]], "Provide a kubeconfig file other than default": [[27, "provide-a-kubeconfig-file-other-than-default"]], "Mount volumes": [[27, "mount-volumes"]], "Inspect the deployment": [[27, "inspect-the-deployment"]], "Cleaning Up": [[27, "cleaning-up"]], "Deploy GraphScope Operator": [[28, "deploy-graphscope-operator"]], "Coordinator configuration": [[28, "coordinator-configuration"]], "Deploy GraphScope with helm": [[29, "deploy-graphscope-with-helm"]], "Connect to GraphScope": [[29, "connect-to-graphscope"]], "Uninstall the release": [[29, "uninstall-the-release"]], "Configuration": [[29, "configuration"]], "Offline Installation": [[29, "offline-installation"]], "Deploy with Existing Vineyard Cluster": [[30, "deploy-with-existing-vineyard-cluster"]], "Deploy a Vineyard Cluster": [[30, "deploy-a-vineyard-cluster"]], "The lifecycle of a vineyard cluster": [[30, "the-lifecycle-of-a-vineyard-cluster"]], "Load the dataset to the Kubernetes cluster": [[30, "load-the-dataset-to-the-kubernetes-cluster"]], "Load a graph to the existing vineyard cluster": [[30, "load-a-graph-to-the-existing-vineyard-cluster"]], "Connect to the existing vineyard cluster with another GraphScope session": [[30, "connect-to-the-existing-vineyard-cluster-with-another-graphscope-session"]], "Cleaning up": [[30, "cleaning-up"]], "Install GraphScope in offline environment": [[31, "install-graphscope-in-offline-environment"]], "Install from wheels": [[31, "install-from-wheels"]], "Install from source": [[31, "install-from-source"], [32, "install-from-source"]], "Download dependencies and GraphScope": [[31, "download-dependencies-and-graphscope"]], "Copy all files to the destination environment and extract them to a location": [[31, "copy-all-files-to-the-destination-environment-and-extract-them-to-a-location"]], "Install basic packages and gcc-g++,\u00a0python": [[31, "install-basic-packages-and-gcc-g-python"]], "Install third-party dependencies and GraphScope Analytical Engine": [[31, "install-third-party-dependencies-and-graphscope-analytical-engine"]], "Install GraphScope on Local": [[32, "install-graphscope-on-local"]], "Install from packages": [[32, "install-from-packages"]], "Install stable version of GraphScope": [[32, "install-stable-version-of-graphscope"]], "Install preview version of GraphScope": [[32, "install-preview-version-of-graphscope"]], "Setup build environment for Linux and macOS": [[32, "setup-build-environment-for-linux-and-macos"]], "Use dev image with all dependencies installed": [[32, "use-dev-image-with-all-dependencies-installed"]], "Build and install": [[32, "build-and-install"]], "Persistent storage of graphs on the Kubernetes cluster": [[33, "persistent-storage-of-graphs-on-the-kubernetes-cluster"]], "Create a pv and pvc": [[33, "create-a-pv-and-pvc"]], "Store graphs to the pvc": [[33, "store-graphs-to-the-pvc"]], "Retore graphs from the pvc": [[33, "retore-graphs-from-the-pvc"]], "Clean up": [[33, "clean-up"]], "Design of GAE": [[34, "design-of-gae"]], "Graph Storage": [[34, "graph-storage"]], "Execution Framework": [[34, "execution-framework"]], "Flexible programming models": [[34, "flexible-programming-models"]], "Multi-language SDKs": [[34, "multi-language-sdks"]], "High-performance runtime": [[34, "high-performance-runtime"]], "Algorithm Library": [[34, "algorithm-library"]], "Code Style Guide": [[35, "code-style-guide"]], "C++ Style": [[35, "c-style"]], "Python Style": [[35, "python-style"]], "Rust Style": [[35, "rust-style"]], "Java Style": [[35, "java-style"]], "Script Style": [[35, "script-style"]], "Style Linter and Checker": [[35, "style-linter-and-checker"]], "Development Guide": [[36, "development-guide"]], "Dev Environment": [[36, "dev-environment"], [41, "dev-environment"], [201, "dev-environment"], [217, "dev-environment"]], "Develop with dev containers.": [[36, "develop-with-dev-containers"]], "Install deps on local": [[36, "install-deps-on-local"], [217, "install-deps-on-local"]], "Build All Targets for GraphScope": [[36, "build-all-targets-for-graphscope"], [41, "build-all-targets-for-graphscope"]], "Build Components Individually": [[36, "build-components-individually"]], "Build and Test Engines": [[36, "build-and-test-engines"]], "Build Coordinator": [[36, "build-coordinator"]], "Build Python Client": [[36, "build-python-client"]], "How to Contribute": [[37, "how-to-contribute"]], "Code of Conduct": [[37, "code-of-conduct"]], "Community": [[37, "community"], [445, "module-graphscope.nx.generators.community"]], "GitHub Discussion": [[37, "github-discussion"]], "Reporting Bugs": [[37, "reporting-bugs"]], "Requesting Features": [[37, "requesting-features"]], "Improving Documentation": [[37, "improving-documentation"]], "Contributing Code and Documentation Changes": [[37, "contributing-code-and-documentation-changes"]], "Install pre-commit": [[37, "install-pre-commit"]], "Minor Fixes": [[37, "minor-fixes"]], "Fork and Create a Branch": [[37, "fork-and-create-a-branch"]], "Get the Test Suite Running": [[37, "get-the-test-suite-running"]], "Implement Your Fix or Feature": [[37, "implement-your-fix-or-feature"]], "Get the Code Format and Style Right": [[37, "get-the-code-format-and-style-right"]], "Submitting Your Changes": [[37, "submitting-your-changes"]], "Discussing and Keeping Your Pull Request Updated": [[37, "discussing-and-keeping-your-pull-request-updated"]], "Merging a PR (maintainers only)": [[37, "merging-a-pr-maintainers-only"]], "Shipping a Release (maintainers only)": [[37, "shipping-a-release-maintainers-only"]], "How to Review Pull Requests": [[37, "how-to-review-pull-requests"]], "Continuous integration testing": [[37, "continuous-integration-testing"]], "Debugging on local deployment": [[38, "debugging-on-local-deployment"]], "Find the logs": [[38, "find-the-logs"], [38, "id1"]], "Debugging on Kubernetes deployment": [[38, "debugging-on-kubernetes-deployment"]], "Commands for Debugging": [[38, "commands-for-debugging"]], "Debugging Techniques": [[38, "debugging-techniques"]], "How to instrument": [[39, "how-to-instrument"]], "Java": [[39, "java"], [459, "java"], [459, "id2"]], "Automatic instrument": [[39, "automatic-instrument"]], "How to Submit Pull-requests": [[40, "how-to-submit-pull-requests"]], "How to Test": [[41, "how-to-test"], [217, "how-to-test"]], "Test GraphScope on local": [[41, "test-graphscope-on-local"]], "Run tests": [[41, "run-tests"], [41, "id1"]], "Test GraphScope on Kubernetes cluster": [[41, "test-graphscope-on-kubernetes-cluster"]], "Build images": [[41, "build-images"]], "Engine Configuration": [[42, "engine-configuration"]], "Customizing Your Service Configuration": [[42, "customizing-your-service-configuration"]], "Sample Configuration": [[42, "sample-configuration"]], "Available Configurations": [[42, "available-configurations"]], "Service configurations": [[42, "service-configurations"]], "Using Custom Graph": [[43, "using-custom-graph"]], "Step 1: Create a New Graph": [[43, "step-1-create-a-new-graph"]], "Step 2: Import Graph Data": [[43, "step-2-import-graph-data"]], "Step 3: Start the Service with the New Graph": [[43, "step-3-start-the-service-with-the-new-graph"]], "Try other graphs": [[43, "try-other-graphs"]], "Data Import Configuration": [[44, "data-import-configuration"]], "Supported data source": [[44, "supported-data-source"]], "Sample Configuration for loading \u201cModern\u201d Graph from csv files": [[44, "sample-configuration-for-loading-modern-graph-from-csv-files"]], "Sample configuration for loading \u201cModern Graph\u201d from odps tables": [[44, "sample-configuration-for-loading-modern-graph-from-odps-tables"]], "Configuration Breakdown": [[44, "configuration-breakdown"]], "Loading Configurations": [[44, "loading-configurations"]], "Vertex Mappings": [[44, "vertex-mappings"]], "Edge Mappings": [[44, "edge-mappings"]], "Data Model": [[45, "data-model"]], "Graph Data": [[45, "graph-data"]], "Entity Data": [[45, "entity-data"]], "Primitive Types": [[45, "primitive-types"]], "String Types": [[45, "string-types"]], "Temporal types": [[45, "temporal-types"]], "Array Types": [[45, "array-types"]], "Deployment": [[46, "deployment"]], "Deploy with docker": [[46, "deploy-with-docker"]], "Deploy with helm": [[46, "deploy-with-helm"]], "QuickStart": [[46, "quickstart"]], "Customizing Configuration": [[46, "customizing-configuration"]], "Customize Graph Data.": [[46, "customize-graph-data"]], "Single Node": [[46, "single-node"]], "Multiple nodes": [[46, "multiple-nodes"]], "Customize Values.yaml": [[46, "customize-values-yaml"]], "GraphScope Interactive Development guide": [[47, "graphscope-interactive-development-guide"]], "Create c++ Stored Procedures on GraphScope Interactive": [[48, "create-c-stored-procedures-on-graphscope-interactive"]], "Turning Cypher Queries into Stored Procedures with GraphScope Interactive": [[49, "turning-cypher-queries-into-stored-procedures-with-graphscope-interactive"]], "Crafting a Cypher Stored Procedure": [[49, "crafting-a-cypher-stored-procedure"]], "Compiling and Enabling the Stored Procedure": [[49, "compiling-and-enabling-the-stored-procedure"]], "Invoking the Cypher Stored Procedure": [[49, "invoking-the-cypher-stored-procedure"]], "AdminServiceGraphManagementApi": [[50, "adminservicegraphmanagementapi"]], "createDataloadingJob": [[50, "createdataloadingjob"]], "Example": [[50, "example"], [50, "id1"], [50, "id7"], [50, "id13"], [50, "id19"], [50, "id25"], [51, "example"], [51, "id1"], [51, "id7"], [52, "example"], [52, "id1"], [52, "id7"], [52, "id13"], [52, "id19"], [53, "example"], [53, "id1"], [53, "id7"], [53, "id13"], [86, "example"], [86, "id1"], [86, "id7"], [86, "id13"], [87, "example"], [87, "id1"], [87, "id7"], [87, "id13"], [96, "example"], [116, "example"], [116, "id1"], [116, "id7"], [116, "id13"], [116, "id19"], [116, "id25"], [117, "example"], [117, "id1"], [117, "id7"], [118, "example"], [118, "id1"], [118, "id7"], [118, "id13"], [118, "id19"], [119, "example"], [119, "id1"], [119, "id7"], [119, "id13"], [120, "example"], [121, "example"], [122, "example"], [123, "example"], [124, "example"], [125, "example"], [126, "example"], [127, "example"], [128, "example"], [129, "example"], [130, "example"], [131, "example"], [132, "example"], [133, "example"], [134, "example"], [135, "example"], [136, "example"], [137, "example"], [138, "example"], [139, "example"], [140, "example"], [141, "example"], [142, "example"], [143, "example"], [144, "example"], [145, "example"], [146, "example"], [147, "example"], [148, "example"], [149, "example"], [150, "example"], [151, "example"], [152, "example"], [152, "id1"], [152, "id7"], [152, "id13"], [153, "example"], [153, "id1"], [153, "id7"], [153, "id13"], [154, "example"], [155, "example"], [156, "example"], [157, "example"], [158, "example"], [159, "example"], [160, "example"], [161, "example"], [162, "example"], [163, "example"], [164, "example"], [165, "example"], [166, "example"], [167, "example"], [168, "example"], [169, "example"], [170, "example"], [171, "example"], [172, "example"], [173, "example"], [174, "example"], [175, "example"], [176, "example"], [177, "example"], [178, "example"], [179, "example"], [180, "example"]], "Parameters": [[50, "parameters"], [50, "id2"], [50, "id8"], [50, "id14"], [50, "id20"], [50, "id26"], [51, "parameters"], [51, "id2"], [51, "id8"], [52, "parameters"], [52, "id2"], [52, "id8"], [52, "id14"], [52, "id20"], [53, "parameters"], [53, "id2"], [53, "id8"], [53, "id14"], [86, "parameters"], [86, "id2"], [86, "id8"], [86, "id14"], [87, "parameters"], [87, "id2"], [87, "id8"], [87, "id14"], [96, "parameters"], [116, "parameters"], [116, "id2"], [116, "id8"], [116, "id14"], [116, "id20"], [116, "id26"], [117, "parameters"], [117, "id2"], [117, "id8"], [118, "parameters"], [118, "id2"], [118, "id8"], [118, "id14"], [118, "id20"], [119, "parameters"], [119, "id2"], [119, "id8"], [119, "id14"], [152, "parameters"], [152, "id2"], [152, "id8"], [152, "id14"], [153, "parameters"], [153, "id2"], [153, "id8"], [153, "id14"], [162, "parameters"]], "Return type": [[50, "return-type"], [50, "id3"], [50, "id9"], [50, "id15"], [50, "id21"], [50, "id27"], [51, "return-type"], [51, "id3"], [51, "id9"], [52, "return-type"], [52, "id3"], [52, "id9"], [52, "id15"], [52, "id21"], [53, "return-type"], [53, "id3"], [53, "id9"], [53, "id15"], [86, "return-type"], [86, "id3"], [86, "id9"], [86, "id15"], [87, "return-type"], [87, "id3"], [87, "id9"], [87, "id15"], [96, "return-type"], [116, "return-type"], [116, "id3"], [116, "id9"], [116, "id15"], [116, "id21"], [116, "id27"], [117, "return-type"], [117, "id3"], [117, "id9"], [118, "return-type"], [118, "id3"], [118, "id9"], [118, "id15"], [118, "id21"], [119, "return-type"], [119, "id3"], [119, "id9"], [119, "id15"], [152, "return-type"], [152, "id3"], [152, "id9"], [152, "id15"], [153, "return-type"], [153, "id3"], [153, "id9"], [153, "id15"], [162, "return-type"]], "Authorization": [[50, "authorization"], [50, "id4"], [50, "id10"], [50, "id16"], [50, "id22"], [50, "id28"], [51, "authorization"], [51, "id4"], [51, "id10"], [52, "authorization"], [52, "id4"], [52, "id10"], [52, "id16"], [52, "id22"], [53, "authorization"], [53, "id4"], [53, "id10"], [53, "id16"], [86, "authorization"], [86, "id4"], [86, "id10"], [86, "id16"], [87, "authorization"], [87, "id4"], [87, "id10"], [87, "id16"], [96, "authorization"], [116, "authorization"], [116, "id4"], [116, "id10"], [116, "id16"], [116, "id22"], [116, "id28"], [117, "authorization"], [117, "id4"], [117, "id10"], [118, "authorization"], [118, "id4"], [118, "id10"], [118, "id16"], [118, "id22"], [119, "authorization"], [119, "id4"], [119, "id10"], [119, "id16"], [152, "authorization"], [152, "id4"], [152, "id10"], [152, "id16"], [153, "authorization"], [153, "id4"], [153, "id10"], [153, "id16"], [162, "authorization"]], "HTTP request headers": [[50, "http-request-headers"], [50, "id5"], [50, "id11"], [50, "id17"], [50, "id23"], [50, "id29"], [51, "http-request-headers"], [51, "id5"], [51, "id11"], [52, "http-request-headers"], [52, "id5"], [52, "id11"], [52, "id17"], [52, "id23"], [53, "http-request-headers"], [53, "id5"], [53, "id11"], [53, "id17"], [86, "http-request-headers"], [86, "id5"], [86, "id11"], [86, "id17"], [87, "http-request-headers"], [87, "id5"], [87, "id11"], [87, "id17"], [96, "http-request-headers"], [116, "http-request-headers"], [116, "id5"], [116, "id11"], [116, "id17"], [116, "id23"], [116, "id29"], [117, "http-request-headers"], [117, "id5"], [117, "id11"], [118, "http-request-headers"], [118, "id5"], [118, "id11"], [118, "id17"], [118, "id23"], [119, "http-request-headers"], [119, "id5"], [119, "id11"], [119, "id17"], [152, "http-request-headers"], [152, "id5"], [152, "id11"], [152, "id17"], [153, "http-request-headers"], [153, "id5"], [153, "id11"], [153, "id17"], [162, "http-request-headers"]], "HTTP response details": [[50, "http-response-details"], [50, "id6"], [50, "id12"], [50, "id18"], [50, "id24"], [50, "id30"], [51, "http-response-details"], [51, "id6"], [51, "id12"], [52, "http-response-details"], [52, "id6"], [52, "id12"], [52, "id18"], [52, "id24"], [53, "http-response-details"], [53, "id6"], [53, "id12"], [53, "id18"], [86, "http-response-details"], [86, "id6"], [86, "id12"], [86, "id18"], [87, "http-response-details"], [87, "id6"], [87, "id12"], [87, "id18"], [96, "http-response-details"], [116, "http-response-details"], [116, "id6"], [116, "id12"], [116, "id18"], [116, "id24"], [116, "id30"], [117, "http-response-details"], [117, "id6"], [117, "id12"], [118, "http-response-details"], [118, "id6"], [118, "id12"], [118, "id18"], [118, "id24"], [119, "http-response-details"], [119, "id6"], [119, "id12"], [119, "id18"], [152, "http-response-details"], [152, "id6"], [152, "id12"], [152, "id18"], [153, "http-response-details"], [153, "id6"], [153, "id12"], [153, "id18"], [162, "http-response-details"]], "createGraph": [[50, "creategraph"]], "deleteGraph": [[50, "deletegraph"]], "getGraph": [[50, "getgraph"]], "getSchema": [[50, "getschema"]], "listGraphs": [[50, "listgraphs"]], "AdminServiceJobManagementApi": [[51, "adminservicejobmanagementapi"]], "deleteJobById": [[51, "deletejobbyid"]], "getJobById": [[51, "getjobbyid"]], "listJobs": [[51, "listjobs"]], "AdminServiceProcedureManagementApi": [[52, "adminserviceproceduremanagementapi"]], "createProcedure": [[52, "createprocedure"]], "deleteProcedure": [[52, "deleteprocedure"]], "getProcedure": [[52, "getprocedure"]], "listProcedures": [[52, "listprocedures"]], "updateProcedure": [[52, "updateprocedure"]], "AdminServiceServiceManagementApi": [[53, "adminserviceservicemanagementapi"]], "getServiceStatus": [[53, "getservicestatus"]], "restartService": [[53, "restartservice"]], "startService": [[53, "startservice"]], "stopService": [[53, "stopservice"]], "BaseEdgeType": [[54, "baseedgetype"], [120, "baseedgetype"]], "Properties": [[54, "properties"], [55, "properties"], [56, "properties"], [57, "properties"], [58, "properties"], [59, "properties"], [60, "properties"], [61, "properties"], [62, "properties"], [63, "properties"], [64, "properties"], [65, "properties"], [66, "properties"], [67, "properties"], [68, "properties"], [69, "properties"], [70, "properties"], [71, "properties"], [72, "properties"], [73, "properties"], [74, "properties"], [75, "properties"], [76, "properties"], [77, "properties"], [78, "properties"], [79, "properties"], [80, "properties"], [81, "properties"], [82, "properties"], [83, "properties"], [84, "properties"], [85, "properties"], [88, "properties"], [89, "properties"], [90, "properties"], [91, "properties"], [92, "properties"], [93, "properties"], [94, "properties"], [95, "properties"], [97, "properties"], [98, "properties"], [99, "properties"], [100, "properties"], [101, "properties"], [102, "properties"], [103, "properties"], [104, "properties"], [105, "properties"], [106, "properties"], [107, "properties"], [108, "properties"], [109, "properties"], [110, "properties"], [111, "properties"], [112, "properties"], [113, "properties"], [114, "properties"], [120, "properties"], [121, "properties"], [122, "properties"], [123, "properties"], [124, "properties"], [125, "properties"], [126, "properties"], [127, "properties"], [128, "properties"], [129, "properties"], [130, "properties"], [131, "properties"], [132, "properties"], [133, "properties"], [134, "properties"], [135, "properties"], [136, "properties"], [137, "properties"], [138, "properties"], [139, "properties"], [140, "properties"], [141, "properties"], [142, "properties"], [143, "properties"], [144, "properties"], [145, "properties"], [146, "properties"], [147, "properties"], [148, "properties"], [149, "properties"], [150, "properties"], [151, "properties"], [154, "properties"], [155, "properties"], [156, "properties"], [157, "properties"], [158, "properties"], [159, "properties"], [160, "properties"], [161, "properties"], [163, "properties"], [164, "properties"], [165, "properties"], [166, "properties"], [167, "properties"], [168, "properties"], [169, "properties"], [170, "properties"], [171, "properties"], [172, "properties"], [173, "properties"], [174, "properties"], [175, "properties"], [176, "properties"], [177, "properties"], [178, "properties"], [179, "properties"], [180, "properties"]], "BaseEdgeTypeVertexTypePairRelationsInner": [[55, "baseedgetypevertextypepairrelationsinner"], [121, "baseedgetypevertextypepairrelationsinner"]], "Enum: RelationEnum": [[55, "enum-relationenum"]], "BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams": [[56, "baseedgetypevertextypepairrelationsinnerxcsrparams"], [122, "baseedgetypevertextypepairrelationsinnerxcsrparams"]], "Enum: EdgeStorageStrategyEnum": [[56, "enum-edgestoragestrategyenum"]], "BasePropertyMeta": [[57, "basepropertymeta"], [123, "basepropertymeta"]], "BaseVertexType": [[58, "basevertextype"], [124, "basevertextype"]], "BaseVertexTypeXCsrParams": [[59, "basevertextypexcsrparams"], [125, "basevertextypexcsrparams"]], "ColumnMapping": [[60, "columnmapping"], [126, "columnmapping"]], "CreateEdgeType": [[61, "createedgetype"], [127, "createedgetype"]], "CreateGraphRequest": [[62, "creategraphrequest"], [128, "creategraphrequest"]], "CreateGraphResponse": [[63, "creategraphresponse"], [129, "creategraphresponse"]], "CreateGraphSchemaRequest": [[64, "creategraphschemarequest"], [130, "creategraphschemarequest"]], "CreateProcedureRequest": [[65, "createprocedurerequest"], [131, "createprocedurerequest"]], "Enum: TypeEnum": [[65, "enum-typeenum"], [83, "enum-typeenum"], [102, "enum-typeenum"]], "CreateProcedureResponse": [[66, "createprocedureresponse"], [132, "createprocedureresponse"]], "CreatePropertyMeta": [[67, "createpropertymeta"], [133, "createpropertymeta"]], "CreateVertexType": [[68, "createvertextype"], [134, "createvertextype"]], "DateType": [[69, "datetype"], [135, "datetype"]], "EdgeData": [[70, "edgedata"], [136, "edgedata"]], "EdgeMapping": [[71, "edgemapping"], [137, "edgemapping"]], "EdgeMappingDestinationVertexMappingsInner": [[72, "edgemappingdestinationvertexmappingsinner"], [138, "edgemappingdestinationvertexmappingsinner"]], "EdgeMappingSourceVertexMappingsInner": [[73, "edgemappingsourcevertexmappingsinner"], [139, "edgemappingsourcevertexmappingsinner"]], "EdgeMappingSourceVertexMappingsInnerColumn": [[74, "edgemappingsourcevertexmappingsinnercolumn"], [140, "edgemappingsourcevertexmappingsinnercolumn"]], "EdgeMappingTypeTriplet": [[75, "edgemappingtypetriplet"], [141, "edgemappingtypetriplet"]], "EdgeRequest": [[76, "edgerequest"], [142, "edgerequest"]], "FixedChar": [[77, "fixedchar"], [143, "fixedchar"]], "FixedCharChar": [[78, "fixedcharchar"], [144, "fixedcharchar"]], "GSDataType": [[79, "gsdatatype"], [145, "gsdatatype"]], "Enum: PrimitiveTypeEnum": [[79, "enum-primitivetypeenum"], [92, "enum-primitivetypeenum"]], "GetEdgeType": [[80, "getedgetype"], [146, "getedgetype"]], "GetGraphResponse": [[81, "getgraphresponse"], [147, "getgraphresponse"]], "Enum: StoreTypeEnum": [[81, "enum-storetypeenum"]], "GetGraphSchemaResponse": [[82, "getgraphschemaresponse"], [148, "getgraphschemaresponse"]], "GetProcedureResponse": [[83, "getprocedureresponse"], [149, "getprocedureresponse"]], "GetPropertyMeta": [[84, "getpropertymeta"], [150, "getpropertymeta"]], "GetVertexType": [[85, "getvertextype"], [151, "getvertextype"]], "GraphServiceEdgeManagementApi": [[86, "graphserviceedgemanagementapi"]], "addEdge": [[86, "addedge"]], "deleteEdge": [[86, "deleteedge"]], "getEdge": [[86, "getedge"]], "updateEdge": [[86, "updateedge"]], "GraphServiceVertexManagementApi": [[87, "graphservicevertexmanagementapi"]], "addVertex": [[87, "addvertex"]], "deleteVertex": [[87, "deletevertex"]], "getVertex": [[87, "getvertex"]], "updateVertex": [[87, "updatevertex"]], "JobResponse": [[88, "jobresponse"], [154, "jobresponse"]], "JobStatus": [[89, "jobstatus"], [155, "jobstatus"]], "Enum: StatusEnum": [[89, "enum-statusenum"]], "LongText": [[90, "longtext"], [156, "longtext"]], "Parameter": [[91, "parameter"], [158, "parameter"]], "PrimitiveType": [[92, "primitivetype"], [159, "primitivetype"]], "Property": [[93, "property"], [458, "property"]], "PropertyArray": [[94, "propertyarray"], [160, "propertyarray"]], "QueryRequest": [[95, "queryrequest"], [161, "queryrequest"]], "QueryServiceApi": [[96, "queryserviceapi"]], "procCall": [[96, "proccall"]], "SchemaMapping": [[97, "schemamapping"], [163, "schemamapping"]], "SchemaMappingLoadingConfig": [[98, "schemamappingloadingconfig"], [164, "schemamappingloadingconfig"]], "Enum: ImportOptionEnum": [[98, "enum-importoptionenum"]], "SchemaMappingLoadingConfigFormat": [[99, "schemamappingloadingconfigformat"], [165, "schemamappingloadingconfigformat"]], "ServiceStatus": [[100, "servicestatus"], [166, "servicestatus"], [182, "servicestatus"]], "StartServiceRequest": [[101, "startservicerequest"], [167, "startservicerequest"]], "StoredProcedureMeta": [[102, "storedproceduremeta"], [168, "storedproceduremeta"]], "StringType": [[103, "stringtype"], [169, "stringtype"]], "StringTypeString": [[104, "stringtypestring"], [170, "stringtypestring"]], "TemporalType": [[105, "temporaltype"], [171, "temporaltype"]], "TemporalTypeTemporal": [[106, "temporaltypetemporal"], [172, "temporaltypetemporal"]], "TimeStampType": [[107, "timestamptype"], [173, "timestamptype"]], "TypedValue": [[108, "typedvalue"], [174, "typedvalue"]], "UpdateProcedureRequest": [[109, "updateprocedurerequest"], [175, "updateprocedurerequest"]], "VarChar": [[110, "varchar"], [176, "varchar"]], "VarCharVarChar": [[111, "varcharvarchar"], [177, "varcharvarchar"]], "VertexData": [[112, "vertexdata"], [178, "vertexdata"]], "VertexMapping": [[113, "vertexmapping"], [179, "vertexmapping"]], "VertexRequest": [[114, "vertexrequest"], [180, "vertexrequest"]], "Java SDK Reference": [[115, "java-sdk-reference"]], "Requirements": [[115, "requirements"]], "Maven users": [[115, "maven-users"]], "Others": [[115, "others"]], "Documentation for Service APIs": [[115, "documentation-for-service-apis"], [181, "documentation-for-service-apis"]], "Documentation for Data Structures": [[115, "documentation-for-data-structures"], [181, "documentation-for-data-structures"]], "Documentation for Authorization": [[115, "documentation-for-authorization"]], "interactive_sdk.openapi.AdminServiceGraphManagementApi": [[116, "interactive-sdk-openapi-adminservicegraphmanagementapi"]], "create_dataloading_job": [[116, "create-dataloading-job"]], "create_graph": [[116, "create-graph"]], "delete_graph": [[116, "delete-graph"]], "get_graph": [[116, "get-graph"]], "get_schema": [[116, "get-schema"]], "list_graphs": [[116, "list-graphs"]], "interactive_sdk.openapi.AdminServiceJobManagementApi": [[117, "interactive-sdk-openapi-adminservicejobmanagementapi"]], "delete_job_by_id": [[117, "delete-job-by-id"]], "get_job_by_id": [[117, "get-job-by-id"]], "list_jobs": [[117, "list-jobs"]], "interactive_sdk.openapi.AdminServiceProcedureManagementApi": [[118, "interactive-sdk-openapi-adminserviceproceduremanagementapi"]], "create_procedure": [[118, "create-procedure"]], "delete_procedure": [[118, "delete-procedure"]], "get_procedure": [[118, "get-procedure"]], "list_procedures": [[118, "list-procedures"]], "update_procedure": [[118, "update-procedure"]], "interactive_sdk.openapi.AdminServiceServiceManagementApi": [[119, "interactive-sdk-openapi-adminserviceservicemanagementapi"]], "get_service_status": [[119, "get-service-status"]], "restart_service": [[119, "restart-service"]], "start_service": [[119, "start-service"]], "stop_service": [[119, "stop-service"]], "interactive_sdk.openapi.GraphServiceEdgeManagementApi": [[152, "interactive-sdk-openapi-graphserviceedgemanagementapi"]], "add_edge": [[152, "add-edge"]], "delete_edge": [[152, "delete-edge"]], "get_edge": [[152, "get-edge"]], "update_edge": [[152, "update-edge"]], "interactive_sdk.openapi.GraphServiceVertexManagementApi": [[153, "interactive-sdk-openapi-graphservicevertexmanagementapi"]], "add_vertex": [[153, "add-vertex"]], "delete_vertex": [[153, "delete-vertex"]], "get_vertex": [[153, "get-vertex"]], "update_vertex": [[153, "update-vertex"]], "ModelProperty": [[157, "modelproperty"]], "interactive_sdk.openapi.QueryServiceApi": [[162, "interactive-sdk-openapi-queryserviceapi"]], "proc_call": [[162, "proc-call"]], "Python SDK Reference": [[181, "python-sdk-reference"]], "Requirements.": [[181, "requirements"]], "Installation & Usage": [[181, "installation-usage"]], "pip install": [[181, "pip-install"]], "Setuptools": [[181, "setuptools"]], "Tests": [[181, "tests"]], "Documentation For Authorization": [[181, "documentation-for-authorization"]], "RESTful API Documentation": [[182, "restful-api-documentation"]], "Introduction": [[182, "introduction"], [210, "introduction"]], "API Overview": [[182, "api-overview"]], "Detailed API Documentation": [[182, "detailed-api-documentation"]], "ListGraphs API (GraphManagement Category)": [[182, "listgraphs-api-graphmanagement-category"]], "Description": [[182, "description"], [182, "id1"], [182, "id6"], [182, "id11"], [182, "id16"], [182, "id21"], [182, "id26"], [182, "id31"], [182, "id36"], [182, "id41"], [182, "id46"], [182, "id51"], [182, "id56"], [182, "id61"], [182, "id66"], [182, "id70"], [182, "id75"], [182, "id80"], [182, "id85"]], "HTTP Request": [[182, "http-request"], [182, "id2"], [182, "id7"], [182, "id12"], [182, "id17"], [182, "id22"], [182, "id27"], [182, "id32"], [182, "id37"], [182, "id42"], [182, "id47"], [182, "id52"], [182, "id57"], [182, "id62"], [182, "id67"], [182, "id71"], [182, "id76"], [182, "id81"], [182, "id86"]], "Curl Command Example": [[182, "curl-command-example"], [182, "id3"], [182, "id8"], [182, "id13"], [182, "id18"], [182, "id23"], [182, "id28"], [182, "id33"], [182, "id38"], [182, "id43"], [182, "id48"], [182, "id53"], [182, "id58"], [182, "id63"], [182, "id72"], [182, "id77"], [182, "id82"], [182, "id87"]], "Expected Response": [[182, "expected-response"], [182, "id4"], [182, "id9"], [182, "id14"], [182, "id19"], [182, "id24"], [182, "id29"], [182, "id34"], [182, "id39"], [182, "id44"], [182, "id49"], [182, "id54"], [182, "id59"], [182, "id64"], [182, "id68"], [182, "id73"], [182, "id78"], [182, "id83"], [182, "id88"]], "Status Codes": [[182, "status-codes"], [182, "id5"], [182, "id10"], [182, "id15"], [182, "id20"], [182, "id25"], [182, "id30"], [182, "id35"], [182, "id40"], [182, "id45"], [182, "id50"], [182, "id55"], [182, "id60"], [182, "id65"], [182, "id69"], [182, "id74"], [182, "id79"], [182, "id84"], [182, "id89"]], "CreateGraph (GraphManagement Category)": [[182, "creategraph-graphmanagement-category"]], "DeleteGraph  (GraphManagement Category)": [[182, "deletegraph-graphmanagement-category"]], "GetGraphSchema  (GraphManagement Category)": [[182, "getgraphschema-graphmanagement-category"]], "GetGraphMeta  (GraphManagement Category)": [[182, "getgraphmeta-graphmanagement-category"]], "ImportGraph  (GraphManagement Category)": [[182, "importgraph-graphmanagement-category"]], "CreateProcedure (ProcedureManagement Category)": [[182, "createprocedure-proceduremanagement-category"]], "ListAllProcedure  (ProcedureManagement Category)": [[182, "listallprocedure-proceduremanagement-category"]], "GetProcedure (ProcedureManagement Category)": [[182, "getprocedure-proceduremanagement-category"]], "UpdateProcedure (ProcedureManagement Category)": [[182, "updateprocedure-proceduremanagement-category"]], "DeleteProcedure (ProcedureManagement Category)": [[182, "deleteprocedure-proceduremanagement-category"]], "StartService (ServiceManagement Category)": [[182, "startservice-servicemanagement-category"]], "RestartService (ServiceManagement Category)": [[182, "restartservice-servicemanagement-category"]], "StopService (ServiceManagement Category)": [[182, "stopservice-servicemanagement-category"]], "SystemMetrics (NodeMetrics Category)": [[182, "systemmetrics-nodemetrics-category"]], "GetJobById (JobManagement Category)": [[182, "getjobbyid-jobmanagement-category"]], "GetAllJobs (JobManagement category)": [[182, "getalljobs-jobmanagement-category"]], "CancelJobById (JobManagement category)": [[182, "canceljobbyid-jobmanagement-category"]], "Enable AdminService in development": [[182, "enable-adminservice-in-development"]], "Start Compiler Service": [[182, "start-compiler-service"]], "Http error code": [[182, "http-error-code"]], "Preparation": [[183, "preparation"]], "Manage Interactive Service": [[183, "manage-interactive-service"]], "Initialize the Service": [[183, "initialize-the-service"]], "Start the Service": [[183, "start-the-service"]], "Stop the Service": [[183, "stop-the-service"]], "Restart the Service": [[183, "restart-the-service"]], "Check Service Status": [[183, "check-service-status"]], "Destroy the Service": [[183, "destroy-the-service"]], "Running Cypher Queries": [[183, "running-cypher-queries"]], "Running Gremlin Queries": [[183, "running-gremlin-queries"]], "Glossary": [[184, "glossary"], [228, "glossary"]], "Stored Procedure.": [[184, "stored-procedure"]], "Cypher.": [[184, "cypher"]], "Gremlin": [[184, "gremlin"]], "Compile.": [[184, "compile"]], "Install Interactive": [[185, "install-interactive"]], "A Solid Foundation": [[186, "a-solid-foundation"]], "Key Features": [[186, "key-features"], [215, "key-features"]], "Property Graph Model and Graph Queries": [[186, "property-graph-model-and-graph-queries"]], "The Cypher Query Language": [[186, "the-cypher-query-language"]], "The Gremlin Query Language": [[186, "the-gremlin-query-language"]], "Limitations": [[186, "limitations"], [210, "limitations"]], "GraphScope Interactive SDK": [[187, "graphscope-interactive-sdk"]], "Stored Procedures": [[188, "stored-procedures"]], "Compiling a Stored Procedure": [[188, "compiling-a-stored-procedure"]], "Enabling Stored Procedures": [[188, "enabling-stored-procedures"]], "Disabling Stored Procedures": [[188, "disabling-stored-procedures"]], "Viewing Enabled Stored Procedures": [[188, "viewing-enabled-stored-procedures"]], "Querying Stored Procedures": [[188, "querying-stored-procedures"]], "Tools": [[189, "tools"]], "The Administrative tool": [[190, "the-administrative-tool"]], "Detailed Usage": [[190, "detailed-usage"]], "Root Commands": [[190, "root-commands"]], "Service Commands": [[190, "service-commands"]], "Database Commands": [[190, "database-commands"]], "Procedure Commands": [[190, "procedure-commands"]], "GraphScope Interactive": [[191, "graphscope-interactive"]], "Introduction to ArrowFragment": [[192, "introduction-to-arrowfragment"]], "0. \u672f\u8bed": [[192, "id1"]], "1. \u8f7d\u56fe": [[192, "id2"]], "1.1 \u521d\u59cb\u5316partitioner": [[192, "partitioner"]], "1.2 \u6784\u5efa\u539f\u59cbarrow table": [[192, "arrow-table"]], "1.3. Shuffle vtable": [[192, "shuffle-vtable"]], "1.4. \u6784\u5efaVertex map(BasicArrowVertexMapBuilder)": [[192, "vertex-map-basicarrowvertexmapbuilder"]], "1.5. \u6784\u5efaFragment\u51c6\u5907": [[192, "fragment"]], "1.5.1. \u5904\u7406edge table(BasicEVFragmentLoader)": [[192, "edge-table-basicevfragmentloader"]], "1.5.2 FragmentBuilder\u6570\u636e\u521d\u59cb\u5316 (BasicArrowFragmentBuilder)": [[192, "fragmentbuilder-basicarrowfragmentbuilder"]], "1.6 Fragment\u6784\u5efa": [[192, "id3"]], "2. \u8bbf\u95eeFragment": [[192, "id4"]], "2.1 \u8bbf\u95ee\u9876\u70b9": [[192, "id5"]], "2.1.1 \u8bbf\u95ee\u5185\u90e8\u70b9": [[192, "id6"]], "2.1.2 \u8303\u56f4\u5916\u90e8\u70b9": [[192, "id7"]], "2.1.3 \u8bbf\u95ee\u5168\u90e8\u70b9": [[192, "id8"]], "2.1.4 \u8bbf\u95ee\u9876\u70b9\u6570\u636e": [[192, "id9"]], "2.2 \u8bbf\u95ee\u8fb9": [[192, "id10"]], "2.2.1 \u8bbf\u95ee\u51fa\u8fb9": [[192, "id11"]], "2.2.2 \u8bbf\u95ee\u5165\u8fb9": [[192, "id12"]], "2.2.3 \u8bbf\u95ee\u8fb9\u4e0a\u7684\u6570\u636e": [[192, "id13"]], "Frequently Asked Questions": [[193, "frequently-asked-questions"]], "Getting Started for GLE": [[194, "getting-started-for-gle"]], "Graph Workloads": [[195, "graph-workloads"]], "Graph Analytics": [[195, "graph-analytics"]], "Graph Interactive Query": [[195, "graph-interactive-query"]], "Graph Learning": [[195, "graph-learning"], [310, "graph-learning"]], "GraphScope for Data Scientists": [[196, "graphscope-for-data-scientists"]], "Challenges of Handling Graph Computation": [[196, "challenges-of-handling-graph-computation"]], "Solutions of GraphScope": [[196, "solutions-of-graphscope"]], "Program as Single Machine and Run as Distributed": [[196, "program-as-single-machine-and-run-as-distributed"]], "Integration with PyData Ecosystem": [[196, "integration-with-pydata-ecosystem"]], "How to Report Bugs": [[197, "how-to-report-bugs"]], "GraphScope: A One-Stop Large-Scale Graph Computing System from Alibaba": [[198, "graphscope-a-one-stop-large-scale-graph-computing-system-from-alibaba"]], "Installation & Deployment": [[198, null]], "GraphScope Flex": [[198, null]], "Graph Analytical Engine": [[198, null], [234, "graph-analytical-engine"]], "Graph Interactive Engine": [[198, null], [234, "graph-interactive-engine"]], "Graph Learning Engine": [[198, null]], "Storage Engine": [[198, null]], "Troubleshooting & Utilities": [[198, null]], "Development": [[198, null]], "Reference": [[198, null], [458, "reference"]], "Indices and tables": [[198, "indices-and-tables"]], "Standalone Deployment for GIE": [[199, "standalone-deployment-for-gie"]], "Deploy Your First GIE Service": [[199, "deploy-your-first-gie-service"]], "Remove the GIE Service": [[199, "remove-the-gie-service"]], "Using Your Own Data": [[199, "using-your-own-data"]], "Deploy on a Cluster": [[199, "deploy-on-a-cluster"]], "Other Useful Configurations": [[199, "other-useful-configurations"]], "Design of GIE": [[200, "design-of-gie"]], "The Motivations": [[200, "the-motivations"]], "The Architecture": [[200, "the-architecture"]], "Query Processing": [[200, "query-processing"]], "Build GIE with Vineyard Store on Local": [[201, "build-gie-with-vineyard-store-on-local"]], "Test GIE with Vineyard Store on Local": [[201, "test-gie-with-vineyard-store-on-local"]], "Manually Start the GIE Services": [[201, "manually-start-the-gie-services"]], "Running GraphScope Interactive Engine on Local": [[202, "running-graphscope-interactive-engine-on-local"]], "Customize Configurations for GIE instance": [[202, "customize-configurations-for-gie-instance"]], "GIE for Cypher": [[203, "gie-for-cypher"]], "Connecting via Python Driver": [[203, "connecting-via-python-driver"]], "Connecting via Cypher-Shell": [[203, "connecting-via-cypher-shell"]], "Using LLM as an Assistant in GIE": [[204, "using-llm-as-an-assistant-in-gie"]], "0. Environment": [[204, "environment"]], "1. Download Datasets": [[204, "download-datasets"]], "2. Load the Graph": [[204, "load-the-graph"]], "3. Set Endpoint and API Key": [[204, "set-endpoint-and-api-key"]], "4. Generate Graph Query Sentence from Questions": [[204, "generate-graph-query-sentence-from-questions"]], "5. Execute Generated Query Sentence with GIE": [[204, "execute-generated-query-sentence-with-gie"]], "Cypher Support": [[205, "cypher-support"]], "Data Types": [[205, "data-types"], [457, "data-types"]], "Property Types": [[205, "property-types"]], "Structural types": [[205, "structural-types"]], "Constructed Types": [[205, "constructed-types"]], "Operators": [[205, "operators"]], "Clause": [[205, "clause"]], "Neo4j Ecosystem": [[206, "neo4j-ecosystem"]], "GIE For Tinkerpop Ecosystem": [[206, null], [213, null]], "A Generic Graph Optimizer for GIE": [[207, "a-generic-graph-optimizer-for-gie"]], "Rule-based Optimizer (RBO)": [[207, "rule-based-optimizer-rbo"]], "FilterMatchRule": [[207, "filtermatchrule"]], "DegreeFusionRule": [[207, "degreefusionrule"]], "NotMatchToAntiJoinRule": [[207, "notmatchtoantijoinrule"]], "FieldTrimRule": [[207, "fieldtrimrule"]], "Cost-based Optimizer (CBO)": [[207, "cost-based-optimizer-cbo"]], "Graph Type Inference": [[207, "graph-type-inference"]], "FAQs for GIE Gremlin Usage": [[208, "faqs-for-gie-gremlin-usage"]], "Compatibility with TinkerPop": [[208, "compatibility-with-tinkerpop"]], "Property Graph Constraints": [[208, "property-graph-constraints"]], "What\u2019s the difference between Inner ID and Property ID ?": [[208, "whats-the-difference-between-inner-id-and-property-id"]], "How to use path expand in GIE Gremlin ?": [[208, "how-to-use-path-expand-in-gie-gremlin"]], "How to filter data in GIE Gremlin like SQL ?": [[208, "how-to-filter-data-in-gie-gremlin-like-sql"]], "How to aggregate data in GIE Gremlin like SQL?": [[208, "how-to-aggregate-data-in-gie-gremlin-like-sql"]], "group by multiple keys": [[208, "group-by-multiple-keys"]], "group by multiple values:": [[208, "group-by-multiple-values"]], "How to optimize Gremlin queries for performance in GIE?": [[208, "how-to-optimize-gremlin-queries-for-performance-in-gie"]], "Use appropriate indexing": [[208, "use-appropriate-indexing"]], "How to use subgraph in GIE Gremlin ?": [[208, "how-to-use-subgraph-in-gie-gremlin"]], "Supported Gremlin Steps": [[210, "supported-gremlin-steps"]], "Standard Steps": [[210, "standard-steps"]], "Source": [[210, "source"]], "V()": [[210, "v"]], "E()": [[210, "e"]], "Expand": [[210, "expand"]], "outE()": [[210, "oute"]], "inE()": [[210, "ine"]], "bothE()": [[210, "bothe"]], "out()": [[210, "out"], [210, "id7"]], "in()": [[210, "in"], [210, "id8"]], "both()": [[210, "both"], [210, "id9"]], "outV()": [[210, "outv"]], "inV()": [[210, "inv"]], "otherV()": [[210, "otherv"]], "bothV()": [[210, "bothv"]], "Filter": [[210, "filter"]], "hasId()": [[210, "hasid"], [212, "hasid"]], "hasLabel()": [[210, "haslabel"]], "has()": [[210, "has"]], "hasNot()": [[210, "hasnot"]], "is()": [[210, "is"]], "where(traversal)": [[210, "where-traversal"]], "where(predicate)": [[210, "where-predicate"]], "not(traversal)": [[210, "not-traversal"]], "dedup()": [[210, "dedup"], [212, "dedup"]], "Project": [[210, "project"]], "id()": [[210, "id"]], "label()": [[210, "label"]], "constant()": [[210, "constant"], [212, "constant"]], "valueMap()": [[210, "valuemap"], [212, "valuemap"]], "values()": [[210, "values"]], "elementMap()": [[210, "elementmap"]], "select()": [[210, "select"], [212, "select"]], "Aggregate": [[210, "aggregate"]], "count()": [[210, "count"]], "fold()": [[210, "fold"], [212, "fold"]], "sum()": [[210, "sum"]], "min()": [[210, "min"]], "max()": [[210, "max"]], "mean()": [[210, "mean"]], "group()": [[210, "group"], [212, "group"]], "groupCount()": [[210, "groupcount"], [212, "groupcount"]], "<h3 id=\"gremlin-order\">Order</h3>": [[210, "order"]], "order()": [[210, "id1"]], "Statistics": [[210, "statistics"]], "limit()": [[210, "limit"]], "coin()": [[210, "coin"]], "sample()": [[210, "sample"]], "Union": [[210, "union"]], "union()": [[210, "id2"]], "Match": [[210, "match"]], "match()": [[210, "id3"]], "Subgraph": [[210, "subgraph"]], "subgraph()": [[210, "id4"]], "Identity": [[210, "identity"]], "identity()": [[210, "id5"]], "Unfold": [[210, "unfold"]], "unfold()": [[210, "id6"], [210, "id10"]], "Syntactic Sugars": [[210, "syntactic-sugars"]], "PathExpand": [[210, "pathexpand"]], "endV()": [[210, "endv"]], "Expression": [[210, "expression"]], "Running Examples": [[210, "running-examples"]], "Aggregate (Group)": [[210, "aggregate-group"]], "To be Supported": [[210, "to-be-supported"]], "path()": [[210, "path"]], "local()": [[210, "local"]], "Will Not be Supported": [[210, "will-not-be-supported"]], "repeat()": [[210, "repeat"]], "properties()": [[210, "properties"]], "sideEffect": [[210, "sideeffect"]], "branch": [[210, "branch"]], "GIE for Gremlin": [[211, "gie-for-gremlin"]], "Connecting via Python SDK": [[211, "connecting-via-python-sdk"]], "Connecting via Java SDK": [[211, "connecting-via-java-sdk"]], "Connecting via Gremlin-Console": [[211, "connecting-via-gremlin-console"]], "Tutorial: LDBC Gremlin": [[212, "tutorial-ldbc-gremlin"]], "Load the LDBC Graph": [[212, "load-the-ldbc-graph"]], "Basic Vertex/Edge Query": [[212, "basic-vertex-edge-query"]], "Retrieve Vertices and Edges": [[212, "retrieve-vertices-and-edges"]], "Apply Some Filters": [[212, "apply-some-filters"]], "Extract Property Values": [[212, "extract-property-values"]], "Real Applications": [[212, "real-applications"], [212, "id1"]], "Basic Traversal Query": [[212, "basic-traversal-query"]], "Expansion": [[212, "expansion"]], "out(), in() and both()": [[212, "out-in-and-both"]], "outE(), inE() and bothE()": [[212, "oute-ine-and-bothe"]], "outV(), inV(), bothV() and otherV()": [[212, "outv-inv-bothv-and-otherv"]], "Multiple Expansion Steps": [[212, "multiple-expansion-steps"]], "Expansion from many starting points": [[212, "expansion-from-many-starting-points"]], "Filter & Expansion": [[212, "filter-expansion"]], "Apply filters after expansion": [[212, "apply-filters-after-expansion"]], "Expansion as filters": [[212, "expansion-as-filters"]], "Path Expansion (Syntactic Sugar)": [[212, "path-expansion-syntactic-sugar"]], "Pattern Match": [[212, "pattern-match"]], "Relational Operations": [[212, "relational-operations"]], "Filter Steps": [[212, "filter-steps"]], "where()": [[212, "where"]], "Project Steps": [[212, "project-steps"]], "id() and label()": [[212, "id-and-label"]], "Aggregate Steps": [[212, "aggregate-steps"]], "sum(), min(), max() and  mean()": [[212, "sum-min-max-and-mean"]], "Order Step": [[212, "order-step"]], "Limit Step": [[212, "limit-step"]], "Expression(Syntax Sugar)": [[212, "expression-syntax-sugar"]], "Complex Queries": [[212, "complex-queries"]], "LDBC BI2": [[212, "ldbc-bi2"]], "LDBC BI3": [[212, "ldbc-bi3"]], "LDBC BI4(Left Part)": [[212, "ldbc-bi4-left-part"]], "LDBC BI11": [[212, "ldbc-bi11"]], "LDBC BI14": [[212, "ldbc-bi14"]], "Apache TinkerPop Ecosystem": [[213, "apache-tinkerpop-ecosystem"]], "Tutorials for Java Users": [[214, "tutorials-for-java-users"]], "Ease-of-use: Python Interface": [[215, "ease-of-use-python-interface"]], "Graph Traversal Support, in Gremlin and Cypher": [[215, "graph-traversal-support-in-gremlin-and-cypher"]], "High Performant Built-in Algorithms": [[215, "high-performant-built-in-algorithms"]], "Extensible Algorithm Library for Graph Analytics": [[215, "extensible-algorithm-library-for-graph-analytics"]], "GNN Training & Inference": [[215, "gnn-training-inference"]], "Cloud Native Design": [[215, "cloud-native-design"]], "Across-Engine Workflow Orchestration": [[215, "across-engine-workflow-orchestration"]], "Design of GLE": [[216, "design-of-gle"]], "Model Paradigms": [[216, "model-paradigms"]], "EgoGraph-based node-centric aggregation": [[216, "egograph-based-node-centric-aggregation"]], "SubGraph-based graph message passing": [[216, "subgraph-based-graph-message-passing"]], "Pipeline for Learning": [[216, "pipeline-for-learning"]], "Dev on docker container": [[217, "dev-on-docker-container"]], "Build Learning Engine": [[217, "build-learning-engine"]], "Running GraphScope Learning Engine on Local": [[218, "running-graphscope-learning-engine-on-local"]], "Graph Sampling": [[219, "graph-sampling"], [298, "graph-sampling"]], "Graph Traversal": [[219, "graph-traversal"], [230, "graph-traversal"], [299, "graph-traversal"]], "Neighborhood Sampling": [[219, "neighborhood-sampling"]], "Subgraph Sampling": [[219, "subgraph-sampling"], [231, "subgraph-sampling"]], "Negative Sampling": [[219, "negative-sampling"], [303, "negative-sampling"]], "GSL": [[219, "gsl"]], "Tutorial: Training a Node Classification Model on K8s Cluster": [[221, "tutorial-training-a-node-classification-model-on-k8s-cluster"]], "Create a session on kubernetes and load graph": [[221, "create-a-session-on-kubernetes-and-load-graph"]], "Graph neural networks (GNNs)": [[221, "graph-neural-networks-gnns"]], "Tutorial: Training a Node Classification Model on Your Local Machine": [[222, "tutorial-training-a-node-classification-model-on-your-local-machine"]], "Load Graph": [[222, "load-graph"], [224, "load-graph"]], "Define the Training Process for the EgoGraphSAGE Model": [[222, "define-the-training-process-for-the-egographsage-model"]], "Launch the Learning Engine": [[222, "launch-the-learning-engine"], [224, "launch-the-learning-engine"]], "Train the Model": [[222, "train-the-model"]], "Tutorial: Training a Node Classification Model (PyG) on a K8S Cluster": [[223, "tutorial-training-a-node-classification-model-pyg-on-a-k8s-cluster"]], "Set parameters & load graph": [[223, "set-parameters-load-graph"]], "Launch the Server Engine": [[223, "launch-the-server-engine"]], "Configure the parameters for client pods": [[223, "configure-the-parameters-for-client-pods"]], "Write training and testing script": [[223, "write-training-and-testing-script"]], "Import packages": [[223, "import-packages"]], "Define test function": [[223, "define-test-function"]], "Define the loader and training process": [[223, "define-the-loader-and-training-process"]], "main function": [[223, "main-function"]], "Run the script": [[223, "run-the-script"]], "Tutorial: Training a Node Classification Model (PyG) on Your Local Machine": [[224, "tutorial-training-a-node-classification-model-pyg-on-your-local-machine"]], "Define the evaluation function": [[224, "define-the-evaluation-function"]], "Create neighbor loaderfor training, testing and validation": [[224, "create-neighbor-loaderfor-training-testing-and-validation"]], "Define the PyG GraphSage Model and optimizer": [[224, "define-the-pyg-graphsage-model-and-optimizer"]], "Train and test": [[224, "train-and-test"]], "Loading Graphs": [[225, "loading-graphs"]], "Load Built-in Datasets": [[225, "load-built-in-datasets"]], "Loading Your Own Datasets": [[225, "loading-your-own-datasets"]], "Adding Vertices": [[225, "adding-vertices"]], "Advanced Usages": [[225, "advanced-usages"]], "Deduce vertex labels when not ambiguous": [[225, "deduce-vertex-labels-when-not-ambiguous"]], "Deduce vertex from edges": [[225, "deduce-vertex-from-edges"]], "Multiple relations": [[225, "multiple-relations"]], "Specify data types of properties manually": [[225, "specify-data-types-of-properties-manually"]], "Other parameters of graph": [[225, "other-parameters-of-graph"]], "Putting them Together": [[225, "putting-them-together"]], "Loading From Pandas or Numpy": [[225, "loading-from-pandas-or-numpy"]], "From Pandas": [[225, "from-pandas"]], "From Numpy": [[225, "from-numpy"]], "Loader Variants": [[225, "loader-variants"]], "Techniques targeting at large graph": [[225, "techniques-targeting-at-large-graph"]], "Tips for reduce memory consumption of graphs": [[225, "tips-for-reduce-memory-consumption-of-graphs"]], "Design of GraphScope": [[226, "design-of-graphscope"]], "Unified Graph Computing Platform": [[226, "unified-graph-computing-platform"]], "Application layer": [[226, "application-layer"]], "Execution engine layer": [[226, "execution-engine-layer"]], "Storage layer": [[226, "storage-layer"]], "Disaggregated Design for Diverse Graph Applications": [[226, "disaggregated-design-for-diverse-graph-applications"]], "GraphScope for BI analysis": [[226, "graphscope-for-bi-analysis"]], "GraphScope for high QPS queries": [[226, "graphscope-for-high-qps-queries"]], "GraphScope for graph analytics": [[226, "graphscope-for-graph-analytics"]], "GraphScope for learning": [[226, "graphscope-for-learning"]], "One-stop Graph Processing": [[227, "one-stop-graph-processing"]], "Graph Analytical Task Quick Start": [[227, "graph-analytical-task-quick-start"]], "Graph Interactive Query Quick Start": [[227, "graph-interactive-query-quick-start"]], "Graph Learning Quick Start": [[227, "graph-learning-quick-start"]], "FLASH": [[228, "flash"]], "GRAPE": [[228, "grape"]], "GAE": [[228, "gae"]], "GART": [[228, "gart"]], "GRIN": [[228, "grin"]], "GraphAr": [[228, "graphar"]], "Groot": [[228, "groot"]], "GUM": [[228, "gum"]], "MaxGraph (deprecated)": [[228, "maxgraph-deprecated"]], "Vineyard, or v6d": [[228, "vineyard-or-v6d"]], "GIE": [[228, "gie"]], "GAIA": [[228, "gaia"]], "Pegasus": [[228, "pegasus"]], "Ingress": [[228, "ingress"]], "PIE-model": [[228, "pie-model"]], "Graph Analytics Workloads": [[229, "graph-analytics-workloads"]], "What is Graph Analytics": [[229, "what-is-graph-analytics"]], "Challenges of Graph Analytics on Large Graphs": [[229, "challenges-of-graph-analytics-on-large-graphs"]], "What can GraphScope Do": [[229, "what-can-graphscope-do"], [231, "what-can-graphscope-do"]], "Graph Interactive Workloads": [[230, "graph-interactive-workloads"]], "Tinkerpop and Gremlin": [[230, "tinkerpop-and-gremlin"]], "Pattern Matching": [[230, "pattern-matching"], [230, "id1"]], "Neo4j and Cypher": [[230, "neo4j-and-cypher"]], "Graph Learning Workloads": [[231, "graph-learning-workloads"]], "What is Graph Neural Network": [[231, "what-is-graph-neural-network"]], "Typical GNN Models": [[231, "typical-gnn-models"]], "Paradigm of Model Training": [[231, "paradigm-of-model-training"]], "Steps of Model Training": [[231, "steps-of-model-training"]], "Challenges of Applying GNNs on Large Graphs": [[231, "challenges-of-applying-gnns-on-large-graphs"]], "Introducing GraphScope": [[232, "introducing-graphscope"]], "What is GraphScope": [[232, "what-is-graphscope"]], "Why use GraphScope": [[232, "why-use-graphscope"]], "What are the Use Cases": [[232, "what-are-the-use-cases"]], "What are the Limitations": [[232, "what-are-the-limitations"]], "What are the Next": [[232, "what-are-the-next"]], "Positioning of GraphScope": [[233, "positioning-of-graphscope"]], "Compare with Graph Processing Systems": [[233, "compare-with-graph-processing-systems"]], "Compare with Graph Databases": [[233, "compare-with-graph-databases"]], "Compare with Graph Learning Systems": [[233, "compare-with-graph-learning-systems"]], "Handling Various Types of Graph Workloads": [[233, "handling-various-types-of-graph-workloads"]], "Performance and Benchmark": [[234, "performance-and-benchmark"]], "Results": [[234, "results"]], "Performance on GPUs": [[234, "performance-on-gpus"]], "Reproducing the results": [[234, "reproducing-the-results"]], "Tutorials for Python Users": [[235, "tutorials-for-python-users"]], "Analytical Engine API Reference": [[236, "analytical-engine-api-reference"]], "Analytical Engine": [[236, "analytical-engine"]], "Fragments in GraphScope": [[236, "fragments-in-graphscope"]], "Analytical Apps": [[236, "analytical-apps"]], "Analytical Workers": [[236, "analytical-workers"]], "App\u2019s Context": [[236, "app-s-context"]], "Analytical App": [[237, "analytical-app"]], "AppAssets": [[237, "appassets"]], "JavaApp": [[237, "javaapp"]], "App object": [[237, "app-object"]], "Functions": [[237, "functions"], [239, "functions"], [312, "functions"]], "BuiltIn apps": [[237, "builtin-apps"]], "Context": [[238, "context"]], "Context object": [[238, "context-object"]], "Cython SDK API": [[239, "cython-sdk-api"]], "Pregel": [[239, "pregel"]], "PIE": [[239, "pie"]], "GraphScope types": [[239, "graphscope-types"]], "Flex API Reference": [[240, "flex-api-reference"]], "About Grape JDK": [[241, "about-grape-jdk"]], "Project Structure": [[241, "project-structure"]], "Building from source": [[241, "building-from-source"]], "Java Reference (javadoc)": [[242, "java-reference-javadoc"]], "graphscope.Vertex": [[243, "graphscope-vertex"]], "graphscope.declare": [[244, "graphscope-declare"]], "graphscope.framework.app.load_app": [[245, "graphscope-framework-app-load-app"]], "graphscope.framework.dag_utils.add_column": [[246, "graphscope-framework-dag-utils-add-column"]], "graphscope.framework.dag_utils.add_labels_to_graph": [[247, "graphscope-framework-dag-utils-add-labels-to-graph"]], "graphscope.framework.dag_utils.arrow_to_dynamic": [[248, "graphscope-framework-dag-utils-arrow-to-dynamic"]], "graphscope.framework.dag_utils.bind_app": [[249, "graphscope-framework-dag-utils-bind-app"]], "graphscope.framework.dag_utils.clear_edges": [[250, "graphscope-framework-dag-utils-clear-edges"]], "graphscope.framework.dag_utils.clear_graph": [[251, "graphscope-framework-dag-utils-clear-graph"]], "graphscope.framework.dag_utils.context_to_dataframe": [[252, "graphscope-framework-dag-utils-context-to-dataframe"]], "graphscope.framework.dag_utils.context_to_numpy": [[253, "graphscope-framework-dag-utils-context-to-numpy"]], "graphscope.framework.dag_utils.copy_graph": [[254, "graphscope-framework-dag-utils-copy-graph"]], "graphscope.framework.dag_utils.create_app": [[255, "graphscope-framework-dag-utils-create-app"]], "graphscope.framework.dag_utils.create_graph": [[256, "graphscope-framework-dag-utils-create-graph"]], "graphscope.framework.dag_utils.create_graph_view": [[257, "graphscope-framework-dag-utils-create-graph-view"]], "graphscope.framework.dag_utils.create_loader": [[258, "graphscope-framework-dag-utils-create-loader"]], "graphscope.framework.dag_utils.create_subgraph": [[259, "graphscope-framework-dag-utils-create-subgraph"]], "graphscope.framework.dag_utils.create_unload_op": [[260, "graphscope-framework-dag-utils-create-unload-op"]], "graphscope.framework.dag_utils.dynamic_to_arrow": [[261, "graphscope-framework-dag-utils-dynamic-to-arrow"]], "graphscope.framework.dag_utils.get_context_data": [[262, "graphscope-framework-dag-utils-get-context-data"]], "graphscope.framework.dag_utils.graph_to_dataframe": [[263, "graphscope-framework-dag-utils-graph-to-dataframe"]], "graphscope.framework.dag_utils.graph_to_numpy": [[264, "graphscope-framework-dag-utils-graph-to-numpy"]], "graphscope.framework.dag_utils.gremlin_to_subgraph": [[265, "graphscope-framework-dag-utils-gremlin-to-subgraph"]], "graphscope.framework.dag_utils.modify_edges": [[266, "graphscope-framework-dag-utils-modify-edges"]], "graphscope.framework.dag_utils.modify_vertices": [[267, "graphscope-framework-dag-utils-modify-vertices"]], "graphscope.framework.dag_utils.output": [[268, "graphscope-framework-dag-utils-output"]], "graphscope.framework.dag_utils.project_arrow_property_graph": [[269, "graphscope-framework-dag-utils-project-arrow-property-graph"]], "graphscope.framework.dag_utils.project_to_simple": [[270, "graphscope-framework-dag-utils-project-to-simple"]], "graphscope.framework.dag_utils.report_graph": [[271, "graphscope-framework-dag-utils-report-graph"]], "graphscope.framework.dag_utils.run_app": [[272, "graphscope-framework-dag-utils-run-app"]], "graphscope.framework.dag_utils.to_data_sink": [[273, "graphscope-framework-dag-utils-to-data-sink"]], "graphscope.framework.dag_utils.to_directed": [[274, "graphscope-framework-dag-utils-to-directed"]], "graphscope.framework.dag_utils.to_undirected": [[275, "graphscope-framework-dag-utils-to-undirected"]], "graphscope.framework.dag_utils.to_vineyard_dataframe": [[276, "graphscope-framework-dag-utils-to-vineyard-dataframe"]], "graphscope.framework.dag_utils.to_vineyard_tensor": [[277, "graphscope-framework-dag-utils-to-vineyard-tensor"]], "graphscope.framework.dag_utils.unload_app": [[278, "graphscope-framework-dag-utils-unload-app"]], "graphscope.framework.dag_utils.unload_context": [[279, "graphscope-framework-dag-utils-unload-context"]], "graphscope.framework.dag_utils.unload_graph": [[280, "graphscope-framework-dag-utils-unload-graph"]], "graphscope.framework.operation.Operation.__init__": [[281, "graphscope-framework-operation-operation-init"]], "graphscope.framework.operation.Operation.as_op_def": [[282, "graphscope-framework-operation-operation-as-op-def"]], "graphscope.framework.operation.Operation.eval": [[283, "graphscope-framework-operation-operation-eval"]], "graphscope.framework.operation.Operation.evaluated": [[284, "graphscope-framework-operation-operation-evaluated"]], "graphscope.framework.operation.Operation.key": [[285, "graphscope-framework-operation-operation-key"]], "graphscope.framework.operation.Operation.signature": [[286, "graphscope-framework-operation-operation-signature"]], "graphscope.g": [[287, "graphscope-g"]], "graphscope.get_default_session": [[288, "graphscope-get-default-session"]], "graphscope.graphlearn": [[289, "graphscope-graphlearn"]], "graphscope.gremlin": [[290, "graphscope-gremlin"]], "graphscope.has_default_session": [[291, "graphscope-has-default-session"]], "graphscope.session": [[292, "graphscope-session"]], "graphscope.set_option": [[293, "graphscope-set-option"]], "Developing Your Own Model": [[294, "developing-your-own-model"]], "How to Build a Graph Learning Algorithm": [[294, "how-to-build-a-graph-learning-algorithm"]], "Sampling": [[294, "sampling"]], "Encoder": [[294, "encoder"], [302, "encoder"]], "Loss Function and Training Process": [[294, "loss-function-and-training-process"]], "Data Source": [[295, "data-source"]], "1 Data format": [[295, "data-format"]], "1.1 Basic format": [[295, "basic-format"]], "1.2 Attribute format\uff08ATTRIBUTED\uff09": [[295, "attribute-format-attributed"]], "1.3 Weight format\uff08WEIGHTED\uff09": [[295, "weight-format-weighted"]], "1.4 Label format\uff08LABELED\uff09": [[295, "label-format-labeled"]], "1.5 Putting together": [[295, "putting-together"]], "2 Data source type": [[295, "data-source-type"]], "2.2 Alibaba Cloud MaxCompute data table": [[295, "alibaba-cloud-maxcompute-data-table"]], "3 User API": [[295, "user-api"]], "Graph Object": [[296, "graph-object"]], "2 Describe the Topology": [[296, "describe-the-topology"]], "3.1 Stand-alone Mode": [[296, "stand-alone-mode"]], "3.2 Distributed Mode \u2013 Client/Server Mode": [[296, "distributed-mode-client-server-mode"]], "Graph Query": [[297, "graph-query"]], "1 Introduction": [[298, "introduction"]], "Graph Sampling Language\uff08GSL)": [[300, "graph-sampling-language-gsl"]], "Install from pip": [[301, "install-from-pip"]], "Get wheel package": [[301, "get-wheel-package"]], "Install using pip": [[301, "install-using-pip"]], "Install TensorFlow": [[301, "install-tensorflow"]], "Install git": [[301, "install-git"]], "Install dependent libraries": [[301, "install-dependent-libraries"]], "Compile": [[301, "compile"], [304, "compile"]], "Install": [[301, "install"]], "Run test": [[301, "run-test"]], "Docker image": [[301, "docker-image"]], "Graph Learning Model": [[302, "graph-learning-model"]], "Data model": [[302, "data-model"]], "Defining Your Own Operator": [[304, "defining-your-own-operator"]], "Programming Interface": [[304, "programming-interface"]], "Distributed Runtime Design": [[304, "distributed-runtime-design"]], "Implement a New Operator": [[304, "implement-a-new-operator"]], "Clone source code": [[304, "clone-source-code"]], "Implement your operator class": [[304, "implement-your-operator-class"]], "Register Operator": [[304, "register-operator"]], "How to Use an Operator": [[304, "how-to-use-an-operator"]], "Integrating Other Data Sources": [[305, "integrating-other-data-sources"]], "File System Interface": [[305, "file-system-interface"]], "ByteStreamAccessFile": [[305, "bytestreamaccessfile"]], "StructuredAccessFile": [[305, "structuredaccessfile"]], "WritableFile": [[305, "writablefile"]], "Register with Scheme": [[305, "register-with-scheme"]], "Quick Start": [[306, "quick-start"]], "1 Trying out the built-in models": [[306, "trying-out-the-built-in-models"]], "2 How to use the GL APIs": [[306, "how-to-use-the-gl-apis"]], "3 Developing a GNN model": [[306, "developing-a-gnn-model"]], "3.1 Data Preparation": [[306, "data-preparation"]], "3.2 Graph Construction": [[306, "graph-construction"]], "3.3 Graph Sampling": [[306, "graph-sampling"]], "3.4 GNN Model": [[306, "gnn-model"]], "System configuration": [[307, "system-configuration"]], "Graph": [[308, "graph"], [312, "graph"], [446, "graph"]], "Graph object": [[308, "graph-object"]], "Loader object": [[308, "loader-object"]], "Graph Functions": [[308, "graph-functions"]], "Interactive Query": [[309, "interactive-query"]], "Builtin algorithms": [[311, "builtin-algorithms"]], "Nodes": [[312, "nodes"]], "Edges": [[312, "edges"]], "Self loops": [[312, "self-loops"]], "Attributes": [[312, "attributes"]], "Freezing graph structure": [[312, "freezing-graph-structure"]], "graphscope.nx.classes.function.add_cycle": [[313, "graphscope-nx-classes-function-add-cycle"]], "graphscope.nx.classes.function.add_path": [[314, "graphscope-nx-classes-function-add-path"]], "graphscope.nx.classes.function.add_star": [[315, "graphscope-nx-classes-function-add-star"]], "graphscope.nx.classes.function.all_neighbors": [[316, "graphscope-nx-classes-function-all-neighbors"]], "graphscope.nx.classes.function.common_neighbors": [[317, "graphscope-nx-classes-function-common-neighbors"]], "graphscope.nx.classes.function.create_empty_copy": [[318, "graphscope-nx-classes-function-create-empty-copy"]], "graphscope.nx.classes.function.degree": [[319, "graphscope-nx-classes-function-degree"]], "graphscope.nx.classes.function.degree_histogram": [[320, "graphscope-nx-classes-function-degree-histogram"]], "graphscope.nx.classes.function.density": [[321, "graphscope-nx-classes-function-density"]], "graphscope.nx.classes.function.edge_subgraph": [[322, "graphscope-nx-classes-function-edge-subgraph"]], "graphscope.nx.classes.function.edges": [[323, "graphscope-nx-classes-function-edges"]], "graphscope.nx.classes.function.freeze": [[324, "graphscope-nx-classes-function-freeze"]], "graphscope.nx.classes.function.induced_subgraph": [[325, "graphscope-nx-classes-function-induced-subgraph"]], "graphscope.nx.classes.function.info": [[326, "graphscope-nx-classes-function-info"]], "graphscope.nx.classes.function.is_directed": [[327, "graphscope-nx-classes-function-is-directed"]], "graphscope.nx.classes.function.is_empty": [[328, "graphscope-nx-classes-function-is-empty"]], "graphscope.nx.classes.function.is_frozen": [[329, "graphscope-nx-classes-function-is-frozen"]], "graphscope.nx.classes.function.is_negatively_weighted": [[330, "graphscope-nx-classes-function-is-negatively-weighted"]], "graphscope.nx.classes.function.is_weighted": [[331, "graphscope-nx-classes-function-is-weighted"]], "graphscope.nx.classes.function.neighbors": [[332, "graphscope-nx-classes-function-neighbors"]], "graphscope.nx.classes.function.nodes": [[333, "graphscope-nx-classes-function-nodes"]], "graphscope.nx.classes.function.nodes_with_selfloops": [[334, "graphscope-nx-classes-function-nodes-with-selfloops"]], "graphscope.nx.classes.function.non_edges": [[335, "graphscope-nx-classes-function-non-edges"]], "graphscope.nx.classes.function.non_neighbors": [[336, "graphscope-nx-classes-function-non-neighbors"]], "graphscope.nx.classes.function.number_of_edges": [[337, "graphscope-nx-classes-function-number-of-edges"]], "graphscope.nx.classes.function.number_of_nodes": [[338, "graphscope-nx-classes-function-number-of-nodes"]], "graphscope.nx.classes.function.number_of_selfloops": [[339, "graphscope-nx-classes-function-number-of-selfloops"]], "graphscope.nx.classes.function.selfloop_edges": [[340, "graphscope-nx-classes-function-selfloop-edges"]], "graphscope.nx.classes.function.subgraph": [[341, "graphscope-nx-classes-function-subgraph"]], "graphscope.nx.classes.function.to_directed": [[342, "graphscope-nx-classes-function-to-directed"]], "graphscope.nx.classes.function.to_undirected": [[343, "graphscope-nx-classes-function-to-undirected"]], "graphscope.nx.generators.atlas.graph_atlas": [[344, "graphscope-nx-generators-atlas-graph-atlas"]], "graphscope.nx.generators.atlas.graph_atlas_g": [[345, "graphscope-nx-generators-atlas-graph-atlas-g"]], "graphscope.nx.generators.classic.balanced_tree": [[346, "graphscope-nx-generators-classic-balanced-tree"]], "graphscope.nx.generators.classic.barbell_graph": [[347, "graphscope-nx-generators-classic-barbell-graph"]], "graphscope.nx.generators.classic.binomial_tree": [[348, "graphscope-nx-generators-classic-binomial-tree"]], "graphscope.nx.generators.classic.circulant_graph": [[349, "graphscope-nx-generators-classic-circulant-graph"]], "graphscope.nx.generators.classic.circular_ladder_graph": [[350, "graphscope-nx-generators-classic-circular-ladder-graph"]], "graphscope.nx.generators.classic.complete_graph": [[351, "graphscope-nx-generators-classic-complete-graph"]], "graphscope.nx.generators.classic.complete_multipartite_graph": [[352, "graphscope-nx-generators-classic-complete-multipartite-graph"]], "graphscope.nx.generators.classic.cycle_graph": [[353, "graphscope-nx-generators-classic-cycle-graph"]], "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph": [[354, "graphscope-nx-generators-classic-dorogovtsev-goltsev-mendes-graph"]], "graphscope.nx.generators.classic.empty_graph": [[355, "graphscope-nx-generators-classic-empty-graph"]], "graphscope.nx.generators.classic.full_rary_tree": [[356, "graphscope-nx-generators-classic-full-rary-tree"]], "graphscope.nx.generators.classic.ladder_graph": [[357, "graphscope-nx-generators-classic-ladder-graph"]], "graphscope.nx.generators.classic.lollipop_graph": [[358, "graphscope-nx-generators-classic-lollipop-graph"]], "graphscope.nx.generators.classic.null_graph": [[359, "graphscope-nx-generators-classic-null-graph"]], "graphscope.nx.generators.classic.path_graph": [[360, "graphscope-nx-generators-classic-path-graph"]], "graphscope.nx.generators.classic.star_graph": [[361, "graphscope-nx-generators-classic-star-graph"]], "graphscope.nx.generators.classic.trivial_graph": [[362, "graphscope-nx-generators-classic-trivial-graph"]], "graphscope.nx.generators.classic.turan_graph": [[363, "graphscope-nx-generators-classic-turan-graph"]], "graphscope.nx.generators.classic.wheel_graph": [[364, "graphscope-nx-generators-classic-wheel-graph"]], "graphscope.nx.generators.community.LFR_benchmark_graph": [[365, "graphscope-nx-generators-community-lfr-benchmark-graph"]], "graphscope.nx.generators.community.caveman_graph": [[366, "graphscope-nx-generators-community-caveman-graph"]], "graphscope.nx.generators.community.connected_caveman_graph": [[367, "graphscope-nx-generators-community-connected-caveman-graph"]], "graphscope.nx.generators.community.gaussian_random_partition_graph": [[368, "graphscope-nx-generators-community-gaussian-random-partition-graph"]], "graphscope.nx.generators.community.planted_partition_graph": [[369, "graphscope-nx-generators-community-planted-partition-graph"]], "graphscope.nx.generators.community.random_partition_graph": [[370, "graphscope-nx-generators-community-random-partition-graph"]], "graphscope.nx.generators.community.relaxed_caveman_graph": [[371, "graphscope-nx-generators-community-relaxed-caveman-graph"]], "graphscope.nx.generators.community.ring_of_cliques": [[372, "graphscope-nx-generators-community-ring-of-cliques"]], "graphscope.nx.generators.community.stochastic_block_model": [[373, "graphscope-nx-generators-community-stochastic-block-model"]], "graphscope.nx.generators.community.windmill_graph": [[374, "graphscope-nx-generators-community-windmill-graph"]], "graphscope.nx.generators.degree_seq.configuration_model": [[375, "graphscope-nx-generators-degree-seq-configuration-model"]], "graphscope.nx.generators.degree_seq.degree_sequence_tree": [[376, "graphscope-nx-generators-degree-seq-degree-sequence-tree"]], "graphscope.nx.generators.degree_seq.directed_configuration_model": [[377, "graphscope-nx-generators-degree-seq-directed-configuration-model"]], "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph": [[378, "graphscope-nx-generators-degree-seq-directed-havel-hakimi-graph"]], "graphscope.nx.generators.degree_seq.expected_degree_graph": [[379, "graphscope-nx-generators-degree-seq-expected-degree-graph"]], "graphscope.nx.generators.degree_seq.havel_hakimi_graph": [[380, "graphscope-nx-generators-degree-seq-havel-hakimi-graph"]], "graphscope.nx.generators.degree_seq.random_degree_sequence_graph": [[381, "graphscope-nx-generators-degree-seq-random-degree-sequence-graph"]], "graphscope.nx.generators.directed.gn_graph": [[382, "graphscope-nx-generators-directed-gn-graph"]], "graphscope.nx.generators.directed.gnc_graph": [[383, "graphscope-nx-generators-directed-gnc-graph"]], "graphscope.nx.generators.directed.gnr_graph": [[384, "graphscope-nx-generators-directed-gnr-graph"]], "graphscope.nx.generators.directed.random_k_out_graph": [[385, "graphscope-nx-generators-directed-random-k-out-graph"]], "graphscope.nx.generators.directed.scale_free_graph": [[386, "graphscope-nx-generators-directed-scale-free-graph"]], "graphscope.nx.generators.duplication.duplication_divergence_graph": [[387, "graphscope-nx-generators-duplication-duplication-divergence-graph"]], "graphscope.nx.generators.duplication.partial_duplication_graph": [[388, "graphscope-nx-generators-duplication-partial-duplication-graph"]], "graphscope.nx.generators.ego.ego_graph": [[389, "graphscope-nx-generators-ego-ego-graph"]], "graphscope.nx.generators.expanders.chordal_cycle_graph": [[390, "graphscope-nx-generators-expanders-chordal-cycle-graph"]], "graphscope.nx.generators.expanders.margulis_gabber_galil_graph": [[391, "graphscope-nx-generators-expanders-margulis-gabber-galil-graph"]], "graphscope.nx.generators.expanders.paley_graph": [[392, "graphscope-nx-generators-expanders-paley-graph"]], "graphscope.nx.generators.geometric.geographical_threshold_graph": [[393, "graphscope-nx-generators-geometric-geographical-threshold-graph"]], "graphscope.nx.generators.geometric.random_geometric_graph": [[394, "graphscope-nx-generators-geometric-random-geometric-graph"]], "graphscope.nx.generators.geometric.soft_random_geometric_graph": [[395, "graphscope-nx-generators-geometric-soft-random-geometric-graph"]], "graphscope.nx.generators.geometric.thresholded_random_geometric_graph": [[396, "graphscope-nx-generators-geometric-thresholded-random-geometric-graph"]], "graphscope.nx.generators.geometric.waxman_graph": [[397, "graphscope-nx-generators-geometric-waxman-graph"]], "graphscope.nx.generators.harary_graph.hkn_harary_graph": [[398, "graphscope-nx-generators-harary-graph-hkn-harary-graph"]], "graphscope.nx.generators.harary_graph.hnm_harary_graph": [[399, "graphscope-nx-generators-harary-graph-hnm-harary-graph"]], "graphscope.nx.generators.intersection.general_random_intersection_graph": [[400, "graphscope-nx-generators-intersection-general-random-intersection-graph"]], "graphscope.nx.generators.intersection.k_random_intersection_graph": [[401, "graphscope-nx-generators-intersection-k-random-intersection-graph"]], "graphscope.nx.generators.intersection.uniform_random_intersection_graph": [[402, "graphscope-nx-generators-intersection-uniform-random-intersection-graph"]], "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph": [[403, "graphscope-nx-generators-joint-degree-seq-directed-joint-degree-graph"]], "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree": [[404, "graphscope-nx-generators-joint-degree-seq-is-valid-directed-joint-degree"]], "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree": [[405, "graphscope-nx-generators-joint-degree-seq-is-valid-joint-degree"]], "graphscope.nx.generators.joint_degree_seq.joint_degree_graph": [[406, "graphscope-nx-generators-joint-degree-seq-joint-degree-graph"]], "graphscope.nx.generators.mycielski.mycielski_graph": [[407, "graphscope-nx-generators-mycielski-mycielski-graph"]], "graphscope.nx.generators.mycielski.mycielskian": [[408, "graphscope-nx-generators-mycielski-mycielskian"]], "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees": [[409, "graphscope-nx-generators-nonisomorphic-trees-nonisomorphic-trees"]], "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees": [[410, "graphscope-nx-generators-nonisomorphic-trees-number-of-nonisomorphic-trees"]], "graphscope.nx.generators.small.LCF_graph": [[411, "graphscope-nx-generators-small-lcf-graph"]], "graphscope.nx.generators.small.bull_graph": [[412, "graphscope-nx-generators-small-bull-graph"]], "graphscope.nx.generators.small.chvatal_graph": [[413, "graphscope-nx-generators-small-chvatal-graph"]], "graphscope.nx.generators.small.cubical_graph": [[414, "graphscope-nx-generators-small-cubical-graph"]], "graphscope.nx.generators.small.desargues_graph": [[415, "graphscope-nx-generators-small-desargues-graph"]], "graphscope.nx.generators.small.diamond_graph": [[416, "graphscope-nx-generators-small-diamond-graph"]], "graphscope.nx.generators.small.dodecahedral_graph": [[417, "graphscope-nx-generators-small-dodecahedral-graph"]], "graphscope.nx.generators.small.frucht_graph": [[418, "graphscope-nx-generators-small-frucht-graph"]], "graphscope.nx.generators.small.heawood_graph": [[419, "graphscope-nx-generators-small-heawood-graph"]], "graphscope.nx.generators.small.house_graph": [[420, "graphscope-nx-generators-small-house-graph"]], "graphscope.nx.generators.small.house_x_graph": [[421, "graphscope-nx-generators-small-house-x-graph"]], "graphscope.nx.generators.small.icosahedral_graph": [[422, "graphscope-nx-generators-small-icosahedral-graph"]], "graphscope.nx.generators.small.krackhardt_kite_graph": [[423, "graphscope-nx-generators-small-krackhardt-kite-graph"]], "graphscope.nx.generators.small.make_small_graph": [[424, "graphscope-nx-generators-small-make-small-graph"]], "graphscope.nx.generators.small.moebius_kantor_graph": [[425, "graphscope-nx-generators-small-moebius-kantor-graph"]], "graphscope.nx.generators.small.octahedral_graph": [[426, "graphscope-nx-generators-small-octahedral-graph"]], "graphscope.nx.generators.small.pappus_graph": [[427, "graphscope-nx-generators-small-pappus-graph"]], "graphscope.nx.generators.small.petersen_graph": [[428, "graphscope-nx-generators-small-petersen-graph"]], "graphscope.nx.generators.small.sedgewick_maze_graph": [[429, "graphscope-nx-generators-small-sedgewick-maze-graph"]], "graphscope.nx.generators.small.tetrahedral_graph": [[430, "graphscope-nx-generators-small-tetrahedral-graph"]], "graphscope.nx.generators.small.truncated_cube_graph": [[431, "graphscope-nx-generators-small-truncated-cube-graph"]], "graphscope.nx.generators.small.truncated_tetrahedron_graph": [[432, "graphscope-nx-generators-small-truncated-tetrahedron-graph"]], "graphscope.nx.generators.small.tutte_graph": [[433, "graphscope-nx-generators-small-tutte-graph"]], "graphscope.nx.generators.social.davis_southern_women_graph": [[434, "graphscope-nx-generators-social-davis-southern-women-graph"]], "graphscope.nx.generators.social.florentine_families_graph": [[435, "graphscope-nx-generators-social-florentine-families-graph"]], "graphscope.nx.generators.social.karate_club_graph": [[436, "graphscope-nx-generators-social-karate-club-graph"]], "graphscope.nx.generators.social.les_miserables_graph": [[437, "graphscope-nx-generators-social-les-miserables-graph"]], "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge": [[438, "graphscope-nx-generators-spectral-graph-forge-spectral-graph-forge"]], "graphscope.nx.generators.sudoku.sudoku_graph": [[439, "graphscope-nx-generators-sudoku-sudoku-graph"]], "graphscope.nx.generators.trees.prefix_tree": [[440, "graphscope-nx-generators-trees-prefix-tree"]], "graphscope.nx.generators.trees.random_tree": [[441, "graphscope-nx-generators-trees-random-tree"]], "graphscope.nx.generators.triads.triad_graph": [[442, "graphscope-nx-generators-triads-triad-graph"]], "networkx.generators.internet_as_graphs.random_internet_as_graph": [[443, "networkx-generators-internet-as-graphs-random-internet-as-graph"]], "networkx.generators.stochastic.stochastic_graph": [[444, "networkx-generators-stochastic-stochastic-graph"]], "Graph generators": [[445, "graph-generators"]], "Atlas": [[445, "module-graphscope.nx.generators.atlas"]], "Classic": [[445, "module-graphscope.nx.generators.classic"]], "Expanders": [[445, "module-graphscope.nx.generators.expanders"]], "Small": [[445, "module-graphscope.nx.generators.small"]], "Duplication Divergence": [[445, "module-graphscope.nx.generators.duplication"]], "Degree Sequence": [[445, "module-graphscope.nx.generators.degree_seq"]], "Directed": [[445, "module-graphscope.nx.generators.directed"]], "Geometric": [[445, "module-graphscope.nx.generators.geometric"]], "Ego Graph": [[445, "module-graphscope.nx.generators.ego"]], "Stochastic": [[445, "module-networkx.generators.stochastic"]], "AS graph": [[445, "module-networkx.generators.internet_as_graphs"]], "Intersection": [[445, "module-graphscope.nx.generators.intersection"]], "Social Networks": [[445, "module-graphscope.nx.generators.social"]], "Spectral": [[445, "module-graphscope.nx.generators.spectral_graph_forge"]], "Trees": [[445, "module-graphscope.nx.generators.trees"]], "Non Isomorphic Trees": [[445, "module-graphscope.nx.generators.nonisomorphic_trees"]], "Triads": [[445, "module-graphscope.nx.generators.triads"]], "Joint Degree Sequence": [[445, "module-graphscope.nx.generators.joint_degree_seq"]], "Mycielski": [[445, "module-graphscope.nx.generators.mycielski"]], "Harary Graph": [[445, "module-graphscope.nx.generators.harary_graph"]], "Sudoku": [[445, "module-graphscope.nx.generators.sudoku"]], "Graph types": [[446, "graph-types"]], "DiGraph": [[446, "digraph"]], "NetworkX-style API": [[447, "networkx-style-api"]], "Reading graphs": [[448, "reading-graphs"]], "Edge List": [[448, "edge-list"]], "Adjacency List": [[448, "adjacency-list"]], "Graph Transformation": [[449, "graph-transformation"]], "Operation": [[450, "operation"]], "Operation object": [[450, "operation-object"]], "BuiltIn operations": [[450, "module-graphscope.framework.dag_utils"]], "Python API Reference": [[451, "python-api-reference"]], "Selector": [[452, "selector"]], "Selectors in different context": [[452, "selectors-in-different-context"]], "TensorContext": [[452, "tensorcontext"]], "VertexDataContext": [[452, "vertexdatacontext"]], "LabeledVertexDataContext": [[452, "labeledvertexdatacontext"]], "VertexPropertyContext": [[452, "vertexpropertycontext"]], "LabeledVertexPropertyContext": [[452, "labeledvertexpropertycontext"]], "Methods that use selectors": [[452, "methods-that-use-selectors"]], "One-dimensional results": [[452, "one-dimensional-results"]], "Multi-dimensional results": [[452, "multi-dimensional-results"]], "Vertex Range": [[452, "vertex-range"]], "Session": [[453, "session"]], "Session object": [[453, "session-object"]], "Session Functions": [[453, "session-functions"]], "Resources Estimator": [[454, "resources-estimator"]], "GART: Bridging the Gap between Relational OLTP and Graph Workloads": [[455, "gart-bridging-the-gap-between-relational-oltp-and-graph-workloads"]], "Architecture and Workflow": [[455, "architecture-and-workflow"]], "Defining Graph Mapping in GART": [[455, "defining-graph-mapping-in-gart"]], "Loading Logs to GART Storage": [[455, "loading-logs-to-gart-storage"]], "Using Loaded Graphs from GraphScope": [[455, "using-loaded-graphs-from-graphscope"]], "GraphAr: Standard Graph Data File Format": [[457, "graphar-standard-graph-data-file-format"]], "The GraphAr File Format": [[457, "the-graphar-file-format"]], "Features": [[457, "features"]], "File Format": [[457, "file-format"]], "Information files": [[457, "information-files"]], "Data files": [[457, "data-files"]], "Property Data Types": [[457, "property-data-types"]], "GraphAr in GraphScope": [[457, "graphar-in-graphscope"]], "Saving Graph Data in GraphAr": [[457, "saving-graph-data-in-graphar"]], "Loading GraphAr Data into GraphScope": [[457, "loading-graphar-data-into-graphscope"]], "GRIN: Graph Retrieval INterface": [[458, "grin-graph-retrieval-interface"]], "Motivations": [[458, "motivations"]], "Unified Graph Retrieval": [[458, "unified-graph-retrieval"]], "GRIN Concepts": [[458, "grin-concepts"]], "Predefined Macros": [[458, "predefined-macros"]], "Partition Strategy": [[458, "partition-strategy"]], "Edge-cut Partition Strategy": [[458, "edge-cut-partition-strategy"]], "Vertex-cut Partition Strategy": [[458, "vertex-cut-partition-strategy"]], "Property Graph Model": [[458, "property-graph-model"]], "Implementation Guideline": [[458, "implementation-guideline"]], "For computing engine": [[458, "for-computing-engine"]], "For storage engine": [[458, "for-storage-engine"]], "Design Details": [[458, "design-details"]], "Handler": [[458, "handler"]], "Edge": [[458, "edge"]], "List": [[458, "list"]], "Array-style Retrieval": [[458, "array-style-retrieval"]], "List Iterator": [[458, "list-iterator"]], "Label": [[458, "label"], [479, "label"]], "Order": [[458, "order"]], "Master and Mirror": [[458, "master-and-mirror"]], "Local Complete": [[458, "local-complete"]], "Natural ID Trait": [[458, "natural-id-trait"]], "Groot: Persistent Graph Store": [[459, "groot-persistent-graph-store"]], "Known Limitation": [[459, "known-limitation"]], "Deploy Groot": [[459, "deploy-groot"]], "Install from ArtifactHub": [[459, "install-from-artifacthub"]], "Installing from a local directory": [[459, "installing-from-a-local-directory"]], "Common Configurations": [[459, "common-configurations"]], "Connecting to Groot": [[459, "connecting-to-groot"]], "Connection": [[459, "connection"]], "Building and Modifying Graph Models": [[459, "building-and-modifying-graph-models"]], "Using Built-in Datasets": [[459, "using-built-in-datasets"]], "Customizing Models and Datasets": [[459, "customizing-models-and-datasets"]], "Querying Data": [[459, "querying-data"]], "Python": [[459, "python"], [459, "id1"]], "Node.js": [[459, "node-js"]], "Data Import": [[459, "data-import"]], "Offline Import": [[459, "offline-import"]], "Prerequisite": [[459, "prerequisite"]], "Data Format": [[459, "data-format"]], "Loading Process": [[459, "loading-process"]], "Build: Building a partitioned graph": [[459, "build-building-a-partitioned-graph"]], "2. Loading graph partitions": [[459, "loading-graph-partitions"]], "3. Commit to store service": [[459, "commit-to-store-service"]], "Realtime Write": [[459, "realtime-write"]], "Other features": [[459, "other-features"]], "Uninstalling and Restarting": [[459, "uninstalling-and-restarting"]], "Uninstall Groot": [[459, "uninstall-groot"]], "Restart Groot": [[459, "restart-groot"]], "Destroy Groot": [[459, "destroy-groot"]], "Developing Guide": [[459, "developing-guide"]], "Build image": [[459, "build-image"]], "Persistence": [[459, "persistence"]], "Troubleshooting": [[459, "troubleshooting"]], "Viewing logs": [[459, "viewing-logs"]], "Configuring logs": [[459, "configuring-logs"]], "Secondary Instance": [[459, "secondary-instance"]], "Traces": [[459, "traces"]], "Write High-availability": [[459, "write-high-availability"]], "In-memory immutable graphs on Vineyard": [[460, "in-memory-immutable-graphs-on-vineyard"]], "Graphs in Vineyard": [[460, "graphs-in-vineyard"]], "Loading Graphs to Vineyard": [[460, "loading-graphs-to-vineyard"]], "Using Loaded Graphs": [[460, "using-loaded-graphs"]], "Applications and algorithms": [[461, "applications-and-algorithms"]], "Bind application to graph": [[461, "bind-application-to-graph"]], "Built-in algorithms": [[461, "built-in-algorithms"]], "Scaling and repartitioning": [[462, "scaling-and-repartitioning"]], "Fennel": [[462, "fennel"]], "XtraPuLP": [[462, "xtrapulp"]], "Hybrid partitioning": [[462, "hybrid-partitioning"]], "User Guide and Examples of GAE": [[463, "user-guide-and-examples-of-gae"]], "Developing Your Algorithms with Python": [[463, "developing-your-algorithms-with-python"]], "Developing Your Algorithms with C++": [[463, "developing-your-algorithms-with-c"]], "Developing Your Algorithms with Java": [[463, "developing-your-algorithms-with-java"]], "User Guide and Examples of GLE": [[464, "user-guide-and-examples-of-gle"]], "Error Codes": [[465, "error-codes"]], "Command-line Utility gsctl": [[466, "command-line-utility-gsctl"]], "Install/Update gsctl": [[466, "install-update-gsctl"]], "Commands": [[466, "commands"]], "Utility Scripts": [[466, "utility-scripts"]], "Client/Server Mode": [[466, "client-server-mode"]], "Change scope": [[466, "change-scope"]], "Close the connection": [[466, "close-the-connection"]], "How to Find logs": [[467, "how-to-find-logs"]], "Find logs in k8s": [[467, "find-logs-in-k8s"]], "Find logs for GraphScope Analytical Engine (GAE)": [[467, "find-logs-for-graphscope-analytical-engine-gae"]], "Find logs for Graph Interactive Engine (GIE)": [[467, "find-logs-for-graph-interactive-engine-gie"]], "Find logs for Graph Learning Engine (GLE)": [[467, "find-logs-for-graph-learning-engine-gle"]], "Find logs for Groot": [[467, "find-logs-for-groot"]], "Monitoring": [[468, "monitoring"]], "\u56fe\u5206\u6790\u5f15\u64ce": [[469, "id1"]], "\u5185\u7f6e\u7b97\u6cd5": [[469, "id2"]], "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": [[469, "id3"]], "\u4f7f\u7528 PIE \u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[469, "pie"]], "\u4f7f\u7528 Pregel \u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[469, "pregel"]], "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528 math.h \u4e2d\u7684\u51fd\u6570": [[469, "math-h"]], "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[469, "id5"]], "\u8fd0\u884cJava\u7f16\u5199\u7684\u7b97\u6cd5": [[469, "java"]], "\u8fd0\u884c\u793a\u4f8b\u7684Java\u7b97\u6cd5": [[469, "id6"]], "\u4f7f\u7528Java\u7f16\u5199\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5": [[469, "id7"]], "\u90e8\u7f72": [[470, "id1"]], "\u4f7f\u7528Helm\u90e8\u7f72GraphScope": [[470, "helmgraphscope"]], "\u5728AWS/\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": [[470, "aws"]], "\u672c\u5730\u90e8\u7f72GraphScope": [[470, "graphscope"]], "\u5f00\u53d1\u8005\u6307\u5357": [[471, "id1"]], "\u57fa\u4e8e Docker \u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5 GraphScope": [[471, "docker-graphscope"]], "\u57fa\u4e8e Kubernetes \u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5 GraphScope": [[471, "kubernetes-graphscope"]], "\u6784\u5efa Python Wheels": [[471, "python-wheels"]], "Linux": [[471, "linux"]], "macOS": [[471, "macos"]], "\u4ee3\u7801\u98ce\u683c": [[471, "id3"]], "\u5e38\u89c1\u95ee\u9898": [[472, "id1"]], "\u5feb\u901f\u4e0a\u624b": [[473, "id1"]], "\u793a\u4f8b: \u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [[473, "id3"]], "\u521b\u5efa\u4f1a\u8bdd": [[473, "id4"]], "\u4ea4\u4e92\u5f0f\u67e5\u8be2": [[473, "id6"]], "\u56fe\u5206\u6790": [[473, "id7"]], "\u56fe\u795e\u7ecf\u7f51\u7edc (GNNs)": [[473, "gnns"]], "\u5173\u95ed\u4f1a\u8bdd": [[473, "id8"]], "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": [[474, "graph-transformation"]], "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": [[474, "id2"]], "\u6295\u5f71": [[474, "id3"]], "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": [[474, "id4"]], "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": [[474, "id5"]], "GraphScope: \u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": [[475, "graphscope"]], "\u76ee\u5f55": [[475, null], [480, null]], "API \u53c2\u8003": [[475, null]], "\u7d22\u5f15": [[475, "id1"]], "\u5b89\u88c5": [[476, "id1"]], "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": [[476, "id2"]], "\u57fa\u4e8e Kubernetes \u5b89\u88c5 GraphScope \u5ba2\u6237\u7aef": [[476, "kubernetes-graphscope"]], "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": [[477, "id1"]], "Apache TinkerPop": [[477, "apache-tinkerpop"]], "\u5229\u7528Python\uff08Gremlin\uff09\u8fde\u63a5GraphScope": [[477, "python-gremlin-graphscope"]], "\u5229\u7528Java\uff08Gremlin\uff09\u8fde\u63a5GraphScope": [[477, "java-gremlin-graphscope"]], "Gremlin Console\uff08\u5f00\u53d1\u63a7\u5236\u53f0\uff09": [[477, "id5"]], "Gremlin\u7f16\u7a0b\u5165\u95e8\u2013101": [[477, "gremlin-101"]], "\u56fe\u6570\u636e\u6a21\u578b": [[477, "id8"]], "\u67e5\u8be2\u8bed\u8a00": [[477, "id9"]], "\u4e00\u4e2a\u4f8b\u5b50": [[477, "id10"]], "Gremlin\u517c\u5bb9\u6027\uff08\u5bf9\u6bd4TinkerPop\uff09": [[477, "gremlin-tinkerpop"]], "\u5c5e\u6027\u56fe\u6a21\u578b\u7ea6\u675f": [[477, "id11"]], "\u5c1a\u4e0d\u652f\u6301\u7684\u529f\u80fd\u7279\u6027": [[477, "id12"]], "\u652f\u6301\u7684Gremlin\u64cd\u4f5c": [[477, "id13"]], "\u5df2\u77e5\u9650\u5236": [[477, "id14"]], "\u56fe\u5b66\u4e60\u5f15\u64ce": [[478, "id1"]], "\u56fe\u5b66\u4e60\u6a21\u578b": [[478, "id2"]], "\u6570\u636e\u6a21\u578b": [[478, "id3"]], "\u7f16\u7801\u5668": [[478, "id4"]], "\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[478, "id5"]], "\u91c7\u6837": [[478, "id6"]], "\u56fe\u6570\u636e\u6d41": [[478, "id7"]], "\u6a21\u578b": [[478, "id8"]], "\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": [[478, "id9"]], "\u8f7d\u56fe": [[479, "loading-graphs"]], "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": [[479, "id3"]], "\u624b\u52a8\u914d\u7f6e\u56fe": [[479, "id4"]], "Build Vertex": [[479, "build-vertex"]], "vertices": [[479, "vertices"]], "properties": [[479, "properties"], [479, "id7"]], "vid_field": [[479, "vid-field"]], "Build Edge": [[479, "build-edge"]], "edges": [[479, "edges"]], "label": [[479, "id6"]], "src_label and dst_label": [[479, "src-label-and-dst-label"]], "src_field and dst_field": [[479, "src-field-and-dst-field"]], "\u9ad8\u7ea7\u7528\u6cd5": [[479, "id8"]], "\u6ca1\u6709\u6b67\u4e49\u65f6\uff0c\u81ea\u52a8\u63a8\u65ad\u70b9\u6807\u7b7e": [[479, "id9"]], "\u4ece\u8fb9\u4e2d\u63a8\u65ad\u70b9": [[479, "id10"]], "\u591a\u79cd\u8fb9\u5173\u7cfb": [[479, "id11"]], "\u6307\u5b9a\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b": [[479, "id12"]], "\u56fe\u7684\u5176\u4ed6\u53c2\u6570": [[479, "id13"]], "\u5b8c\u6574\u7684\u793a\u4f8b": [[479, "id14"]], "\u4ece Pandas \u6216 Numpy \u4e2d\u8f7d\u56fe": [[479, "pandas-numpy"]], "\u4ece Pandas \u4e2d\u8f7d\u56fe": [[479, "pandas"]], "\u4ece Numpy \u4e2d\u8f7d\u56fe": [[479, "numpy"]], "Loader \u7684\u53d8\u79cd": [[479, "loader"]], "\u5165\u95e8\u6559\u7a0b": [[480, "id1"]]}, "indexentries": {"all_pairs_shortest_path_length()": [[0, "all_pairs_shortest_path_length"]], "attribute_assortativity()": [[0, "attribute_assortativity"]], "average_degree_connectivity()": [[0, "average_degree_connectivity"]], "betweenness_centrality()": [[0, "betweenness_centrality"]], "bfs()": [[0, "bfs"]], "built-in function": [[0, "all_pairs_shortest_path_length"], [0, "attribute_assortativity"], [0, "average_degree_connectivity"], [0, "betweenness_centrality"], [0, "bfs"], [0, "closeness_centrality"], [0, "degree_assortativity_coefficient"], [0, "degree_centrality"], [0, "dfs"], [0, "eigenvector_centrality"], [0, "hits"], [0, "id0"], [0, "id1"], [0, "id2"], [0, "id3"], [0, "id4"], [0, "id5"], [0, "katz_centrality"], [0, "kkore"], [0, "kshell"], [0, "lpa"], [0, "sampling_path"], [0, "sssp"]], "cdlp()": [[0, "id0"]], "closeness_centrality()": [[0, "closeness_centrality"]], "clustering()": [[0, "id1"]], "degree_assortativity_coefficient()": [[0, "degree_assortativity_coefficient"]], "degree_centrality()": [[0, "degree_centrality"]], "dfs()": [[0, "dfs"]], "eigenvector_centrality()": [[0, "eigenvector_centrality"]], "hits()": [[0, "hits"]], "katz_centrality()": [[0, "katz_centrality"]], "kkore()": [[0, "kkore"]], "kshell()": [[0, "kshell"]], "lcc()": [[0, "id2"]], "lpa()": [[0, "lpa"]], "pagerank()": [[0, "id3"]], "sampling_path()": [[0, "sampling_path"]], "sssp()": [[0, "sssp"]], "voterank()": [[0, "id4"]], "wcc()": [[0, "id5"]], "gs::appbase (c++ class)": [[236, "_CPPv4I00EN2gs7AppBaseE"]], "gs::appbase::appbase (c++ function)": [[236, "_CPPv4N2gs7AppBase7AppBaseEv"]], "gs::appbase::inceval (c++ function)": [[236, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::appbase::peval (c++ function)": [[236, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::appbase::load_strategy (c++ member)": [[236, "_CPPv4N2gs7AppBase13load_strategyE"]], "gs::appbase::message_manager_t (c++ type)": [[236, "_CPPv4N2gs7AppBase17message_manager_tE"]], "gs::appbase::message_strategy (c++ member)": [[236, "_CPPv4N2gs7AppBase16message_strategyE"]], "gs::appbase::need_split_edges (c++ member)": [[236, "_CPPv4N2gs7AppBase16need_split_edgesE"]], "gs::appbase::~appbase (c++ function)": [[236, "_CPPv4N2gs7AppBaseD0Ev"]], "gs::appentry (c++ class)": [[236, "_CPPv4N2gs8AppEntryE"]], "gs::appentry::appentry (c++ function)": [[236, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE"]], "gs::appentry::createworker (c++ function)": [[236, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::appentry::init (c++ function)": [[236, "_CPPv4N2gs8AppEntry4InitEv"]], "gs::appentry::query (c++ function)": [[236, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE"]], "gs::argtypeat (c++ struct)": [[236, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE"]], "gs::argsnum (c++ struct)": [[236, "_CPPv4I0EN2gs7ArgsNumE"]], "gs::argsunpacker (c++ struct)": [[236, "_CPPv4I0EN2gs12ArgsUnpackerE"]], "gs::arrowfragmentloader (c++ class)": [[236, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE"]], "gs::arrowfragmentloader::adddatatoexistedelabel (c++ function)": [[236, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedELabelEN8vineyard8ObjectIDE10label_id_t"]], "gs::arrowfragmentloader::adddatatoexistedvlabel (c++ function)": [[236, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedVLabelEN8vineyard8ObjectIDE10label_id_t"]], "gs::arrowfragmentloader::addlabelstofragment (c++ function)": [[236, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE"]], "gs::arrowfragmentloader::addlabelstofragmentasfragmentgroup (c++ function)": [[236, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE"]], "gs::arrowfragmentloader::arrowfragmentloader (c++ function)": [[236, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE"], [236, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb"]], "gs::arrowfragmentloader::extendlabeldata (c++ function)": [[236, "_CPPv4N2gs19ArrowFragmentLoader15ExtendLabelDataEN8vineyard8ObjectIDEi"]], "gs::arrowfragmentloader::loadedgetables (c++ function)": [[236, "_CPPv4N2gs19ArrowFragmentLoader14LoadEdgeTablesEv"]], "gs::arrowfragmentloader::loadfragment (c++ function)": [[236, "_CPPv4N2gs19ArrowFragmentLoader12LoadFragmentEv"]], "gs::arrowfragmentloader::loadfragmentasfragmentgroup (c++ function)": [[236, "_CPPv4N2gs19ArrowFragmentLoader27LoadFragmentAsFragmentGroupEv"]], "gs::arrowfragmentloader::loadvertexedgetables (c++ function)": [[236, "_CPPv4N2gs19ArrowFragmentLoader20LoadVertexEdgeTablesEv"]], "gs::arrowfragmentloader::loadvertextables (c++ function)": [[236, "_CPPv4N2gs19ArrowFragmentLoader16LoadVertexTablesEv"]], "gs::arrowfragmentloader::initpartitioner (c++ function)": [[236, "_CPPv4N2gs19ArrowFragmentLoader15initPartitionerEv"]], "gs::arrowfragmentloader::~arrowfragmentloader (c++ function)": [[236, "_CPPv4N2gs19ArrowFragmentLoaderD0Ev"]], "gs::arrowprojectedfragment (c++ class)": [[236, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE"]], "gs::arrowprojectedfragment::construct (c++ function)": [[236, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE"]], "gs::arrowprojectedfragment::create (c++ function)": [[236, "_CPPv4N2gs22ArrowProjectedFragment6CreateEv"]], "gs::arrowprojectedfragment::getdata (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t"]], "gs::arrowprojectedfragment::getedgenum (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment10GetEdgeNumEv"]], "gs::arrowprojectedfragment::getfragid (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t"]], "gs::arrowprojectedfragment::getid (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinedgenum (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment12GetInEdgeNumEv"]], "gs::arrowprojectedfragment::getincomingadjlist (c++ function)": [[236, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t"], [236, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"], [236, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t"]], "gs::arrowprojectedfragment::getincomingedgenum (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingEdgeNumEv"]], "gs::arrowprojectedfragment::getincominginnervertexadjlist (c++ function)": [[236, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"]], "gs::arrowprojectedfragment::getincomingoutervertexadjlist (c++ function)": [[236, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertex (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexgid (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexid (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexinternalid (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinnerverticesnum (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment19GetInnerVerticesNumEv"]], "gs::arrowprojectedfragment::getinternalid (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getlocalindegree (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t"]], "gs::arrowprojectedfragment::getlocaloutdegree (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t"]], "gs::arrowprojectedfragment::getoutedgenum (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment13GetOutEdgeNumEv"]], "gs::arrowprojectedfragment::getoutervertex (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexgid (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexid (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexinternalid (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getouterverticesnum (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment19GetOuterVerticesNumEv"]], "gs::arrowprojectedfragment::getoutgoingadjlist (c++ function)": [[236, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t"], [236, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"], [236, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t"]], "gs::arrowprojectedfragment::getoutgoingedgenum (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingEdgeNumEv"]], "gs::arrowprojectedfragment::getoutgoinginnervertexadjlist (c++ function)": [[236, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"]], "gs::arrowprojectedfragment::getoutgoingoutervertexadjlist (c++ function)": [[236, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"]], "gs::arrowprojectedfragment::gettotalverticesnum (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment19GetTotalVerticesNumEv"]], "gs::arrowprojectedfragment::getvertex (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getvertexmap (c++ function)": [[236, "_CPPv4N2gs22ArrowProjectedFragment12GetVertexMapEv"], [236, "_CPPv4NK2gs22ArrowProjectedFragment12GetVertexMapEv"]], "gs::arrowprojectedfragment::getverticesnum (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment14GetVerticesNumEv"]], "gs::arrowprojectedfragment::gid2oid (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t"]], "gs::arrowprojectedfragment::gid2vertex (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::iedests (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::ioedests (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::innervertexgid2vertex (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::innervertices (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment13InnerVerticesEv"]], "gs::arrowprojectedfragment::isinnervertex (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t"]], "gs::arrowprojectedfragment::isoutervertex (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t"]], "gs::arrowprojectedfragment::mirrorvertices (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t"]], "gs::arrowprojectedfragment::oedests (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::oid2gid (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t"], [236, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t"]], "gs::arrowprojectedfragment::outervertexgid2vertex (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::outervertices (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t"], [236, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesEv"]], "gs::arrowprojectedfragment::preparetorunapp (c++ function)": [[236, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE"]], "gs::arrowprojectedfragment::project (c++ function)": [[236, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t"]], "gs::arrowprojectedfragment::vertex2gid (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t"]], "gs::arrowprojectedfragment::vertices (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment8VerticesEv"]], "gs::arrowprojectedfragment::adj_list_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment10adj_list_tE"]], "gs::arrowprojectedfragment::compact_adj_list_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment18compact_adj_list_tE"]], "gs::arrowprojectedfragment::compact_edges (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment13compact_edgesEv"]], "gs::arrowprojectedfragment::compact_nbr_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment13compact_nbr_tE"]], "gs::arrowprojectedfragment::const_adj_list_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment16const_adj_list_tE"]], "gs::arrowprojectedfragment::const_compact_adj_list_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment24const_compact_adj_list_tE"]], "gs::arrowprojectedfragment::directed (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment8directedEv"]], "gs::arrowprojectedfragment::edata_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment7edata_tE"]], "gs::arrowprojectedfragment::edge_label (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment10edge_labelEv"]], "gs::arrowprojectedfragment::edge_prop_id (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment12edge_prop_idEv"]], "gs::arrowprojectedfragment::eid_array_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment11eid_array_tE"]], "gs::arrowprojectedfragment::eid_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment5eid_tE"]], "gs::arrowprojectedfragment::fid (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment3fidEv"]], "gs::arrowprojectedfragment::fnum (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment4fnumEv"]], "gs::arrowprojectedfragment::get_arrow_fragment (c++ function)": [[236, "_CPPv4N2gs22ArrowProjectedFragment18get_arrow_fragmentEv"]], "gs::arrowprojectedfragment::get_edata_array_accessor (c++ function)": [[236, "_CPPv4N2gs22ArrowProjectedFragment24get_edata_array_accessorEv"]], "gs::arrowprojectedfragment::get_ie_offsets_begin_ptr (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment24get_ie_offsets_begin_ptrEv"]], "gs::arrowprojectedfragment::get_ie_offsets_end_ptr (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment22get_ie_offsets_end_ptrEv"]], "gs::arrowprojectedfragment::get_in_edges_ptr (c++ function)": [[236, "_CPPv4I_bENK2gs22ArrowProjectedFragment16get_in_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv"]], "gs::arrowprojectedfragment::get_oe_offsets_begin_ptr (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment24get_oe_offsets_begin_ptrEv"]], "gs::arrowprojectedfragment::get_oe_offsets_end_ptr (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment22get_oe_offsets_end_ptrEv"]], "gs::arrowprojectedfragment::get_out_edges_ptr (c++ function)": [[236, "_CPPv4I_bENK2gs22ArrowProjectedFragment17get_out_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv"]], "gs::arrowprojectedfragment::get_vdata_array_accessor (c++ function)": [[236, "_CPPv4N2gs22ArrowProjectedFragment24get_vdata_array_accessorEv"]], "gs::arrowprojectedfragment::inner_vertex_array_t (c++ type)": [[236, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE"]], "gs::arrowprojectedfragment::inner_vertices_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment16inner_vertices_tE"]], "gs::arrowprojectedfragment::internal_oid_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment14internal_oid_tE"]], "gs::arrowprojectedfragment::label_id_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment10label_id_tE"]], "gs::arrowprojectedfragment::load_strategy (c++ member)": [[236, "_CPPv4N2gs22ArrowProjectedFragment13load_strategyE"]], "gs::arrowprojectedfragment::local_vertex_map (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment16local_vertex_mapEv"]], "gs::arrowprojectedfragment::nbr_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment5nbr_tE"]], "gs::arrowprojectedfragment::nbr_unit_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment10nbr_unit_tE"]], "gs::arrowprojectedfragment::oid_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment5oid_tE"]], "gs::arrowprojectedfragment::outer_vertex_array_t (c++ type)": [[236, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE"]], "gs::arrowprojectedfragment::outer_vertices_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment16outer_vertices_tE"]], "gs::arrowprojectedfragment::prop_id_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment9prop_id_tE"]], "gs::arrowprojectedfragment::property_graph_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment16property_graph_tE"]], "gs::arrowprojectedfragment::property_vertex_map_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment21property_vertex_map_tE"]], "gs::arrowprojectedfragment::sub_vertices_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment14sub_vertices_tE"]], "gs::arrowprojectedfragment::use_perfect_hash (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment16use_perfect_hashEv"]], "gs::arrowprojectedfragment::vdata_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment7vdata_tE"]], "gs::arrowprojectedfragment::vertex_array_t (c++ type)": [[236, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE"]], "gs::arrowprojectedfragment::vertex_label (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment12vertex_labelEv"]], "gs::arrowprojectedfragment::vertex_map_id (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment13vertex_map_idEv"]], "gs::arrowprojectedfragment::vertex_map_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment12vertex_map_tE"]], "gs::arrowprojectedfragment::vertex_prop_id (c++ function)": [[236, "_CPPv4NK2gs22ArrowProjectedFragment14vertex_prop_idEv"]], "gs::arrowprojectedfragment::vertex_range_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment14vertex_range_tE"]], "gs::arrowprojectedfragment::vertex_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment8vertex_tE"]], "gs::arrowprojectedfragment::vertices_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment10vertices_tE"]], "gs::arrowprojectedfragment::vid_array_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment11vid_array_tE"]], "gs::arrowprojectedfragment::vid_t (c++ type)": [[236, "_CPPv4N2gs22ArrowProjectedFragment5vid_tE"]], "gs::arrowprojectedfragment::~arrowprojectedfragment (c++ function)": [[236, "_CPPv4N2gs22ArrowProjectedFragmentD0Ev"]], "gs::arrowprojectedvertexmap (c++ class)": [[236, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE"]], "gs::arrowprojectedvertexmap::construct (c++ function)": [[236, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE"]], "gs::arrowprojectedvertexmap::create (c++ function)": [[236, "_CPPv4N2gs23ArrowProjectedVertexMap6CreateEv"]], "gs::arrowprojectedvertexmap::getfidfromgid (c++ function)": [[236, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetFidFromGidE5vid_t"]], "gs::arrowprojectedvertexmap::getgid (c++ function)": [[236, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t"], [236, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t"]], "gs::arrowprojectedvertexmap::getinnervertexsize (c++ function)": [[236, "_CPPv4NK2gs23ArrowProjectedVertexMap18GetInnerVertexSizeE5fid_t"]], "gs::arrowprojectedvertexmap::getlidfromgid (c++ function)": [[236, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetLidFromGidE5vid_t"]], "gs::arrowprojectedvertexmap::getoffsetfromlid (c++ function)": [[236, "_CPPv4N2gs23ArrowProjectedVertexMap16GetOffsetFromLidE5vid_t"]], "gs::arrowprojectedvertexmap::getoid (c++ function)": [[236, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t"]], "gs::arrowprojectedvertexmap::gettotalverticesnum (c++ function)": [[236, "_CPPv4NK2gs23ArrowProjectedVertexMap19GetTotalVerticesNumEv"]], "gs::arrowprojectedvertexmap::offset2lid (c++ function)": [[236, "_CPPv4N2gs23ArrowProjectedVertexMap10Offset2LidERK5vid_t"]], "gs::arrowprojectedvertexmap::project (c++ function)": [[236, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t"]], "gs::arrowprojectedvertexmap::use_perfect_hash (c++ function)": [[236, "_CPPv4NK2gs23ArrowProjectedVertexMap16use_perfect_hashEv"]], "gs::ctxwrapperbuilder (c++ struct)": [[236, "_CPPv4I00EN2gs17CtxWrapperBuilderE"]], "gs::defaultpropertyworker (c++ class)": [[236, "_CPPv4I0EN2gs21DefaultPropertyWorkerE"]], "gs::defaultpropertyworker::defaultpropertyworker (c++ function)": [[236, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::defaultpropertyworker::finalize (c++ function)": [[236, "_CPPv4N2gs21DefaultPropertyWorker8FinalizeEv"]], "gs::defaultpropertyworker::getcontext (c++ function)": [[236, "_CPPv4N2gs21DefaultPropertyWorker10GetContextEv"]], "gs::defaultpropertyworker::init (c++ function)": [[236, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::defaultpropertyworker::output (c++ function)": [[236, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE"]], "gs::defaultpropertyworker::query (c++ function)": [[236, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args"]], "gs::defaultpropertyworker::context_t (c++ type)": [[236, "_CPPv4N2gs21DefaultPropertyWorker9context_tE"]], "gs::defaultpropertyworker::fragment_t (c++ type)": [[236, "_CPPv4N2gs21DefaultPropertyWorker10fragment_tE"]], "gs::defaultpropertyworker::message_manager_t (c++ type)": [[236, "_CPPv4N2gs21DefaultPropertyWorker17message_manager_tE"]], "gs::defaultpropertyworker::~defaultpropertyworker (c++ function)": [[236, "_CPPv4N2gs21DefaultPropertyWorkerD0Ev"]], "gs::defaultworker (c++ class)": [[236, "_CPPv4I0EN2gs13DefaultWorkerE"]], "gs::defaultworker::defaultworker (c++ function)": [[236, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::defaultworker::finalize (c++ function)": [[236, "_CPPv4N2gs13DefaultWorker8FinalizeEv"]], "gs::defaultworker::getcontext (c++ function)": [[236, "_CPPv4N2gs13DefaultWorker10GetContextEv"]], "gs::defaultworker::init (c++ function)": [[236, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::defaultworker::output (c++ function)": [[236, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE"]], "gs::defaultworker::query (c++ function)": [[236, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args"]], "gs::defaultworker::context_t (c++ type)": [[236, "_CPPv4N2gs13DefaultWorker9context_tE"]], "gs::defaultworker::fragment_t (c++ type)": [[236, "_CPPv4N2gs13DefaultWorker10fragment_tE"]], "gs::defaultworker::message_manager_t (c++ type)": [[236, "_CPPv4N2gs13DefaultWorker17message_manager_tE"]], "gs::defaultworker::~defaultworker (c++ function)": [[236, "_CPPv4N2gs13DefaultWorkerD0Ev"]], "gs::dispatchresult (c++ class)": [[236, "_CPPv4N2gs14DispatchResultE"]], "gs::dispatchresult::aggregatepolicy (c++ enum)": [[236, "_CPPv4N2gs14DispatchResult15AggregatePolicyE"]], "gs::dispatchresult::aggregatepolicy::kconcat (c++ enumerator)": [[236, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE"]], "gs::dispatchresult::aggregatepolicy::kmergegraphdef (c++ enumerator)": [[236, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE"]], "gs::dispatchresult::aggregatepolicy::kpickfirst (c++ enumerator)": [[236, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE"]], "gs::dispatchresult::aggregatepolicy::kpickfirstnonempty (c++ enumerator)": [[236, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE"]], "gs::dispatchresult::aggregatepolicy::kpickfirstnonemptygraphdef (c++ enumerator)": [[236, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE"]], "gs::dispatchresult::aggregatepolicy::krequireconsistent (c++ enumerator)": [[236, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE"]], "gs::dispatchresult::dispatchresult (c++ function)": [[236, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE"], [236, "_CPPv4N2gs14DispatchResult14DispatchResultEv"]], "gs::dispatchresult::aggregate_policy (c++ function)": [[236, "_CPPv4NK2gs14DispatchResult16aggregate_policyEv"]], "gs::dispatchresult::data (c++ function)": [[236, "_CPPv4NK2gs14DispatchResult4dataEv"]], "gs::dispatchresult::error_code (c++ function)": [[236, "_CPPv4NK2gs14DispatchResult10error_codeEv"]], "gs::dispatchresult::graph_def (c++ function)": [[236, "_CPPv4N2gs14DispatchResult9graph_defEv"], [236, "_CPPv4NK2gs14DispatchResult9graph_defEv"]], "gs::dispatchresult::has_large_data (c++ function)": [[236, "_CPPv4NK2gs14DispatchResult14has_large_dataEv"]], "gs::dispatchresult::message (c++ function)": [[236, "_CPPv4N2gs14DispatchResult7messageEv"]], "gs::dispatchresult::set_data (c++ function)": [[236, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb"], [236, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb"]], "gs::dispatchresult::set_error (c++ function)": [[236, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE"]], "gs::dispatchresult::set_graph_def (c++ function)": [[236, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy"]], "gs::dispatchresult::worker_id (c++ function)": [[236, "_CPPv4NK2gs14DispatchResult9worker_idEv"]], "gs::dispatcher (c++ class)": [[236, "_CPPv4N2gs10DispatcherE"]], "gs::dispatcher::dispatch (c++ function)": [[236, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE"]], "gs::dispatcher::dispatcher (c++ function)": [[236, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE"]], "gs::dispatcher::setcommand (c++ function)": [[236, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE"]], "gs::dispatcher::start (c++ function)": [[236, "_CPPv4N2gs10Dispatcher5StartEv"]], "gs::dispatcher::stop (c++ function)": [[236, "_CPPv4N2gs10Dispatcher4StopEv"]], "gs::dispatcher::subscribe (c++ function)": [[236, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE"]], "gs::engineconfig (c++ struct)": [[236, "_CPPv4N2gs12EngineConfigE"]], "gs::engineconfig::tojsonstring (c++ function)": [[236, "_CPPv4NK2gs12EngineConfig12ToJsonStringEv"]], "gs::engineconfig::enable_java_sdk (c++ member)": [[236, "_CPPv4N2gs12EngineConfig15enable_java_sdkE"]], "gs::engineconfig::networkx (c++ member)": [[236, "_CPPv4N2gs12EngineConfig8networkxE"]], "gs::engineconfig::vineyard_rpc_endpoint (c++ member)": [[236, "_CPPv4N2gs12EngineConfig21vineyard_rpc_endpointE"]], "gs::engineconfig::vineyard_socket (c++ member)": [[236, "_CPPv4N2gs12EngineConfig15vineyard_socketE"]], "gs::fragmentwrapper (c++ class)": [[236, "_CPPv4I0EN2gs15FragmentWrapperE"]], "gs::gsobject (c++ class)": [[236, "_CPPv4N2gs8GSObjectE"]], "gs::gsobject::gsobject (c++ function)": [[236, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType"]], "gs::gsobject::tostring (c++ function)": [[236, "_CPPv4NK2gs8GSObject8ToStringEv"]], "gs::gsobject::id (c++ function)": [[236, "_CPPv4NK2gs8GSObject2idEv"]], "gs::gsobject::type (c++ function)": [[236, "_CPPv4NK2gs8GSObject4typeEv"]], "gs::gsobject::~gsobject (c++ function)": [[236, "_CPPv4N2gs8GSObjectD0Ev"]], "gs::grapeengine (c++ class)": [[236, "_CPPv4N2gs11GrapeEngineE"]], "gs::grapeengine::grapeengine (c++ function)": [[236, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE"], [236, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi"]], "gs::grapeengine::rundagfile (c++ function)": [[236, "_CPPv4N2gs11GrapeEngine10RunDAGFileEv"]], "gs::grapeengine::start (c++ function)": [[236, "_CPPv4N2gs11GrapeEngine5StartEv"]], "gs::grapeengine::stop (c++ function)": [[236, "_CPPv4N2gs11GrapeEngine4StopEv"]], "gs::grapeinstance (c++ class)": [[236, "_CPPv4N2gs13GrapeInstanceE"]], "gs::grapeinstance::grapeinstance (c++ function)": [[236, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE"]], "gs::grapeinstance::init (c++ function)": [[236, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE"]], "gs::grapeinstance::onreceive (c++ function)": [[236, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE"]], "gs::objectmanager (c++ class)": [[236, "_CPPv4N2gs13ObjectManagerE"]], "gs::objectmanager::getobject (c++ function)": [[236, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE"], [236, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE"]], "gs::objectmanager::hasobject (c++ function)": [[236, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE"]], "gs::objectmanager::putobject (c++ function)": [[236, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE"]], "gs::objectmanager::removeobject (c++ function)": [[236, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE"]], "gs::parallelpropertyworker (c++ class)": [[236, "_CPPv4I0EN2gs22ParallelPropertyWorkerE"]], "gs::parallelpropertyworker::finalize (c++ function)": [[236, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv"]], "gs::parallelpropertyworker::getcontext (c++ function)": [[236, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv"]], "gs::parallelpropertyworker::init (c++ function)": [[236, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::parallelpropertyworker::output (c++ function)": [[236, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE"]], "gs::parallelpropertyworker::parallelpropertyworker (c++ function)": [[236, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::parallelpropertyworker::query (c++ function)": [[236, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args"]], "gs::parallelpropertyworker::context_t (c++ type)": [[236, "_CPPv4N2gs22ParallelPropertyWorker9context_tE"]], "gs::parallelpropertyworker::fragment_t (c++ type)": [[236, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE"]], "gs::parallelpropertyworker::message_manager_t (c++ type)": [[236, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE"]], "gs::parallelpropertyworker::~parallelpropertyworker (c++ function)": [[236, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev"]], "gs::propertyappbase (c++ class)": [[236, "_CPPv4I00EN2gs15PropertyAppBaseE"]], "gs::propertyappbase::inceval (c++ function)": [[236, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::propertyappbase::peval (c++ function)": [[236, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::propertyappbase::propertyappbase (c++ function)": [[236, "_CPPv4N2gs15PropertyAppBase15PropertyAppBaseEv"]], "gs::propertyappbase::load_strategy (c++ member)": [[236, "_CPPv4N2gs15PropertyAppBase13load_strategyE"]], "gs::propertyappbase::message_manager_t (c++ type)": [[236, "_CPPv4N2gs15PropertyAppBase17message_manager_tE"]], "gs::propertyappbase::message_strategy (c++ member)": [[236, "_CPPv4N2gs15PropertyAppBase16message_strategyE"]], "gs::propertyappbase::need_split_edges (c++ member)": [[236, "_CPPv4N2gs15PropertyAppBase16need_split_edgesE"]], "gs::propertyappbase::~propertyappbase (c++ function)": [[236, "_CPPv4N2gs15PropertyAppBaseD0Ev"]], "gs::propertyautoappbase (c++ class)": [[236, "_CPPv4I00EN2gs19PropertyAutoAppBaseE"]], "gs::propertyautoappbase::inceval (c++ function)": [[236, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T"]], "gs::propertyautoappbase::peval (c++ function)": [[236, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T"]], "gs::propertyautoappbase::propertyautoappbase (c++ function)": [[236, "_CPPv4N2gs19PropertyAutoAppBase19PropertyAutoAppBaseEv"]], "gs::propertyautoappbase::load_strategy (c++ member)": [[236, "_CPPv4N2gs19PropertyAutoAppBase13load_strategyE"]], "gs::propertyautoappbase::message_strategy (c++ member)": [[236, "_CPPv4N2gs19PropertyAutoAppBase16message_strategyE"]], "gs::propertyautoappbase::need_split_edges (c++ member)": [[236, "_CPPv4N2gs19PropertyAutoAppBase16need_split_edgesE"]], "gs::propertyautoappbase::~propertyautoappbase (c++ function)": [[236, "_CPPv4N2gs19PropertyAutoAppBaseD0Ev"]], "gs::propertyautoworker (c++ class)": [[236, "_CPPv4I0EN2gs18PropertyAutoWorkerE"]], "gs::propertyautoworker::finalize (c++ function)": [[236, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv"]], "gs::propertyautoworker::getcontext (c++ function)": [[236, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv"]], "gs::propertyautoworker::init (c++ function)": [[236, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::propertyautoworker::output (c++ function)": [[236, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE"]], "gs::propertyautoworker::propertyautoworker (c++ function)": [[236, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::propertyautoworker::query (c++ function)": [[236, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args"]], "gs::propertyautoworker::context_t (c++ type)": [[236, "_CPPv4N2gs18PropertyAutoWorker9context_tE"]], "gs::propertyautoworker::fragment_t (c++ type)": [[236, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE"]], "gs::propertyautoworker::message_manager_t (c++ type)": [[236, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE"]], "gs::propertyautoworker::~propertyautoworker (c++ function)": [[236, "_CPPv4N2gs18PropertyAutoWorkerD0Ev"]], "gs::tensorcontext (c++ class)": [[236, "_CPPv4I00EN2gs13TensorContextE"]], "gs::tensorcontext::tensorcontext (c++ function)": [[236, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t"]], "gs::tensorcontext::assign (c++ function)": [[236, "_CPPv4N2gs13TensorContext6assignERK6data_t"], [236, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE"]], "gs::tensorcontext::data_t (c++ type)": [[236, "_CPPv4N2gs13TensorContext6data_tE"]], "gs::tensorcontext::fragment (c++ function)": [[236, "_CPPv4N2gs13TensorContext8fragmentEv"]], "gs::tensorcontext::set_shape (c++ function)": [[236, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE"]], "gs::tensorcontext::shape (c++ function)": [[236, "_CPPv4NK2gs13TensorContext5shapeEv"]], "gs::tensorcontext::tensor (c++ function)": [[236, "_CPPv4N2gs13TensorContext6tensorEv"]], "gs::tensorcontextwrapper (c++ class)": [[236, "_CPPv4I000EN2gs20TensorContextWrapperE"]], "gs::tensorcontextwrapper::tensorcontextwrapper (c++ function)": [[236, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE"]], "gs::tensorcontextwrapper::toarrowarrays (c++ function)": [[236, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE"]], "gs::tensorcontextwrapper::todataframe (c++ function)": [[236, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE"]], "gs::tensorcontextwrapper::tondarray (c++ function)": [[236, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t"]], "gs::tensorcontextwrapper::tovineyarddataframe (c++ function)": [[236, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE"]], "gs::tensorcontextwrapper::tovineyardtensor (c++ function)": [[236, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t"]], "gs::tensorcontextwrapper::context_type (c++ function)": [[236, "_CPPv4N2gs20TensorContextWrapper12context_typeEv"]], "gs::tensorcontextwrapper::fragment_wrapper (c++ function)": [[236, "_CPPv4N2gs20TensorContextWrapper16fragment_wrapperEv"]], "gs::vertexdatacontextwrapper (c++ class)": [[236, "_CPPv4I00EN2gs24VertexDataContextWrapperE"]], "gs::vertexdatacontextwrapper::toarrowarrays (c++ function)": [[236, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE"]], "gs::vertexdatacontextwrapper::todataframe (c++ function)": [[236, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tondarray (c++ function)": [[236, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tovineyarddataframe (c++ function)": [[236, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tovineyardtensor (c++ function)": [[236, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::vertexdatacontextwrapper (c++ function)": [[236, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE"]], "gs::vertexdatacontextwrapper::context_type (c++ function)": [[236, "_CPPv4N2gs24VertexDataContextWrapper12context_typeEv"]], "gs::vertexdatacontextwrapper::fragment_wrapper (c++ function)": [[236, "_CPPv4N2gs24VertexDataContextWrapper16fragment_wrapperEv"]], "gs::vertexpropertycontext (c++ class)": [[236, "_CPPv4I0EN2gs21VertexPropertyContextE"]], "gs::vertexpropertycontext::vertexpropertycontext (c++ function)": [[236, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t"]], "gs::vertexpropertycontext::add_column (c++ function)": [[236, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType"]], "gs::vertexpropertycontext::fragment (c++ function)": [[236, "_CPPv4N2gs21VertexPropertyContext8fragmentEv"]], "gs::vertexpropertycontext::fragment_t (c++ type)": [[236, "_CPPv4N2gs21VertexPropertyContext10fragment_tE"]], "gs::vertexpropertycontext::get_column (c++ function)": [[236, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t"], [236, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE"]], "gs::vertexpropertycontext::get_typed_column (c++ function)": [[236, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t"], [236, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE"]], "gs::vertexpropertycontext::oid_t (c++ type)": [[236, "_CPPv4N2gs21VertexPropertyContext5oid_tE"]], "gs::vertexpropertycontext::prop_id_t (c++ type)": [[236, "_CPPv4N2gs21VertexPropertyContext9prop_id_tE"]], "gs::vertexpropertycontext::properties_map (c++ function)": [[236, "_CPPv4N2gs21VertexPropertyContext14properties_mapEv"]], "gs::vertexpropertycontext::vertex_properties (c++ function)": [[236, "_CPPv4N2gs21VertexPropertyContext17vertex_propertiesEv"]], "gs::vertexpropertycontext::vertex_t (c++ type)": [[236, "_CPPv4N2gs21VertexPropertyContext8vertex_tE"]], "gs::rpc::analyticalserver (c++ class)": [[236, "_CPPv4N2gs3rpc16AnalyticalServerE"]], "gs::rpc::analyticalserver::analyticalserver (c++ function)": [[236, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi"]], "gs::rpc::analyticalserver::startserver (c++ function)": [[236, "_CPPv4N2gs3rpc16AnalyticalServer11StartServerEv"]], "gs::rpc::analyticalserver::stopserver (c++ function)": [[236, "_CPPv4N2gs3rpc16AnalyticalServer10StopServerEv"]], "app (class in graphscope.framework.app)": [[237, "graphscope.framework.app.App"]], "appassets (class in graphscope.framework.app)": [[237, "graphscope.framework.app.AppAssets"]], "appdagnode (class in graphscope.framework.app)": [[237, "graphscope.framework.app.AppDAGNode"]], "javaapp (class in graphscope.analytical.app)": [[237, "graphscope.analytical.app.JavaApp"]], "__call__() (graphscope.analytical.app.javaapp method)": [[237, "graphscope.analytical.app.JavaApp.__call__"]], "__del__() (graphscope.framework.app.app method)": [[237, "graphscope.framework.app.App.__del__"]], "__init__() (graphscope.analytical.app.javaapp method)": [[237, "graphscope.analytical.app.JavaApp.__init__"]], "__init__() (graphscope.framework.app.app method)": [[237, "graphscope.framework.app.App.__init__"]], "__init__() (graphscope.framework.app.appassets method)": [[237, "graphscope.framework.app.AppAssets.__init__"]], "algo (graphscope.framework.app.appassets property)": [[237, "graphscope.framework.app.AppAssets.algo"]], "attribute_assortativity_coefficient() (in module graphscope)": [[237, "graphscope.attribute_assortativity_coefficient"]], "average_degree_connectivity() (in module graphscope)": [[237, "graphscope.average_degree_connectivity"]], "average_shortest_path_length() (in module graphscope)": [[237, "graphscope.average_shortest_path_length"]], "avg_clustering() (in module graphscope)": [[237, "graphscope.avg_clustering"]], "bfs() (in module graphscope)": [[237, "graphscope.bfs"]], "cdlp() (in module graphscope)": [[237, "graphscope.cdlp"]], "clustering() (in module graphscope)": [[237, "graphscope.clustering"]], "context_type (graphscope.framework.app.appassets property)": [[237, "graphscope.framework.app.AppAssets.context_type"]], "degree_assortativity_coefficient() (in module graphscope)": [[237, "graphscope.degree_assortativity_coefficient"]], "degree_centrality() (in module graphscope)": [[237, "graphscope.degree_centrality"]], "eigenvector_centrality() (in module graphscope)": [[237, "graphscope.eigenvector_centrality"]], "gar (graphscope.framework.app.appassets property)": [[237, "graphscope.framework.app.AppAssets.gar"]], "hits() (in module graphscope)": [[237, "graphscope.hits"]], "is_compatible() (graphscope.analytical.app.javaapp method)": [[237, "graphscope.analytical.app.JavaApp.is_compatible"]], "is_compatible() (graphscope.framework.app.appassets method)": [[237, "graphscope.framework.app.AppAssets.is_compatible"]], "is_simple_path() (in module graphscope)": [[237, "graphscope.is_simple_path"]], "k_core() (in module graphscope)": [[237, "graphscope.k_core"]], "k_shell() (in module graphscope)": [[237, "graphscope.k_shell"]], "katz_centrality() (in module graphscope)": [[237, "graphscope.katz_centrality"]], "key (graphscope.framework.app.app property)": [[237, "graphscope.framework.app.App.key"]], "louvain() (in module graphscope)": [[237, "graphscope.louvain"]], "lpa() (in module graphscope)": [[237, "graphscope.lpa"]], "lpa_u2i() (in module graphscope)": [[237, "graphscope.lpa_u2i"]], "numeric_assortativity_coefficient() (in module graphscope)": [[237, "graphscope.numeric_assortativity_coefficient"]], "pagerank() (in module graphscope)": [[237, "graphscope.pagerank"]], "pagerank_nx() (in module graphscope)": [[237, "graphscope.pagerank_nx"]], "signature (graphscope.framework.app.app property)": [[237, "graphscope.framework.app.App.signature"]], "signature (graphscope.framework.app.appassets property)": [[237, "graphscope.framework.app.AppAssets.signature"]], "signature() (graphscope.analytical.app.javaapp method)": [[237, "graphscope.analytical.app.JavaApp.signature"]], "sssp() (in module graphscope)": [[237, "graphscope.sssp"]], "triangles() (in module graphscope)": [[237, "graphscope.triangles"]], "type (graphscope.framework.app.appassets property)": [[237, "graphscope.framework.app.AppAssets.type"]], "voterank() (in module graphscope)": [[237, "graphscope.voterank"]], "wcc() (in module graphscope)": [[237, "graphscope.wcc"]], "basecontextdagnode (class in graphscope.framework.context)": [[238, "graphscope.framework.context.BaseContextDAGNode"]], "context (class in graphscope.framework.context)": [[238, "graphscope.framework.context.Context"]], "dynamicvertexdatacontext (class in graphscope.framework.context)": [[238, "graphscope.framework.context.DynamicVertexDataContext"]], "labeledvertexdatacontextdagnode (class in graphscope.framework.context)": [[238, "graphscope.framework.context.LabeledVertexDataContextDAGNode"]], "labeledvertexpropertycontextdagnode (class in graphscope.framework.context)": [[238, "graphscope.framework.context.LabeledVertexPropertyContextDAGNode"]], "resultdagnode (class in graphscope.framework.context)": [[238, "graphscope.framework.context.ResultDAGNode"]], "tensorcontextdagnode (class in graphscope.framework.context)": [[238, "graphscope.framework.context.TensorContextDAGNode"]], "vertexdatacontextdagnode (class in graphscope.framework.context)": [[238, "graphscope.framework.context.VertexDataContextDAGNode"]], "vertexpropertycontextdagnode (class in graphscope.framework.context)": [[238, "graphscope.framework.context.VertexPropertyContextDAGNode"]], "to_dataframe() (graphscope.framework.context.basecontextdagnode method)": [[238, "graphscope.framework.context.BaseContextDAGNode.to_dataframe"]], "to_numpy() (graphscope.framework.context.basecontextdagnode method)": [[238, "graphscope.framework.context.BaseContextDAGNode.to_numpy"]], "to_vineyard_dataframe() (graphscope.framework.context.basecontextdagnode method)": [[238, "graphscope.framework.context.BaseContextDAGNode.to_vineyard_dataframe"]], "to_vineyard_tensor() (graphscope.framework.context.basecontextdagnode method)": [[238, "graphscope.framework.context.BaseContextDAGNode.to_vineyard_tensor"]], "vertex (in module graphscope)": [[243, "graphscope.Vertex"]], "declare() (in module graphscope)": [[244, "graphscope.declare"]], "load_app() (in module graphscope.framework.app)": [[245, "graphscope.framework.app.load_app"]], "add_column() (in module graphscope.framework.dag_utils)": [[246, "graphscope.framework.dag_utils.add_column"]], "add_labels_to_graph() (in module graphscope.framework.dag_utils)": [[247, "graphscope.framework.dag_utils.add_labels_to_graph"]], "arrow_to_dynamic() (in module graphscope.framework.dag_utils)": [[248, "graphscope.framework.dag_utils.arrow_to_dynamic"]], "bind_app() (in module graphscope.framework.dag_utils)": [[249, "graphscope.framework.dag_utils.bind_app"]], "clear_edges() (in module graphscope.framework.dag_utils)": [[250, "graphscope.framework.dag_utils.clear_edges"]], "clear_graph() (in module graphscope.framework.dag_utils)": [[251, "graphscope.framework.dag_utils.clear_graph"]], "context_to_dataframe() (in module graphscope.framework.dag_utils)": [[252, "graphscope.framework.dag_utils.context_to_dataframe"]], "context_to_numpy() (in module graphscope.framework.dag_utils)": [[253, "graphscope.framework.dag_utils.context_to_numpy"]], "copy_graph() (in module graphscope.framework.dag_utils)": [[254, "graphscope.framework.dag_utils.copy_graph"]], "create_app() (in module graphscope.framework.dag_utils)": [[255, "graphscope.framework.dag_utils.create_app"]], "create_graph() (in module graphscope.framework.dag_utils)": [[256, "graphscope.framework.dag_utils.create_graph"]], "create_graph_view() (in module graphscope.framework.dag_utils)": [[257, "graphscope.framework.dag_utils.create_graph_view"]], "create_loader() (in module graphscope.framework.dag_utils)": [[258, "graphscope.framework.dag_utils.create_loader"]], "create_subgraph() (in module graphscope.framework.dag_utils)": [[259, "graphscope.framework.dag_utils.create_subgraph"]], "create_unload_op() (in module graphscope.framework.dag_utils)": [[260, "graphscope.framework.dag_utils.create_unload_op"]], "dynamic_to_arrow() (in module graphscope.framework.dag_utils)": [[261, "graphscope.framework.dag_utils.dynamic_to_arrow"]], "get_context_data() (in module graphscope.framework.dag_utils)": [[262, "graphscope.framework.dag_utils.get_context_data"]], "graph_to_dataframe() (in module graphscope.framework.dag_utils)": [[263, "graphscope.framework.dag_utils.graph_to_dataframe"]], "graph_to_numpy() (in module graphscope.framework.dag_utils)": [[264, "graphscope.framework.dag_utils.graph_to_numpy"]], "gremlin_to_subgraph() (in module graphscope.framework.dag_utils)": [[265, "graphscope.framework.dag_utils.gremlin_to_subgraph"]], "modify_edges() (in module graphscope.framework.dag_utils)": [[266, "graphscope.framework.dag_utils.modify_edges"]], "modify_vertices() (in module graphscope.framework.dag_utils)": [[267, "graphscope.framework.dag_utils.modify_vertices"]], "output() (in module graphscope.framework.dag_utils)": [[268, "graphscope.framework.dag_utils.output"]], "project_arrow_property_graph() (in module graphscope.framework.dag_utils)": [[269, "graphscope.framework.dag_utils.project_arrow_property_graph"]], "project_to_simple() (in module graphscope.framework.dag_utils)": [[270, "graphscope.framework.dag_utils.project_to_simple"]], "report_graph() (in module graphscope.framework.dag_utils)": [[271, "graphscope.framework.dag_utils.report_graph"]], "run_app() (in module graphscope.framework.dag_utils)": [[272, "graphscope.framework.dag_utils.run_app"]], "to_data_sink() (in module graphscope.framework.dag_utils)": [[273, "graphscope.framework.dag_utils.to_data_sink"]], "to_directed() (in module graphscope.framework.dag_utils)": [[274, "graphscope.framework.dag_utils.to_directed"]], "to_undirected() (in module graphscope.framework.dag_utils)": [[275, "graphscope.framework.dag_utils.to_undirected"]], "to_vineyard_dataframe() (in module graphscope.framework.dag_utils)": [[276, "graphscope.framework.dag_utils.to_vineyard_dataframe"]], "to_vineyard_tensor() (in module graphscope.framework.dag_utils)": [[277, "graphscope.framework.dag_utils.to_vineyard_tensor"]], "unload_app() (in module graphscope.framework.dag_utils)": [[278, "graphscope.framework.dag_utils.unload_app"]], "unload_context() (in module graphscope.framework.dag_utils)": [[279, "graphscope.framework.dag_utils.unload_context"]], "unload_graph() (in module graphscope.framework.dag_utils)": [[280, "graphscope.framework.dag_utils.unload_graph"]], "__init__() (graphscope.framework.operation.operation method)": [[281, "graphscope.framework.operation.Operation.__init__"]], "as_op_def() (graphscope.framework.operation.operation method)": [[282, "graphscope.framework.operation.Operation.as_op_def"]], "eval() (graphscope.framework.operation.operation method)": [[283, "graphscope.framework.operation.Operation.eval"]], "evaluated (graphscope.framework.operation.operation property)": [[284, "graphscope.framework.operation.Operation.evaluated"]], "key (graphscope.framework.operation.operation property)": [[285, "graphscope.framework.operation.Operation.key"]], "signature (graphscope.framework.operation.operation property)": [[286, "graphscope.framework.operation.Operation.signature"]], "g() (in module graphscope)": [[287, "graphscope.g"]], "get_default_session() (in module graphscope)": [[288, "graphscope.get_default_session"]], "graphlearn() (in module graphscope)": [[289, "graphscope.graphlearn"]], "gremlin() (in module graphscope)": [[290, "graphscope.gremlin"]], "has_default_session() (in module graphscope)": [[291, "graphscope.has_default_session"]], "session (in module graphscope)": [[292, "graphscope.session"]], "set_option() (in module graphscope)": [[293, "graphscope.set_option"]], "graph (class in graphscope.framework.graph)": [[308, "graphscope.framework.graph.Graph"]], "graphdagnode (class in graphscope.framework.graph)": [[308, "graphscope.framework.graph.GraphDAGNode"]], "loader (class in graphscope.framework.loader)": [[308, "graphscope.framework.loader.Loader"]], "__init__() (graphscope.framework.graph.graph method)": [[308, "graphscope.framework.graph.Graph.__init__"]], "__init__() (graphscope.framework.graph.graphdagnode method)": [[308, "graphscope.framework.graph.GraphDAGNode.__init__"]], "__init__() (graphscope.framework.loader.loader method)": [[308, "graphscope.framework.loader.Loader.__init__"]], "add_column() (graphscope.framework.graph.graph method)": [[308, "graphscope.framework.graph.Graph.add_column"]], "add_column() (graphscope.framework.graph.graphdagnode method)": [[308, "graphscope.framework.graph.GraphDAGNode.add_column"]], "add_edges() (graphscope.framework.graph.graph method)": [[308, "graphscope.framework.graph.Graph.add_edges"]], "add_edges() (graphscope.framework.graph.graphdagnode method)": [[308, "graphscope.framework.graph.GraphDAGNode.add_edges"]], "add_vertices() (graphscope.framework.graph.graph method)": [[308, "graphscope.framework.graph.Graph.add_vertices"]], "add_vertices() (graphscope.framework.graph.graphdagnode method)": [[308, "graphscope.framework.graph.GraphDAGNode.add_vertices"]], "consolidate_columns() (graphscope.framework.graph.graph method)": [[308, "graphscope.framework.graph.Graph.consolidate_columns"]], "consolidate_columns() (graphscope.framework.graph.graphdagnode method)": [[308, "graphscope.framework.graph.GraphDAGNode.consolidate_columns"]], "detach() (graphscope.framework.graph.graph method)": [[308, "graphscope.framework.graph.Graph.detach"]], "key (graphscope.framework.graph.graph property)": [[308, "graphscope.framework.graph.Graph.key"]], "load_from() (graphscope.framework.graph.graph class method)": [[308, "graphscope.framework.graph.Graph.load_from"]], "load_from() (in module graphscope.framework.graph_builder)": [[308, "graphscope.framework.graph_builder.load_from"]], "loaded() (graphscope.framework.graph.graph method)": [[308, "graphscope.framework.graph.Graph.loaded"]], "project() (graphscope.framework.graph.graph method)": [[308, "graphscope.framework.graph.Graph.project"]], "project() (graphscope.framework.graph.graphdagnode method)": [[308, "graphscope.framework.graph.GraphDAGNode.project"]], "save_to() (graphscope.framework.graph.graph method)": [[308, "graphscope.framework.graph.Graph.save_to"]], "schema (graphscope.framework.graph.graph property)": [[308, "graphscope.framework.graph.Graph.schema"]], "schema_path (graphscope.framework.graph.graph property)": [[308, "graphscope.framework.graph.Graph.schema_path"]], "session_id (graphscope.framework.graph.graph property)": [[308, "graphscope.framework.graph.Graph.session_id"]], "to_dataframe() (graphscope.framework.graph.graph method)": [[308, "graphscope.framework.graph.Graph.to_dataframe"]], "to_directed() (graphscope.framework.graph.graph method)": [[308, "graphscope.framework.graph.Graph.to_directed"]], "to_numpy() (graphscope.framework.graph.graph method)": [[308, "graphscope.framework.graph.Graph.to_numpy"]], "to_undirected() (graphscope.framework.graph.graph method)": [[308, "graphscope.framework.graph.Graph.to_undirected"]], "vineyard_id (graphscope.framework.graph.graph property)": [[308, "graphscope.framework.graph.Graph.vineyard_id"]], "interactivequery (class in graphscope.interactive.query)": [[309, "graphscope.interactive.query.InteractiveQuery"]], "__init__() (graphscope.interactive.query.interactivequery method)": [[309, "graphscope.interactive.query.InteractiveQuery.__init__"]], "close() (graphscope.interactive.query.interactivequery method)": [[309, "graphscope.interactive.query.InteractiveQuery.close"]], "cypher_driver (graphscope.interactive.query.interactivequery property)": [[309, "graphscope.interactive.query.InteractiveQuery.cypher_driver"]], "cypher_url (graphscope.interactive.query.interactivequery property)": [[309, "graphscope.interactive.query.InteractiveQuery.cypher_url"]], "execute() (graphscope.interactive.query.interactivequery method)": [[309, "graphscope.interactive.query.InteractiveQuery.execute"]], "graph_url (graphscope.interactive.query.interactivequery property)": [[309, "graphscope.interactive.query.InteractiveQuery.graph_url"]], "gremlin_client (graphscope.interactive.query.interactivequery property)": [[309, "graphscope.interactive.query.InteractiveQuery.gremlin_client"]], "gremlin_url (graphscope.interactive.query.interactivequery property)": [[309, "graphscope.interactive.query.InteractiveQuery.gremlin_url"]], "object_id (graphscope.interactive.query.interactivequery property)": [[309, "graphscope.interactive.query.InteractiveQuery.object_id"]], "session (graphscope.interactive.query.interactivequery property)": [[309, "graphscope.interactive.query.InteractiveQuery.session"]], "session_id (graphscope.interactive.query.interactivequery property)": [[309, "graphscope.interactive.query.InteractiveQuery.session_id"]], "subgraph() (graphscope.interactive.query.interactivequery method)": [[309, "graphscope.interactive.query.InteractiveQuery.subgraph"]], "submit() (graphscope.interactive.query.interactivequery method)": [[309, "graphscope.interactive.query.InteractiveQuery.submit"]], "traversal_source() (graphscope.interactive.query.interactivequery method)": [[309, "graphscope.interactive.query.InteractiveQuery.traversal_source"]], "e() (graphscope.learning.graph.graph method)": [[310, "graphscope.learning.graph.Graph.E"]], "graph (class in graphscope.learning.graph)": [[310, "graphscope.learning.graph.Graph"]], "v() (graphscope.learning.graph.graph method)": [[310, "graphscope.learning.graph.Graph.V"]], "__init__() (graphscope.learning.graph.graph method)": [[310, "graphscope.learning.graph.Graph.__init__"]], "get_handle() (graphscope.learning.graph.graph method)": [[310, "graphscope.learning.graph.Graph.get_handle"]], "average_clustering() (in module graphscope.nx.builtin)": [[311, "graphscope.nx.builtin.average_clustering"]], "average_shortest_path_length() (in module graphscope.nx.builtin)": [[311, "graphscope.nx.builtin.average_shortest_path_length"]], "bfs_edges() (in module graphscope.nx.builtin)": [[311, "graphscope.nx.builtin.bfs_edges"]], "clustering() (in module graphscope.nx.builtin)": [[311, "graphscope.nx.builtin.clustering"]], "degree_centrality() (in module graphscope.nx.builtin)": [[311, "graphscope.nx.builtin.degree_centrality"]], "eigenvector_centrality() (in module graphscope.nx.builtin)": [[311, "graphscope.nx.builtin.eigenvector_centrality"]], "has_path() (in module graphscope.nx.builtin)": [[311, "graphscope.nx.builtin.has_path"]], "hits() (in module graphscope.nx.builtin)": [[311, "graphscope.nx.builtin.hits"]], "in_degree_centrality() (in module graphscope.nx.builtin)": [[311, "graphscope.nx.builtin.in_degree_centrality"]], "k_core() (in module graphscope.nx.builtin)": [[311, "graphscope.nx.builtin.k_core"]], "katz_centrality() (in module graphscope.nx.builtin)": [[311, "graphscope.nx.builtin.katz_centrality"]], "out_degree_centrality() (in module graphscope.nx.builtin)": [[311, "graphscope.nx.builtin.out_degree_centrality"]], "triangles() (in module graphscope.nx.builtin)": [[311, "graphscope.nx.builtin.triangles"]], "graphscope.nx.classes.function": [[312, "module-graphscope.nx.classes.function"]], "module": [[312, "module-graphscope.nx.classes.function"], [445, "module-graphscope.nx.generators.atlas"], [445, "module-graphscope.nx.generators.classic"], [445, "module-graphscope.nx.generators.community"], [445, "module-graphscope.nx.generators.degree_seq"], [445, "module-graphscope.nx.generators.directed"], [445, "module-graphscope.nx.generators.duplication"], [445, "module-graphscope.nx.generators.ego"], [445, "module-graphscope.nx.generators.expanders"], [445, "module-graphscope.nx.generators.geometric"], [445, "module-graphscope.nx.generators.harary_graph"], [445, "module-graphscope.nx.generators.intersection"], [445, "module-graphscope.nx.generators.joint_degree_seq"], [445, "module-graphscope.nx.generators.mycielski"], [445, "module-graphscope.nx.generators.nonisomorphic_trees"], [445, "module-graphscope.nx.generators.small"], [445, "module-graphscope.nx.generators.social"], [445, "module-graphscope.nx.generators.spectral_graph_forge"], [445, "module-graphscope.nx.generators.sudoku"], [445, "module-graphscope.nx.generators.trees"], [445, "module-graphscope.nx.generators.triads"], [445, "module-networkx.generators.internet_as_graphs"], [445, "module-networkx.generators.stochastic"], [450, "module-graphscope.framework.dag_utils"]], "add_cycle() (in module graphscope.nx.classes.function)": [[313, "graphscope.nx.classes.function.add_cycle"]], "add_path() (in module graphscope.nx.classes.function)": [[314, "graphscope.nx.classes.function.add_path"]], "add_star() (in module graphscope.nx.classes.function)": [[315, "graphscope.nx.classes.function.add_star"]], "all_neighbors() (in module graphscope.nx.classes.function)": [[316, "graphscope.nx.classes.function.all_neighbors"]], "common_neighbors() (in module graphscope.nx.classes.function)": [[317, "graphscope.nx.classes.function.common_neighbors"]], "create_empty_copy() (in module graphscope.nx.classes.function)": [[318, "graphscope.nx.classes.function.create_empty_copy"]], "degree() (in module graphscope.nx.classes.function)": [[319, "graphscope.nx.classes.function.degree"]], "degree_histogram() (in module graphscope.nx.classes.function)": [[320, "graphscope.nx.classes.function.degree_histogram"]], "density() (in module graphscope.nx.classes.function)": [[321, "graphscope.nx.classes.function.density"]], "edge_subgraph() (in module graphscope.nx.classes.function)": [[322, "graphscope.nx.classes.function.edge_subgraph"]], "edges() (in module graphscope.nx.classes.function)": [[323, "graphscope.nx.classes.function.edges"]], "freeze() (in module graphscope.nx.classes.function)": [[324, "graphscope.nx.classes.function.freeze"]], "induced_subgraph() (in module graphscope.nx.classes.function)": [[325, "graphscope.nx.classes.function.induced_subgraph"]], "info() (in module graphscope.nx.classes.function)": [[326, "graphscope.nx.classes.function.info"]], "is_directed() (in module graphscope.nx.classes.function)": [[327, "graphscope.nx.classes.function.is_directed"]], "is_empty() (in module graphscope.nx.classes.function)": [[328, "graphscope.nx.classes.function.is_empty"]], "is_frozen() (in module graphscope.nx.classes.function)": [[329, "graphscope.nx.classes.function.is_frozen"]], "is_negatively_weighted() (in module graphscope.nx.classes.function)": [[330, "graphscope.nx.classes.function.is_negatively_weighted"]], "is_weighted() (in module graphscope.nx.classes.function)": [[331, "graphscope.nx.classes.function.is_weighted"]], "neighbors() (in module graphscope.nx.classes.function)": [[332, "graphscope.nx.classes.function.neighbors"]], "nodes() (in module graphscope.nx.classes.function)": [[333, "graphscope.nx.classes.function.nodes"]], "nodes_with_selfloops() (in module graphscope.nx.classes.function)": [[334, "graphscope.nx.classes.function.nodes_with_selfloops"]], "non_edges() (in module graphscope.nx.classes.function)": [[335, "graphscope.nx.classes.function.non_edges"]], "non_neighbors() (in module graphscope.nx.classes.function)": [[336, "graphscope.nx.classes.function.non_neighbors"]], "number_of_edges() (in module graphscope.nx.classes.function)": [[337, "graphscope.nx.classes.function.number_of_edges"]], "number_of_nodes() (in module graphscope.nx.classes.function)": [[338, "graphscope.nx.classes.function.number_of_nodes"]], "number_of_selfloops() (in module graphscope.nx.classes.function)": [[339, "graphscope.nx.classes.function.number_of_selfloops"]], "selfloop_edges() (in module graphscope.nx.classes.function)": [[340, "graphscope.nx.classes.function.selfloop_edges"]], "subgraph() (in module graphscope.nx.classes.function)": [[341, "graphscope.nx.classes.function.subgraph"]], "to_directed() (in module graphscope.nx.classes.function)": [[342, "graphscope.nx.classes.function.to_directed"]], "to_undirected() (in module graphscope.nx.classes.function)": [[343, "graphscope.nx.classes.function.to_undirected"]], "graph_atlas() (in module graphscope.nx.generators.atlas)": [[344, "graphscope.nx.generators.atlas.graph_atlas"]], "graph_atlas_g() (in module graphscope.nx.generators.atlas)": [[345, "graphscope.nx.generators.atlas.graph_atlas_g"]], "balanced_tree() (in module graphscope.nx.generators.classic)": [[346, "graphscope.nx.generators.classic.balanced_tree"]], "barbell_graph() (in module graphscope.nx.generators.classic)": [[347, "graphscope.nx.generators.classic.barbell_graph"]], "binomial_tree() (in module graphscope.nx.generators.classic)": [[348, "graphscope.nx.generators.classic.binomial_tree"]], "circulant_graph() (in module graphscope.nx.generators.classic)": [[349, "graphscope.nx.generators.classic.circulant_graph"]], "circular_ladder_graph() (in module graphscope.nx.generators.classic)": [[350, "graphscope.nx.generators.classic.circular_ladder_graph"]], "complete_graph() (in module graphscope.nx.generators.classic)": [[351, "graphscope.nx.generators.classic.complete_graph"]], "complete_multipartite_graph() (in module graphscope.nx.generators.classic)": [[352, "graphscope.nx.generators.classic.complete_multipartite_graph"]], "cycle_graph() (in module graphscope.nx.generators.classic)": [[353, "graphscope.nx.generators.classic.cycle_graph"]], "dorogovtsev_goltsev_mendes_graph() (in module graphscope.nx.generators.classic)": [[354, "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph"]], "empty_graph() (in module graphscope.nx.generators.classic)": [[355, "graphscope.nx.generators.classic.empty_graph"]], "full_rary_tree() (in module graphscope.nx.generators.classic)": [[356, "graphscope.nx.generators.classic.full_rary_tree"]], "ladder_graph() (in module graphscope.nx.generators.classic)": [[357, "graphscope.nx.generators.classic.ladder_graph"]], "lollipop_graph() (in module graphscope.nx.generators.classic)": [[358, "graphscope.nx.generators.classic.lollipop_graph"]], "null_graph() (in module graphscope.nx.generators.classic)": [[359, "graphscope.nx.generators.classic.null_graph"]], "path_graph() (in module graphscope.nx.generators.classic)": [[360, "graphscope.nx.generators.classic.path_graph"]], "star_graph() (in module graphscope.nx.generators.classic)": [[361, "graphscope.nx.generators.classic.star_graph"]], "trivial_graph() (in module graphscope.nx.generators.classic)": [[362, "graphscope.nx.generators.classic.trivial_graph"]], "turan_graph() (in module graphscope.nx.generators.classic)": [[363, "graphscope.nx.generators.classic.turan_graph"]], "wheel_graph() (in module graphscope.nx.generators.classic)": [[364, "graphscope.nx.generators.classic.wheel_graph"]], "lfr_benchmark_graph() (in module graphscope.nx.generators.community)": [[365, "graphscope.nx.generators.community.LFR_benchmark_graph"]], "caveman_graph() (in module graphscope.nx.generators.community)": [[366, "graphscope.nx.generators.community.caveman_graph"]], "connected_caveman_graph() (in module graphscope.nx.generators.community)": [[367, "graphscope.nx.generators.community.connected_caveman_graph"]], "gaussian_random_partition_graph() (in module graphscope.nx.generators.community)": [[368, "graphscope.nx.generators.community.gaussian_random_partition_graph"]], "planted_partition_graph() (in module graphscope.nx.generators.community)": [[369, "graphscope.nx.generators.community.planted_partition_graph"]], "random_partition_graph() (in module graphscope.nx.generators.community)": [[370, "graphscope.nx.generators.community.random_partition_graph"]], "relaxed_caveman_graph() (in module graphscope.nx.generators.community)": [[371, "graphscope.nx.generators.community.relaxed_caveman_graph"]], "ring_of_cliques() (in module graphscope.nx.generators.community)": [[372, "graphscope.nx.generators.community.ring_of_cliques"]], "stochastic_block_model() (in module graphscope.nx.generators.community)": [[373, "graphscope.nx.generators.community.stochastic_block_model"]], "windmill_graph() (in module graphscope.nx.generators.community)": [[374, "graphscope.nx.generators.community.windmill_graph"]], "configuration_model() (in module graphscope.nx.generators.degree_seq)": [[375, "graphscope.nx.generators.degree_seq.configuration_model"]], "degree_sequence_tree() (in module graphscope.nx.generators.degree_seq)": [[376, "graphscope.nx.generators.degree_seq.degree_sequence_tree"]], "directed_configuration_model() (in module graphscope.nx.generators.degree_seq)": [[377, "graphscope.nx.generators.degree_seq.directed_configuration_model"]], "directed_havel_hakimi_graph() (in module graphscope.nx.generators.degree_seq)": [[378, "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph"]], "expected_degree_graph() (in module graphscope.nx.generators.degree_seq)": [[379, "graphscope.nx.generators.degree_seq.expected_degree_graph"]], "havel_hakimi_graph() (in module graphscope.nx.generators.degree_seq)": [[380, "graphscope.nx.generators.degree_seq.havel_hakimi_graph"]], "random_degree_sequence_graph() (in module graphscope.nx.generators.degree_seq)": [[381, "graphscope.nx.generators.degree_seq.random_degree_sequence_graph"]], "gn_graph() (in module graphscope.nx.generators.directed)": [[382, "graphscope.nx.generators.directed.gn_graph"]], "gnc_graph() (in module graphscope.nx.generators.directed)": [[383, "graphscope.nx.generators.directed.gnc_graph"]], "gnr_graph() (in module graphscope.nx.generators.directed)": [[384, "graphscope.nx.generators.directed.gnr_graph"]], "random_k_out_graph() (in module graphscope.nx.generators.directed)": [[385, "graphscope.nx.generators.directed.random_k_out_graph"]], "scale_free_graph() (in module graphscope.nx.generators.directed)": [[386, "graphscope.nx.generators.directed.scale_free_graph"]], "duplication_divergence_graph() (in module graphscope.nx.generators.duplication)": [[387, "graphscope.nx.generators.duplication.duplication_divergence_graph"]], "partial_duplication_graph() (in module graphscope.nx.generators.duplication)": [[388, "graphscope.nx.generators.duplication.partial_duplication_graph"]], "ego_graph() (in module graphscope.nx.generators.ego)": [[389, "graphscope.nx.generators.ego.ego_graph"]], "chordal_cycle_graph() (in module graphscope.nx.generators.expanders)": [[390, "graphscope.nx.generators.expanders.chordal_cycle_graph"]], "margulis_gabber_galil_graph() (in module graphscope.nx.generators.expanders)": [[391, "graphscope.nx.generators.expanders.margulis_gabber_galil_graph"]], "paley_graph() (in module graphscope.nx.generators.expanders)": [[392, "graphscope.nx.generators.expanders.paley_graph"]], "geographical_threshold_graph() (in module graphscope.nx.generators.geometric)": [[393, "graphscope.nx.generators.geometric.geographical_threshold_graph"]], "random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[394, "graphscope.nx.generators.geometric.random_geometric_graph"]], "soft_random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[395, "graphscope.nx.generators.geometric.soft_random_geometric_graph"]], "thresholded_random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[396, "graphscope.nx.generators.geometric.thresholded_random_geometric_graph"]], "waxman_graph() (in module graphscope.nx.generators.geometric)": [[397, "graphscope.nx.generators.geometric.waxman_graph"]], "hkn_harary_graph() (in module graphscope.nx.generators.harary_graph)": [[398, "graphscope.nx.generators.harary_graph.hkn_harary_graph"]], "hnm_harary_graph() (in module graphscope.nx.generators.harary_graph)": [[399, "graphscope.nx.generators.harary_graph.hnm_harary_graph"]], "general_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[400, "graphscope.nx.generators.intersection.general_random_intersection_graph"]], "k_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[401, "graphscope.nx.generators.intersection.k_random_intersection_graph"]], "uniform_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[402, "graphscope.nx.generators.intersection.uniform_random_intersection_graph"]], "directed_joint_degree_graph() (in module graphscope.nx.generators.joint_degree_seq)": [[403, "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph"]], "is_valid_directed_joint_degree() (in module graphscope.nx.generators.joint_degree_seq)": [[404, "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree"]], "is_valid_joint_degree() (in module graphscope.nx.generators.joint_degree_seq)": [[405, "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree"]], "joint_degree_graph() (in module graphscope.nx.generators.joint_degree_seq)": [[406, "graphscope.nx.generators.joint_degree_seq.joint_degree_graph"]], "mycielski_graph() (in module graphscope.nx.generators.mycielski)": [[407, "graphscope.nx.generators.mycielski.mycielski_graph"]], "mycielskian() (in module graphscope.nx.generators.mycielski)": [[408, "graphscope.nx.generators.mycielski.mycielskian"]], "nonisomorphic_trees() (in module graphscope.nx.generators.nonisomorphic_trees)": [[409, "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees"]], "number_of_nonisomorphic_trees() (in module graphscope.nx.generators.nonisomorphic_trees)": [[410, "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees"]], "lcf_graph() (in module graphscope.nx.generators.small)": [[411, "graphscope.nx.generators.small.LCF_graph"]], "bull_graph() (in module graphscope.nx.generators.small)": [[412, "graphscope.nx.generators.small.bull_graph"]], "chvatal_graph() (in module graphscope.nx.generators.small)": [[413, "graphscope.nx.generators.small.chvatal_graph"]], "cubical_graph() (in module graphscope.nx.generators.small)": [[414, "graphscope.nx.generators.small.cubical_graph"]], "desargues_graph() (in module graphscope.nx.generators.small)": [[415, "graphscope.nx.generators.small.desargues_graph"]], "diamond_graph() (in module graphscope.nx.generators.small)": [[416, "graphscope.nx.generators.small.diamond_graph"]], "dodecahedral_graph() (in module graphscope.nx.generators.small)": [[417, "graphscope.nx.generators.small.dodecahedral_graph"]], "frucht_graph() (in module graphscope.nx.generators.small)": [[418, "graphscope.nx.generators.small.frucht_graph"]], "heawood_graph() (in module graphscope.nx.generators.small)": [[419, "graphscope.nx.generators.small.heawood_graph"]], "house_graph() (in module graphscope.nx.generators.small)": [[420, "graphscope.nx.generators.small.house_graph"]], "house_x_graph() (in module graphscope.nx.generators.small)": [[421, "graphscope.nx.generators.small.house_x_graph"]], "icosahedral_graph() (in module graphscope.nx.generators.small)": [[422, "graphscope.nx.generators.small.icosahedral_graph"]], "krackhardt_kite_graph() (in module graphscope.nx.generators.small)": [[423, "graphscope.nx.generators.small.krackhardt_kite_graph"]], "make_small_graph() (in module graphscope.nx.generators.small)": [[424, "graphscope.nx.generators.small.make_small_graph"]], "moebius_kantor_graph() (in module graphscope.nx.generators.small)": [[425, "graphscope.nx.generators.small.moebius_kantor_graph"]], "octahedral_graph() (in module graphscope.nx.generators.small)": [[426, "graphscope.nx.generators.small.octahedral_graph"]], "pappus_graph() (in module graphscope.nx.generators.small)": [[427, "graphscope.nx.generators.small.pappus_graph"]], "petersen_graph() (in module graphscope.nx.generators.small)": [[428, "graphscope.nx.generators.small.petersen_graph"]], "sedgewick_maze_graph() (in module graphscope.nx.generators.small)": [[429, "graphscope.nx.generators.small.sedgewick_maze_graph"]], "tetrahedral_graph() (in module graphscope.nx.generators.small)": [[430, "graphscope.nx.generators.small.tetrahedral_graph"]], "truncated_cube_graph() (in module graphscope.nx.generators.small)": [[431, "graphscope.nx.generators.small.truncated_cube_graph"]], "truncated_tetrahedron_graph() (in module graphscope.nx.generators.small)": [[432, "graphscope.nx.generators.small.truncated_tetrahedron_graph"]], "tutte_graph() (in module graphscope.nx.generators.small)": [[433, "graphscope.nx.generators.small.tutte_graph"]], "davis_southern_women_graph() (in module graphscope.nx.generators.social)": [[434, "graphscope.nx.generators.social.davis_southern_women_graph"]], "florentine_families_graph() (in module graphscope.nx.generators.social)": [[435, "graphscope.nx.generators.social.florentine_families_graph"]], "karate_club_graph() (in module graphscope.nx.generators.social)": [[436, "graphscope.nx.generators.social.karate_club_graph"]], "les_miserables_graph() (in module graphscope.nx.generators.social)": [[437, "graphscope.nx.generators.social.les_miserables_graph"]], "spectral_graph_forge() (in module graphscope.nx.generators.spectral_graph_forge)": [[438, "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge"]], "sudoku_graph() (in module graphscope.nx.generators.sudoku)": [[439, "graphscope.nx.generators.sudoku.sudoku_graph"]], "prefix_tree() (in module graphscope.nx.generators.trees)": [[440, "graphscope.nx.generators.trees.prefix_tree"]], "random_tree() (in module graphscope.nx.generators.trees)": [[441, "graphscope.nx.generators.trees.random_tree"]], "triad_graph() (in module graphscope.nx.generators.triads)": [[442, "graphscope.nx.generators.triads.triad_graph"]], "random_internet_as_graph() (in module networkx.generators.internet_as_graphs)": [[443, "networkx.generators.internet_as_graphs.random_internet_as_graph"]], "stochastic_graph() (in module networkx.generators.stochastic)": [[444, "networkx.generators.stochastic.stochastic_graph"]], "graphscope.nx.generators.atlas": [[445, "module-graphscope.nx.generators.atlas"]], "graphscope.nx.generators.classic": [[445, "module-graphscope.nx.generators.classic"]], "graphscope.nx.generators.community": [[445, "module-graphscope.nx.generators.community"]], "graphscope.nx.generators.degree_seq": [[445, "module-graphscope.nx.generators.degree_seq"]], "graphscope.nx.generators.directed": [[445, "module-graphscope.nx.generators.directed"]], "graphscope.nx.generators.duplication": [[445, "module-graphscope.nx.generators.duplication"]], "graphscope.nx.generators.ego": [[445, "module-graphscope.nx.generators.ego"]], "graphscope.nx.generators.expanders": [[445, "module-graphscope.nx.generators.expanders"]], "graphscope.nx.generators.geometric": [[445, "module-graphscope.nx.generators.geometric"]], "graphscope.nx.generators.harary_graph": [[445, "module-graphscope.nx.generators.harary_graph"]], "graphscope.nx.generators.intersection": [[445, "module-graphscope.nx.generators.intersection"]], "graphscope.nx.generators.joint_degree_seq": [[445, "module-graphscope.nx.generators.joint_degree_seq"]], "graphscope.nx.generators.mycielski": [[445, "module-graphscope.nx.generators.mycielski"]], "graphscope.nx.generators.nonisomorphic_trees": [[445, "module-graphscope.nx.generators.nonisomorphic_trees"]], "graphscope.nx.generators.small": [[445, "module-graphscope.nx.generators.small"]], "graphscope.nx.generators.social": [[445, "module-graphscope.nx.generators.social"]], "graphscope.nx.generators.spectral_graph_forge": [[445, "module-graphscope.nx.generators.spectral_graph_forge"]], "graphscope.nx.generators.sudoku": [[445, "module-graphscope.nx.generators.sudoku"]], "graphscope.nx.generators.trees": [[445, "module-graphscope.nx.generators.trees"]], "graphscope.nx.generators.triads": [[445, "module-graphscope.nx.generators.triads"]], "networkx.generators.internet_as_graphs": [[445, "module-networkx.generators.internet_as_graphs"]], "networkx.generators.stochastic": [[445, "module-networkx.generators.stochastic"]], "digraph (class in graphscope.nx)": [[446, "graphscope.nx.DiGraph"]], "graph (class in graphscope.nx)": [[446, "graphscope.nx.Graph"]], "__contains__() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.__contains__"]], "__contains__() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.__contains__"]], "__getitem__() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.__getitem__"]], "__getitem__() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.__getitem__"]], "__init__() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.__init__"]], "__init__() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.__init__"]], "__iter__() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.__iter__"]], "__iter__() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.__iter__"]], "__len__() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.__len__"]], "__len__() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.__len__"]], "add_edge() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.add_edge"]], "add_edge() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.add_edge"]], "add_edges_from() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.add_edges_from"]], "add_edges_from() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.add_edges_from"]], "add_node() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.add_node"]], "add_node() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.add_node"]], "add_nodes_from() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.add_nodes_from"]], "add_nodes_from() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.add_nodes_from"]], "add_weighted_edges_from() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.add_weighted_edges_from"]], "add_weighted_edges_from() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.add_weighted_edges_from"]], "adj (graphscope.nx.digraph property)": [[446, "graphscope.nx.DiGraph.adj"]], "adj (graphscope.nx.graph property)": [[446, "graphscope.nx.Graph.adj"]], "adjacency() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.adjacency"]], "adjacency() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.adjacency"]], "adjlist_inner_dict_factory (graphscope.nx.digraph attribute)": [[446, "graphscope.nx.DiGraph.adjlist_inner_dict_factory"]], "adjlist_inner_dict_factory (graphscope.nx.graph attribute)": [[446, "graphscope.nx.Graph.adjlist_inner_dict_factory"]], "adjlist_outer_dict_factory (graphscope.nx.digraph attribute)": [[446, "graphscope.nx.DiGraph.adjlist_outer_dict_factory"]], "adjlist_outer_dict_factory (graphscope.nx.graph attribute)": [[446, "graphscope.nx.Graph.adjlist_outer_dict_factory"]], "clear() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.clear"]], "clear() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.clear"]], "clear_edges() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.clear_edges"]], "clear_edges() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.clear_edges"]], "copy() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.copy"]], "copy() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.copy"]], "degree (graphscope.nx.digraph property)": [[446, "graphscope.nx.DiGraph.degree"]], "degree (graphscope.nx.graph property)": [[446, "graphscope.nx.Graph.degree"]], "edge_attr_dict_factory (graphscope.nx.digraph attribute)": [[446, "graphscope.nx.DiGraph.edge_attr_dict_factory"]], "edge_attr_dict_factory (graphscope.nx.graph attribute)": [[446, "graphscope.nx.Graph.edge_attr_dict_factory"]], "edge_subgraph() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.edge_subgraph"]], "edge_subgraph() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.edge_subgraph"]], "edges (graphscope.nx.digraph property)": [[446, "graphscope.nx.DiGraph.edges"]], "edges (graphscope.nx.graph property)": [[446, "graphscope.nx.Graph.edges"]], "get_edge_data() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.get_edge_data"]], "get_edge_data() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.get_edge_data"]], "graph_attr_dict_factory (graphscope.nx.digraph attribute)": [[446, "graphscope.nx.DiGraph.graph_attr_dict_factory"]], "graph_attr_dict_factory (graphscope.nx.graph attribute)": [[446, "graphscope.nx.Graph.graph_attr_dict_factory"]], "graph_cache_factory (graphscope.nx.digraph attribute)": [[446, "graphscope.nx.DiGraph.graph_cache_factory"]], "graph_cache_factory (graphscope.nx.graph attribute)": [[446, "graphscope.nx.Graph.graph_cache_factory"]], "graph_type (graphscope.nx.digraph property)": [[446, "graphscope.nx.DiGraph.graph_type"]], "graph_type (graphscope.nx.graph property)": [[446, "graphscope.nx.Graph.graph_type"]], "has_edge() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.has_edge"]], "has_edge() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.has_edge"]], "has_node() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.has_node"]], "has_node() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.has_node"]], "has_predecessor() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.has_predecessor"]], "has_successor() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.has_successor"]], "in_degree (graphscope.nx.digraph property)": [[446, "graphscope.nx.DiGraph.in_degree"]], "in_edges (graphscope.nx.digraph property)": [[446, "graphscope.nx.DiGraph.in_edges"]], "is_directed() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.is_directed"]], "is_directed() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.is_directed"]], "is_multigraph() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.is_multigraph"]], "is_multigraph() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.is_multigraph"]], "key (graphscope.nx.digraph property)": [[446, "graphscope.nx.DiGraph.key"]], "key (graphscope.nx.graph property)": [[446, "graphscope.nx.Graph.key"]], "name (graphscope.nx.digraph property)": [[446, "graphscope.nx.DiGraph.name"]], "name (graphscope.nx.graph property)": [[446, "graphscope.nx.Graph.name"]], "nbunch_iter() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.nbunch_iter"]], "nbunch_iter() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.nbunch_iter"]], "neighbors() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.neighbors"]], "neighbors() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.neighbors"]], "node_attr_dict_factory (graphscope.nx.digraph attribute)": [[446, "graphscope.nx.DiGraph.node_attr_dict_factory"]], "node_attr_dict_factory (graphscope.nx.graph attribute)": [[446, "graphscope.nx.Graph.node_attr_dict_factory"]], "node_dict_factory (graphscope.nx.digraph attribute)": [[446, "graphscope.nx.DiGraph.node_dict_factory"]], "node_dict_factory (graphscope.nx.graph attribute)": [[446, "graphscope.nx.Graph.node_dict_factory"]], "nodes (graphscope.nx.digraph property)": [[446, "graphscope.nx.DiGraph.nodes"]], "nodes (graphscope.nx.graph property)": [[446, "graphscope.nx.Graph.nodes"]], "number_of_edges() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.number_of_edges"]], "number_of_edges() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.number_of_edges"]], "number_of_nodes() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.number_of_nodes"]], "number_of_nodes() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.number_of_nodes"]], "op (graphscope.nx.digraph property)": [[446, "graphscope.nx.DiGraph.op"]], "op (graphscope.nx.graph property)": [[446, "graphscope.nx.Graph.op"]], "order() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.order"]], "order() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.order"]], "out_degree (graphscope.nx.digraph property)": [[446, "graphscope.nx.DiGraph.out_degree"]], "out_edges (graphscope.nx.digraph property)": [[446, "graphscope.nx.DiGraph.out_edges"]], "pred (graphscope.nx.digraph property)": [[446, "graphscope.nx.DiGraph.pred"]], "predecessors() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.predecessors"]], "remove_edge() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.remove_edge"]], "remove_edge() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.remove_edge"]], "remove_edges_from() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.remove_edges_from"]], "remove_edges_from() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.remove_edges_from"]], "remove_node() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.remove_node"]], "remove_node() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.remove_node"]], "remove_nodes_from() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.remove_nodes_from"]], "remove_nodes_from() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.remove_nodes_from"]], "reverse() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.reverse"]], "schema (graphscope.nx.digraph property)": [[446, "graphscope.nx.DiGraph.schema"]], "schema (graphscope.nx.graph property)": [[446, "graphscope.nx.Graph.schema"]], "session (graphscope.nx.digraph property)": [[446, "graphscope.nx.DiGraph.session"]], "session (graphscope.nx.graph property)": [[446, "graphscope.nx.Graph.session"]], "session_id (graphscope.nx.digraph property)": [[446, "graphscope.nx.DiGraph.session_id"]], "session_id (graphscope.nx.graph property)": [[446, "graphscope.nx.Graph.session_id"]], "set_edge_data() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.set_edge_data"]], "set_edge_data() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.set_edge_data"]], "set_node_data() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.set_node_data"]], "set_node_data() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.set_node_data"]], "signature (graphscope.nx.digraph property)": [[446, "graphscope.nx.DiGraph.signature"]], "signature (graphscope.nx.graph property)": [[446, "graphscope.nx.Graph.signature"]], "size() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.size"]], "size() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.size"]], "subgraph() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.subgraph"]], "subgraph() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.subgraph"]], "succ (graphscope.nx.digraph property)": [[446, "graphscope.nx.DiGraph.succ"]], "successors() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.successors"]], "to_directed() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.to_directed"]], "to_directed() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.to_directed"]], "to_undirected() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.to_undirected"]], "to_undirected() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.to_undirected"]], "to_undirected_class() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.to_undirected_class"]], "to_undirected_class() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.to_undirected_class"]], "update() (graphscope.nx.digraph method)": [[446, "graphscope.nx.DiGraph.update"]], "update() (graphscope.nx.graph method)": [[446, "graphscope.nx.Graph.update"]], "read_adjlist() (in module graphscope.nx)": [[448, "graphscope.nx.read_adjlist"]], "read_edgelist() (in module graphscope.nx)": [[448, "graphscope.nx.read_edgelist"]], "__init__() (in module graphscope.nx.graph)": [[449, "graphscope.nx.Graph.__init__"]], "_convert_arrow_to_dynamic() (in module graphscope.nx.graph)": [[449, "graphscope.nx.Graph._convert_arrow_to_dynamic"]], "operation (class in graphscope.framework.operation)": [[450, "graphscope.framework.operation.Operation"]], "graphscope.framework.dag_utils": [[450, "module-graphscope.framework.dag_utils"]], "session (class in graphscope)": [[453, "graphscope.Session"]], "__enter__() (graphscope.session method)": [[453, "graphscope.Session.__enter__"]], "__exit__() (graphscope.session method)": [[453, "graphscope.Session.__exit__"]], "__init__() (graphscope.session method)": [[453, "graphscope.Session.__init__"]], "add_lib() (graphscope.session method)": [[453, "graphscope.Session.add_lib"]], "as_default() (graphscope.session method)": [[453, "graphscope.Session.as_default"]], "close() (graphscope.session method)": [[453, "graphscope.Session.close"]], "connected() (graphscope.session method)": [[453, "graphscope.Session.connected"]], "engine_config (graphscope.session property)": [[453, "graphscope.Session.engine_config"]], "g() (graphscope.session method)": [[453, "graphscope.Session.g"]], "get_config() (graphscope.session method)": [[453, "graphscope.Session.get_config"]], "get_vineyard_object_mapping_table() (graphscope.session method)": [[453, "graphscope.Session.get_vineyard_object_mapping_table"]], "graphlearn() (graphscope.session method)": [[453, "graphscope.Session.graphlearn"]], "info (graphscope.session property)": [[453, "graphscope.Session.info"]], "interactive() (graphscope.session method)": [[453, "graphscope.Session.interactive"]], "load_from() (graphscope.session method)": [[453, "graphscope.Session.load_from"]], "restore_from_pvc() (graphscope.session method)": [[453, "graphscope.Session.restore_from_pvc"]], "run_fetches() (graphscope.session method)": [[453, "graphscope.Session.run_fetches"]], "store_to_pvc() (graphscope.session method)": [[453, "graphscope.Session.store_to_pvc"]]}})
name: GraphScope GAE CI

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  workflow_dispatch:
  push:
    # branches:
    #   - main
    # paths:
    #   - 'analytical_engine/**'
    #   - '.github/workflows/gae.yml'
    #   - 'coordinator/gscoordinator/template/CMakeLists.template' # to verify whether java app can be successfully built when CMakeLists.template changes.
    #   - '!analytical_engine/**.md'
  pull_request:
    branches:
      - main
    paths:
      - 'analytical_engine/**'
      - '.github/workflows/gae.yml'
      - 'coordinator/gscoordinator/template/CMakeLists.template' # to verify whether java app can be successfully built when CMakeLists.template changes.
      - '!analytical_engine/**.md'

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build-gae:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies 
      run: |
        # When ready, change to use gsctl.py in the repo
        pip install gsctl 
        # When ready, change to use this:
        # gsctl install-deps dev-analytical
        gsctl install-deps dev


    - name: Build
      env:
        RUN_JAVA_TESTS: ON
      run: |
        source ~/.graphscope_env
        cd analytical_engine
        mkdir build
        cd build
        cmake ..
        make

    # - name: Run Cpp Test
    #   env:
    #     GRAPHSCOPE_HOME: /opt/graphscope
    #     GS_TEST_DIR: ${{ github.workspace }}/gstest
    #     RUN_JAVA_TESTS: ON
    #   run: |
    #     # download dataset
    #     git clone -b master --single-branch --depth=1 https://github.com/7br/gstest.git ${GS_TEST_DIR}

    #     # java maven test
    #     cd ${GITHUB_WORKSPACE}/analytical_engine/java
    #     mvn test -Dmaven.antrun.skip=true --quiet

    #     version=$(cat ${GITHUB_WORKSPACE}/VERSION)
    #     export USER_JAR_PATH=${GITHUB_WORKSPACE}/analytical_engine/java/grape-demo/target/grape-demo-${version}-shaded.jar
    #     # for giraph test
    #     export GIRAPH_JAR_PATH=${GITHUB_WORKSPACE}/analytical_engine/java/grape-giraph/target/grape-giraph-${version}-shaded.jar

    #     cd ${GITHUB_WORKSPACE}/analytical_engine/build
    #     ../test/app_tests.sh --test_dir ${GS_TEST_DIR}

    # - name: Run Java Python Test
    #   env:
    #     GS_TEST_DIR: ${{ github.workspace }}/gstest
    #     RUN_JAVA_TESTS: ON
    #     GRAPHSCOPE_HOME: /opt/graphscope
    #   run: |
    #     version=$(cat ${GITHUB_WORKSPACE}/VERSION)
    #     export USER_JAR_PATH=${GITHUB_WORKSPACE}/analytical_engine/java/grape-demo/target/grape-demo-${version}-shaded.jar

    #     cd ${GITHUB_WORKSPACE}/python
    #     python3 -m pytest --cov=graphscope --cov-config=.coveragerc --cov-report=xml \
    #       --cov-report=term --exitfirst -s -v graphscope/tests/unittest/test_java_app.py

    # - name: Upload Coverage
    #   uses: codecov/codecov-action@v3
    #   continue-on-error: true
    #   with:
    #     file: ./python/coverage.xml
    #     fail_ci_if_error: false
